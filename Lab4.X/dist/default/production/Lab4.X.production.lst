

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Sep 13 03:06:42 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    78                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80   000000                     
    81                           ; Generated 05/01/2024 GMT
    82                           ; 
    83                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4550 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115   000000                     
   116                           	psect	idataCOMRAM
   117   00247E                     __pidataCOMRAM:
   118                           	callstack 0
   119                           
   120                           ;initializer for _porcentajeManual
   121   00247E  00                 	db	0
   122   00247F  80                 	db	128
   123   002480  3F                 	db	63
   124                           
   125                           ;initializer for _t
   126   002481  8F                 	db	143
   127   002482  C2                 	db	194
   128   002483  41                 	db	65
   129                           
   130                           ;initializer for _rojo
   131   002484  0003               	dw	3
   132                           
   133                           ;initializer for _motorEstado
   134   002486  0001               	dw	1
   135                           
   136                           ;initializer for _digito
   137   002488  0001               	dw	1
   138                           
   139                           ;initializer for _v
   140   00248A  03FF               	dw	1023
   141                           
   142                           ;initializer for _flagParar
   143   00248C  0001               	dw	1
   144                           
   145                           	psect	idataBANK0
   146   002322                     __pidataBANK0:
   147                           	callstack 0
   148                           
   149                           ;initializer for _color
   150   002322  0002               	dw	2
   151   002324  0006               	dw	6
   152   002326  0004               	dw	4
   153   002328  0005               	dw	5
   154   00232A  0001               	dw	1
   155   00232C  0000               	dw	0
   156                           
   157                           ;initializer for _menu
   158   00232E  0002               	dw	2
   159                           
   160                           ;initializer for _buffer
   161   002330  49                 	db	73
   162   002331  6E                 	db	110
   163   002332  69                 	db	105
   164   002333  63                 	db	99
   165   002334  69                 	db	105
   166   002335  61                 	db	97
   167   002336  6E                 	db	110
   168   002337  64                 	db	100
   169   002338  6F                 	db	111
   170   002339  00                 	db	0
   171   00233A  00                 	db	0
   172   00233B  00                 	db	0
   173   00233C  00                 	db	0
   174   00233D  00                 	db	0
   175   00233E  00                 	db	0
   176   00233F  00                 	db	0
   177   002340  00                 	db	0
   178   002341  00                 	db	0
   179   002342  00                 	db	0
   180   002343  00                 	db	0
   181   002344  00                 	db	0
   182   002345  00                 	db	0
   183   002346  00                 	db	0
   184   002347  00                 	db	0
   185   002348  00                 	db	0
   186   002349  00                 	db	0
   187   00234A  00                 	db	0
   188   00234B  00                 	db	0
   189   00234C  00                 	db	0
   190   00234D  00                 	db	0
   191                           
   192                           	psect	smallconst
   193   000800                     __psmallconst:
   194                           	callstack 0
   195   000800  00                 	db	0
   196   000801                     _dpowers:
   197                           	callstack 0
   198   000801  0001               	dw	1
   199   000803  000A               	dw	10
   200   000805  0064               	dw	100
   201   000807  03E8               	dw	1000
   202   000809  2710               	dw	10000
   203   00080B                     __end_of_dpowers:
   204                           	callstack 0
   205   00080B                     _figura_5:
   206                           	callstack 0
   207   00080B  0F                 	db	15
   208   00080C  09                 	db	9
   209   00080D  1C                 	db	28
   210   00080E  08                 	db	8
   211   00080F  02                 	db	2
   212   000810  07                 	db	7
   213   000811  12                 	db	18
   214   000812  1E                 	db	30
   215   000813                     __end_of_figura_5:
   216                           	callstack 0
   217   000813                     _figura_4:
   218                           	callstack 0
   219   000813  04                 	db	4
   220   000814  0E                 	db	14
   221   000815  0A                 	db	10
   222   000816  0A                 	db	10
   223   000817  1F                 	db	31
   224   000818  1B                 	db	27
   225   000819  1F                 	db	31
   226   00081A  00                 	db	0
   227   00081B                     __end_of_figura_4:
   228                           	callstack 0
   229   00081B                     _figura_3:
   230                           	callstack 0
   231   00081B  03                 	db	3
   232   00081C  03                 	db	3
   233   00081D  02                 	db	2
   234   00081E  07                 	db	7
   235   00081F  06                 	db	6
   236   000820  0E                 	db	14
   237   000821  0A                 	db	10
   238   000822  13                 	db	19
   239   000823                     __end_of_figura_3:
   240                           	callstack 0
   241   000823                     _figura_2:
   242                           	callstack 0
   243   000823  04                 	db	4
   244   000824  11                 	db	17
   245   000825  0E                 	db	14
   246   000826  04                 	db	4
   247   000827  04                 	db	4
   248   000828  0A                 	db	10
   249   000829  11                 	db	17
   250   00082A  00                 	db	0
   251   00082B                     __end_of_figura_2:
   252                           	callstack 0
   253   00082B                     _figura_1:
   254                           	callstack 0
   255   00082B  0A                 	db	10
   256   00082C  0A                 	db	10
   257   00082D  0A                 	db	10
   258   00082E  00                 	db	0
   259   00082F  11                 	db	17
   260   000830  11                 	db	17
   261   000831  0E                 	db	14
   262   000832  00                 	db	0
   263   000833                     __end_of_figura_1:
   264                           	callstack 0
   265   000000                     _CCPR2	set	4027
   266   000000                     _RCREG	set	4014
   267   000000                     _TXREG	set	4013
   268   000000                     _TMR2	set	4044
   269   000000                     _T1CON	set	4045
   270   000000                     _ADCON1bits	set	4033
   271   000000                     _TRISB	set	3987
   272   000000                     _SPBRG	set	4015
   273   000000                     _BAUDCON	set	4024
   274   000000                     _TRISC	set	3988
   275   000000                     _TRISDbits	set	3989
   276   000000                     _LATD	set	3980
   277   000000                     _TRISA	set	3986
   278   000000                     _TRISD	set	3989
   279   000000                     _TMR1IF	set	31984
   280   000000                     _TMR1ON	set	32360
   281   000000                     _RC1	set	31761
   282   000000                     _LATA1	set	31817
   283   000000                     _RB7	set	31759
   284   000000                     _RB6	set	31758
   285   000000                     _RB5	set	31757
   286   000000                     _RB4	set	31756
   287   000000                     _GO	set	32273
   288   000000                     _TRMT	set	32097
   289   000000                     _TMR2ON	set	32338
   290   000000                     _GIE	set	32663
   291   000000                     _RBIE	set	32659
   292   000000                     _RBIF	set	32656
   293   000000                     _TMR0ON	set	32431
   294   000000                     _TMR0IE	set	32661
   295   000000                     _LATA5	set	31821
   296   000000                     _PORTB	set	3969
   297   000000                     _LATAbits	set	3977
   298   000000                     _LATDbits	set	3980
   299   000000                     _LATE	set	3981
   300   000000                     _TRISAbits	set	3986
   301   000000                     _LATB	set	3978
   302   000000                     _RCSTA	set	4011
   303   000000                     _TXSTA	set	4012
   304   000000                     _TRISE	set	3990
   305   000000                     _ADCON2	set	4032
   306   000000                     _ADCON0	set	4034
   307   000000                     _OSCCON	set	4051
   308   000000                     _RCIF	set	31989
   309   000000                     _TMR0	set	4054
   310   000000                     _T0CON	set	4053
   311   000000                     _RBPU	set	32655
   312   000000                     _ADRES	set	4035
   313   000000                     _T2CON	set	4042
   314   000000                     _PR2	set	4043
   315   000000                     _CCP2CON	set	4026
   316   000000                     _CCP1CON	set	4029
   317   000000                     _CCPR1L	set	4030
   318   000000                     _TMR0IF	set	32658
   319   000000                     _TMR1	set	4046
   320   000000                     _RC0	set	31760
   321   000000                     _CCP2IF	set	32008
   322   000833                     STR_4:
   323   000833  44                 	db	68	;'D'
   324   000834  69                 	db	105	;'i'
   325   000835  73                 	db	115	;'s'
   326   000836  74                 	db	116	;'t'
   327   000837  61                 	db	97	;'a'
   328   000838  6E                 	db	110	;'n'
   329   000839  63                 	db	99	;'c'
   330   00083A  69                 	db	105	;'i'
   331   00083B  61                 	db	97	;'a'
   332   00083C  20                 	db	32
   333   00083D  3D                 	db	61	;'='
   334   00083E  20                 	db	32
   335   00083F  25                 	db	37
   336   000840  75                 	db	117	;'u'
   337   000841  20                 	db	32
   338   000842  63                 	db	99	;'c'
   339   000843  6D                 	db	109	;'m'
   340   000844  20                 	db	32
   341   000845  0A                 	db	10
   342   000846  50                 	db	80	;'P'
   343   000847  57                 	db	87	;'W'
   344   000848  4D                 	db	77	;'M'
   345   000849  20                 	db	32
   346   00084A  3D                 	db	61	;'='
   347   00084B  20                 	db	32
   348   00084C  25                 	db	37
   349   00084D  75                 	db	117	;'u'
   350   00084E  20                 	db	32
   351   00084F  25                 	db	37
   352   000850  63                 	db	99	;'c'
   353   000851  20                 	db	32
   354   000852  0A                 	db	10
   355   000853  00                 	db	0
   356   000854                     STR_11:
   357   000854  43                 	db	67	;'C'
   358   000855  75                 	db	117	;'u'
   359   000856  65                 	db	101	;'e'
   360   000857  6E                 	db	110	;'n'
   361   000858  74                 	db	116	;'t'
   362   000859  61                 	db	97	;'a'
   363   00085A  20                 	db	32
   364   00085B  66                 	db	102	;'f'
   365   00085C  69                 	db	105	;'i'
   366   00085D  6E                 	db	110	;'n'
   367   00085E  61                 	db	97	;'a'
   368   00085F  6C                 	db	108	;'l'
   369   000860  69                 	db	105	;'i'
   370   000861  7A                 	db	122	;'z'
   371   000862  61                 	db	97	;'a'
   372   000863  64                 	db	100	;'d'
   373   000864  61                 	db	97	;'a'
   374   000865  00                 	db	0
   375   000866                     STR_5:
   376   000866  50                 	db	80	;'P'
   377   000867  69                 	db	105	;'i'
   378   000868  65                 	db	101	;'e'
   379   000869  7A                 	db	122	;'z'
   380   00086A  61                 	db	97	;'a'
   381   00086B  73                 	db	115	;'s'
   382   00086C  20                 	db	32
   383   00086D  61                 	db	97	;'a'
   384   00086E  20                 	db	32
   385   00086F  63                 	db	99	;'c'
   386   000870  6F                 	db	111	;'o'
   387   000871  6E                 	db	110	;'n'
   388   000872  74                 	db	116	;'t'
   389   000873  61                 	db	97	;'a'
   390   000874  72                 	db	114	;'r'
   391   000875  3A                 	db	58	;':'
   392   000876  00                 	db	0
   393   000877                     STR_1:
   394   000877  4C                 	db	76	;'L'
   395   000878  61                 	db	97	;'a'
   396   000879  62                 	db	98	;'b'
   397   00087A  6F                 	db	111	;'o'
   398   00087B  72                 	db	114	;'r'
   399   00087C  61                 	db	97	;'a'
   400   00087D  74                 	db	116	;'t'
   401   00087E  6F                 	db	111	;'o'
   402   00087F  72                 	db	114	;'r'
   403   000880  69                 	db	105	;'i'
   404   000881  6F                 	db	111	;'o'
   405   000882  20                 	db	32
   406   000883  30                 	db	48	;'0'
   407   000884  34                 	db	52	;'4'
   408   000885  00                 	db	0
   409   000886                     STR_14:
   410   000886  45                 	db	69	;'E'
   411   000887  6D                 	db	109	;'m'
   412   000888  65                 	db	101	;'e'
   413   000889  72                 	db	114	;'r'
   414   00088A  67                 	db	103	;'g'
   415   00088B  65                 	db	101	;'e'
   416   00088C  6E                 	db	110	;'n'
   417   00088D  63                 	db	99	;'c'
   418   00088E  69                 	db	105	;'i'
   419   00088F  61                 	db	97	;'a'
   420   000890  20                 	db	32
   421   000891  00                 	db	0
   422   000892                     STR_3:
   423   000892  4D                 	db	77	;'M'
   424   000893  69                 	db	105	;'i'
   425   000894  63                 	db	99	;'c'
   426   000895  72                 	db	114	;'r'
   427   000896  6F                 	db	111	;'o'
   428   000897  73                 	db	115	;'s'
   429   000898  20                 	db	32
   430   000899  55                 	db	85	;'U'
   431   00089A  4E                 	db	78	;'N'
   432   00089B  41                 	db	65	;'A'
   433   00089C  4C                 	db	76	;'L'
   434   00089D  00                 	db	0
   435   00089E                     STR_2:
   436   00089E  50                 	db	80	;'P'
   437   00089F  49                 	db	73	;'I'
   438   0008A0  43                 	db	67	;'C'
   439   0008A1  31                 	db	49	;'1'
   440   0008A2  38                 	db	56	;'8'
   441   0008A3  46                 	db	70	;'F'
   442   0008A4  34                 	db	52	;'4'
   443   0008A5  35                 	db	53	;'5'
   444   0008A6  35                 	db	53	;'5'
   445   0008A7  30                 	db	48	;'0'
   446   0008A8  00                 	db	0
   447   0008A9                     STR_7:
   448   0008A9  46                 	db	70	;'F'
   449   0008AA  61                 	db	97	;'a'
   450   0008AB  6C                 	db	108	;'l'
   451   0008AC  74                 	db	116	;'t'
   452   0008AD  61                 	db	97	;'a'
   453   0008AE  6E                 	db	110	;'n'
   454   0008AF  74                 	db	116	;'t'
   455   0008B0  65                 	db	101	;'e'
   456   0008B1  3A                 	db	58	;':'
   457   0008B2  00                 	db	0
   458   0008B3                     STR_9:
   459   0008B3  4F                 	db	79	;'O'
   460   0008B4  62                 	db	98	;'b'
   461   0008B5  6A                 	db	106	;'j'
   462   0008B6  65                 	db	101	;'e'
   463   0008B7  74                 	db	116	;'t'
   464   0008B8  69                 	db	105	;'i'
   465   0008B9  76                 	db	118	;'v'
   466   0008BA  6F                 	db	111	;'o'
   467   0008BB  3A                 	db	58	;':'
   468   0008BC  00                 	db	0
   469   0008BD                     STR_13:
   470   0008BD  50                 	db	80	;'P'
   471   0008BE  61                 	db	97	;'a'
   472   0008BF  72                 	db	114	;'r'
   473   0008C0  61                 	db	97	;'a'
   474   0008C1  64                 	db	100	;'d'
   475   0008C2  61                 	db	97	;'a'
   476   0008C3  20                 	db	32
   477   0008C4  64                 	db	100	;'d'
   478   0008C5  65                 	db	101	;'e'
   479   0008C6  00                 	db	0
   480   0008C7                     STR_6:
   481   0008C7  41                 	db	65	;'A'
   482   0008C8  3A                 	db	58	;':'
   483   0008C9  6F                 	db	111	;'o'
   484   0008CA  6B                 	db	107	;'k'
   485   0008CB  20                 	db	32
   486   0008CC  42                 	db	66	;'B'
   487   0008CD  3A                 	db	58	;':'
   488   0008CE  00                 	db	0
   489   0008CF                     STR_12:
   490   0008CF  41                 	db	65	;'A'
   491   0008D0  3A                 	db	58	;':'
   492   0008D1  4F                 	db	79	;'O'
   493   0008D2  4B                 	db	75	;'K'
   494   0008D3  00                 	db	0
   495   0008D4                     STR_10:
   496   0008D4  23                 	db	35
   497   0008D5  3D                 	db	61	;'='
   498   0008D6  58                 	db	88	;'X'
   499   0008D7  00                 	db	0
   500   0008D8                     STR_8:
   501   0008D8  43                 	db	67	;'C'
   502   0008D9  3D                 	db	61	;'='
   503   0008DA  00                 	db	0
   504   0008DB  00                 	db	0	; dummy byte at the end
   505   000000                     
   506                           ; #config settings
   507                           
   508                           	psect	cinit
   509   001E0E                     __pcinit:
   510                           	callstack 0
   511   001E0E                     start_initialization:
   512                           	callstack 0
   513   001E0E                     __initialization:
   514                           	callstack 0
   515                           
   516                           ; Initialize objects allocated to BANK0 (44 bytes)
   517                           ; load TBLPTR registers with __pidataBANK0
   518   001E0E  0E22               	movlw	low __pidataBANK0
   519   001E10  6EF6               	movwf	tblptrl,c
   520   001E12  0E23               	movlw	high __pidataBANK0
   521   001E14  6EF7               	movwf	tblptrh,c
   522   001E16  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   523   001E18  6EF8               	movwf	tblptru,c
   524   001E1A  EE00  F060         	lfsr	0,__pdataBANK0
   525   001E1E  EE10 F02C          	lfsr	1,44
   526   001E22                     copy_data0:
   527   001E22  0009               	tblrd		*+
   528   001E24  CFF5 FFEE          	movff	tablat,postinc0
   529   001E28  50E5               	movf	postdec1,w,c
   530   001E2A  50E1               	movf	fsr1l,w,c
   531   001E2C  E1FA               	bnz	copy_data0
   532                           
   533                           ; Initialize objects allocated to COMRAM (16 bytes)
   534                           ; load TBLPTR registers with __pidataCOMRAM
   535   001E2E  0E7E               	movlw	low __pidataCOMRAM
   536   001E30  6EF6               	movwf	tblptrl,c
   537   001E32  0E24               	movlw	high __pidataCOMRAM
   538   001E34  6EF7               	movwf	tblptrh,c
   539   001E36  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   540   001E38  6EF8               	movwf	tblptru,c
   541   001E3A  EE00  F037         	lfsr	0,__pdataCOMRAM
   542   001E3E  EE10 F010          	lfsr	1,16
   543   001E42                     copy_data1:
   544   001E42  0009               	tblrd		*+
   545   001E44  CFF5 FFEE          	movff	tablat,postinc0
   546   001E48  50E5               	movf	postdec1,w,c
   547   001E4A  50E1               	movf	fsr1l,w,c
   548   001E4C  E1FA               	bnz	copy_data1
   549                           
   550                           ; Clear objects allocated to BANK0 (21 bytes)
   551   001E4E  EE00  F0AE         	lfsr	0,__pbssBANK0
   552   001E52  0E15               	movlw	21
   553   001E54                     clear_0:
   554   001E54  6AEE               	clrf	postinc0,c
   555   001E56  06E8               	decf	wreg,f,c
   556   001E58  E1FD               	bnz	clear_0
   557                           
   558                           ; Clear objects allocated to COMRAM (8 bytes)
   559   001E5A  EE00  F047         	lfsr	0,__pbssCOMRAM
   560   001E5E  0E08               	movlw	8
   561   001E60                     clear_1:
   562   001E60  6AEE               	clrf	postinc0,c
   563   001E62  06E8               	decf	wreg,f,c
   564   001E64  E1FD               	bnz	clear_1
   565   001E66                     end_of_initialization:
   566                           	callstack 0
   567   001E66                     __end_of__initialization:
   568                           	callstack 0
   569   001E66  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   570   001E68  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   571   001E6A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   572   001E6C  6EF8               	movwf	tblptru,c
   573   001E6E  0100               	movlb	0
   574   001E70  EF2A  F006         	goto	_main	;jump to C main() function
   575                           
   576                           	psect	bssCOMRAM
   577   000047                     __pbssCOMRAM:
   578                           	callstack 0
   579   000047                     _resultado_ADC:
   580                           	callstack 0
   581   000047                     	ds	2
   582   000049                     _mostrar:
   583                           	callstack 0
   584   000049                     	ds	2
   585   00004B                     _ctimeout:
   586                           	callstack 0
   587   00004B                     	ds	1
   588   00004C                     _etimeout:
   589                           	callstack 0
   590   00004C                     	ds	1
   591   00004D                     _recibir:
   592                           	callstack 0
   593   00004D                     	ds	1
   594   00004E                     _Tecla:
   595                           	callstack 0
   596   00004E                     	ds	1
   597                           
   598                           	psect	dataCOMRAM
   599   000037                     __pdataCOMRAM:
   600                           	callstack 0
   601   000037                     _porcentajeManual:
   602                           	callstack 0
   603   000037                     	ds	3
   604   00003A                     _t:
   605                           	callstack 0
   606   00003A                     	ds	3
   607   00003D                     _rojo:
   608                           	callstack 0
   609   00003D                     	ds	2
   610   00003F                     _motorEstado:
   611                           	callstack 0
   612   00003F                     	ds	2
   613   000041                     _digito:
   614                           	callstack 0
   615   000041                     	ds	2
   616   000043                     _v:
   617                           	callstack 0
   618   000043                     	ds	2
   619   000045                     _flagParar:
   620                           	callstack 0
   621   000045                     	ds	2
   622                           
   623                           	psect	bssBANK0
   624   0000AE                     __pbssBANK0:
   625                           	callstack 0
   626   0000AE                     _porcentaje:
   627                           	callstack 0
   628   0000AE                     	ds	3
   629   0000B1                     _contadorDecena:
   630                           	callstack 0
   631   0000B1                     	ds	2
   632   0000B3                     _contadorUnidad:
   633                           	callstack 0
   634   0000B3                     	ds	2
   635   0000B5                     _cantidadRestaDecena:
   636                           	callstack 0
   637   0000B5                     	ds	2
   638   0000B7                     _cantidadRestaUnidad:
   639                           	callstack 0
   640   0000B7                     	ds	2
   641   0000B9                     _cantidadResta:
   642                           	callstack 0
   643   0000B9                     	ds	2
   644   0000BB                     _contador:
   645                           	callstack 0
   646   0000BB                     	ds	2
   647   0000BD                     _cantidad:
   648                           	callstack 0
   649   0000BD                     	ds	2
   650   0000BF                     _unidad:
   651                           	callstack 0
   652   0000BF                     	ds	2
   653   0000C1                     _decena:
   654                           	callstack 0
   655   0000C1                     	ds	2
   656                           
   657                           	psect	dataBANK0
   658   000060                     __pdataBANK0:
   659                           	callstack 0
   660   000060                     _color:
   661                           	callstack 0
   662   000060                     	ds	12
   663   00006C                     _menu:
   664                           	callstack 0
   665   00006C                     	ds	2
   666   00006E                     _buffer:
   667                           	callstack 0
   668   00006E                     	ds	30
   669                           
   670                           	psect	cstackBANK0
   671   00008C                     __pcstackBANK0:
   672                           	callstack 0
   673   00008C                     ?___wmul:
   674                           	callstack 0
   675   00008C                     ?___awdiv:
   676                           	callstack 0
   677   00008C                     ?___awmod:
   678                           	callstack 0
   679   00008C                     ?___lwdiv:
   680                           	callstack 0
   681   00008C                     ?___fttol:
   682                           	callstack 0
   683   00008C                     Lcd_Port@a:
   684                           	callstack 0
   685   00008C                     ___wmul@multiplier:
   686                           	callstack 0
   687   00008C                     ___awdiv@dividend:
   688                           	callstack 0
   689   00008C                     ___awmod@dividend:
   690                           	callstack 0
   691   00008C                     ___lwdiv@dividend:
   692                           	callstack 0
   693   00008C                     ___fttol@f1:
   694                           	callstack 0
   695                           
   696                           ; 3 bytes @ 0x0
   697   00008C                     	ds	1
   698   00008D                     ??_Lcd_Cmd:
   699   00008D                     Lcd_Write_Char@temp:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x1
   703   00008D                     	ds	1
   704   00008E                     Lcd_Cmd@a:
   705                           	callstack 0
   706   00008E                     Lcd_Write_Char@y:
   707                           	callstack 0
   708   00008E                     ___wmul@multiplicand:
   709                           	callstack 0
   710   00008E                     ___awdiv@divisor:
   711                           	callstack 0
   712   00008E                     ___awmod@divisor:
   713                           	callstack 0
   714   00008E                     ___lwdiv@divisor:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x2
   718   00008E                     	ds	1
   719   00008F                     ??_Lcd_Init:
   720   00008F                     Lcd_Set_Cursor@b:
   721                           	callstack 0
   722   00008F                     Lcd_Write_Char@a:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x3
   726   00008F                     	ds	1
   727   000090                     ??___fttol:
   728   000090                     Lcd_Set_Cursor@a:
   729                           	callstack 0
   730   000090                     Lcd_Write_String@a:
   731                           	callstack 0
   732   000090                     Lcd_CGRAM_CreateChar@chardata:
   733                           	callstack 0
   734   000090                     ___awdiv@counter:
   735                           	callstack 0
   736   000090                     ___awmod@counter:
   737                           	callstack 0
   738   000090                     ___wmul@product:
   739                           	callstack 0
   740   000090                     ___lwdiv@quotient:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x4
   744   000090                     	ds	1
   745   000091                     ??_Lcd_Write_String:
   746   000091                     ??_Lcd_CGRAM_CreateChar:
   747   000091                     Lcd_Set_Cursor@z:
   748                           	callstack 0
   749   000091                     ___awdiv@sign:
   750                           	callstack 0
   751   000091                     ___awmod@sign:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x5
   755   000091                     	ds	1
   756   000092                     Lcd_Set_Cursor@y:
   757                           	callstack 0
   758   000092                     Lcd_CGRAM_CreateChar@add:
   759                           	callstack 0
   760   000092                     ___lwdiv@counter:
   761                           	callstack 0
   762   000092                     Lcd_Write_String@i:
   763                           	callstack 0
   764   000092                     ___awdiv@quotient:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x6
   768   000092                     	ds	1
   769   000093                     ?___lwmod:
   770                           	callstack 0
   771   000093                     Lcd_Set_Cursor@temp:
   772                           	callstack 0
   773   000093                     Lcd_CGRAM_CreateChar@i:
   774                           	callstack 0
   775   000093                     MedirDistancia@aux:
   776                           	callstack 0
   777   000093                     ___lwmod@dividend:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x7
   781   000093                     	ds	1
   782   000094                     ??_ContarReal:
   783   000094                     Lcd_CGRAM_CreateChar@i_243:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0x8
   787   000094                     	ds	1
   788   000095                     Lcd_CGRAM_CreateChar@i_244:
   789                           	callstack 0
   790   000095                     ___fttol@sign1:
   791                           	callstack 0
   792   000095                     ___lwmod@divisor:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x9
   796   000095                     	ds	1
   797   000096                     Lcd_CGRAM_CreateChar@i_245:
   798                           	callstack 0
   799   000096                     ___fttol@lval:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0xA
   803   000096                     	ds	1
   804   000097                     Lcd_CGRAM_CreateChar@i_246:
   805                           	callstack 0
   806   000097                     ___lwmod@counter:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0xB
   810   000097                     	ds	1
   811   000098                     Lcd_CGRAM_CreateChar@i_247:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0xC
   815   000098                     	ds	1
   816   000099                     Lcd_CGRAM_CreateChar@i_248:
   817                           	callstack 0
   818                           
   819                           ; 1 bytes @ 0xD
   820   000099                     	ds	1
   821   00009A                     Lcd_CGRAM_CreateChar@i_249:
   822                           	callstack 0
   823   00009A                     ___fttol@exp1:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0xE
   827   00009A                     	ds	1
   828   00009B                     ?_sprintf:
   829                           	callstack 0
   830   00009B                     sprintf@sp:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0xF
   834   00009B                     	ds	1
   835   00009C                     sprintf@f:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x10
   839   00009C                     	ds	7
   840   0000A3                     ??_sprintf:
   841                           
   842                           ; 1 bytes @ 0x17
   843   0000A3                     	ds	1
   844   0000A4                     sprintf@flag:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x18
   848   0000A4                     	ds	1
   849   0000A5                     sprintf@val:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x19
   853   0000A5                     	ds	2
   854   0000A7                     sprintf@prec:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x1B
   858   0000A7                     	ds	1
   859   0000A8                     sprintf@ap:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0x1C
   863   0000A8                     	ds	1
   864   0000A9                     sprintf@c:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x1D
   868   0000A9                     	ds	1
   869   0000AA                     ??_main:
   870                           
   871                           ; 1 bytes @ 0x1E
   872   0000AA                     	ds	2
   873   0000AC                     main@d:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x20
   877   0000AC                     	ds	1
   878   0000AD                     main@i:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x21
   882   0000AD                     	ds	1
   883                           
   884                           	psect	cstackCOMRAM
   885   000001                     __pcstackCOMRAM:
   886                           	callstack 0
   887   000001                     ?_Conversion:
   888                           	callstack 0
   889   000001                     ?i2___wmul:
   890                           	callstack 0
   891   000001                     ?i2___awdiv:
   892                           	callstack 0
   893   000001                     ?i2___awmod:
   894                           	callstack 0
   895   000001                     ?___ftpack:
   896                           	callstack 0
   897   000001                     ?i2___fttol:
   898                           	callstack 0
   899   000001                     i2Lcd_Port@a:
   900                           	callstack 0
   901   000001                     Trasmitir@i:
   902                           	callstack 0
   903   000001                     i2___wmul@multiplier:
   904                           	callstack 0
   905   000001                     i2___awdiv@dividend:
   906                           	callstack 0
   907   000001                     i2___awmod@dividend:
   908                           	callstack 0
   909   000001                     ___ftpack@arg:
   910                           	callstack 0
   911   000001                     ___ftge@ff1:
   912                           	callstack 0
   913   000001                     i2___fttol@f1:
   914                           	callstack 0
   915                           
   916                           ; 3 bytes @ 0x0
   917   000001                     	ds	1
   918   000002                     ??i2_Lcd_Cmd:
   919   000002                     i2Lcd_Write_Char@temp:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x1
   923   000002                     	ds	1
   924   000003                     ??_Conversion:
   925   000003                     i2Lcd_Cmd@a:
   926                           	callstack 0
   927   000003                     i2Lcd_Write_Char@y:
   928                           	callstack 0
   929   000003                     i2___wmul@multiplicand:
   930                           	callstack 0
   931   000003                     i2___awdiv@divisor:
   932                           	callstack 0
   933   000003                     i2___awmod@divisor:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x2
   937   000003                     	ds	1
   938   000004                     Conversion@canal:
   939                           	callstack 0
   940   000004                     ___ftpack@exp:
   941                           	callstack 0
   942   000004                     i2Lcd_Set_Cursor@b:
   943                           	callstack 0
   944   000004                     i2Lcd_Write_Char@a:
   945                           	callstack 0
   946   000004                     ___ftge@ff2:
   947                           	callstack 0
   948                           
   949                           ; 3 bytes @ 0x3
   950   000004                     	ds	1
   951   000005                     ??_PiezaAContar:
   952   000005                     ??i2___fttol:
   953   000005                     ___ftpack@sign:
   954                           	callstack 0
   955   000005                     i2Lcd_Set_Cursor@a:
   956                           	callstack 0
   957   000005                     i2Lcd_Write_String@a:
   958                           	callstack 0
   959   000005                     i2___awdiv@counter:
   960                           	callstack 0
   961   000005                     i2___awmod@counter:
   962                           	callstack 0
   963   000005                     i2___wmul@product:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x4
   967   000005                     	ds	1
   968   000006                     ??___ftpack:
   969   000006                     ??i2_Lcd_Write_String:
   970   000006                     PiezaAContar@a:
   971                           	callstack 0
   972   000006                     i2Lcd_Set_Cursor@z:
   973                           	callstack 0
   974   000006                     i2___awdiv@sign:
   975                           	callstack 0
   976   000006                     i2___awmod@sign:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x5
   980   000006                     	ds	1
   981   000007                     ??___ftge:
   982   000007                     i2Lcd_Set_Cursor@y:
   983                           	callstack 0
   984   000007                     i2Lcd_Write_String@i:
   985                           	callstack 0
   986   000007                     i2___awdiv@quotient:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x6
   990   000007                     	ds	1
   991   000008                     i2Lcd_Set_Cursor@temp:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x7
   995   000008                     	ds	1
   996   000009                     ??i2_ContarReal:
   997   000009                     ?___ftdiv:
   998                           	callstack 0
   999   000009                     ?___lwtoft:
  1000                           	callstack 0
  1001   000009                     ___lwtoft@c:
  1002                           	callstack 0
  1003   000009                     ___ftdiv@f1:
  1004                           	callstack 0
  1005                           
  1006                           ; 3 bytes @ 0x8
  1007   000009                     	ds	1
  1008   00000A                     i2___fttol@sign1:
  1009                           	callstack 0
  1010                           
  1011                           ; 1 bytes @ 0x9
  1012   00000A                     	ds	1
  1013   00000B                     i2___fttol@lval:
  1014                           	callstack 0
  1015                           
  1016                           ; 4 bytes @ 0xA
  1017   00000B                     	ds	1
  1018   00000C                     ___ftdiv@f2:
  1019                           	callstack 0
  1020                           
  1021                           ; 3 bytes @ 0xB
  1022   00000C                     	ds	3
  1023   00000F                     ??___ftdiv:
  1024   00000F                     i2___fttol@exp1:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0xE
  1028   00000F                     	ds	3
  1029   000012                     ___ftdiv@cntr:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x11
  1033   000012                     	ds	1
  1034   000013                     ___ftdiv@f3:
  1035                           	callstack 0
  1036                           
  1037                           ; 3 bytes @ 0x12
  1038   000013                     	ds	3
  1039   000016                     ___ftdiv@exp:
  1040                           	callstack 0
  1041                           
  1042                           ; 1 bytes @ 0x15
  1043   000016                     	ds	1
  1044   000017                     ___ftdiv@sign:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x16
  1048   000017                     	ds	1
  1049   000018                     ?___ftmul:
  1050                           	callstack 0
  1051   000018                     ___ftmul@f1:
  1052                           	callstack 0
  1053                           
  1054                           ; 3 bytes @ 0x17
  1055   000018                     	ds	3
  1056   00001B                     ___ftmul@f2:
  1057                           	callstack 0
  1058                           
  1059                           ; 3 bytes @ 0x1A
  1060   00001B                     	ds	3
  1061   00001E                     ??___ftmul:
  1062                           
  1063                           ; 1 bytes @ 0x1D
  1064   00001E                     	ds	3
  1065   000021                     ___ftmul@exp:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x20
  1069   000021                     	ds	1
  1070   000022                     ___ftmul@f3_as_product:
  1071                           	callstack 0
  1072                           
  1073                           ; 3 bytes @ 0x21
  1074   000022                     	ds	3
  1075   000025                     ___ftmul@cntr:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x24
  1079   000025                     	ds	1
  1080   000026                     ___ftmul@sign:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x25
  1084   000026                     	ds	1
  1085   000027                     Duty_motor@ADC:
  1086                           	callstack 0
  1087                           
  1088                           ; 3 bytes @ 0x26
  1089   000027                     	ds	3
  1090   00002A                     Duty_motor@escalarADC:
  1091                           	callstack 0
  1092                           
  1093                           ; 3 bytes @ 0x29
  1094   00002A                     	ds	3
  1095   00002D                     ??_ISR:
  1096                           
  1097                           ; 1 bytes @ 0x2C
  1098   00002D                     	ds	10
  1099                           
  1100 ;;
  1101 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1102 ;;
  1103 ;; *************** function _main *****************
  1104 ;; Defined at:
  1105 ;;		line 78 in file "main.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  pina0           2    0        int 
  1110 ;;  distanciaCon    2    0        unsigned int 
  1111 ;;  i               1   33[BANK0 ] unsigned char 
  1112 ;;  d               1   32[BANK0 ] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1122 ;;      Params:         0       0       0       0       0       0       0       0       0
  1123 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1124 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1125 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1126 ;;Total ram usage:        4 bytes
  1127 ;; Hardware stack levels required when called: 12
  1128 ;; This function calls:
  1129 ;;		_ContarReal
  1130 ;;		_Lcd_Blink
  1131 ;;		_Lcd_CGRAM_Close
  1132 ;;		_Lcd_CGRAM_CreateChar
  1133 ;;		_Lcd_CGRAM_Init
  1134 ;;		_Lcd_Clear
  1135 ;;		_Lcd_Init
  1136 ;;		_Lcd_NoBlink
  1137 ;;		_Lcd_Set_Cursor
  1138 ;;		_Lcd_Write_Char
  1139 ;;		_Lcd_Write_String
  1140 ;;		_MedirDistancia
  1141 ;;		___fttol
  1142 ;;		_escenario1
  1143 ;;		_sprintf
  1144 ;; This function is called by:
  1145 ;;		Startup code after reset
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text0
  1150   000C54                     __ptext0:
  1151                           	callstack 0
  1152   000C54                     _main:
  1153                           	callstack 19
  1154                           
  1155                           ;main.c: 79: unsigned char d;;main.c: 80: unsigned int distanciaContar;;main.c: 81: OSCC
      +                          ON = 0b01110000;
  1156                           
  1157                           ;incstack = 0
  1158   000C54  0E70               	movlw	112
  1159   000C56  6ED3               	movwf	211,c	;volatile
  1160                           
  1161                           ;main.c: 82: _delay((unsigned long)((1)*(8000000/4000.0)));
  1162   000C58  0E03               	movlw	3
  1163   000C5A  0100               	movlb	0	; () banked
  1164   000C5C  6FAA               	movwf	??_main& (0+255),b
  1165   000C5E  0E97               	movlw	151
  1166   000C60                     u3677:
  1167   000C60  2EE8               	decfsz	wreg,f,c
  1168   000C62  D7FE               	bra	u3677
  1169   000C64  2FAA               	decfsz	??_main& (0+255),f,b
  1170   000C66  D7FC               	bra	u3677
  1171   000C68  D000               	nop2	
  1172                           
  1173                           ;main.c: 84: ADCON0 = 0b00000001;
  1174   000C6A  0E01               	movlw	1
  1175   000C6C  6EC2               	movwf	194,c	;volatile
  1176                           
  1177                           ;main.c: 85: ADCON2 = 0b10001000;
  1178   000C6E  0E88               	movlw	136
  1179   000C70  6EC0               	movwf	192,c	;volatile
  1180                           
  1181                           ;main.c: 87: int pina0;;main.c: 88: TRISE = 0;
  1182   000C72  0E00               	movlw	0
  1183   000C74  6E96               	movwf	150,c	;volatile
  1184                           
  1185                           ;main.c: 89: TRISD = 0;
  1186   000C76  0E00               	movlw	0
  1187   000C78  6E95               	movwf	149,c	;volatile
  1188                           
  1189                           ;main.c: 90: TRISA = 0b00000001;
  1190   000C7A  0E01               	movlw	1
  1191   000C7C  6E92               	movwf	146,c	;volatile
  1192                           
  1193                           ;main.c: 91: TRISC = 0b00000010;
  1194   000C7E  0E02               	movlw	2
  1195   000C80  6E94               	movwf	148,c	;volatile
  1196                           
  1197                           ;main.c: 93: LATD = 0b00000000;
  1198   000C82  0E00               	movlw	0
  1199   000C84  6E8C               	movwf	140,c	;volatile
  1200                           
  1201                           ;main.c: 94: LATE = 0b00000111;
  1202   000C86  0E07               	movlw	7
  1203   000C88  6E8D               	movwf	141,c	;volatile
  1204                           
  1205                           ;main.c: 96: LATA5 = 1;
  1206   000C8A  8A89               	bsf	3977,5,c	;volatile
  1207                           
  1208                           ;main.c: 97: TXSTA = 0b00100100;
  1209   000C8C  0E24               	movlw	36
  1210   000C8E  6EAC               	movwf	172,c	;volatile
  1211                           
  1212                           ;main.c: 98: RCSTA = 0b10010000;
  1213   000C90  0E90               	movlw	144
  1214   000C92  6EAB               	movwf	171,c	;volatile
  1215                           
  1216                           ;main.c: 99: BAUDCON = 0b00001000;
  1217   000C94  0E08               	movlw	8
  1218   000C96  6EB8               	movwf	184,c	;volatile
  1219                           
  1220                           ;main.c: 100: SPBRG = 207;
  1221   000C98  0ECF               	movlw	207
  1222   000C9A  6EAF               	movwf	175,c	;volatile
  1223                           
  1224                           ;main.c: 101: unsigned char i;;main.c: 102: TRISB = 0b11110000;
  1225   000C9C  0EF0               	movlw	240
  1226   000C9E  6E93               	movwf	147,c	;volatile
  1227                           
  1228                           ;main.c: 103: LATB = 0b00000000;
  1229   000CA0  0E00               	movlw	0
  1230   000CA2  6E8A               	movwf	138,c	;volatile
  1231                           
  1232                           ;main.c: 104: RBPU = 0;
  1233   000CA4  9EF1               	bcf	4081,7,c	;volatile
  1234                           
  1235                           ;main.c: 105: _delay((unsigned long)((100)*(8000000/4000.0)));
  1236   000CA6  0E02               	movlw	2
  1237   000CA8  0100               	movlb	0	; () banked
  1238   000CAA  6FAB               	movwf	(??_main+1)& (0+255),b
  1239   000CAC  0E04               	movlw	4
  1240   000CAE  6FAA               	movwf	??_main& (0+255),b
  1241   000CB0  0EBA               	movlw	186
  1242   000CB2                     u3687:
  1243   000CB2  2EE8               	decfsz	wreg,f,c
  1244   000CB4  D7FE               	bra	u3687
  1245   000CB6  2FAA               	decfsz	??_main& (0+255),f,b
  1246   000CB8  D7FC               	bra	u3687
  1247   000CBA  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1248   000CBC  D7FA               	bra	u3687
  1249   000CBE  0000               	nop	
  1250                           
  1251                           ;main.c: 107: TMR0 = 3036;
  1252   000CC0  0E0B               	movlw	11
  1253   000CC2  6ED7               	movwf	215,c	;volatile
  1254   000CC4  0EDC               	movlw	220
  1255   000CC6  6ED6               	movwf	214,c	;volatile
  1256                           
  1257                           ;main.c: 108: T0CON = 0b00000100;
  1258   000CC8  0E04               	movlw	4
  1259   000CCA  6ED5               	movwf	213,c	;volatile
  1260                           
  1261                           ;main.c: 109: TMR0IF = 0;
  1262   000CCC  94F2               	bcf	4082,2,c	;volatile
  1263                           
  1264                           ;main.c: 110: TMR0IE = 1;
  1265   000CCE  8AF2               	bsf	4082,5,c	;volatile
  1266                           
  1267                           ;main.c: 111: TMR0ON = 1;
  1268   000CD0  8ED5               	bsf	4053,7,c	;volatile
  1269                           
  1270                           ;main.c: 112: RBIF = 0;
  1271   000CD2  90F2               	bcf	4082,0,c	;volatile
  1272                           
  1273                           ;main.c: 113: RBIE = 1;
  1274   000CD4  86F2               	bsf	4082,3,c	;volatile
  1275                           
  1276                           ;main.c: 114: GIE = 1;
  1277   000CD6  8EF2               	bsf	4082,7,c	;volatile
  1278                           
  1279                           ;main.c: 115: ADCON1bits.PCFG = 0x0E;
  1280   000CD8  50C1               	movf	193,w,c	;volatile
  1281   000CDA  0BF0               	andlw	-16
  1282   000CDC  090E               	iorlw	14
  1283   000CDE  6EC1               	movwf	193,c	;volatile
  1284                           
  1285                           ;main.c: 117: PR2 = 249;
  1286   000CE0  0EF9               	movlw	249
  1287   000CE2  6ECB               	movwf	203,c	;volatile
  1288                           
  1289                           ;main.c: 118: CCPR1L = 125;
  1290   000CE4  0E7D               	movlw	125
  1291   000CE6  6EBE               	movwf	190,c	;volatile
  1292                           
  1293                           ;main.c: 119: T2CON = 1;
  1294   000CE8  0E01               	movlw	1
  1295   000CEA  6ECA               	movwf	202,c	;volatile
  1296                           
  1297                           ;main.c: 120: CCP1CON = 12;
  1298   000CEC  0E0C               	movlw	12
  1299   000CEE  6EBD               	movwf	189,c	;volatile
  1300                           
  1301                           ;main.c: 123: T1CON = 0b10010000;
  1302   000CF0  0E90               	movlw	144
  1303   000CF2  6ECD               	movwf	205,c	;volatile
  1304                           
  1305                           ;main.c: 125: TMR2 = 0;
  1306   000CF4  0E00               	movlw	0
  1307   000CF6  6ECC               	movwf	204,c	;volatile
  1308                           
  1309                           ;main.c: 126: TMR2ON = 1;
  1310   000CF8  84CA               	bsf	4042,2,c	;volatile
  1311                           
  1312                           ;main.c: 129: Lcd_Init();
  1313   000CFA  EC54  F00D         	call	_Lcd_Init	;wreg free
  1314                           
  1315                           ;main.c: 131: Lcd_CGRAM_Init();
  1316   000CFE  EC4E  F012         	call	_Lcd_CGRAM_Init	;wreg free
  1317                           
  1318                           ;main.c: 132: Lcd_CGRAM_CreateChar(0, figura_1);
  1319   000D02  0E2B               	movlw	low _figura_1
  1320   000D04  0100               	movlb	0	; () banked
  1321   000D06  6F90               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  1322   000D08  0E00               	movlw	0
  1323   000D0A  EC3F  F007         	call	_Lcd_CGRAM_CreateChar
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;main.c: 133: Lcd_CGRAM_CreateChar(1, figura_2);
  1327   000D0E  0E23               	movlw	low _figura_2
  1328   000D10  6F90               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  1329   000D12  0E01               	movlw	1
  1330   000D14  EC3F  F007         	call	_Lcd_CGRAM_CreateChar
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;main.c: 134: Lcd_CGRAM_CreateChar(2, figura_3);
  1334   000D18  0E1B               	movlw	low _figura_3
  1335   000D1A  6F90               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  1336   000D1C  0E02               	movlw	2
  1337   000D1E  EC3F  F007         	call	_Lcd_CGRAM_CreateChar
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;main.c: 135: Lcd_CGRAM_CreateChar(3, figura_4);
  1341   000D22  0E13               	movlw	low _figura_4
  1342   000D24  6F90               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  1343   000D26  0E03               	movlw	3
  1344   000D28  EC3F  F007         	call	_Lcd_CGRAM_CreateChar
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;main.c: 136: Lcd_CGRAM_CreateChar(4, figura_5);
  1348   000D2C  0E0B               	movlw	low _figura_5
  1349   000D2E  6F90               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  1350   000D30  0E04               	movlw	4
  1351   000D32  EC3F  F007         	call	_Lcd_CGRAM_CreateChar
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;main.c: 137: Lcd_CGRAM_Close();
  1355   000D36  EC55  F012         	call	_Lcd_CGRAM_Close	;wreg free
  1356                           
  1357                           ;main.c: 138: Lcd_Clear();
  1358   000D3A  EC63  F012         	call	_Lcd_Clear	;wreg free
  1359                           
  1360                           ;main.c: 141: Lcd_Set_Cursor(1, 1);
  1361   000D3E  0E01               	movlw	1
  1362   000D40  0100               	movlb	0	; () banked
  1363   000D42  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1364   000D44  0E01               	movlw	1
  1365   000D46  EC17  F00C         	call	_Lcd_Set_Cursor
  1366                           
  1367                           ;main.c: 142: Lcd_Write_String("Laboratorio 04");
  1368   000D4A  0E77               	movlw	low STR_1
  1369   000D4C  0100               	movlb	0	; () banked
  1370   000D4E  6F90               	movwf	Lcd_Write_String@a& (0+255),b
  1371   000D50  EC92  F010         	call	_Lcd_Write_String	;wreg free
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;main.c: 143: Lcd_Set_Cursor(2, 1);
  1375   000D54  0E01               	movlw	1
  1376   000D56  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1377   000D58  0E02               	movlw	2
  1378   000D5A  EC17  F00C         	call	_Lcd_Set_Cursor
  1379                           
  1380                           ;main.c: 144: Lcd_Write_String("PIC18F4550");
  1381   000D5E  0E9E               	movlw	low STR_2
  1382   000D60  0100               	movlb	0	; () banked
  1383   000D62  6F90               	movwf	Lcd_Write_String@a& (0+255),b
  1384   000D64  EC92  F010         	call	_Lcd_Write_String	;wreg free
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;main.c: 145: Lcd_Set_Cursor(2, 12);
  1388   000D68  0E0C               	movlw	12
  1389   000D6A  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1390   000D6C  0E02               	movlw	2
  1391   000D6E  EC17  F00C         	call	_Lcd_Set_Cursor
  1392                           
  1393                           ;main.c: 146: Lcd_Blink();
  1394   000D72  EC47  F012         	call	_Lcd_Blink	;wreg free
  1395                           
  1396                           ;main.c: 147: _delay((unsigned long)((200)*(8000000/4000.0)));
  1397   000D76  0E03               	movlw	3
  1398   000D78  0100               	movlb	0	; () banked
  1399   000D7A  6FAB               	movwf	(??_main+1)& (0+255),b
  1400   000D7C  0E08               	movlw	8
  1401   000D7E  6FAA               	movwf	??_main& (0+255),b
  1402   000D80  0E77               	movlw	119
  1403   000D82                     u3697:
  1404   000D82  2EE8               	decfsz	wreg,f,c
  1405   000D84  D7FE               	bra	u3697
  1406   000D86  2FAA               	decfsz	??_main& (0+255),f,b
  1407   000D88  D7FC               	bra	u3697
  1408   000D8A  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1409   000D8C  D7FA               	bra	u3697
  1410                           
  1411                           ;main.c: 148: Lcd_NoBlink();
  1412   000D8E  EC5C  F012         	call	_Lcd_NoBlink	;wreg free
  1413                           
  1414                           ;main.c: 151: for (i = 1; i <= 5; i++) {
  1415   000D92  0E01               	movlw	1
  1416   000D94  0100               	movlb	0	; () banked
  1417   000D96  6FAD               	movwf	main@i& (0+255),b
  1418   000D98                     l4047:
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;main.c: 152: Lcd_Clear();
  1422   000D98  EC63  F012         	call	_Lcd_Clear	;wreg free
  1423                           
  1424                           ;main.c: 153: Lcd_Set_Cursor(1, 1);
  1425   000D9C  0E01               	movlw	1
  1426   000D9E  0100               	movlb	0	; () banked
  1427   000DA0  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1428   000DA2  0E01               	movlw	1
  1429   000DA4  EC17  F00C         	call	_Lcd_Set_Cursor
  1430                           
  1431                           ;main.c: 154: Lcd_Write_String("Micros UNAL");
  1432   000DA8  0E92               	movlw	low STR_3
  1433   000DAA  0100               	movlb	0	; () banked
  1434   000DAC  6F90               	movwf	Lcd_Write_String@a& (0+255),b
  1435   000DAE  EC92  F010         	call	_Lcd_Write_String	;wreg free
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;main.c: 155: Lcd_Set_Cursor(2, 1);
  1439   000DB2  0E01               	movlw	1
  1440   000DB4  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1441   000DB6  0E02               	movlw	2
  1442   000DB8  EC17  F00C         	call	_Lcd_Set_Cursor
  1443                           
  1444                           ;main.c: 156: Lcd_Write_Char(0);
  1445   000DBC  0E00               	movlw	0
  1446   000DBE  ECB2  F010         	call	_Lcd_Write_Char
  1447                           
  1448                           ;main.c: 157: Lcd_Set_Cursor(2, 7);
  1449   000DC2  0E07               	movlw	7
  1450   000DC4  0100               	movlb	0	; () banked
  1451   000DC6  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1452   000DC8  0E02               	movlw	2
  1453   000DCA  EC17  F00C         	call	_Lcd_Set_Cursor
  1454                           
  1455                           ;main.c: 158: Lcd_Write_Char(1);
  1456   000DCE  0E01               	movlw	1
  1457   000DD0  ECB2  F010         	call	_Lcd_Write_Char
  1458                           
  1459                           ;main.c: 159: Lcd_Set_Cursor(2, 2 + i);
  1460   000DD4  0100               	movlb	0	; () banked
  1461   000DD6  51AD               	movf	main@i& (0+255),w,b
  1462   000DD8  0F02               	addlw	2
  1463   000DDA  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1464   000DDC  0E02               	movlw	2
  1465   000DDE  EC17  F00C         	call	_Lcd_Set_Cursor
  1466                           
  1467                           ;main.c: 160: Lcd_Write_Char(2);
  1468   000DE2  0E02               	movlw	2
  1469   000DE4  ECB2  F010         	call	_Lcd_Write_Char
  1470                           
  1471                           ;main.c: 161: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1472   000DE8  0E0B               	movlw	11
  1473   000DEA  0100               	movlb	0	; () banked
  1474   000DEC  6FAB               	movwf	(??_main+1)& (0+255),b
  1475   000DEE  0E26               	movlw	38
  1476   000DF0  6FAA               	movwf	??_main& (0+255),b
  1477   000DF2  0E5D               	movlw	93
  1478   000DF4                     u3707:
  1479   000DF4  2EE8               	decfsz	wreg,f,c
  1480   000DF6  D7FE               	bra	u3707
  1481   000DF8  2FAA               	decfsz	??_main& (0+255),f,b
  1482   000DFA  D7FC               	bra	u3707
  1483   000DFC  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1484   000DFE  D7FA               	bra	u3707
  1485   000E00  D000               	nop2	
  1486   000E02  0100               	movlb	0	; () banked
  1487   000E04  2BAD               	incf	main@i& (0+255),f,b
  1488                           
  1489                           ; BSR set to: 0
  1490   000E06  0E05               	movlw	5
  1491   000E08  65AD               	cpfsgt	main@i& (0+255),b
  1492   000E0A  D7C6               	goto	l4047
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;main.c: 162: };main.c: 163: Lcd_Clear();
  1496   000E0C  EC63  F012         	call	_Lcd_Clear	;wreg free
  1497                           
  1498                           ;main.c: 164: escenario1();
  1499   000E10  ECBE  F00F         	call	_escenario1	;wreg free
  1500   000E14                     l4075:
  1501                           
  1502                           ;main.c: 170: d = MedirDistancia();
  1503   000E14  EC1C  F00E         	call	_MedirDistancia	;wreg free
  1504   000E18  0100               	movlb	0	; () banked
  1505   000E1A  6FAC               	movwf	main@d& (0+255),b
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;main.c: 171: sprintf(buffer, "Distancia = %u cm \nPWM = %u %c \n", (int) d, (int) porce
      +                          ntaje, 37);
  1509   000E1C  0E6E               	movlw	low _buffer
  1510   000E1E  6F9B               	movwf	sprintf@sp& (0+255),b
  1511   000E20  0E33               	movlw	low STR_4
  1512   000E22  6F9C               	movwf	sprintf@f& (0+255),b
  1513   000E24  C0AC  F09D         	movff	main@d,?_sprintf+2
  1514   000E28  6B9E               	clrf	(?_sprintf+3)& (0+255),b
  1515   000E2A  C0AE  F08C         	movff	_porcentaje,___fttol@f1
  1516   000E2E  C0AF  F08D         	movff	_porcentaje+1,___fttol@f1+1
  1517   000E32  C0B0  F08E         	movff	_porcentaje+2,___fttol@f1+2
  1518   000E36  ECED  F00A         	call	___fttol	;wreg free
  1519   000E3A  C08C  F09F         	movff	?___fttol,?_sprintf+4
  1520   000E3E  C08D  F0A0         	movff	?___fttol+1,?_sprintf+5
  1521   000E42  0E00               	movlw	0
  1522   000E44  6FA2               	movwf	(?_sprintf+7)& (0+255),b
  1523   000E46  0E25               	movlw	37
  1524   000E48  6FA1               	movwf	(?_sprintf+6)& (0+255),b
  1525   000E4A  EC02  F008         	call	_sprintf	;wreg free
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;main.c: 173: if (menu == 2 && d < 9) ContarReal();
  1529   000E4E  0E02               	movlw	2
  1530   000E50  196C               	xorwf	_menu& (0+255),w,b
  1531   000E52  116D               	iorwf	(_menu+1)& (0+255),w,b
  1532   000E54  A4D8               	btfss	status,2,c
  1533   000E56  D005               	goto	l4085
  1534                           
  1535                           ; BSR set to: 0
  1536   000E58  0E09               	movlw	9
  1537   000E5A  61AC               	cpfslt	main@d& (0+255),b
  1538   000E5C  D002               	goto	l4085
  1539                           
  1540                           ; BSR set to: 0
  1541   000E5E  EC95  F008         	call	_ContarReal	;wreg free
  1542   000E62                     l4085:
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;main.c: 174: _delay((unsigned long)((3000)*(8000000/4000.0)));
  1546   000E62  0E1F               	movlw	31
  1547   000E64  0100               	movlb	0	; () banked
  1548   000E66  6FAB               	movwf	(??_main+1)& (0+255),b
  1549   000E68  0E71               	movlw	113
  1550   000E6A  6FAA               	movwf	??_main& (0+255),b
  1551   000E6C  0E1E               	movlw	30
  1552   000E6E                     u3717:
  1553   000E6E  2EE8               	decfsz	wreg,f,c
  1554   000E70  D7FE               	bra	u3717
  1555   000E72  2FAA               	decfsz	??_main& (0+255),f,b
  1556   000E74  D7FC               	bra	u3717
  1557   000E76  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1558   000E78  D7FA               	bra	u3717
  1559   000E7A  0000               	nop	
  1560   000E7C  D7CB               	goto	l4075
  1561   000E7E                     __end_of_main:
  1562                           	callstack 0
  1563                           
  1564 ;; *************** function _sprintf *****************
  1565 ;; Defined at:
  1566 ;;		line 505 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/doprnt.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1569 ;;		 -> buffer(30), 
  1570 ;;  f               1   16[BANK0 ] PTR const unsigned char 
  1571 ;;		 -> STR_4(33), 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  tmpval          4    0        struct .
  1574 ;;  cp              3    0        PTR const unsigned char 
  1575 ;;  val             2   25[BANK0 ] unsigned int 
  1576 ;;  len             2    0        unsigned int 
  1577 ;;  c               1   29[BANK0 ] unsigned char 
  1578 ;;  ap              1   28[BANK0 ] PTR void [1]
  1579 ;;		 -> ?_sprintf(2), 
  1580 ;;  prec            1   27[BANK0 ] char 
  1581 ;;  flag            1   24[BANK0 ] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2   15[BANK0 ] int 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 3F/0
  1588 ;;		On exit  : 3F/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1591 ;;      Params:         0       8       0       0       0       0       0       0       0
  1592 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1593 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1594 ;;      Totals:         0      15       0       0       0       0       0       0       0
  1595 ;;Total ram usage:       15 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; Hardware stack levels required when called: 8
  1598 ;; This function calls:
  1599 ;;		___lwdiv
  1600 ;;		___lwmod
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text1
  1607   001004                     __ptext1:
  1608                           	callstack 0
  1609   001004                     _sprintf:
  1610                           	callstack 22
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  1614                           
  1615                           ;incstack = 0
  1616   001004  0E9D               	movlw	low (?_sprintf+2)
  1617   001006  6FA8               	movwf	sprintf@ap& (0+255),b
  1618                           
  1619                           ;doprnt.c: 553: while((c = *f++)) {
  1620   001008  D07E               	goto	u2810
  1621   00100A                     l3711:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;doprnt.c: 555: if(c != '%')
  1625   00100A  0E25               	movlw	37
  1626   00100C  19A9               	xorwf	sprintf@c& (0+255),w,b
  1627   00100E  B4D8               	btfsc	status,2,c
  1628   001010  D007               	goto	l3717
  1629   001012                     u2780:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1633   001012  519B               	movf	sprintf@sp& (0+255),w,b
  1634   001014  6ED9               	movwf	fsr2l,c
  1635   001016  6ADA               	clrf	fsr2h,c
  1636   001018  C0A9  FFDF         	movff	sprintf@c,indf2
  1637                           
  1638                           ; BSR set to: 0
  1639   00101C  2B9B               	incf	sprintf@sp& (0+255),f,b
  1640                           
  1641                           ;doprnt.c: 559: continue;
  1642   00101E  D073               	goto	u2810
  1643   001020                     l3717:
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1647   001020  0E00               	movlw	0
  1648   001022  6FA4               	movwf	sprintf@flag& (0+255),b
  1649                           
  1650                           ;doprnt.c: 661: switch(c = *f++) {
  1651   001024  D00B               	goto	l3731
  1652   001026                     l3719:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  1656   001026  51A8               	movf	sprintf@ap& (0+255),w,b
  1657   001028  6ED9               	movwf	fsr2l,c
  1658   00102A  6ADA               	clrf	fsr2h,c
  1659   00102C  50DF               	movf	indf2,w,c
  1660   00102E  6FA9               	movwf	sprintf@c& (0+255),b
  1661                           
  1662                           ; BSR set to: 0
  1663   001030  0E02               	movlw	2
  1664   001032  27A8               	addwf	sprintf@ap& (0+255),f,b
  1665   001034  D7EE               	goto	u2780
  1666   001036                     l3727:
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;doprnt.c: 844: flag |= 0xC0;
  1670   001036  0EC0               	movlw	192
  1671   001038  13A4               	iorwf	sprintf@flag& (0+255),f,b
  1672                           
  1673                           ;doprnt.c: 845: break;
  1674   00103A  D015               	goto	l3733
  1675   00103C                     l3731:
  1676                           
  1677                           ; BSR set to: 0
  1678   00103C  2B9C               	incf	sprintf@f& (0+255),f,b
  1679   00103E  059C               	decf	sprintf@f& (0+255),w,b
  1680   001040  6FA3               	movwf	??_sprintf& (0+255),b
  1681   001042  C0A3  FFF6         	movff	??_sprintf,tblptrl
  1682   001046                     	if	1	;There is more than 1 active tblptr byte
  1683   001046  0E08               	movlw	high __smallconst
  1684   001048  6EF7               	movwf	tblptrh,c
  1685   00104A                     	endif
  1686   00104A                     	if	0	;tblptru may be non-zero
  1687   00104A                     	endif
  1688   00104A                     	if	0	;tblptru may be non-zero
  1689   00104A                     	endif
  1690   00104A  0008               	tblrd		*
  1691   00104C  CFF5 F0A9          	movff	tablat,sprintf@c
  1692   001050  51A9               	movf	sprintf@c& (0+255),w,b
  1693                           
  1694                           ; Switch size 1, requested type "simple"
  1695                           ; Number of cases is 3, Range of values is 0 to 117
  1696                           ; switch strategies available:
  1697                           ; Name         Instructions Cycles
  1698                           ; simple_byte           10     6 (average)
  1699                           ;	Chosen strategy is simple_byte
  1700   001052  0A00               	xorlw	0	; case 0
  1701   001054  B4D8               	btfsc	status,2,c
  1702   001056  D064               	goto	u2820
  1703   001058  0A63               	xorlw	99	; case 99
  1704   00105A  B4D8               	btfsc	status,2,c
  1705   00105C  D7E4               	goto	l3719
  1706   00105E  0A16               	xorlw	22	; case 117
  1707   001060  B4D8               	btfsc	status,2,c
  1708   001062  D7E9               	goto	l3727
  1709   001064  D7D6               	goto	u2780
  1710   001066                     l3733:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (uns
      +                          igned)0));
  1714   001066  51A8               	movf	sprintf@ap& (0+255),w,b
  1715   001068  6ED9               	movwf	fsr2l,c
  1716   00106A  6ADA               	clrf	fsr2h,c
  1717   00106C  CFDE F0A5          	movff	postinc2,sprintf@val
  1718   001070  CFDD F0A6          	movff	postdec2,sprintf@val+1
  1719                           
  1720                           ; BSR set to: 0
  1721   001074  0E02               	movlw	2
  1722   001076  27A8               	addwf	sprintf@ap& (0+255),f,b
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  1726   001078  0E01               	movlw	1
  1727   00107A  6FA9               	movwf	sprintf@c& (0+255),b
  1728   00107C                     l3743:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;doprnt.c: 1332: if(val < dpowers[c])
  1732   00107C  51A9               	movf	sprintf@c& (0+255),w,b
  1733   00107E  0D02               	mullw	2
  1734   001080  50F3               	movf	243,w,c
  1735   001082  0F01               	addlw	low _dpowers
  1736   001084  6FA3               	movwf	??_sprintf& (0+255),b
  1737   001086  C0A3  FFF6         	movff	??_sprintf,tblptrl
  1738   00108A                     	if	1	;There is more than 1 active tblptr byte
  1739   00108A  0E08               	movlw	high __smallconst
  1740   00108C  6EF7               	movwf	tblptrh,c
  1741   00108E                     	endif
  1742   00108E                     	if	0	;tblptru may be non-zero
  1743   00108E                     	endif
  1744   00108E                     	if	0	;tblptru may be non-zero
  1745   00108E                     	endif
  1746   00108E  0009               	tblrd		*+
  1747   001090  50F5               	movf	tablat,w,c
  1748   001092  5DA5               	subwf	sprintf@val& (0+255),w,b
  1749   001094  0009               	tblrd		*+
  1750   001096  50F5               	movf	tablat,w,c
  1751   001098  59A6               	subwfb	(sprintf@val+1)& (0+255),w,b
  1752   00109A  A0D8               	btfss	status,0,c
  1753   00109C  D005               	goto	u2800
  1754                           
  1755                           ; BSR set to: 0
  1756   00109E  2BA9               	incf	sprintf@c& (0+255),f,b
  1757                           
  1758                           ; BSR set to: 0
  1759   0010A0  0E05               	movlw	5
  1760   0010A2  19A9               	xorwf	sprintf@c& (0+255),w,b
  1761   0010A4  A4D8               	btfss	status,2,c
  1762   0010A6  D7EA               	goto	l3743
  1763   0010A8                     u2800:
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;doprnt.c: 1448: {;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1767   0010A8  C0A9  F0A7         	movff	sprintf@c,sprintf@prec
  1768                           
  1769                           ;doprnt.c: 1500: while(prec--) {
  1770   0010AC  D028               	goto	l3757
  1771   0010AE                     l3751:
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1775   0010AE  51A7               	movf	sprintf@prec& (0+255),w,b
  1776   0010B0  0D02               	mullw	2
  1777   0010B2  50F3               	movf	243,w,c
  1778   0010B4  0F01               	addlw	low _dpowers
  1779   0010B6  6FA3               	movwf	??_sprintf& (0+255),b
  1780   0010B8  C0A3  FFF6         	movff	??_sprintf,tblptrl
  1781   0010BC                     	if	1	;There is more than 1 active tblptr byte
  1782   0010BC  0E08               	movlw	high __smallconst
  1783   0010BE  6EF7               	movwf	tblptrh,c
  1784   0010C0                     	endif
  1785   0010C0                     	if	0	;tblptru may be non-zero
  1786   0010C0                     	endif
  1787   0010C0                     	if	0	;tblptru may be non-zero
  1788   0010C0                     	endif
  1789   0010C0  0009               	tblrd		*+
  1790   0010C2  CFF5 F08E          	movff	tablat,___lwdiv@divisor
  1791   0010C6  000A               	tblrd		*-
  1792   0010C8  CFF5 F08F          	movff	tablat,___lwdiv@divisor+1
  1793   0010CC  C0A5  F08C         	movff	sprintf@val,___lwdiv@dividend
  1794   0010D0  C0A6  F08D         	movff	sprintf@val+1,___lwdiv@dividend+1
  1795   0010D4  EC6C  F00F         	call	___lwdiv	;wreg free
  1796   0010D8  C08C  F093         	movff	?___lwdiv,___lwmod@dividend
  1797   0010DC  C08D  F094         	movff	?___lwdiv+1,___lwmod@dividend+1
  1798   0010E0  0E00               	movlw	0
  1799   0010E2  6F96               	movwf	(___lwmod@divisor+1)& (0+255),b
  1800   0010E4  0E0A               	movlw	10
  1801   0010E6  6F95               	movwf	___lwmod@divisor& (0+255),b
  1802   0010E8  EC2F  F010         	call	___lwmod	;wreg free
  1803   0010EC  5193               	movf	?___lwmod& (0+255),w,b
  1804   0010EE  0F30               	addlw	48
  1805   0010F0  6FA9               	movwf	sprintf@c& (0+255),b
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  1809   0010F2  519B               	movf	sprintf@sp& (0+255),w,b
  1810   0010F4  6ED9               	movwf	fsr2l,c
  1811   0010F6  6ADA               	clrf	fsr2h,c
  1812   0010F8  C0A9  FFDF         	movff	sprintf@c,indf2
  1813                           
  1814                           ; BSR set to: 0
  1815   0010FC  2B9B               	incf	sprintf@sp& (0+255),f,b
  1816   0010FE                     l3757:
  1817                           
  1818                           ; BSR set to: 0
  1819   0010FE  07A7               	decf	sprintf@prec& (0+255),f,b
  1820   001100  29A7               	incf	sprintf@prec& (0+255),w,b
  1821   001102  A4D8               	btfss	status,2,c
  1822   001104  D7D4               	goto	l3751
  1823   001106                     u2810:
  1824                           
  1825                           ; BSR set to: 0
  1826   001106  2B9C               	incf	sprintf@f& (0+255),f,b
  1827   001108  059C               	decf	sprintf@f& (0+255),w,b
  1828   00110A  6FA3               	movwf	??_sprintf& (0+255),b
  1829   00110C  C0A3  FFF6         	movff	??_sprintf,tblptrl
  1830   001110                     	if	1	;There is more than 1 active tblptr byte
  1831   001110  0E08               	movlw	high __smallconst
  1832   001112  6EF7               	movwf	tblptrh,c
  1833   001114                     	endif
  1834   001114                     	if	0	;tblptru may be non-zero
  1835   001114                     	endif
  1836   001114                     	if	0	;tblptru may be non-zero
  1837   001114                     	endif
  1838   001114  0008               	tblrd		*
  1839   001116  CFF5 F0A9          	movff	tablat,sprintf@c
  1840   00111A  51A9               	movf	sprintf@c& (0+255),w,b
  1841   00111C  A4D8               	btfss	status,2,c
  1842   00111E  D775               	goto	l3711
  1843   001120                     u2820:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;doprnt.c: 1564: *sp = 0;
  1847   001120  519B               	movf	sprintf@sp& (0+255),w,b
  1848   001122  6ED9               	movwf	fsr2l,c
  1849   001124  6ADA               	clrf	fsr2h,c
  1850   001126  6ADF               	clrf	indf2,c
  1851                           
  1852                           ; BSR set to: 0
  1853   001128  0012               	return		;funcret
  1854   00112A                     __end_of_sprintf:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function ___lwmod *****************
  1858 ;; Defined at:
  1859 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/lwmod.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  dividend        2    7[BANK0 ] unsigned int 
  1862 ;;  divisor         2    9[BANK0 ] unsigned int 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  counter         1   11[BANK0 ] unsigned char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  2    7[BANK0 ] unsigned int 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0
  1869 ;; Tracked objects:
  1870 ;;		On entry : 3F/0
  1871 ;;		On exit  : 3F/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1874 ;;      Params:         0       4       0       0       0       0       0       0       0
  1875 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1877 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1878 ;;Total ram usage:        5 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; Hardware stack levels required when called: 7
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_sprintf
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text2
  1889   00205E                     __ptext2:
  1890                           	callstack 0
  1891   00205E                     ___lwmod:
  1892                           	callstack 22
  1893                           
  1894                           ; BSR set to: 0
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;incstack = 0
  1898   00205E  5195               	movf	___lwmod@divisor& (0+255),w,b
  1899   002060  1196               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1900   002062  B4D8               	btfsc	status,2,c
  1901   002064  D018               	goto	l1019
  1902                           
  1903                           ; BSR set to: 0
  1904   002066  0E01               	movlw	1
  1905   002068  6F97               	movwf	___lwmod@counter& (0+255),b
  1906   00206A  D004               	goto	l3415
  1907   00206C                     l3413:
  1908                           
  1909                           ; BSR set to: 0
  1910   00206C  90D8               	bcf	status,0,c
  1911   00206E  3795               	rlcf	___lwmod@divisor& (0+255),f,b
  1912   002070  3796               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1913   002072  2B97               	incf	___lwmod@counter& (0+255),f,b
  1914   002074                     l3415:
  1915                           
  1916                           ; BSR set to: 0
  1917   002074  AF96               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1918   002076  D7FA               	goto	l3413
  1919   002078                     u2520:
  1920                           
  1921                           ; BSR set to: 0
  1922   002078  5195               	movf	___lwmod@divisor& (0+255),w,b
  1923   00207A  5D93               	subwf	___lwmod@dividend& (0+255),w,b
  1924   00207C  5196               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1925   00207E  5994               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1926   002080  A0D8               	btfss	status,0,c
  1927   002082  D004               	goto	l3421
  1928                           
  1929                           ; BSR set to: 0
  1930   002084  5195               	movf	___lwmod@divisor& (0+255),w,b
  1931   002086  5F93               	subwf	___lwmod@dividend& (0+255),f,b
  1932   002088  5196               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1933   00208A  5B94               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1934   00208C                     l3421:
  1935                           
  1936                           ; BSR set to: 0
  1937   00208C  90D8               	bcf	status,0,c
  1938   00208E  3396               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1939   002090  3395               	rrcf	___lwmod@divisor& (0+255),f,b
  1940                           
  1941                           ; BSR set to: 0
  1942   002092  2F97               	decfsz	___lwmod@counter& (0+255),f,b
  1943   002094  D7F1               	goto	u2520
  1944   002096                     l1019:
  1945                           
  1946                           ; BSR set to: 0
  1947   002096  C093  F093         	movff	___lwmod@dividend,?___lwmod
  1948   00209A  C094  F094         	movff	___lwmod@dividend+1,?___lwmod+1
  1949                           
  1950                           ; BSR set to: 0
  1951   00209E  0012               	return		;funcret
  1952   0020A0                     __end_of___lwmod:
  1953                           	callstack 0
  1954                           
  1955 ;; *************** function _escenario1 *****************
  1956 ;; Defined at:
  1957 ;;		line 183 in file "main.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;		None
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1971 ;;      Params:         0       0       0       0       0       0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1974 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1975 ;;Total ram usage:        0 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; Hardware stack levels required when called: 10
  1978 ;; This function calls:
  1979 ;;		_Lcd_Blink
  1980 ;;		_Lcd_Clear
  1981 ;;		_Lcd_Set_Cursor
  1982 ;;		_Lcd_Write_Char
  1983 ;;		_Lcd_Write_String
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text3
  1990   001F7C                     __ptext3:
  1991                           	callstack 0
  1992   001F7C                     _escenario1:
  1993                           	callstack 20
  1994                           
  1995                           ;main.c: 184: menu = 1;
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;incstack = 0
  1999   001F7C  0E00               	movlw	0
  2000   001F7E  0100               	movlb	0	; () banked
  2001   001F80  6F6D               	movwf	(_menu+1)& (0+255),b
  2002   001F82  0E01               	movlw	1
  2003   001F84  6F6C               	movwf	_menu& (0+255),b
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;main.c: 185: Lcd_Clear();
  2007   001F86  EC63  F012         	call	_Lcd_Clear	;wreg free
  2008                           
  2009                           ;main.c: 186: Lcd_Set_Cursor(1, 1);
  2010   001F8A  0E01               	movlw	1
  2011   001F8C  0100               	movlb	0	; () banked
  2012   001F8E  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2013   001F90  0E01               	movlw	1
  2014   001F92  EC17  F00C         	call	_Lcd_Set_Cursor
  2015                           
  2016                           ;main.c: 187: Lcd_Write_String("Piezas a contar:");
  2017   001F96  0E66               	movlw	low STR_5
  2018   001F98  0100               	movlb	0	; () banked
  2019   001F9A  6F90               	movwf	Lcd_Write_String@a& (0+255),b
  2020   001F9C  EC92  F010         	call	_Lcd_Write_String	;wreg free
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;main.c: 188: Lcd_Set_Cursor(2, 9);
  2024   001FA0  0E09               	movlw	9
  2025   001FA2  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2026   001FA4  0E02               	movlw	2
  2027   001FA6  EC17  F00C         	call	_Lcd_Set_Cursor
  2028                           
  2029                           ;main.c: 189: Lcd_Write_String("A:ok B:");
  2030   001FAA  0EC7               	movlw	low STR_6
  2031   001FAC  0100               	movlb	0	; () banked
  2032   001FAE  6F90               	movwf	Lcd_Write_String@a& (0+255),b
  2033   001FB0  EC92  F010         	call	_Lcd_Write_String	;wreg free
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;main.c: 190: Lcd_Write_Char(0b01111111);
  2037   001FB4  0E7F               	movlw	127
  2038   001FB6  ECB2  F010         	call	_Lcd_Write_Char
  2039                           
  2040                           ;main.c: 191: Lcd_Set_Cursor(2, 1);
  2041   001FBA  0E01               	movlw	1
  2042   001FBC  0100               	movlb	0	; () banked
  2043   001FBE  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2044   001FC0  0E02               	movlw	2
  2045   001FC2  EC17  F00C         	call	_Lcd_Set_Cursor
  2046                           
  2047                           ;main.c: 192: Lcd_Blink();
  2048   001FC6  EC47  F012         	call	_Lcd_Blink	;wreg free
  2049   001FCA  0012               	return		;funcret
  2050   001FCC                     __end_of_escenario1:
  2051                           	callstack 0
  2052                           
  2053 ;; *************** function _Lcd_Blink *****************
  2054 ;; Defined at:
  2055 ;;		line 124 in file "lcd.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;		None
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;		None
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2069 ;;      Params:         0       0       0       0       0       0       0       0       0
  2070 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2072 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2073 ;;Total ram usage:        0 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 9
  2076 ;; This function calls:
  2077 ;;		_Lcd_Cmd
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;;		_escenario1
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text4
  2085   00248E                     __ptext4:
  2086                           	callstack 0
  2087   00248E                     _Lcd_Blink:
  2088                           	callstack 20
  2089                           
  2090                           ;lcd.c: 126: Lcd_Cmd(0x00);
  2091                           
  2092                           ;incstack = 0
  2093   00248E  0E00               	movlw	0
  2094   002490  ECD1  F011         	call	_Lcd_Cmd
  2095                           
  2096                           ;lcd.c: 127: Lcd_Cmd(0x0F);
  2097   002494  0E0F               	movlw	15
  2098   002496  ECD1  F011         	call	_Lcd_Cmd
  2099   00249A  0012               	return		;funcret
  2100   00249C                     __end_of_Lcd_Blink:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function ___fttol *****************
  2104 ;; Defined at:
  2105 ;;		line 44 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/fttol.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  f1              3    0[BANK0 ] float 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  lval            4   10[BANK0 ] unsigned long 
  2110 ;;  exp1            1   14[BANK0 ] unsigned char 
  2111 ;;  sign1           1    9[BANK0 ] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  4    0[BANK0 ] long 
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0
  2116 ;; Tracked objects:
  2117 ;;		On entry : 3F/0
  2118 ;;		On exit  : 3F/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2121 ;;      Params:         0       4       0       0       0       0       0       0       0
  2122 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2123 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2124 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2125 ;;Total ram usage:       15 bytes
  2126 ;; Hardware stack levels used: 1
  2127 ;; Hardware stack levels required when called: 7
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_main
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text5
  2136   0015DA                     __ptext5:
  2137                           	callstack 0
  2138   0015DA                     ___fttol:
  2139                           	callstack 23
  2140                           
  2141                           ; BSR set to: 0
  2142                           
  2143                           ;incstack = 0
  2144   0015DA  C08E  F090         	movff	___fttol@f1+2,??___fttol
  2145   0015DE  6B91               	clrf	(??___fttol+1)& (0+255),b
  2146   0015E0  6B92               	clrf	(??___fttol+2)& (0+255),b
  2147   0015E2  358D               	rlcf	(___fttol@f1+1)& (0+255),w,b
  2148   0015E4  3790               	rlcf	??___fttol& (0+255),f,b
  2149   0015E6  E301               	bnc	u3021
  2150   0015E8  8191               	bsf	(??___fttol+1)& (0+255),0,b
  2151   0015EA                     u3021:
  2152   0015EA  5190               	movf	??___fttol& (0+255),w,b
  2153   0015EC  6F9A               	movwf	___fttol@exp1& (0+255),b
  2154   0015EE  519A               	movf	___fttol@exp1& (0+255),w,b
  2155   0015F0  A4D8               	btfss	status,2,c
  2156   0015F2  D009               	goto	l3911
  2157   0015F4                     u3030:
  2158                           
  2159                           ; BSR set to: 0
  2160   0015F4  0E00               	movlw	0
  2161   0015F6  6F8C               	movwf	?___fttol& (0+255),b
  2162   0015F8  0E00               	movlw	0
  2163   0015FA  6F8D               	movwf	(?___fttol+1)& (0+255),b
  2164   0015FC  0E00               	movlw	0
  2165   0015FE  6F8E               	movwf	(?___fttol+2)& (0+255),b
  2166   001600  0E00               	movlw	0
  2167   001602  6F8F               	movwf	(?___fttol+3)& (0+255),b
  2168   001604  0012               	return	
  2169   001606                     l3911:
  2170                           
  2171                           ; BSR set to: 0
  2172   001606  0E17               	movlw	23
  2173   001608  6F90               	movwf	??___fttol& (0+255),b
  2174   00160A  C08C  F091         	movff	___fttol@f1,??___fttol+1
  2175   00160E  C08D  F092         	movff	___fttol@f1+1,??___fttol+2
  2176   001612  C08E  F093         	movff	___fttol@f1+2,??___fttol+3
  2177   001616  2990               	incf	??___fttol& (0+255),w,b
  2178   001618  6F94               	movwf	(??___fttol+4)& (0+255),b
  2179   00161A  D004               	goto	u3040
  2180   00161C                     u3045:
  2181   00161C  90D8               	bcf	status,0,c
  2182   00161E  3393               	rrcf	(??___fttol+3)& (0+255),f,b
  2183   001620  3392               	rrcf	(??___fttol+2)& (0+255),f,b
  2184   001622  3391               	rrcf	(??___fttol+1)& (0+255),f,b
  2185   001624                     u3040:
  2186   001624  2F94               	decfsz	(??___fttol+4)& (0+255),f,b
  2187   001626  D7FA               	goto	u3045
  2188   001628  0100               	movlb	0	; () banked
  2189   00162A  5191               	movf	(??___fttol+1)& (0+255),w,b
  2190   00162C  6F95               	movwf	___fttol@sign1& (0+255),b
  2191                           
  2192                           ; BSR set to: 0
  2193   00162E  8F8D               	bsf	(___fttol@f1+1)& (0+255),7,b
  2194                           
  2195                           ; BSR set to: 0
  2196   001630  0EFF               	movlw	255
  2197   001632  178C               	andwf	___fttol@f1& (0+255),f,b
  2198   001634  0EFF               	movlw	255
  2199   001636  178D               	andwf	(___fttol@f1+1)& (0+255),f,b
  2200   001638  0E00               	movlw	0
  2201   00163A  178E               	andwf	(___fttol@f1+2)& (0+255),f,b
  2202                           
  2203                           ; BSR set to: 0
  2204   00163C  518C               	movf	___fttol@f1& (0+255),w,b
  2205   00163E  6F96               	movwf	___fttol@lval& (0+255),b
  2206   001640  518D               	movf	(___fttol@f1+1)& (0+255),w,b
  2207   001642  6F97               	movwf	(___fttol@lval+1)& (0+255),b
  2208   001644  518E               	movf	(___fttol@f1+2)& (0+255),w,b
  2209   001646  6F98               	movwf	(___fttol@lval+2)& (0+255),b
  2210   001648  6B99               	clrf	(___fttol@lval+3)& (0+255),b
  2211                           
  2212                           ; BSR set to: 0
  2213   00164A  0E8E               	movlw	142
  2214   00164C  5F9A               	subwf	___fttol@exp1& (0+255),f,b
  2215                           
  2216                           ; BSR set to: 0
  2217   00164E  AF9A               	btfss	___fttol@exp1& (0+255),7,b
  2218   001650  D00D               	goto	l3933
  2219                           
  2220                           ; BSR set to: 0
  2221   001652  519A               	movf	___fttol@exp1& (0+255),w,b
  2222   001654  0A80               	xorlw	128
  2223   001656  0F8F               	addlw	143
  2224   001658  A0D8               	btfss	status,0,c
  2225   00165A  D7CC               	goto	u3030
  2226   00165C                     l3929:
  2227                           
  2228                           ; BSR set to: 0
  2229   00165C  90D8               	bcf	status,0,c
  2230   00165E  3399               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2231   001660  3398               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2232   001662  3397               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2233   001664  3396               	rrcf	___fttol@lval& (0+255),f,b
  2234                           
  2235                           ; BSR set to: 0
  2236   001666  3F9A               	incfsz	___fttol@exp1& (0+255),f,b
  2237   001668  D7F9               	goto	l3929
  2238   00166A  D00D               	goto	u3080
  2239   00166C                     l3933:
  2240                           
  2241                           ; BSR set to: 0
  2242   00166C  0E17               	movlw	23
  2243   00166E  659A               	cpfsgt	___fttol@exp1& (0+255),b
  2244   001670  D007               	goto	l3941
  2245   001672  D7C0               	goto	u3030
  2246   001674                     l3939:
  2247                           
  2248                           ; BSR set to: 0
  2249   001674  90D8               	bcf	status,0,c
  2250   001676  3796               	rlcf	___fttol@lval& (0+255),f,b
  2251   001678  3797               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2252   00167A  3798               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2253   00167C  3799               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2254   00167E  079A               	decf	___fttol@exp1& (0+255),f,b
  2255   001680                     l3941:
  2256                           
  2257                           ; BSR set to: 0
  2258   001680  519A               	movf	___fttol@exp1& (0+255),w,b
  2259   001682  A4D8               	btfss	status,2,c
  2260   001684  D7F7               	goto	l3939
  2261   001686                     u3080:
  2262                           
  2263                           ; BSR set to: 0
  2264   001686  5195               	movf	___fttol@sign1& (0+255),w,b
  2265   001688  B4D8               	btfsc	status,2,c
  2266   00168A  D008               	goto	l3947
  2267                           
  2268                           ; BSR set to: 0
  2269   00168C  1F99               	comf	(___fttol@lval+3)& (0+255),f,b
  2270   00168E  1F98               	comf	(___fttol@lval+2)& (0+255),f,b
  2271   001690  1F97               	comf	(___fttol@lval+1)& (0+255),f,b
  2272   001692  6D96               	negf	___fttol@lval& (0+255),b
  2273   001694  0E00               	movlw	0
  2274   001696  2397               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2275   001698  2398               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2276   00169A  2399               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2277   00169C                     l3947:
  2278                           
  2279                           ; BSR set to: 0
  2280   00169C  C096  F08C         	movff	___fttol@lval,?___fttol
  2281   0016A0  C097  F08D         	movff	___fttol@lval+1,?___fttol+1
  2282   0016A4  C098  F08E         	movff	___fttol@lval+2,?___fttol+2
  2283   0016A8  C099  F08F         	movff	___fttol@lval+3,?___fttol+3
  2284                           
  2285                           ; BSR set to: 0
  2286   0016AC  0012               	return		;funcret
  2287   0016AE                     __end_of___fttol:
  2288                           	callstack 0
  2289                           
  2290 ;; *************** function _MedirDistancia *****************
  2291 ;; Defined at:
  2292 ;;		line 461 in file "main.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  aux             1    7[BANK0 ] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      unsigned char 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2306 ;;      Params:         0       0       0       0       0       0       0       0       0
  2307 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2309 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2310 ;;Total ram usage:        1 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 8
  2313 ;; This function calls:
  2314 ;;		___lwdiv
  2315 ;; This function is called by:
  2316 ;;		_main
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text6
  2321   001C38                     __ptext6:
  2322                           	callstack 0
  2323   001C38                     _MedirDistancia:
  2324                           	callstack 22
  2325                           
  2326                           ;main.c: 463: CCP2CON = 0b00000100;
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;incstack = 0
  2330   001C38  0E04               	movlw	4
  2331   001C3A  6EBA               	movwf	186,c	;volatile
  2332                           
  2333                           ;main.c: 464: CCP2IF = 0;
  2334   001C3C  90A1               	bcf	4001,0,c	;volatile
  2335                           
  2336                           ;main.c: 465: CCPR2 = 0;
  2337   001C3E  0E00               	movlw	0
  2338   001C40  6EBC               	movwf	188,c	;volatile
  2339   001C42  0E00               	movlw	0
  2340   001C44  6EBB               	movwf	187,c	;volatile
  2341                           
  2342                           ;main.c: 466: RC0 = 1;
  2343   001C46  8082               	bsf	3970,0,c	;volatile
  2344                           
  2345                           ;main.c: 467: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2346   001C48  0E06               	movlw	6
  2347   001C4A                     u3727:
  2348   001C4A  2EE8               	decfsz	wreg,f,c
  2349   001C4C  D7FE               	bra	u3727
  2350   001C4E  D000               	nop2	
  2351                           
  2352                           ;main.c: 468: RC0 = 0;
  2353   001C50  9082               	bcf	3970,0,c	;volatile
  2354                           
  2355                           ;main.c: 469: TMR1 = 0;
  2356   001C52  0E00               	movlw	0
  2357   001C54  6ECF               	movwf	207,c	;volatile
  2358   001C56  0E00               	movlw	0
  2359   001C58  6ECE               	movwf	206,c	;volatile
  2360                           
  2361                           ;main.c: 470: etimeout = 1;
  2362   001C5A  0E01               	movlw	1
  2363   001C5C  6E4C               	movwf	_etimeout^0,c
  2364   001C5E                     l487:
  2365   001C5E  B282               	btfsc	3970,1,c	;volatile
  2366   001C60  D003               	goto	u2720
  2367   001C62  044C               	decf	_etimeout^0,w,c
  2368   001C64  B4D8               	btfsc	status,2,c
  2369   001C66  D7FB               	goto	l487
  2370   001C68                     u2720:
  2371                           
  2372                           ;main.c: 473: if (etimeout == 0) {
  2373   001C68  504C               	movf	_etimeout^0,w,c
  2374   001C6A  A4D8               	btfss	status,2,c
  2375   001C6C  D002               	goto	l492
  2376                           
  2377                           ;main.c: 474: return 0;
  2378   001C6E  0E00               	movlw	0
  2379   001C70  0012               	return	
  2380   001C72                     l492:
  2381                           
  2382                           ;main.c: 475: };main.c: 476: TMR1ON = 1;
  2383   001C72  80CD               	bsf	4045,0,c	;volatile
  2384   001C74                     l494:
  2385   001C74  B0A1               	btfsc	4001,0,c	;volatile
  2386   001C76  D002               	goto	u2750
  2387   001C78  A09E               	btfss	3998,0,c	;volatile
  2388   001C7A  D7FC               	goto	l494
  2389   001C7C                     u2750:
  2390                           
  2391                           ;main.c: 478: TMR1ON = 0;
  2392   001C7C  90CD               	bcf	4045,0,c	;volatile
  2393                           
  2394                           ;main.c: 479: if (TMR1IF == 1)
  2395   001C7E  A09E               	btfss	3998,0,c	;volatile
  2396   001C80  D003               	goto	l3699
  2397                           
  2398                           ;main.c: 480: aux = 255;
  2399   001C82  0100               	movlb	0	; () banked
  2400   001C84  6993               	setf	MedirDistancia@aux& (0+255),b
  2401   001C86  D017               	goto	l3705
  2402   001C88                     l3699:
  2403                           
  2404                           ;main.c: 481: else {;main.c: 482: if (CCPR2 >= 14732)
  2405   001C88  0E8C               	movlw	140
  2406   001C8A  5CBB               	subwf	187,w,c	;volatile
  2407   001C8C  0E39               	movlw	57
  2408   001C8E  58BC               	subwfb	188,w,c	;volatile
  2409   001C90  A0D8               	btfss	status,0,c
  2410   001C92  D004               	goto	l3703
  2411                           
  2412                           ;main.c: 483: CCPR2 = 14732;
  2413   001C94  0E39               	movlw	57
  2414   001C96  6EBC               	movwf	188,c	;volatile
  2415   001C98  0E8C               	movlw	140
  2416   001C9A  6EBB               	movwf	187,c	;volatile
  2417   001C9C                     l3703:
  2418                           
  2419                           ;main.c: 484: aux = CCPR2 / 58 + 1;
  2420   001C9C  CFBB F08C          	movff	4027,___lwdiv@dividend	;volatile
  2421   001CA0  CFBC F08D          	movff	4028,___lwdiv@dividend+1	;volatile
  2422   001CA4  0E00               	movlw	0
  2423   001CA6  0100               	movlb	0	; () banked
  2424   001CA8  6F8F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2425   001CAA  0E3A               	movlw	58
  2426   001CAC  6F8E               	movwf	___lwdiv@divisor& (0+255),b
  2427   001CAE  EC6C  F00F         	call	___lwdiv	;wreg free
  2428   001CB2  298C               	incf	?___lwdiv& (0+255),w,b
  2429   001CB4  6F93               	movwf	MedirDistancia@aux& (0+255),b
  2430   001CB6                     l3705:
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;main.c: 485: };main.c: 486: return aux;
  2434   001CB6  5193               	movf	MedirDistancia@aux& (0+255),w,b
  2435   001CB8  0012               	return		;funcret
  2436   001CBA                     __end_of_MedirDistancia:
  2437                           	callstack 0
  2438                           
  2439 ;; *************** function ___lwdiv *****************
  2440 ;; Defined at:
  2441 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/lwdiv.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  dividend        2    0[BANK0 ] unsigned int 
  2444 ;;  divisor         2    2[BANK0 ] unsigned int 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  quotient        2    4[BANK0 ] unsigned int 
  2447 ;;  counter         1    6[BANK0 ] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  2    0[BANK0 ] unsigned int 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 3F/0
  2454 ;;		On exit  : 3F/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2457 ;;      Params:         0       4       0       0       0       0       0       0       0
  2458 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2460 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2461 ;;Total ram usage:        7 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 7
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		_MedirDistancia
  2468 ;;		_sprintf
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text7
  2473   001ED8                     __ptext7:
  2474                           	callstack 0
  2475   001ED8                     ___lwdiv:
  2476                           	callstack 22
  2477                           
  2478                           ; BSR set to: 0
  2479                           
  2480                           ;incstack = 0
  2481   001ED8  0E00               	movlw	0
  2482   001EDA  6F91               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2483   001EDC  0E00               	movlw	0
  2484   001EDE  6F90               	movwf	___lwdiv@quotient& (0+255),b
  2485                           
  2486                           ; BSR set to: 0
  2487   001EE0  518E               	movf	___lwdiv@divisor& (0+255),w,b
  2488   001EE2  118F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2489   001EE4  B4D8               	btfsc	status,2,c
  2490   001EE6  D01C               	goto	l1009
  2491                           
  2492                           ; BSR set to: 0
  2493   001EE8  0E01               	movlw	1
  2494   001EEA  6F92               	movwf	___lwdiv@counter& (0+255),b
  2495   001EEC  D004               	goto	l3395
  2496   001EEE                     l3393:
  2497                           
  2498                           ; BSR set to: 0
  2499   001EEE  90D8               	bcf	status,0,c
  2500   001EF0  378E               	rlcf	___lwdiv@divisor& (0+255),f,b
  2501   001EF2  378F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2502   001EF4  2B92               	incf	___lwdiv@counter& (0+255),f,b
  2503   001EF6                     l3395:
  2504                           
  2505                           ; BSR set to: 0
  2506   001EF6  AF8F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2507   001EF8  D7FA               	goto	l3393
  2508   001EFA                     u2490:
  2509                           
  2510                           ; BSR set to: 0
  2511   001EFA  90D8               	bcf	status,0,c
  2512   001EFC  3790               	rlcf	___lwdiv@quotient& (0+255),f,b
  2513   001EFE  3791               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2514                           
  2515                           ; BSR set to: 0
  2516   001F00  518E               	movf	___lwdiv@divisor& (0+255),w,b
  2517   001F02  5D8C               	subwf	___lwdiv@dividend& (0+255),w,b
  2518   001F04  518F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2519   001F06  598D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2520   001F08  A0D8               	btfss	status,0,c
  2521   001F0A  D005               	goto	l3405
  2522                           
  2523                           ; BSR set to: 0
  2524   001F0C  518E               	movf	___lwdiv@divisor& (0+255),w,b
  2525   001F0E  5F8C               	subwf	___lwdiv@dividend& (0+255),f,b
  2526   001F10  518F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2527   001F12  5B8D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2528                           
  2529                           ; BSR set to: 0
  2530   001F14  8190               	bsf	___lwdiv@quotient& (0+255),0,b
  2531   001F16                     l3405:
  2532                           
  2533                           ; BSR set to: 0
  2534   001F16  90D8               	bcf	status,0,c
  2535   001F18  338F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2536   001F1A  338E               	rrcf	___lwdiv@divisor& (0+255),f,b
  2537                           
  2538                           ; BSR set to: 0
  2539   001F1C  2F92               	decfsz	___lwdiv@counter& (0+255),f,b
  2540   001F1E  D7ED               	goto	u2490
  2541   001F20                     l1009:
  2542                           
  2543                           ; BSR set to: 0
  2544   001F20  C090  F08C         	movff	___lwdiv@quotient,?___lwdiv
  2545   001F24  C091  F08D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2546                           
  2547                           ; BSR set to: 0
  2548   001F28  0012               	return		;funcret
  2549   001F2A                     __end_of___lwdiv:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function _Lcd_Init *****************
  2553 ;; Defined at:
  2554 ;;		line 64 in file "lcd.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;		None
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2568 ;;      Params:         0       0       0       0       0       0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2570 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2571 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2572 ;;Total ram usage:        1 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 10
  2575 ;; This function calls:
  2576 ;;		_Lcd_Clear
  2577 ;;		_Lcd_Cmd
  2578 ;;		_Lcd_Port
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text8
  2585   001AA8                     __ptext8:
  2586                           	callstack 0
  2587   001AA8                     _Lcd_Init:
  2588                           	callstack 20
  2589                           
  2590                           ;lcd.c: 66: TRISAbits.TRISA3 = 0;
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;incstack = 0
  2594   001AA8  9692               	bcf	146,3,c	;volatile
  2595                           
  2596                           ;lcd.c: 67: TRISAbits.TRISA4 = 0;
  2597   001AAA  9892               	bcf	146,4,c	;volatile
  2598                           
  2599                           ;lcd.c: 68: TRISDbits.TRISD4 = 0;
  2600   001AAC  9895               	bcf	149,4,c	;volatile
  2601                           
  2602                           ;lcd.c: 69: TRISDbits.TRISD5 = 0;
  2603   001AAE  9A95               	bcf	149,5,c	;volatile
  2604                           
  2605                           ;lcd.c: 70: TRISDbits.TRISD6 = 0;
  2606   001AB0  9C95               	bcf	149,6,c	;volatile
  2607                           
  2608                           ;lcd.c: 71: TRISDbits.TRISD7 = 0;
  2609   001AB2  9E95               	bcf	149,7,c	;volatile
  2610                           
  2611                           ;lcd.c: 72: Lcd_Port(0x00);
  2612   001AB4  0E00               	movlw	0
  2613   001AB6  EC79  F011         	call	_Lcd_Port
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;lcd.c: 73: _delay((unsigned long)((20)*(8000000/4000.0)));
  2617   001ABA  0E34               	movlw	52
  2618   001ABC  0100               	movlb	0	; () banked
  2619   001ABE  6F8F               	movwf	??_Lcd_Init& (0+255),b
  2620   001AC0  0EF1               	movlw	241
  2621   001AC2                     u3737:
  2622   001AC2  2EE8               	decfsz	wreg,f,c
  2623   001AC4  D7FE               	bra	u3737
  2624   001AC6  2F8F               	decfsz	??_Lcd_Init& (0+255),f,b
  2625   001AC8  D7FC               	bra	u3737
  2626   001ACA  D000               	nop2	
  2627                           
  2628                           ;lcd.c: 74: Lcd_Cmd(0x03);
  2629   001ACC  0E03               	movlw	3
  2630   001ACE  ECD1  F011         	call	_Lcd_Cmd
  2631                           
  2632                           ;lcd.c: 75: _delay((unsigned long)((5)*(8000000/4000.0)));
  2633   001AD2  0E0D               	movlw	13
  2634   001AD4  0100               	movlb	0	; () banked
  2635   001AD6  6F8F               	movwf	??_Lcd_Init& (0+255),b
  2636   001AD8  0EFB               	movlw	251
  2637   001ADA                     u3747:
  2638   001ADA  2EE8               	decfsz	wreg,f,c
  2639   001ADC  D7FE               	bra	u3747
  2640   001ADE  2F8F               	decfsz	??_Lcd_Init& (0+255),f,b
  2641   001AE0  D7FC               	bra	u3747
  2642   001AE2  D000               	nop2	
  2643                           
  2644                           ;lcd.c: 76: Lcd_Cmd(0x03);
  2645   001AE4  0E03               	movlw	3
  2646   001AE6  ECD1  F011         	call	_Lcd_Cmd
  2647                           
  2648                           ;lcd.c: 77: _delay((unsigned long)((11)*(8000000/4000.0)));
  2649   001AEA  0E1D               	movlw	29
  2650   001AEC  0100               	movlb	0	; () banked
  2651   001AEE  6F8F               	movwf	??_Lcd_Init& (0+255),b
  2652   001AF0  0E91               	movlw	145
  2653   001AF2                     u3757:
  2654   001AF2  2EE8               	decfsz	wreg,f,c
  2655   001AF4  D7FE               	bra	u3757
  2656   001AF6  2F8F               	decfsz	??_Lcd_Init& (0+255),f,b
  2657   001AF8  D7FC               	bra	u3757
  2658                           
  2659                           ;lcd.c: 78: Lcd_Cmd(0x03);
  2660   001AFA  0E03               	movlw	3
  2661   001AFC  ECD1  F011         	call	_Lcd_Cmd
  2662                           
  2663                           ;lcd.c: 79: Lcd_Cmd(0x02);
  2664   001B00  0E02               	movlw	2
  2665   001B02  ECD1  F011         	call	_Lcd_Cmd
  2666                           
  2667                           ;lcd.c: 80: Lcd_Cmd(0x02);
  2668   001B06  0E02               	movlw	2
  2669   001B08  ECD1  F011         	call	_Lcd_Cmd
  2670                           
  2671                           ;lcd.c: 81: Lcd_Cmd(0x08);
  2672   001B0C  0E08               	movlw	8
  2673   001B0E  ECD1  F011         	call	_Lcd_Cmd
  2674                           
  2675                           ;lcd.c: 82: Lcd_Cmd(0x00);
  2676   001B12  0E00               	movlw	0
  2677   001B14  ECD1  F011         	call	_Lcd_Cmd
  2678                           
  2679                           ;lcd.c: 83: Lcd_Cmd(0x0C);
  2680   001B18  0E0C               	movlw	12
  2681   001B1A  ECD1  F011         	call	_Lcd_Cmd
  2682                           
  2683                           ;lcd.c: 84: Lcd_Cmd(0x00);
  2684   001B1E  0E00               	movlw	0
  2685   001B20  ECD1  F011         	call	_Lcd_Cmd
  2686                           
  2687                           ;lcd.c: 85: Lcd_Cmd(0x06);
  2688   001B24  0E06               	movlw	6
  2689   001B26  ECD1  F011         	call	_Lcd_Cmd
  2690                           
  2691                           ;lcd.c: 86: Lcd_Clear();
  2692   001B2A  EC63  F012         	call	_Lcd_Clear	;wreg free
  2693   001B2E  0012               	return		;funcret
  2694   001B30                     __end_of_Lcd_Init:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function _Lcd_CGRAM_Init *****************
  2698 ;; Defined at:
  2699 ;;		line 186 in file "lcd.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2713 ;;      Params:         0       0       0       0       0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2716 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2717 ;;Total ram usage:        0 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 9
  2720 ;; This function calls:
  2721 ;;		_Lcd_Cmd
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text9
  2728   00249C                     __ptext9:
  2729                           	callstack 0
  2730   00249C                     _Lcd_CGRAM_Init:
  2731                           	callstack 21
  2732                           
  2733                           ;lcd.c: 188: Lcd_Cmd(0x04);
  2734                           
  2735                           ;incstack = 0
  2736   00249C  0E04               	movlw	4
  2737   00249E  ECD1  F011         	call	_Lcd_Cmd
  2738                           
  2739                           ;lcd.c: 189: Lcd_Cmd(0x00);
  2740   0024A2  0E00               	movlw	0
  2741   0024A4  ECD1  F011         	call	_Lcd_Cmd
  2742   0024A8  0012               	return		;funcret
  2743   0024AA                     __end_of_Lcd_CGRAM_Init:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function _Lcd_CGRAM_CreateChar *****************
  2747 ;; Defined at:
  2748 ;;		line 147 in file "lcd.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  add             1    wreg     unsigned char 
  2751 ;;  chardata        1    4[BANK0 ] PTR const unsigned char 
  2752 ;;		 -> figura_5(8), figura_4(8), figura_3(8), figura_2(8), 
  2753 ;;		 -> figura_1(8), 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  add             1    6[BANK0 ] unsigned char 
  2756 ;;  i               1   14[BANK0 ] unsigned char 
  2757 ;;  i               1   13[BANK0 ] unsigned char 
  2758 ;;  i               1   12[BANK0 ] unsigned char 
  2759 ;;  i               1   11[BANK0 ] unsigned char 
  2760 ;;  i               1   10[BANK0 ] unsigned char 
  2761 ;;  i               1    9[BANK0 ] unsigned char 
  2762 ;;  i               1    8[BANK0 ] unsigned char 
  2763 ;;  i               1    7[BANK0 ] unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 3F/0
  2770 ;;		On exit  : 3F/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2773 ;;      Params:         0       1       0       0       0       0       0       0       0
  2774 ;;      Locals:         0       9       0       0       0       0       0       0       0
  2775 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2776 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2777 ;;Total ram usage:       11 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; Hardware stack levels required when called: 9
  2780 ;; This function calls:
  2781 ;;		_Lcd_Write_Char
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text10
  2788   000E7E                     __ptext10:
  2789                           	callstack 0
  2790   000E7E                     _Lcd_CGRAM_CreateChar:
  2791                           	callstack 21
  2792                           
  2793                           ;incstack = 0
  2794                           ;Lcd_CGRAM_CreateChar@add stored from wreg
  2795   000E7E  6F92               	movwf	Lcd_CGRAM_CreateChar@add& (0+255),b
  2796                           
  2797                           ;lcd.c: 149: switch(add)
  2798   000E80  D0A6               	goto	l3649
  2799   000E82                     l3551:
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;lcd.c: 152: for(char i=0; i<=7; i++)
  2803   000E82  0E00               	movlw	0
  2804   000E84  6F93               	movwf	Lcd_CGRAM_CreateChar@i& (0+255),b
  2805   000E86                     l3557:
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;lcd.c: 153: Lcd_Write_Char(chardata[i]);
  2809   000E86  5190               	movf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  2810   000E88  2593               	addwf	Lcd_CGRAM_CreateChar@i& (0+255),w,b
  2811   000E8A  6F91               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  2812   000E8C  C091  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2813   000E90                     	if	1	;There is more than 1 active tblptr byte
  2814   000E90  0E08               	movlw	high __smallconst
  2815   000E92  6EF7               	movwf	tblptrh,c
  2816   000E94                     	endif
  2817   000E94                     	if	0	;tblptru may be non-zero
  2818   000E94                     	endif
  2819   000E94                     	if	0	;tblptru may be non-zero
  2820   000E94                     	endif
  2821   000E94  0008               	tblrd		*
  2822   000E96  50F5               	movf	tablat,w,c
  2823   000E98  ECB2  F010         	call	_Lcd_Write_Char
  2824   000E9C  0100               	movlb	0	; () banked
  2825   000E9E  2B93               	incf	Lcd_CGRAM_CreateChar@i& (0+255),f,b
  2826                           
  2827                           ; BSR set to: 0
  2828   000EA0  0E07               	movlw	7
  2829   000EA2  6593               	cpfsgt	Lcd_CGRAM_CreateChar@i& (0+255),b
  2830   000EA4  D7F0               	goto	l3557
  2831   000EA6  0012               	return	
  2832   000EA8                     l3563:
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;lcd.c: 156: for(char i=8; i<=15; i++)
  2836   000EA8  0E08               	movlw	8
  2837   000EAA  6F94               	movwf	Lcd_CGRAM_CreateChar@i_243& (0+255),b
  2838   000EAC                     l3569:
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;lcd.c: 157: Lcd_Write_Char(chardata[i-8]);
  2842   000EAC  5190               	movf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  2843   000EAE  2594               	addwf	Lcd_CGRAM_CreateChar@i_243& (0+255),w,b
  2844   000EB0  6F91               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  2845   000EB2  0EF8               	movlw	-8
  2846   000EB4  2791               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),f,b
  2847   000EB6  C091  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2848   000EBA                     	if	1	;There is more than 1 active tblptr byte
  2849   000EBA  0E08               	movlw	high __smallconst
  2850   000EBC  6EF7               	movwf	tblptrh,c
  2851   000EBE                     	endif
  2852   000EBE                     	if	0	;tblptru may be non-zero
  2853   000EBE                     	endif
  2854   000EBE                     	if	0	;tblptru may be non-zero
  2855   000EBE                     	endif
  2856   000EBE  0008               	tblrd		*
  2857   000EC0  50F5               	movf	tablat,w,c
  2858   000EC2  ECB2  F010         	call	_Lcd_Write_Char
  2859   000EC6  0100               	movlb	0	; () banked
  2860   000EC8  2B94               	incf	Lcd_CGRAM_CreateChar@i_243& (0+255),f,b
  2861                           
  2862                           ; BSR set to: 0
  2863   000ECA  0E0F               	movlw	15
  2864   000ECC  6594               	cpfsgt	Lcd_CGRAM_CreateChar@i_243& (0+255),b
  2865   000ECE  D7EE               	goto	l3569
  2866   000ED0  0012               	return	
  2867   000ED2                     l3575:
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;lcd.c: 160: for(char i=16; i<=23; i++)
  2871   000ED2  0E10               	movlw	16
  2872   000ED4  6F95               	movwf	Lcd_CGRAM_CreateChar@i_244& (0+255),b
  2873   000ED6                     l3581:
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;lcd.c: 161: Lcd_Write_Char(chardata[i-16]);
  2877   000ED6  5190               	movf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  2878   000ED8  2595               	addwf	Lcd_CGRAM_CreateChar@i_244& (0+255),w,b
  2879   000EDA  6F91               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  2880   000EDC  0EF0               	movlw	-16
  2881   000EDE  2791               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),f,b
  2882   000EE0  C091  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2883   000EE4                     	if	1	;There is more than 1 active tblptr byte
  2884   000EE4  0E08               	movlw	high __smallconst
  2885   000EE6  6EF7               	movwf	tblptrh,c
  2886   000EE8                     	endif
  2887   000EE8                     	if	0	;tblptru may be non-zero
  2888   000EE8                     	endif
  2889   000EE8                     	if	0	;tblptru may be non-zero
  2890   000EE8                     	endif
  2891   000EE8  0008               	tblrd		*
  2892   000EEA  50F5               	movf	tablat,w,c
  2893   000EEC  ECB2  F010         	call	_Lcd_Write_Char
  2894   000EF0  0100               	movlb	0	; () banked
  2895   000EF2  2B95               	incf	Lcd_CGRAM_CreateChar@i_244& (0+255),f,b
  2896                           
  2897                           ; BSR set to: 0
  2898   000EF4  0E17               	movlw	23
  2899   000EF6  6595               	cpfsgt	Lcd_CGRAM_CreateChar@i_244& (0+255),b
  2900   000EF8  D7EE               	goto	l3581
  2901   000EFA  0012               	return	
  2902   000EFC                     l3587:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;lcd.c: 164: for(char i=24; i<=31; i++)
  2906   000EFC  0E18               	movlw	24
  2907   000EFE  6F96               	movwf	Lcd_CGRAM_CreateChar@i_245& (0+255),b
  2908   000F00                     l3593:
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;lcd.c: 165: Lcd_Write_Char(chardata[i-24]);
  2912   000F00  5190               	movf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  2913   000F02  2596               	addwf	Lcd_CGRAM_CreateChar@i_245& (0+255),w,b
  2914   000F04  6F91               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  2915   000F06  0EE8               	movlw	-24
  2916   000F08  2791               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),f,b
  2917   000F0A  C091  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2918   000F0E                     	if	1	;There is more than 1 active tblptr byte
  2919   000F0E  0E08               	movlw	high __smallconst
  2920   000F10  6EF7               	movwf	tblptrh,c
  2921   000F12                     	endif
  2922   000F12                     	if	0	;tblptru may be non-zero
  2923   000F12                     	endif
  2924   000F12                     	if	0	;tblptru may be non-zero
  2925   000F12                     	endif
  2926   000F12  0008               	tblrd		*
  2927   000F14  50F5               	movf	tablat,w,c
  2928   000F16  ECB2  F010         	call	_Lcd_Write_Char
  2929   000F1A  0100               	movlb	0	; () banked
  2930   000F1C  2B96               	incf	Lcd_CGRAM_CreateChar@i_245& (0+255),f,b
  2931                           
  2932                           ; BSR set to: 0
  2933   000F1E  0E1F               	movlw	31
  2934   000F20  6596               	cpfsgt	Lcd_CGRAM_CreateChar@i_245& (0+255),b
  2935   000F22  D7EE               	goto	l3593
  2936   000F24  0012               	return	
  2937   000F26                     l3599:
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;lcd.c: 168: for(char i=32; i<=39; i++)
  2941   000F26  0E20               	movlw	32
  2942   000F28  6F97               	movwf	Lcd_CGRAM_CreateChar@i_246& (0+255),b
  2943   000F2A                     l3605:
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;lcd.c: 169: Lcd_Write_Char(chardata[i-32]);
  2947   000F2A  5190               	movf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  2948   000F2C  2597               	addwf	Lcd_CGRAM_CreateChar@i_246& (0+255),w,b
  2949   000F2E  6F91               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  2950   000F30  0EE0               	movlw	-32
  2951   000F32  2791               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),f,b
  2952   000F34  C091  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2953   000F38                     	if	1	;There is more than 1 active tblptr byte
  2954   000F38  0E08               	movlw	high __smallconst
  2955   000F3A  6EF7               	movwf	tblptrh,c
  2956   000F3C                     	endif
  2957   000F3C                     	if	0	;tblptru may be non-zero
  2958   000F3C                     	endif
  2959   000F3C                     	if	0	;tblptru may be non-zero
  2960   000F3C                     	endif
  2961   000F3C  0008               	tblrd		*
  2962   000F3E  50F5               	movf	tablat,w,c
  2963   000F40  ECB2  F010         	call	_Lcd_Write_Char
  2964   000F44  0100               	movlb	0	; () banked
  2965   000F46  2B97               	incf	Lcd_CGRAM_CreateChar@i_246& (0+255),f,b
  2966                           
  2967                           ; BSR set to: 0
  2968   000F48  0E27               	movlw	39
  2969   000F4A  6597               	cpfsgt	Lcd_CGRAM_CreateChar@i_246& (0+255),b
  2970   000F4C  D7EE               	goto	l3605
  2971   000F4E  0012               	return	
  2972   000F50                     l3611:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;lcd.c: 172: for(char i=40; i<=47; i++)
  2976   000F50  0E28               	movlw	40
  2977   000F52  6F98               	movwf	Lcd_CGRAM_CreateChar@i_247& (0+255),b
  2978   000F54                     l3617:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;lcd.c: 173: Lcd_Write_Char(chardata[i-40]);
  2982   000F54  5190               	movf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  2983   000F56  2598               	addwf	Lcd_CGRAM_CreateChar@i_247& (0+255),w,b
  2984   000F58  6F91               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  2985   000F5A  0ED8               	movlw	-40
  2986   000F5C  2791               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),f,b
  2987   000F5E  C091  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2988   000F62                     	if	1	;There is more than 1 active tblptr byte
  2989   000F62  0E08               	movlw	high __smallconst
  2990   000F64  6EF7               	movwf	tblptrh,c
  2991   000F66                     	endif
  2992   000F66                     	if	0	;tblptru may be non-zero
  2993   000F66                     	endif
  2994   000F66                     	if	0	;tblptru may be non-zero
  2995   000F66                     	endif
  2996   000F66  0008               	tblrd		*
  2997   000F68  50F5               	movf	tablat,w,c
  2998   000F6A  ECB2  F010         	call	_Lcd_Write_Char
  2999   000F6E  0100               	movlb	0	; () banked
  3000   000F70  2B98               	incf	Lcd_CGRAM_CreateChar@i_247& (0+255),f,b
  3001                           
  3002                           ; BSR set to: 0
  3003   000F72  0E2F               	movlw	47
  3004   000F74  6598               	cpfsgt	Lcd_CGRAM_CreateChar@i_247& (0+255),b
  3005   000F76  D7EE               	goto	l3617
  3006   000F78  0012               	return	
  3007   000F7A                     l3623:
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;lcd.c: 176: for(char i=48; i<=55; i++)
  3011   000F7A  0E30               	movlw	48
  3012   000F7C  6F99               	movwf	Lcd_CGRAM_CreateChar@i_248& (0+255),b
  3013   000F7E                     l3629:
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;lcd.c: 177: Lcd_Write_Char(chardata[i-48]);
  3017   000F7E  5190               	movf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  3018   000F80  2599               	addwf	Lcd_CGRAM_CreateChar@i_248& (0+255),w,b
  3019   000F82  6F91               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  3020   000F84  0ED0               	movlw	-48
  3021   000F86  2791               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),f,b
  3022   000F88  C091  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  3023   000F8C                     	if	1	;There is more than 1 active tblptr byte
  3024   000F8C  0E08               	movlw	high __smallconst
  3025   000F8E  6EF7               	movwf	tblptrh,c
  3026   000F90                     	endif
  3027   000F90                     	if	0	;tblptru may be non-zero
  3028   000F90                     	endif
  3029   000F90                     	if	0	;tblptru may be non-zero
  3030   000F90                     	endif
  3031   000F90  0008               	tblrd		*
  3032   000F92  50F5               	movf	tablat,w,c
  3033   000F94  ECB2  F010         	call	_Lcd_Write_Char
  3034   000F98  0100               	movlb	0	; () banked
  3035   000F9A  2B99               	incf	Lcd_CGRAM_CreateChar@i_248& (0+255),f,b
  3036                           
  3037                           ; BSR set to: 0
  3038   000F9C  0E37               	movlw	55
  3039   000F9E  6599               	cpfsgt	Lcd_CGRAM_CreateChar@i_248& (0+255),b
  3040   000FA0  D7EE               	goto	l3629
  3041   000FA2  0012               	return	
  3042   000FA4                     l3635:
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;lcd.c: 180: for(char i=56; i<=63; i++)
  3046   000FA4  0E38               	movlw	56
  3047   000FA6  6F9A               	movwf	Lcd_CGRAM_CreateChar@i_249& (0+255),b
  3048   000FA8                     l3641:
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;lcd.c: 181: Lcd_Write_Char(chardata[i-56]);
  3052   000FA8  5190               	movf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  3053   000FAA  259A               	addwf	Lcd_CGRAM_CreateChar@i_249& (0+255),w,b
  3054   000FAC  6F91               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  3055   000FAE  0EC8               	movlw	-56
  3056   000FB0  2791               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),f,b
  3057   000FB2  C091  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  3058   000FB6                     	if	1	;There is more than 1 active tblptr byte
  3059   000FB6  0E08               	movlw	high __smallconst
  3060   000FB8  6EF7               	movwf	tblptrh,c
  3061   000FBA                     	endif
  3062   000FBA                     	if	0	;tblptru may be non-zero
  3063   000FBA                     	endif
  3064   000FBA                     	if	0	;tblptru may be non-zero
  3065   000FBA                     	endif
  3066   000FBA  0008               	tblrd		*
  3067   000FBC  50F5               	movf	tablat,w,c
  3068   000FBE  ECB2  F010         	call	_Lcd_Write_Char
  3069   000FC2  0100               	movlb	0	; () banked
  3070   000FC4  2B9A               	incf	Lcd_CGRAM_CreateChar@i_249& (0+255),f,b
  3071                           
  3072                           ; BSR set to: 0
  3073   000FC6  0E3F               	movlw	63
  3074   000FC8  659A               	cpfsgt	Lcd_CGRAM_CreateChar@i_249& (0+255),b
  3075   000FCA  D7EE               	goto	l3641
  3076   000FCC  0012               	return	
  3077   000FCE                     l3649:
  3078   000FCE  0100               	movlb	0	; () banked
  3079   000FD0  5192               	movf	Lcd_CGRAM_CreateChar@add& (0+255),w,b
  3080                           
  3081                           ; Switch size 1, requested type "simple"
  3082                           ; Number of cases is 8, Range of values is 0 to 7
  3083                           ; switch strategies available:
  3084                           ; Name         Instructions Cycles
  3085                           ; simple_byte           25    13 (average)
  3086                           ;	Chosen strategy is simple_byte
  3087   000FD2  0A00               	xorlw	0	; case 0
  3088   000FD4  B4D8               	btfsc	status,2,c
  3089   000FD6  D755               	goto	l3551
  3090   000FD8  0A01               	xorlw	1	; case 1
  3091   000FDA  B4D8               	btfsc	status,2,c
  3092   000FDC  D765               	goto	l3563
  3093   000FDE  0A03               	xorlw	3	; case 2
  3094   000FE0  B4D8               	btfsc	status,2,c
  3095   000FE2  D777               	goto	l3575
  3096   000FE4  0A01               	xorlw	1	; case 3
  3097   000FE6  B4D8               	btfsc	status,2,c
  3098   000FE8  D789               	goto	l3587
  3099   000FEA  0A07               	xorlw	7	; case 4
  3100   000FEC  B4D8               	btfsc	status,2,c
  3101   000FEE  D79B               	goto	l3599
  3102   000FF0  0A01               	xorlw	1	; case 5
  3103   000FF2  B4D8               	btfsc	status,2,c
  3104   000FF4  D7AD               	goto	l3611
  3105   000FF6  0A03               	xorlw	3	; case 6
  3106   000FF8  B4D8               	btfsc	status,2,c
  3107   000FFA  D7BF               	goto	l3623
  3108   000FFC  0A01               	xorlw	1	; case 7
  3109   000FFE  A4D8               	btfss	status,2,c
  3110   001000  0012               	return	
  3111   001002  D7D0               	goto	l3635
  3112   001004                     __end_of_Lcd_CGRAM_CreateChar:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _Lcd_CGRAM_Close *****************
  3116 ;; Defined at:
  3117 ;;		line 192 in file "lcd.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 3F/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3134 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 9
  3138 ;; This function calls:
  3139 ;;		_Lcd_Cmd
  3140 ;; This function is called by:
  3141 ;;		_main
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text11
  3146   0024AA                     __ptext11:
  3147                           	callstack 0
  3148   0024AA                     _Lcd_CGRAM_Close:
  3149                           	callstack 21
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;lcd.c: 194: Lcd_Cmd(0x00);
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;incstack = 0
  3156   0024AA  0E00               	movlw	0
  3157   0024AC  ECD1  F011         	call	_Lcd_Cmd
  3158                           
  3159                           ;lcd.c: 195: Lcd_Cmd(0x02);
  3160   0024B0  0E02               	movlw	2
  3161   0024B2  ECD1  F011         	call	_Lcd_Cmd
  3162   0024B6  0012               	return		;funcret
  3163   0024B8                     __end_of_Lcd_CGRAM_Close:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _ContarReal *****************
  3167 ;; Defined at:
  3168 ;;		line 278 in file "main.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 3F/0
  3179 ;;		On exit  : 3F/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3184 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3185 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3186 ;;Total ram usage:        2 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 11
  3189 ;; This function calls:
  3190 ;;		___awdiv
  3191 ;;		___awmod
  3192 ;;		___wmul
  3193 ;;		_escenario2
  3194 ;;		_escenario3
  3195 ;;		_vaciar
  3196 ;; This function is called by:
  3197 ;;		_main
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text12
  3202   00112A                     __ptext12:
  3203                           	callstack 0
  3204   00112A                     _ContarReal:
  3205                           	callstack 19
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;main.c: 279: cantidad = (decena * 10) + unidad;
  3209                           
  3210                           ;incstack = 0
  3211   00112A  C0C1  F08C         	movff	_decena,___wmul@multiplier
  3212   00112E  C0C2  F08D         	movff	_decena+1,___wmul@multiplier+1
  3213   001132  0E00               	movlw	0
  3214   001134  6F8F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3215   001136  0E0A               	movlw	10
  3216   001138  6F8E               	movwf	___wmul@multiplicand& (0+255),b
  3217   00113A  ECE4  F011         	call	___wmul	;wreg free
  3218   00113E  51BF               	movf	_unidad& (0+255),w,b
  3219   001140  258C               	addwf	?___wmul& (0+255),w,b
  3220   001142  6FBD               	movwf	_cantidad& (0+255),b
  3221   001144  51C0               	movf	(_unidad+1)& (0+255),w,b
  3222   001146  218D               	addwfc	(?___wmul+1)& (0+255),w,b
  3223   001148  6FBE               	movwf	(_cantidad+1)& (0+255),b
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;main.c: 280: contador++;
  3227   00114A  4BBB               	infsnz	_contador& (0+255),f,b
  3228   00114C  2BBC               	incf	(_contador+1)& (0+255),f,b
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;main.c: 281: cantidadResta = cantidad - contador + 1;
  3232   00114E  51BB               	movf	_contador& (0+255),w,b
  3233   001150  5DBD               	subwf	_cantidad& (0+255),w,b
  3234   001152  6F94               	movwf	??_ContarReal& (0+255),b
  3235   001154  51BC               	movf	(_contador+1)& (0+255),w,b
  3236   001156  59BE               	subwfb	(_cantidad+1)& (0+255),w,b
  3237   001158  6F95               	movwf	(??_ContarReal+1)& (0+255),b
  3238   00115A  0E01               	movlw	1
  3239   00115C  2594               	addwf	??_ContarReal& (0+255),w,b
  3240   00115E  6FB9               	movwf	_cantidadResta& (0+255),b
  3241   001160  0E00               	movlw	0
  3242   001162  2195               	addwfc	(??_ContarReal+1)& (0+255),w,b
  3243   001164  6FBA               	movwf	(_cantidadResta+1)& (0+255),b
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;main.c: 282: cantidadRestaUnidad = 0b00110000 + cantidadResta % 10;
  3247   001166  C0B9  F08C         	movff	_cantidadResta,___awmod@dividend
  3248   00116A  C0BA  F08D         	movff	_cantidadResta+1,___awmod@dividend+1
  3249   00116E  0E00               	movlw	0
  3250   001170  6F8F               	movwf	(___awmod@divisor+1)& (0+255),b
  3251   001172  0E0A               	movlw	10
  3252   001174  6F8E               	movwf	___awmod@divisor& (0+255),b
  3253   001176  EC97  F00E         	call	___awmod	;wreg free
  3254   00117A  0E30               	movlw	48
  3255   00117C  258C               	addwf	?___awmod& (0+255),w,b
  3256   00117E  6FB7               	movwf	_cantidadRestaUnidad& (0+255),b
  3257   001180  0E00               	movlw	0
  3258   001182  218D               	addwfc	(?___awmod+1)& (0+255),w,b
  3259   001184  6FB8               	movwf	(_cantidadRestaUnidad+1)& (0+255),b
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;main.c: 283: cantidadRestaDecena = 0b00110000 + cantidadResta / 10;
  3263   001186  C0B9  F08C         	movff	_cantidadResta,___awdiv@dividend
  3264   00118A  C0BA  F08D         	movff	_cantidadResta+1,___awdiv@dividend+1
  3265   00118E  0E00               	movlw	0
  3266   001190  6F8F               	movwf	(___awdiv@divisor+1)& (0+255),b
  3267   001192  0E0A               	movlw	10
  3268   001194  6F8E               	movwf	___awdiv@divisor& (0+255),b
  3269   001196  EC98  F00D         	call	___awdiv	;wreg free
  3270   00119A  0E30               	movlw	48
  3271   00119C  258C               	addwf	?___awdiv& (0+255),w,b
  3272   00119E  6FB5               	movwf	_cantidadRestaDecena& (0+255),b
  3273   0011A0  0E00               	movlw	0
  3274   0011A2  218D               	addwfc	(?___awdiv+1)& (0+255),w,b
  3275   0011A4  6FB6               	movwf	(_cantidadRestaDecena+1)& (0+255),b
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;main.c: 284: contadorUnidad = (contador - 1) % 10;
  3279   0011A6  0EFF               	movlw	255
  3280   0011A8  25BB               	addwf	_contador& (0+255),w,b
  3281   0011AA  6F8C               	movwf	___awmod@dividend& (0+255),b
  3282   0011AC  0EFF               	movlw	255
  3283   0011AE  21BC               	addwfc	(_contador+1)& (0+255),w,b
  3284   0011B0  6F8D               	movwf	(___awmod@dividend+1)& (0+255),b
  3285   0011B2  0E00               	movlw	0
  3286   0011B4  6F8F               	movwf	(___awmod@divisor+1)& (0+255),b
  3287   0011B6  0E0A               	movlw	10
  3288   0011B8  6F8E               	movwf	___awmod@divisor& (0+255),b
  3289   0011BA  EC97  F00E         	call	___awmod	;wreg free
  3290   0011BE  C08C  F0B3         	movff	?___awmod,_contadorUnidad
  3291   0011C2  C08D  F0B4         	movff	?___awmod+1,_contadorUnidad+1
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;main.c: 285: contadorDecena = (contador - 1) / 10;
  3295   0011C6  0EFF               	movlw	255
  3296   0011C8  25BB               	addwf	_contador& (0+255),w,b
  3297   0011CA  6F8C               	movwf	___awdiv@dividend& (0+255),b
  3298   0011CC  0EFF               	movlw	255
  3299   0011CE  21BC               	addwfc	(_contador+1)& (0+255),w,b
  3300   0011D0  6F8D               	movwf	(___awdiv@dividend+1)& (0+255),b
  3301   0011D2  0E00               	movlw	0
  3302   0011D4  6F8F               	movwf	(___awdiv@divisor+1)& (0+255),b
  3303   0011D6  0E0A               	movlw	10
  3304   0011D8  6F8E               	movwf	___awdiv@divisor& (0+255),b
  3305   0011DA  EC98  F00D         	call	___awdiv	;wreg free
  3306   0011DE  C08C  F0B1         	movff	?___awdiv,_contadorDecena
  3307   0011E2  C08D  F0B2         	movff	?___awdiv+1,_contadorDecena+1
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;main.c: 287: LATD = contadorUnidad;
  3311   0011E6  C0B3  FF8C         	movff	_contadorUnidad,3980	;volatile
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;main.c: 288: LATE = color[contadorDecena];
  3315   0011EA  51B1               	movf	_contadorDecena& (0+255),w,b
  3316   0011EC  0D02               	mullw	2
  3317   0011EE  50F3               	movf	243,w,c
  3318   0011F0  0F60               	addlw	low _color
  3319   0011F2  6ED9               	movwf	fsr2l,c
  3320   0011F4  6ADA               	clrf	fsr2h,c
  3321   0011F6  50DF               	movf	indf2,w,c
  3322   0011F8  6E8D               	movwf	141,c	;volatile
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;main.c: 289: escenario2();
  3326   0011FA  ECBC  F00C         	call	_escenario2	;wreg free
  3327                           
  3328                           ;main.c: 290: _delay((unsigned long)((1000)*(8000000/4000.0)));
  3329   0011FE  0E0B               	movlw	11
  3330   001200  0100               	movlb	0	; () banked
  3331   001202  6F95               	movwf	(??_ContarReal+1)& (0+255),b
  3332   001204  0E26               	movlw	38
  3333   001206  6F94               	movwf	??_ContarReal& (0+255),b
  3334   001208  0E5D               	movlw	93
  3335   00120A                     u3767:
  3336   00120A  2EE8               	decfsz	wreg,f,c
  3337   00120C  D7FE               	bra	u3767
  3338   00120E  2F94               	decfsz	??_ContarReal& (0+255),f,b
  3339   001210  D7FC               	bra	u3767
  3340   001212  2F95               	decfsz	(??_ContarReal+1)& (0+255),f,b
  3341   001214  D7FA               	bra	u3767
  3342   001216  D000               	nop2	
  3343                           
  3344                           ;main.c: 291: if (!cantidadResta) {
  3345   001218  0100               	movlb	0	; () banked
  3346   00121A  51B9               	movf	_cantidadResta& (0+255),w,b
  3347   00121C  11BA               	iorwf	(_cantidadResta+1)& (0+255),w,b
  3348   00121E  A4D8               	btfss	status,2,c
  3349   001220  0012               	return	
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;main.c: 292: vaciar();
  3353   001222  EC50  F010         	call	_vaciar	;wreg free
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;main.c: 293: escenario3();
  3357   001226  ECF0  F010         	call	_escenario3	;wreg free
  3358                           
  3359                           ; BSR set to: 0
  3360   00122A  0012               	return		;funcret
  3361   00122C                     __end_of_ContarReal:
  3362                           	callstack 0
  3363                           
  3364 ;; *************** function _vaciar *****************
  3365 ;; Defined at:
  3366 ;;		line 298 in file "main.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0
  3375 ;; Tracked objects:
  3376 ;;		On entry : 3F/0
  3377 ;;		On exit  : 3F/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3380 ;;      Params:         0       0       0       0       0       0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3383 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3384 ;;Total ram usage:        0 bytes
  3385 ;; Hardware stack levels used: 1
  3386 ;; Hardware stack levels required when called: 7
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_ContarReal
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text13
  3395   0020A0                     __ptext13:
  3396                           	callstack 0
  3397   0020A0                     _vaciar:
  3398                           	callstack 22
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;main.c: 299: unidad = 0;
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;incstack = 0
  3405   0020A0  0E00               	movlw	0
  3406   0020A2  6FC0               	movwf	(_unidad+1)& (0+255),b
  3407   0020A4  0E00               	movlw	0
  3408   0020A6  6FBF               	movwf	_unidad& (0+255),b
  3409                           
  3410                           ;main.c: 300: unidad = 0;
  3411   0020A8  0E00               	movlw	0
  3412   0020AA  6FC0               	movwf	(_unidad+1)& (0+255),b
  3413   0020AC  0E00               	movlw	0
  3414   0020AE  6FBF               	movwf	_unidad& (0+255),b
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;main.c: 301: cantidadRestaUnidad = 0b00110000 + unidad;
  3418   0020B0  0E30               	movlw	48
  3419   0020B2  25BF               	addwf	_unidad& (0+255),w,b
  3420   0020B4  6FB7               	movwf	_cantidadRestaUnidad& (0+255),b
  3421   0020B6  0E00               	movlw	0
  3422   0020B8  21C0               	addwfc	(_unidad+1)& (0+255),w,b
  3423   0020BA  6FB8               	movwf	(_cantidadRestaUnidad+1)& (0+255),b
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;main.c: 302: cantidadRestaDecena = 0b00110000 + unidad;
  3427   0020BC  0E30               	movlw	48
  3428   0020BE  25BF               	addwf	_unidad& (0+255),w,b
  3429   0020C0  6FB5               	movwf	_cantidadRestaDecena& (0+255),b
  3430   0020C2  0E00               	movlw	0
  3431   0020C4  21C0               	addwfc	(_unidad+1)& (0+255),w,b
  3432   0020C6  6FB6               	movwf	(_cantidadRestaDecena+1)& (0+255),b
  3433                           
  3434                           ;main.c: 303: LATD = 0;
  3435   0020C8  0E00               	movlw	0
  3436   0020CA  6E8C               	movwf	140,c	;volatile
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;main.c: 304: LATE = color[0];
  3440   0020CC  C060  FF8D         	movff	_color,3981	;volatile
  3441                           
  3442                           ;main.c: 305: contador = 0;
  3443   0020D0  0E00               	movlw	0
  3444   0020D2  6FBC               	movwf	(_contador+1)& (0+255),b
  3445   0020D4  0E00               	movlw	0
  3446   0020D6  6FBB               	movwf	_contador& (0+255),b
  3447                           
  3448                           ;main.c: 306: digito = 1;
  3449   0020D8  0E00               	movlw	0
  3450   0020DA  6E42               	movwf	(_digito+1)^0,c
  3451   0020DC  0E01               	movlw	1
  3452   0020DE  6E41               	movwf	_digito^0,c
  3453                           
  3454                           ; BSR set to: 0
  3455   0020E0  0012               	return		;funcret
  3456   0020E2                     __end_of_vaciar:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _escenario3 *****************
  3460 ;; Defined at:
  3461 ;;		line 217 in file "main.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 3F/0
  3472 ;;		On exit  : 3F/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3478 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 10
  3482 ;; This function calls:
  3483 ;;		_Lcd_Clear
  3484 ;;		_Lcd_NoBlink
  3485 ;;		_Lcd_Set_Cursor
  3486 ;;		_Lcd_Write_String
  3487 ;; This function is called by:
  3488 ;;		_ContarReal
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text14
  3493   0021E0                     __ptext14:
  3494                           	callstack 0
  3495   0021E0                     _escenario3:
  3496                           	callstack 19
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;main.c: 218: menu = 3;
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;incstack = 0
  3503   0021E0  0E00               	movlw	0
  3504   0021E2  6F6D               	movwf	(_menu+1)& (0+255),b
  3505   0021E4  0E03               	movlw	3
  3506   0021E6  6F6C               	movwf	_menu& (0+255),b
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;main.c: 219: Lcd_Clear();
  3510   0021E8  EC63  F012         	call	_Lcd_Clear	;wreg free
  3511                           
  3512                           ;main.c: 220: Lcd_NoBlink();
  3513   0021EC  EC5C  F012         	call	_Lcd_NoBlink	;wreg free
  3514                           
  3515                           ;main.c: 221: Lcd_Set_Cursor(1, 1);
  3516   0021F0  0E01               	movlw	1
  3517   0021F2  0100               	movlb	0	; () banked
  3518   0021F4  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3519   0021F6  0E01               	movlw	1
  3520   0021F8  EC17  F00C         	call	_Lcd_Set_Cursor
  3521                           
  3522                           ;main.c: 222: Lcd_Write_String("Cuenta finalizada");
  3523   0021FC  0E54               	movlw	low STR_11
  3524   0021FE  0100               	movlb	0	; () banked
  3525   002200  6F90               	movwf	Lcd_Write_String@a& (0+255),b
  3526   002202  EC92  F010         	call	_Lcd_Write_String	;wreg free
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;main.c: 223: Lcd_Set_Cursor(2, 13);
  3530   002206  0E0D               	movlw	13
  3531   002208  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3532   00220A  0E02               	movlw	2
  3533   00220C  EC17  F00C         	call	_Lcd_Set_Cursor
  3534                           
  3535                           ;main.c: 224: Lcd_Write_String("A:OK");
  3536   002210  0ECF               	movlw	low STR_12
  3537   002212  0100               	movlb	0	; () banked
  3538   002214  6F90               	movwf	Lcd_Write_String@a& (0+255),b
  3539   002216  EC92  F010         	call	_Lcd_Write_String	;wreg free
  3540                           
  3541                           ; BSR set to: 0
  3542   00221A  0012               	return		;funcret
  3543   00221C                     __end_of_escenario3:
  3544                           	callstack 0
  3545                           
  3546 ;; *************** function _escenario2 *****************
  3547 ;; Defined at:
  3548 ;;		line 195 in file "main.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 3F/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3562 ;;      Params:         0       0       0       0       0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3565 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used: 1
  3568 ;; Hardware stack levels required when called: 10
  3569 ;; This function calls:
  3570 ;;		_Lcd_Clear
  3571 ;;		_Lcd_NoBlink
  3572 ;;		_Lcd_Set_Cursor
  3573 ;;		_Lcd_Write_Char
  3574 ;;		_Lcd_Write_String
  3575 ;; This function is called by:
  3576 ;;		_ContarReal
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text15
  3581   001978                     __ptext15:
  3582                           	callstack 0
  3583   001978                     _escenario2:
  3584                           	callstack 19
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;main.c: 196: menu = 2;
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;incstack = 0
  3591   001978  0E00               	movlw	0
  3592   00197A  6F6D               	movwf	(_menu+1)& (0+255),b
  3593   00197C  0E02               	movlw	2
  3594   00197E  6F6C               	movwf	_menu& (0+255),b
  3595                           
  3596                           ;main.c: 197: mostrar = 1;
  3597   001980  0E00               	movlw	0
  3598   001982  6E4A               	movwf	(_mostrar+1)^0,c
  3599   001984  0E01               	movlw	1
  3600   001986  6E49               	movwf	_mostrar^0,c
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;main.c: 198: Lcd_Clear();
  3604   001988  EC63  F012         	call	_Lcd_Clear	;wreg free
  3605                           
  3606                           ;main.c: 199: Lcd_NoBlink();
  3607   00198C  EC5C  F012         	call	_Lcd_NoBlink	;wreg free
  3608                           
  3609                           ;main.c: 200: Lcd_Set_Cursor(1, 1);
  3610   001990  0E01               	movlw	1
  3611   001992  0100               	movlb	0	; () banked
  3612   001994  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3613   001996  0E01               	movlw	1
  3614   001998  EC17  F00C         	call	_Lcd_Set_Cursor
  3615                           
  3616                           ;main.c: 201: Lcd_Write_String("Faltante:");
  3617   00199C  0EA9               	movlw	low STR_7
  3618   00199E  0100               	movlb	0	; () banked
  3619   0019A0  6F90               	movwf	Lcd_Write_String@a& (0+255),b
  3620   0019A2  EC92  F010         	call	_Lcd_Write_String	;wreg free
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;main.c: 202: Lcd_Write_Char(cantidadRestaDecena);
  3624   0019A6  51B5               	movf	_cantidadRestaDecena& (0+255),w,b
  3625   0019A8  ECB2  F010         	call	_Lcd_Write_Char
  3626                           
  3627                           ;main.c: 203: Lcd_Write_Char(cantidadRestaUnidad);
  3628   0019AC  0100               	movlb	0	; () banked
  3629   0019AE  51B7               	movf	_cantidadRestaUnidad& (0+255),w,b
  3630   0019B0  ECB2  F010         	call	_Lcd_Write_Char
  3631                           
  3632                           ;main.c: 204: Lcd_Set_Cursor(1, 14);
  3633   0019B4  0E0E               	movlw	14
  3634   0019B6  0100               	movlb	0	; () banked
  3635   0019B8  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3636   0019BA  0E01               	movlw	1
  3637   0019BC  EC17  F00C         	call	_Lcd_Set_Cursor
  3638                           
  3639                           ;main.c: 205: Lcd_Write_String("C=");
  3640   0019C0  0ED8               	movlw	low STR_8
  3641   0019C2  0100               	movlb	0	; () banked
  3642   0019C4  6F90               	movwf	Lcd_Write_String@a& (0+255),b
  3643   0019C6  EC92  F010         	call	_Lcd_Write_String	;wreg free
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;main.c: 206: Lcd_Write_Char(4);
  3647   0019CA  0E04               	movlw	4
  3648   0019CC  ECB2  F010         	call	_Lcd_Write_Char
  3649                           
  3650                           ;main.c: 207: Lcd_Set_Cursor(2, 1);
  3651   0019D0  0E01               	movlw	1
  3652   0019D2  0100               	movlb	0	; () banked
  3653   0019D4  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3654   0019D6  0E02               	movlw	2
  3655   0019D8  EC17  F00C         	call	_Lcd_Set_Cursor
  3656                           
  3657                           ;main.c: 208: Lcd_Write_String("Objetivo:");
  3658   0019DC  0EB3               	movlw	low STR_9
  3659   0019DE  0100               	movlb	0	; () banked
  3660   0019E0  6F90               	movwf	Lcd_Write_String@a& (0+255),b
  3661   0019E2  EC92  F010         	call	_Lcd_Write_String	;wreg free
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;main.c: 209: Lcd_Write_Char(0b00110000 + decena);
  3665   0019E6  51C1               	movf	_decena& (0+255),w,b
  3666   0019E8  0F30               	addlw	48
  3667   0019EA  ECB2  F010         	call	_Lcd_Write_Char
  3668                           
  3669                           ;main.c: 210: Lcd_Write_Char(0b00110000 + unidad);
  3670   0019EE  0100               	movlb	0	; () banked
  3671   0019F0  51BF               	movf	_unidad& (0+255),w,b
  3672   0019F2  0F30               	addlw	48
  3673   0019F4  ECB2  F010         	call	_Lcd_Write_Char
  3674                           
  3675                           ;main.c: 211: Lcd_Set_Cursor(2, 14);
  3676   0019F8  0E0E               	movlw	14
  3677   0019FA  0100               	movlb	0	; () banked
  3678   0019FC  6F8F               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3679   0019FE  0E02               	movlw	2
  3680   001A00  EC17  F00C         	call	_Lcd_Set_Cursor
  3681                           
  3682                           ;main.c: 212: Lcd_Write_String("#=X");
  3683   001A04  0ED4               	movlw	low STR_10
  3684   001A06  0100               	movlb	0	; () banked
  3685   001A08  6F90               	movwf	Lcd_Write_String@a& (0+255),b
  3686   001A0A  EC92  F010         	call	_Lcd_Write_String	;wreg free
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;main.c: 213: Lcd_Write_Char(3);
  3690   001A0E  0E03               	movlw	3
  3691   001A10  ECB2  F010         	call	_Lcd_Write_Char
  3692   001A14  0012               	return		;funcret
  3693   001A16                     __end_of_escenario2:
  3694                           	callstack 0
  3695                           
  3696 ;; *************** function _Lcd_Write_String *****************
  3697 ;; Defined at:
  3698 ;;		line 105 in file "lcd.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  a               1    4[BANK0 ] PTR const unsigned char 
  3701 ;;		 -> STR_14(12), STR_13(10), STR_12(5), STR_11(18), 
  3702 ;;		 -> STR_10(4), STR_9(10), STR_8(3), STR_7(10), 
  3703 ;;		 -> STR_6(8), STR_5(17), STR_3(12), STR_2(11), 
  3704 ;;		 -> STR_1(15), 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  i               2    6[BANK0 ] int 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 3F/0
  3713 ;;		On exit  : 3F/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3716 ;;      Params:         0       1       0       0       0       0       0       0       0
  3717 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3718 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3719 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3720 ;;Total ram usage:        4 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; Hardware stack levels required when called: 9
  3723 ;; This function calls:
  3724 ;;		_Lcd_Write_Char
  3725 ;; This function is called by:
  3726 ;;		_main
  3727 ;;		_escenario1
  3728 ;;		_escenario2
  3729 ;;		_escenario3
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text16
  3734   002124                     __ptext16:
  3735                           	callstack 0
  3736   002124                     _Lcd_Write_String:
  3737                           	callstack 20
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;lcd.c: 107: int i;;lcd.c: 108: for(i=0;a[i]!='\0';i++)
  3741                           
  3742                           ;incstack = 0
  3743   002124  0E00               	movlw	0
  3744   002126  6F93               	movwf	(Lcd_Write_String@i+1)& (0+255),b
  3745   002128  0E00               	movlw	0
  3746   00212A  6F92               	movwf	Lcd_Write_String@i& (0+255),b
  3747   00212C  D00E               	goto	l2947
  3748   00212E                     l2943:
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;lcd.c: 109: Lcd_Write_Char(a[i]);
  3752   00212E  5190               	movf	Lcd_Write_String@a& (0+255),w,b
  3753   002130  2592               	addwf	Lcd_Write_String@i& (0+255),w,b
  3754   002132  6F91               	movwf	??_Lcd_Write_String& (0+255),b
  3755   002134  C091  FFF6         	movff	??_Lcd_Write_String,tblptrl
  3756   002138                     	if	1	;There is more than 1 active tblptr byte
  3757   002138  0E08               	movlw	high __smallconst
  3758   00213A  6EF7               	movwf	tblptrh,c
  3759   00213C                     	endif
  3760   00213C                     	if	0	;tblptru may be non-zero
  3761   00213C                     	endif
  3762   00213C                     	if	0	;tblptru may be non-zero
  3763   00213C                     	endif
  3764   00213C  0008               	tblrd		*
  3765   00213E  50F5               	movf	tablat,w,c
  3766   002140  ECB2  F010         	call	_Lcd_Write_Char
  3767   002144  0100               	movlb	0	; () banked
  3768   002146  4B92               	infsnz	Lcd_Write_String@i& (0+255),f,b
  3769   002148  2B93               	incf	(Lcd_Write_String@i+1)& (0+255),f,b
  3770   00214A                     l2947:
  3771                           
  3772                           ; BSR set to: 0
  3773   00214A  5190               	movf	Lcd_Write_String@a& (0+255),w,b
  3774   00214C  2592               	addwf	Lcd_Write_String@i& (0+255),w,b
  3775   00214E  6F91               	movwf	??_Lcd_Write_String& (0+255),b
  3776   002150  C091  FFF6         	movff	??_Lcd_Write_String,tblptrl
  3777   002154                     	if	1	;There is more than 1 active tblptr byte
  3778   002154  0E08               	movlw	high __smallconst
  3779   002156  6EF7               	movwf	tblptrh,c
  3780   002158                     	endif
  3781   002158                     	if	0	;tblptru may be non-zero
  3782   002158                     	endif
  3783   002158                     	if	0	;tblptru may be non-zero
  3784   002158                     	endif
  3785   002158  0008               	tblrd		*
  3786   00215A  50F5               	movf	tablat,w,c
  3787   00215C  0900               	iorlw	0
  3788   00215E  B4D8               	btfsc	status,2,c
  3789   002160  0012               	return	
  3790   002162  D7E5               	goto	l2943
  3791   002164                     __end_of_Lcd_Write_String:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function _Lcd_Write_Char *****************
  3795 ;; Defined at:
  3796 ;;		line 89 in file "lcd.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  a               1    wreg     unsigned char 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  a               1    3[BANK0 ] unsigned char 
  3801 ;;  y               1    2[BANK0 ] unsigned char 
  3802 ;;  temp            1    1[BANK0 ] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3812 ;;      Params:         0       0       0       0       0       0       0       0       0
  3813 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3815 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3816 ;;Total ram usage:        3 bytes
  3817 ;; Hardware stack levels used: 1
  3818 ;; Hardware stack levels required when called: 8
  3819 ;; This function calls:
  3820 ;;		_Lcd_Port
  3821 ;; This function is called by:
  3822 ;;		_Lcd_Write_String
  3823 ;;		_Lcd_CGRAM_CreateChar
  3824 ;;		_main
  3825 ;;		_escenario1
  3826 ;;		_escenario2
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text17
  3831   002164                     __ptext17:
  3832                           	callstack 0
  3833   002164                     _Lcd_Write_Char:
  3834                           	callstack 20
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;incstack = 0
  3838                           ;Lcd_Write_Char@a stored from wreg
  3839   002164  0100               	movlb	0	; () banked
  3840   002166  6F8F               	movwf	Lcd_Write_Char@a& (0+255),b
  3841                           
  3842                           ;lcd.c: 91: char temp,y;;lcd.c: 92: temp = a&0x0F;
  3843   002168  0100               	movlb	0	; () banked
  3844   00216A  518F               	movf	Lcd_Write_Char@a& (0+255),w,b
  3845   00216C  0B0F               	andlw	15
  3846   00216E  6F8D               	movwf	Lcd_Write_Char@temp& (0+255),b
  3847                           
  3848                           ;lcd.c: 93: y = a&0xF0;
  3849   002170  518F               	movf	Lcd_Write_Char@a& (0+255),w,b
  3850   002172  0BF0               	andlw	240
  3851   002174  6F8E               	movwf	Lcd_Write_Char@y& (0+255),b
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;lcd.c: 94: LATAbits.LA3 = 1;
  3855   002176  8689               	bsf	137,3,c	;volatile
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;lcd.c: 95: Lcd_Port(y>>4);
  3859   002178  398E               	swapf	Lcd_Write_Char@y& (0+255),w,b
  3860   00217A  0B0F               	andlw	15
  3861   00217C  EC79  F011         	call	_Lcd_Port
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;lcd.c: 96: LATAbits.LA4 = 1;
  3865   002180  8889               	bsf	137,4,c	;volatile
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;lcd.c: 97: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3869   002182  0E1A               	movlw	26
  3870   002184                     u3777:
  3871   002184  2EE8               	decfsz	wreg,f,c
  3872   002186  D7FE               	bra	u3777
  3873   002188  D000               	nop2	
  3874                           
  3875                           ;lcd.c: 98: LATAbits.LA4 = 0;
  3876   00218A  9889               	bcf	137,4,c	;volatile
  3877                           
  3878                           ;lcd.c: 99: Lcd_Port(temp);
  3879   00218C  0100               	movlb	0	; () banked
  3880   00218E  518D               	movf	Lcd_Write_Char@temp& (0+255),w,b
  3881   002190  EC79  F011         	call	_Lcd_Port
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;lcd.c: 100: LATAbits.LA4 = 1;
  3885   002194  8889               	bsf	137,4,c	;volatile
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;lcd.c: 101: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3889   002196  0E1A               	movlw	26
  3890   002198                     u3787:
  3891   002198  2EE8               	decfsz	wreg,f,c
  3892   00219A  D7FE               	bra	u3787
  3893   00219C  D000               	nop2	
  3894                           
  3895                           ;lcd.c: 102: LATAbits.LA4 = 0;
  3896   00219E  9889               	bcf	137,4,c	;volatile
  3897   0021A0  0012               	return		;funcret
  3898   0021A2                     __end_of_Lcd_Write_Char:
  3899                           	callstack 0
  3900                           
  3901 ;; *************** function _Lcd_Set_Cursor *****************
  3902 ;; Defined at:
  3903 ;;		line 27 in file "lcd.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  a               1    wreg     unsigned char 
  3906 ;;  b               1    3[BANK0 ] unsigned char 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  a               1    4[BANK0 ] unsigned char 
  3909 ;;  temp            1    7[BANK0 ] unsigned char 
  3910 ;;  y               1    6[BANK0 ] unsigned char 
  3911 ;;  z               1    5[BANK0 ] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 3F/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3921 ;;      Params:         0       1       0       0       0       0       0       0       0
  3922 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3924 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3925 ;;Total ram usage:        5 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 9
  3928 ;; This function calls:
  3929 ;;		_Lcd_Cmd
  3930 ;; This function is called by:
  3931 ;;		_main
  3932 ;;		_escenario1
  3933 ;;		_escenario2
  3934 ;;		_escenario3
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text18
  3939   00182E                     __ptext18:
  3940                           	callstack 0
  3941   00182E                     _Lcd_Set_Cursor:
  3942                           	callstack 20
  3943                           
  3944                           ;incstack = 0
  3945                           ;Lcd_Set_Cursor@a stored from wreg
  3946   00182E  6F90               	movwf	Lcd_Set_Cursor@a& (0+255),b
  3947                           
  3948                           ;lcd.c: 29: char temp,z,y;;lcd.c: 30: if(a == 1)
  3949   001830  0100               	movlb	0	; () banked
  3950   001832  0590               	decf	Lcd_Set_Cursor@a& (0+255),w,b
  3951   001834  A4D8               	btfss	status,2,c
  3952   001836  D011               	goto	l2917
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;lcd.c: 31: {;lcd.c: 32: temp = 0x80 + b - 1;
  3956   001838  518F               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  3957   00183A  0F7F               	addlw	127
  3958   00183C  6F93               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  3959                           
  3960                           ;lcd.c: 33: z = temp>>4;
  3961   00183E  3993               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  3962   001840  0B0F               	andlw	15
  3963   001842  6F91               	movwf	Lcd_Set_Cursor@z& (0+255),b
  3964                           
  3965                           ;lcd.c: 34: y = temp & 0x0F;
  3966   001844  5193               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  3967   001846  0B0F               	andlw	15
  3968   001848  6F92               	movwf	Lcd_Set_Cursor@y& (0+255),b
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;lcd.c: 35: Lcd_Cmd(z);
  3972   00184A  5191               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  3973   00184C  ECD1  F011         	call	_Lcd_Cmd
  3974                           
  3975                           ;lcd.c: 36: Lcd_Cmd(y);
  3976   001850  0100               	movlb	0	; () banked
  3977   001852  5192               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  3978   001854  ECD1  F011         	call	_Lcd_Cmd
  3979                           
  3980                           ;lcd.c: 37: }
  3981   001858  0012               	return	
  3982   00185A                     l2917:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;lcd.c: 38: else if(a == 2)
  3986   00185A  0E02               	movlw	2
  3987   00185C  1990               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  3988   00185E  A4D8               	btfss	status,2,c
  3989   001860  D011               	goto	l2925
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;lcd.c: 39: {;lcd.c: 40: temp = 0xC0 + b - 1;
  3993   001862  518F               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  3994   001864  0FBF               	addlw	191
  3995   001866  6F93               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  3996                           
  3997                           ;lcd.c: 41: z = temp>>4;
  3998   001868  3993               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  3999   00186A  0B0F               	andlw	15
  4000   00186C  6F91               	movwf	Lcd_Set_Cursor@z& (0+255),b
  4001                           
  4002                           ;lcd.c: 42: y = temp & 0x0F;
  4003   00186E  5193               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  4004   001870  0B0F               	andlw	15
  4005   001872  6F92               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;lcd.c: 43: Lcd_Cmd(z);
  4009   001874  5191               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4010   001876  ECD1  F011         	call	_Lcd_Cmd
  4011                           
  4012                           ;lcd.c: 44: Lcd_Cmd(y);
  4013   00187A  0100               	movlb	0	; () banked
  4014   00187C  5192               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4015   00187E  ECD1  F011         	call	_Lcd_Cmd
  4016                           
  4017                           ;lcd.c: 45: }
  4018   001882  0012               	return	
  4019   001884                     l2925:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;lcd.c: 46: else if(a == 3)
  4023   001884  0E03               	movlw	3
  4024   001886  1990               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  4025   001888  A4D8               	btfss	status,2,c
  4026   00188A  D011               	goto	l2933
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;lcd.c: 47: {;lcd.c: 48: temp = 0x94 + b - 1;
  4030   00188C  518F               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  4031   00188E  0F93               	addlw	147
  4032   001890  6F93               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  4033                           
  4034                           ;lcd.c: 49: z = temp>>4;
  4035   001892  3993               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  4036   001894  0B0F               	andlw	15
  4037   001896  6F91               	movwf	Lcd_Set_Cursor@z& (0+255),b
  4038                           
  4039                           ;lcd.c: 50: y = temp & 0x0F;
  4040   001898  5193               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  4041   00189A  0B0F               	andlw	15
  4042   00189C  6F92               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;lcd.c: 51: Lcd_Cmd(z);
  4046   00189E  5191               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4047   0018A0  ECD1  F011         	call	_Lcd_Cmd
  4048                           
  4049                           ;lcd.c: 52: Lcd_Cmd(y);
  4050   0018A4  0100               	movlb	0	; () banked
  4051   0018A6  5192               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4052   0018A8  ECD1  F011         	call	_Lcd_Cmd
  4053                           
  4054                           ;lcd.c: 53: }
  4055   0018AC  0012               	return	
  4056   0018AE                     l2933:
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;lcd.c: 54: else if(a == 4)
  4060   0018AE  0E04               	movlw	4
  4061   0018B0  1990               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  4062   0018B2  A4D8               	btfss	status,2,c
  4063   0018B4  0012               	return	
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;lcd.c: 55: {;lcd.c: 56: temp = 0xD4 + b - 1;
  4067   0018B6  518F               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  4068   0018B8  0FD3               	addlw	211
  4069   0018BA  6F93               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  4070                           
  4071                           ;lcd.c: 57: z = temp>>4;
  4072   0018BC  3993               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  4073   0018BE  0B0F               	andlw	15
  4074   0018C0  6F91               	movwf	Lcd_Set_Cursor@z& (0+255),b
  4075                           
  4076                           ;lcd.c: 58: y = temp & 0x0F;
  4077   0018C2  5193               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  4078   0018C4  0B0F               	andlw	15
  4079   0018C6  6F92               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;lcd.c: 59: Lcd_Cmd(z);
  4083   0018C8  5191               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4084   0018CA  ECD1  F011         	call	_Lcd_Cmd
  4085                           
  4086                           ;lcd.c: 60: Lcd_Cmd(y);
  4087   0018CE  0100               	movlb	0	; () banked
  4088   0018D0  5192               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4089   0018D2  ECD1  F011         	call	_Lcd_Cmd
  4090   0018D6  0012               	return	
  4091   0018D8                     __end_of_Lcd_Set_Cursor:
  4092                           	callstack 0
  4093                           
  4094 ;; *************** function _Lcd_NoBlink *****************
  4095 ;; Defined at:
  4096 ;;		line 130 in file "lcd.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;		None
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      void 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4110 ;;      Params:         0       0       0       0       0       0       0       0       0
  4111 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4113 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4114 ;;Total ram usage:        0 bytes
  4115 ;; Hardware stack levels used: 1
  4116 ;; Hardware stack levels required when called: 9
  4117 ;; This function calls:
  4118 ;;		_Lcd_Cmd
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;;		_escenario2
  4122 ;;		_escenario3
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text19
  4127   0024B8                     __ptext19:
  4128                           	callstack 0
  4129   0024B8                     _Lcd_NoBlink:
  4130                           	callstack 21
  4131                           
  4132                           ;lcd.c: 132: Lcd_Cmd(0x00);
  4133                           
  4134                           ;incstack = 0
  4135   0024B8  0E00               	movlw	0
  4136   0024BA  ECD1  F011         	call	_Lcd_Cmd
  4137                           
  4138                           ;lcd.c: 133: Lcd_Cmd(0x0C);
  4139   0024BE  0E0C               	movlw	12
  4140   0024C0  ECD1  F011         	call	_Lcd_Cmd
  4141   0024C4  0012               	return		;funcret
  4142   0024C6                     __end_of_Lcd_NoBlink:
  4143                           	callstack 0
  4144                           
  4145 ;; *************** function _Lcd_Clear *****************
  4146 ;; Defined at:
  4147 ;;		line 21 in file "lcd.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4161 ;;      Params:         0       0       0       0       0       0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4164 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4165 ;;Total ram usage:        0 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; Hardware stack levels required when called: 9
  4168 ;; This function calls:
  4169 ;;		_Lcd_Cmd
  4170 ;; This function is called by:
  4171 ;;		_Lcd_Init
  4172 ;;		_main
  4173 ;;		_escenario1
  4174 ;;		_escenario2
  4175 ;;		_escenario3
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text20
  4180   0024C6                     __ptext20:
  4181                           	callstack 0
  4182   0024C6                     _Lcd_Clear:
  4183                           	callstack 20
  4184                           
  4185                           ;lcd.c: 23: Lcd_Cmd(0);
  4186                           
  4187                           ;incstack = 0
  4188   0024C6  0E00               	movlw	0
  4189   0024C8  ECD1  F011         	call	_Lcd_Cmd
  4190                           
  4191                           ;lcd.c: 24: Lcd_Cmd(1);
  4192   0024CC  0E01               	movlw	1
  4193   0024CE  ECD1  F011         	call	_Lcd_Cmd
  4194   0024D2  0012               	return		;funcret
  4195   0024D4                     __end_of_Lcd_Clear:
  4196                           	callstack 0
  4197                           
  4198 ;; *************** function _Lcd_Cmd *****************
  4199 ;; Defined at:
  4200 ;;		line 12 in file "lcd.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  a               1    wreg     unsigned char 
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  a               1    2[BANK0 ] unsigned char 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  1    wreg      void 
  4207 ;; Registers used:
  4208 ;;		wreg, status,2, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4214 ;;      Params:         0       0       0       0       0       0       0       0       0
  4215 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4216 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4217 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4218 ;;Total ram usage:        2 bytes
  4219 ;; Hardware stack levels used: 1
  4220 ;; Hardware stack levels required when called: 8
  4221 ;; This function calls:
  4222 ;;		_Lcd_Port
  4223 ;; This function is called by:
  4224 ;;		_Lcd_Clear
  4225 ;;		_Lcd_Set_Cursor
  4226 ;;		_Lcd_Init
  4227 ;;		_Lcd_Blink
  4228 ;;		_Lcd_NoBlink
  4229 ;;		_Lcd_CGRAM_Init
  4230 ;;		_Lcd_CGRAM_Close
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text21
  4235   0023A2                     __ptext21:
  4236                           	callstack 0
  4237   0023A2                     _Lcd_Cmd:
  4238                           	callstack 20
  4239                           
  4240                           ;incstack = 0
  4241                           ;Lcd_Cmd@a stored from wreg
  4242   0023A2  0100               	movlb	0	; () banked
  4243   0023A4  6F8E               	movwf	Lcd_Cmd@a& (0+255),b
  4244                           
  4245                           ;lcd.c: 14: LATAbits.LA3 = 0;
  4246   0023A6  9689               	bcf	137,3,c	;volatile
  4247                           
  4248                           ;lcd.c: 15: Lcd_Port(a);
  4249   0023A8  0100               	movlb	0	; () banked
  4250   0023AA  518E               	movf	Lcd_Cmd@a& (0+255),w,b
  4251   0023AC  EC79  F011         	call	_Lcd_Port
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;lcd.c: 16: LATAbits.LA4 = 1;
  4255   0023B0  8889               	bsf	137,4,c	;volatile
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;lcd.c: 17: _delay((unsigned long)((4)*(8000000/4000.0)));
  4259   0023B2  0E0B               	movlw	11
  4260   0023B4  0100               	movlb	0	; () banked
  4261   0023B6  6F8D               	movwf	??_Lcd_Cmd& (0+255),b
  4262   0023B8  0E62               	movlw	98
  4263   0023BA                     u3797:
  4264   0023BA  2EE8               	decfsz	wreg,f,c
  4265   0023BC  D7FE               	bra	u3797
  4266   0023BE  2F8D               	decfsz	??_Lcd_Cmd& (0+255),f,b
  4267   0023C0  D7FC               	bra	u3797
  4268   0023C2  0000               	nop	
  4269                           
  4270                           ;lcd.c: 18: LATAbits.LA4 = 0;
  4271   0023C4  9889               	bcf	137,4,c	;volatile
  4272   0023C6  0012               	return		;funcret
  4273   0023C8                     __end_of_Lcd_Cmd:
  4274                           	callstack 0
  4275                           
  4276 ;; *************** function _Lcd_Port *****************
  4277 ;; Defined at:
  4278 ;;		line 4 in file "lcd.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  a               1    wreg     unsigned char 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  a               1    0[BANK0 ] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      void 
  4285 ;; Registers used:
  4286 ;;		wreg
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 3F/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4292 ;;      Params:         0       0       0       0       0       0       0       0       0
  4293 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4295 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4296 ;;Total ram usage:        1 bytes
  4297 ;; Hardware stack levels used: 1
  4298 ;; Hardware stack levels required when called: 7
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_Lcd_Cmd
  4303 ;;		_Lcd_Init
  4304 ;;		_Lcd_Write_Char
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text22
  4309   0022F2                     __ptext22:
  4310                           	callstack 0
  4311   0022F2                     _Lcd_Port:
  4312                           	callstack 20
  4313                           
  4314                           ;incstack = 0
  4315                           ;Lcd_Port@a stored from wreg
  4316   0022F2  0100               	movlb	0	; () banked
  4317   0022F4  6F8C               	movwf	Lcd_Port@a& (0+255),b
  4318                           
  4319                           ;lcd.c: 6: (a & 1) ? (LATDbits.LD4 = 1) : (LATDbits.LD4 = 0);
  4320   0022F6  0100               	movlb	0	; () banked
  4321   0022F8  A18C               	btfss	Lcd_Port@a& (0+255),0,b
  4322   0022FA  D002               	goto	l14
  4323                           
  4324                           ; BSR set to: 0
  4325   0022FC  888C               	bsf	140,4,c	;volatile
  4326   0022FE  D001               	goto	l2791
  4327   002300                     l14:
  4328                           
  4329                           ; BSR set to: 0
  4330   002300  988C               	bcf	140,4,c	;volatile
  4331   002302                     l2791:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;lcd.c: 7: (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  4335   002302  A38C               	btfss	Lcd_Port@a& (0+255),1,b
  4336   002304  D002               	goto	l18
  4337                           
  4338                           ; BSR set to: 0
  4339   002306  8A8C               	bsf	140,5,c	;volatile
  4340   002308  D001               	goto	l2795
  4341   00230A                     l18:
  4342                           
  4343                           ; BSR set to: 0
  4344   00230A  9A8C               	bcf	140,5,c	;volatile
  4345   00230C                     l2795:
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;lcd.c: 8: (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  4349   00230C  A58C               	btfss	Lcd_Port@a& (0+255),2,b
  4350   00230E  D002               	goto	l22
  4351                           
  4352                           ; BSR set to: 0
  4353   002310  8C8C               	bsf	140,6,c	;volatile
  4354   002312  D001               	goto	l2799
  4355   002314                     l22:
  4356                           
  4357                           ; BSR set to: 0
  4358   002314  9C8C               	bcf	140,6,c	;volatile
  4359   002316                     l2799:
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;lcd.c: 9: (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  4363   002316  A78C               	btfss	Lcd_Port@a& (0+255),3,b
  4364   002318  D002               	goto	l26
  4365                           
  4366                           ; BSR set to: 0
  4367   00231A  8E8C               	bsf	140,7,c	;volatile
  4368   00231C  0012               	return	
  4369   00231E                     l26:
  4370                           
  4371                           ; BSR set to: 0
  4372   00231E  9E8C               	bcf	140,7,c	;volatile
  4373                           
  4374                           ; BSR set to: 0
  4375   002320  0012               	return		;funcret
  4376   002322                     __end_of_Lcd_Port:
  4377                           	callstack 0
  4378                           
  4379 ;; *************** function ___wmul *****************
  4380 ;; Defined at:
  4381 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/Umul16.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4384 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  product         2    4[BANK0 ] unsigned int 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  2    0[BANK0 ] unsigned int 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, prodl, prodh
  4391 ;; Tracked objects:
  4392 ;;		On entry : 3F/0
  4393 ;;		On exit  : 3F/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4396 ;;      Params:         0       4       0       0       0       0       0       0       0
  4397 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4399 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4400 ;;Total ram usage:        6 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; Hardware stack levels required when called: 7
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_ContarReal
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text23
  4411   0023C8                     __ptext23:
  4412                           	callstack 0
  4413   0023C8                     ___wmul:
  4414                           	callstack 22
  4415                           
  4416                           ; BSR set to: 0
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;incstack = 0
  4420   0023C8  518C               	movf	___wmul@multiplier& (0+255),w,b
  4421   0023CA  038E               	mulwf	___wmul@multiplicand& (0+255),b
  4422   0023CC  CFF3 F090          	movff	prodl,___wmul@product
  4423   0023D0  CFF4 F091          	movff	prodh,___wmul@product+1
  4424   0023D4  518C               	movf	___wmul@multiplier& (0+255),w,b
  4425   0023D6  038F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4426   0023D8  50F3               	movf	243,w,c
  4427   0023DA  2791               	addwf	(___wmul@product+1)& (0+255),f,b
  4428   0023DC  518D               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4429   0023DE  038E               	mulwf	___wmul@multiplicand& (0+255),b
  4430   0023E0  50F3               	movf	243,w,c
  4431   0023E2  2791               	addwf	(___wmul@product+1)& (0+255),f,b
  4432                           
  4433                           ; BSR set to: 0
  4434   0023E4  C090  F08C         	movff	___wmul@product,?___wmul
  4435   0023E8  C091  F08D         	movff	___wmul@product+1,?___wmul+1
  4436                           
  4437                           ; BSR set to: 0
  4438   0023EC  0012               	return		;funcret
  4439   0023EE                     __end_of___wmul:
  4440                           	callstack 0
  4441                           
  4442 ;; *************** function ___awmod *****************
  4443 ;; Defined at:
  4444 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awmod.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  dividend        2    0[BANK0 ] int 
  4447 ;;  divisor         2    2[BANK0 ] int 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  sign            1    5[BANK0 ] unsigned char 
  4450 ;;  counter         1    4[BANK0 ] unsigned char 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  2    0[BANK0 ] int 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0
  4455 ;; Tracked objects:
  4456 ;;		On entry : 3F/0
  4457 ;;		On exit  : 3F/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4460 ;;      Params:         0       4       0       0       0       0       0       0       0
  4461 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4463 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4464 ;;Total ram usage:        6 bytes
  4465 ;; Hardware stack levels used: 1
  4466 ;; Hardware stack levels required when called: 7
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_ContarReal
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text24
  4475   001D2E                     __ptext24:
  4476                           	callstack 0
  4477   001D2E                     ___awmod:
  4478                           	callstack 22
  4479                           
  4480                           ; BSR set to: 0
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;incstack = 0
  4484   001D2E  0E00               	movlw	0
  4485   001D30  6F91               	movwf	___awmod@sign& (0+255),b
  4486                           
  4487                           ; BSR set to: 0
  4488   001D32  AF8D               	btfss	(___awmod@dividend+1)& (0+255),7,b
  4489   001D34  D006               	goto	l3341
  4490                           
  4491                           ; BSR set to: 0
  4492   001D36  6D8C               	negf	___awmod@dividend& (0+255),b
  4493   001D38  1F8D               	comf	(___awmod@dividend+1)& (0+255),f,b
  4494   001D3A  B0D8               	btfsc	status,0,c
  4495   001D3C  2B8D               	incf	(___awmod@dividend+1)& (0+255),f,b
  4496                           
  4497                           ; BSR set to: 0
  4498   001D3E  0E01               	movlw	1
  4499   001D40  6F91               	movwf	___awmod@sign& (0+255),b
  4500   001D42                     l3341:
  4501                           
  4502                           ; BSR set to: 0
  4503   001D42  AF8F               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4504   001D44  D004               	goto	l3345
  4505                           
  4506                           ; BSR set to: 0
  4507   001D46  6D8E               	negf	___awmod@divisor& (0+255),b
  4508   001D48  1F8F               	comf	(___awmod@divisor+1)& (0+255),f,b
  4509   001D4A  B0D8               	btfsc	status,0,c
  4510   001D4C  2B8F               	incf	(___awmod@divisor+1)& (0+255),f,b
  4511   001D4E                     l3345:
  4512                           
  4513                           ; BSR set to: 0
  4514   001D4E  518E               	movf	___awmod@divisor& (0+255),w,b
  4515   001D50  118F               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4516   001D52  B4D8               	btfsc	status,2,c
  4517   001D54  D018               	goto	l3361
  4518                           
  4519                           ; BSR set to: 0
  4520   001D56  0E01               	movlw	1
  4521   001D58  6F90               	movwf	___awmod@counter& (0+255),b
  4522   001D5A  D004               	goto	l3351
  4523   001D5C                     l3349:
  4524                           
  4525                           ; BSR set to: 0
  4526   001D5C  90D8               	bcf	status,0,c
  4527   001D5E  378E               	rlcf	___awmod@divisor& (0+255),f,b
  4528   001D60  378F               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4529   001D62  2B90               	incf	___awmod@counter& (0+255),f,b
  4530   001D64                     l3351:
  4531                           
  4532                           ; BSR set to: 0
  4533   001D64  AF8F               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4534   001D66  D7FA               	goto	l3349
  4535   001D68                     u2420:
  4536                           
  4537                           ; BSR set to: 0
  4538   001D68  518E               	movf	___awmod@divisor& (0+255),w,b
  4539   001D6A  5D8C               	subwf	___awmod@dividend& (0+255),w,b
  4540   001D6C  518F               	movf	(___awmod@divisor+1)& (0+255),w,b
  4541   001D6E  598D               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4542   001D70  A0D8               	btfss	status,0,c
  4543   001D72  D004               	goto	l3357
  4544                           
  4545                           ; BSR set to: 0
  4546   001D74  518E               	movf	___awmod@divisor& (0+255),w,b
  4547   001D76  5F8C               	subwf	___awmod@dividend& (0+255),f,b
  4548   001D78  518F               	movf	(___awmod@divisor+1)& (0+255),w,b
  4549   001D7A  5B8D               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4550   001D7C                     l3357:
  4551                           
  4552                           ; BSR set to: 0
  4553   001D7C  90D8               	bcf	status,0,c
  4554   001D7E  338F               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4555   001D80  338E               	rrcf	___awmod@divisor& (0+255),f,b
  4556                           
  4557                           ; BSR set to: 0
  4558   001D82  2F90               	decfsz	___awmod@counter& (0+255),f,b
  4559   001D84  D7F1               	goto	u2420
  4560   001D86                     l3361:
  4561                           
  4562                           ; BSR set to: 0
  4563   001D86  5191               	movf	___awmod@sign& (0+255),w,b
  4564   001D88  B4D8               	btfsc	status,2,c
  4565   001D8A  D004               	goto	l3365
  4566                           
  4567                           ; BSR set to: 0
  4568   001D8C  6D8C               	negf	___awmod@dividend& (0+255),b
  4569   001D8E  1F8D               	comf	(___awmod@dividend+1)& (0+255),f,b
  4570   001D90  B0D8               	btfsc	status,0,c
  4571   001D92  2B8D               	incf	(___awmod@dividend+1)& (0+255),f,b
  4572   001D94                     l3365:
  4573                           
  4574                           ; BSR set to: 0
  4575   001D94  C08C  F08C         	movff	___awmod@dividend,?___awmod
  4576   001D98  C08D  F08D         	movff	___awmod@dividend+1,?___awmod+1
  4577                           
  4578                           ; BSR set to: 0
  4579   001D9C  0012               	return		;funcret
  4580   001D9E                     __end_of___awmod:
  4581                           	callstack 0
  4582                           
  4583 ;; *************** function ___awdiv *****************
  4584 ;; Defined at:
  4585 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awdiv.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  dividend        2    0[BANK0 ] int 
  4588 ;;  divisor         2    2[BANK0 ] int 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  quotient        2    6[BANK0 ] int 
  4591 ;;  sign            1    5[BANK0 ] unsigned char 
  4592 ;;  counter         1    4[BANK0 ] unsigned char 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  2    0[BANK0 ] int 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0
  4597 ;; Tracked objects:
  4598 ;;		On entry : 3F/0
  4599 ;;		On exit  : 3F/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4602 ;;      Params:         0       4       0       0       0       0       0       0       0
  4603 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4605 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4606 ;;Total ram usage:        8 bytes
  4607 ;; Hardware stack levels used: 1
  4608 ;; Hardware stack levels required when called: 7
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_ContarReal
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text25
  4617   001B30                     __ptext25:
  4618                           	callstack 0
  4619   001B30                     ___awdiv:
  4620                           	callstack 22
  4621                           
  4622                           ; BSR set to: 0
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;incstack = 0
  4626   001B30  0E00               	movlw	0
  4627   001B32  6F91               	movwf	___awdiv@sign& (0+255),b
  4628                           
  4629                           ; BSR set to: 0
  4630   001B34  AF8F               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4631   001B36  D006               	goto	l3297
  4632                           
  4633                           ; BSR set to: 0
  4634   001B38  6D8E               	negf	___awdiv@divisor& (0+255),b
  4635   001B3A  1F8F               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4636   001B3C  B0D8               	btfsc	status,0,c
  4637   001B3E  2B8F               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4638                           
  4639                           ; BSR set to: 0
  4640   001B40  0E01               	movlw	1
  4641   001B42  6F91               	movwf	___awdiv@sign& (0+255),b
  4642   001B44                     l3297:
  4643                           
  4644                           ; BSR set to: 0
  4645   001B44  AF8D               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4646   001B46  D006               	goto	l3303
  4647                           
  4648                           ; BSR set to: 0
  4649   001B48  6D8C               	negf	___awdiv@dividend& (0+255),b
  4650   001B4A  1F8D               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4651   001B4C  B0D8               	btfsc	status,0,c
  4652   001B4E  2B8D               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4653                           
  4654                           ; BSR set to: 0
  4655   001B50  0E01               	movlw	1
  4656   001B52  1B91               	xorwf	___awdiv@sign& (0+255),f,b
  4657   001B54                     l3303:
  4658                           
  4659                           ; BSR set to: 0
  4660   001B54  0E00               	movlw	0
  4661   001B56  6F93               	movwf	(___awdiv@quotient+1)& (0+255),b
  4662   001B58  0E00               	movlw	0
  4663   001B5A  6F92               	movwf	___awdiv@quotient& (0+255),b
  4664                           
  4665                           ; BSR set to: 0
  4666   001B5C  518E               	movf	___awdiv@divisor& (0+255),w,b
  4667   001B5E  118F               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4668   001B60  B4D8               	btfsc	status,2,c
  4669   001B62  D01C               	goto	l3325
  4670                           
  4671                           ; BSR set to: 0
  4672   001B64  0E01               	movlw	1
  4673   001B66  6F90               	movwf	___awdiv@counter& (0+255),b
  4674   001B68  D004               	goto	l3311
  4675   001B6A                     l3309:
  4676                           
  4677                           ; BSR set to: 0
  4678   001B6A  90D8               	bcf	status,0,c
  4679   001B6C  378E               	rlcf	___awdiv@divisor& (0+255),f,b
  4680   001B6E  378F               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4681   001B70  2B90               	incf	___awdiv@counter& (0+255),f,b
  4682   001B72                     l3311:
  4683                           
  4684                           ; BSR set to: 0
  4685   001B72  AF8F               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4686   001B74  D7FA               	goto	l3309
  4687   001B76                     u2360:
  4688                           
  4689                           ; BSR set to: 0
  4690   001B76  90D8               	bcf	status,0,c
  4691   001B78  3792               	rlcf	___awdiv@quotient& (0+255),f,b
  4692   001B7A  3793               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4693                           
  4694                           ; BSR set to: 0
  4695   001B7C  518E               	movf	___awdiv@divisor& (0+255),w,b
  4696   001B7E  5D8C               	subwf	___awdiv@dividend& (0+255),w,b
  4697   001B80  518F               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4698   001B82  598D               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4699   001B84  A0D8               	btfss	status,0,c
  4700   001B86  D005               	goto	l3321
  4701                           
  4702                           ; BSR set to: 0
  4703   001B88  518E               	movf	___awdiv@divisor& (0+255),w,b
  4704   001B8A  5F8C               	subwf	___awdiv@dividend& (0+255),f,b
  4705   001B8C  518F               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4706   001B8E  5B8D               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4707                           
  4708                           ; BSR set to: 0
  4709   001B90  8192               	bsf	___awdiv@quotient& (0+255),0,b
  4710   001B92                     l3321:
  4711                           
  4712                           ; BSR set to: 0
  4713   001B92  90D8               	bcf	status,0,c
  4714   001B94  338F               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4715   001B96  338E               	rrcf	___awdiv@divisor& (0+255),f,b
  4716                           
  4717                           ; BSR set to: 0
  4718   001B98  2F90               	decfsz	___awdiv@counter& (0+255),f,b
  4719   001B9A  D7ED               	goto	u2360
  4720   001B9C                     l3325:
  4721                           
  4722                           ; BSR set to: 0
  4723   001B9C  5191               	movf	___awdiv@sign& (0+255),w,b
  4724   001B9E  B4D8               	btfsc	status,2,c
  4725   001BA0  D004               	goto	l3329
  4726                           
  4727                           ; BSR set to: 0
  4728   001BA2  6D92               	negf	___awdiv@quotient& (0+255),b
  4729   001BA4  1F93               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4730   001BA6  B0D8               	btfsc	status,0,c
  4731   001BA8  2B93               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4732   001BAA                     l3329:
  4733                           
  4734                           ; BSR set to: 0
  4735   001BAA  C092  F08C         	movff	___awdiv@quotient,?___awdiv
  4736   001BAE  C093  F08D         	movff	___awdiv@quotient+1,?___awdiv+1
  4737                           
  4738                           ; BSR set to: 0
  4739   001BB2  0012               	return		;funcret
  4740   001BB4                     __end_of___awdiv:
  4741                           	callstack 0
  4742                           
  4743 ;; *************** function _ISR *****************
  4744 ;; Defined at:
  4745 ;;		line 347 in file "main.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;		None
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1    wreg      void 
  4752 ;; Registers used:
  4753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4759 ;;      Params:         0       0       0       0       0       0       0       0       0
  4760 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4761 ;;      Temps:         10       0       0       0       0       0       0       0       0
  4762 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4763 ;;Total ram usage:       10 bytes
  4764 ;; Hardware stack levels used: 1
  4765 ;; Hardware stack levels required when called: 6
  4766 ;; This function calls:
  4767 ;;		_Conversion
  4768 ;;		_Duty_motor
  4769 ;;		_PiezaAContar
  4770 ;;		_Reiniciar
  4771 ;;		_Terminar
  4772 ;;		_Trasmitir
  4773 ;;		___lwtoft
  4774 ;;		_blacklighttoggle
  4775 ;;		_borrarDigito
  4776 ;;		_escenario4
  4777 ;;		_okmenu
  4778 ;; This function is called by:
  4779 ;;		Interrupt level 2
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	intcode
  4784   000008                     __pintcode:
  4785                           	callstack 0
  4786   000008                     _ISR:
  4787                           	callstack 19
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;incstack = 0
  4791   000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4792   00000A  ED6E  F004         	call	int_func,f	;refresh shadow registers
  4793                           
  4794                           	psect	intcode_body
  4795   0008DC                     __pintcode_body:
  4796                           	callstack 19
  4797   0008DC                     int_func:
  4798                           	callstack 19
  4799   0008DC  0006               	pop		; remove dummy address from shadow register refresh
  4800   0008DE  CFD9 F02F          	movff	fsr2l,??_ISR+2
  4801   0008E2  CFDA F030          	movff	fsr2h,??_ISR+3
  4802   0008E6  CFF3 F031          	movff	prodl,??_ISR+4
  4803   0008EA  CFF4 F032          	movff	prodh,??_ISR+5
  4804   0008EE  CFF6 F033          	movff	tblptrl,??_ISR+6
  4805   0008F2  CFF7 F034          	movff	tblptrh,??_ISR+7
  4806   0008F6  CFF8 F035          	movff	tblptru,??_ISR+8
  4807   0008FA  CFF5 F036          	movff	tablat,??_ISR+9
  4808                           
  4809                           ;main.c: 348: if (RBIF == 1 && flagParar) {
  4810   0008FE  A0F2               	btfss	4082,0,c	;volatile
  4811   000900  D090               	goto	i2l4155
  4812   000902  5045               	movf	_flagParar^0,w,c
  4813   000904  1046               	iorwf	(_flagParar+1)^0,w,c
  4814   000906  B4D8               	btfsc	status,2,c
  4815   000908  D08C               	goto	i2l4155
  4816                           
  4817                           ;main.c: 350: if (PORTB != 0b11110000) {
  4818   00090A  0EF0               	movlw	240
  4819   00090C  1881               	xorwf	129,w,c	;volatile
  4820   00090E  B4D8               	btfsc	status,2,c
  4821   000910  D07B               	goto	i2l4151
  4822                           
  4823                           ;main.c: 351: Tecla = 0;
  4824   000912  0E00               	movlw	0
  4825   000914  6E4E               	movwf	_Tecla^0,c
  4826                           
  4827                           ;main.c: 352: LATB = 0b11111110;
  4828   000916  0EFE               	movlw	254
  4829   000918  6E8A               	movwf	138,c	;volatile
  4830                           
  4831                           ;main.c: 354: if (RB4 == 0) PiezaAContar('1');
  4832   00091A  B881               	btfsc	3969,4,c	;volatile
  4833   00091C  D004               	goto	i2l392
  4834   00091E  0E31               	movlw	49
  4835   000920  EC3A  F00F         	call	_PiezaAContar
  4836   000924  D06F               	goto	i2l417
  4837   000926                     i2l392:
  4838                           
  4839                           ;main.c: 355: else if (RB5 == 0) PiezaAContar('2');
  4840   000926  BA81               	btfsc	3969,5,c	;volatile
  4841   000928  D004               	goto	i2l394
  4842   00092A  0E32               	movlw	50
  4843   00092C  EC3A  F00F         	call	_PiezaAContar
  4844   000930  D069               	goto	i2l417
  4845   000932                     i2l394:
  4846                           
  4847                           ;main.c: 356: else if (RB6 == 0) PiezaAContar('3');
  4848   000932  BC81               	btfsc	3969,6,c	;volatile
  4849   000934  D004               	goto	i2l396
  4850   000936  0E33               	movlw	51
  4851   000938  EC3A  F00F         	call	_PiezaAContar
  4852   00093C  D063               	goto	i2l417
  4853   00093E                     i2l396:
  4854                           
  4855                           ;main.c: 357: else if (RB7 == 0 && menu != 2) okmenu();
  4856   00093E  BE81               	btfsc	3969,7,c	;volatile
  4857   000940  D009               	goto	i2l4107
  4858   000942  0E02               	movlw	2
  4859   000944  0100               	movlb	0	; () banked
  4860   000946  196C               	xorwf	_menu& (0+255),w,b
  4861   000948  116D               	iorwf	(_menu+1)& (0+255),w,b
  4862   00094A  B4D8               	btfsc	status,2,c
  4863   00094C  D003               	goto	i2l4107
  4864                           
  4865                           ; BSR set to: 0
  4866   00094E  ECBD  F011         	call	_okmenu	;wreg free
  4867   000952  D058               	goto	i2l417
  4868   000954                     i2l4107:
  4869                           
  4870                           ;main.c: 358: else {;main.c: 359: LATB = 0b11111101;
  4871   000954  0EFD               	movlw	253
  4872   000956  6E8A               	movwf	138,c	;volatile
  4873                           
  4874                           ;main.c: 360: if (RB4 == 0) PiezaAContar('4');
  4875   000958  B881               	btfsc	3969,4,c	;volatile
  4876   00095A  D004               	goto	i2l400
  4877   00095C  0E34               	movlw	52
  4878   00095E  EC3A  F00F         	call	_PiezaAContar
  4879   000962  D050               	goto	i2l417
  4880   000964                     i2l400:
  4881                           
  4882                           ;main.c: 361: else if (RB5 == 0) PiezaAContar('5');
  4883   000964  BA81               	btfsc	3969,5,c	;volatile
  4884   000966  D004               	goto	i2l402
  4885   000968  0E35               	movlw	53
  4886   00096A  EC3A  F00F         	call	_PiezaAContar
  4887   00096E  D04A               	goto	i2l417
  4888   000970                     i2l402:
  4889                           
  4890                           ;main.c: 362: else if (RB6 == 0) PiezaAContar('6');
  4891   000970  BC81               	btfsc	3969,6,c	;volatile
  4892   000972  D004               	goto	i2l404
  4893   000974  0E36               	movlw	54
  4894   000976  EC3A  F00F         	call	_PiezaAContar
  4895   00097A  D044               	goto	i2l417
  4896   00097C                     i2l404:
  4897                           
  4898                           ;main.c: 363: else if (RB7 == 0 && menu == 1) borrarDigito();
  4899   00097C  BE81               	btfsc	3969,7,c	;volatile
  4900   00097E  D008               	goto	i2l4121
  4901   000980  0100               	movlb	0	; () banked
  4902   000982  056C               	decf	_menu& (0+255),w,b
  4903   000984  116D               	iorwf	(_menu+1)& (0+255),w,b
  4904   000986  A4D8               	btfss	status,2,c
  4905   000988  D003               	goto	i2l4121
  4906                           
  4907                           ; BSR set to: 0
  4908   00098A  EC95  F00F         	call	_borrarDigito	;wreg free
  4909   00098E  D03A               	goto	i2l417
  4910   000990                     i2l4121:
  4911                           
  4912                           ;main.c: 364: else {;main.c: 365: LATB = 0b11111011;
  4913   000990  0EFB               	movlw	251
  4914   000992  6E8A               	movwf	138,c	;volatile
  4915                           
  4916                           ;main.c: 366: if (RB4 == 0) PiezaAContar('7');
  4917   000994  B881               	btfsc	3969,4,c	;volatile
  4918   000996  D004               	goto	i2l408
  4919   000998  0E37               	movlw	55
  4920   00099A  EC3A  F00F         	call	_PiezaAContar
  4921   00099E  D032               	goto	i2l417
  4922   0009A0                     i2l408:
  4923                           
  4924                           ;main.c: 367: else if (RB5 == 0) PiezaAContar('8');
  4925   0009A0  BA81               	btfsc	3969,5,c	;volatile
  4926   0009A2  D004               	goto	i2l410
  4927   0009A4  0E38               	movlw	56
  4928   0009A6  EC3A  F00F         	call	_PiezaAContar
  4929   0009AA  D02C               	goto	i2l417
  4930   0009AC                     i2l410:
  4931                           
  4932                           ;main.c: 368: else if (RB6 == 0) PiezaAContar('9');
  4933   0009AC  BC81               	btfsc	3969,6,c	;volatile
  4934   0009AE  D004               	goto	i2l412
  4935   0009B0  0E39               	movlw	57
  4936   0009B2  EC3A  F00F         	call	_PiezaAContar
  4937   0009B6  D026               	goto	i2l417
  4938   0009B8                     i2l412:
  4939                           
  4940                           ;main.c: 369: else if (RB7 == 0 && menu == 2) Reiniciar();
  4941   0009B8  BE81               	btfsc	3969,7,c	;volatile
  4942   0009BA  D009               	goto	i2l4135
  4943   0009BC  0E02               	movlw	2
  4944   0009BE  0100               	movlb	0	; () banked
  4945   0009C0  196C               	xorwf	_menu& (0+255),w,b
  4946   0009C2  116D               	iorwf	(_menu+1)& (0+255),w,b
  4947   0009C4  A4D8               	btfss	status,2,c
  4948   0009C6  D003               	goto	i2l4135
  4949                           
  4950                           ; BSR set to: 0
  4951   0009C8  EC45  F011         	call	_Reiniciar	;wreg free
  4952   0009CC  D01B               	goto	i2l417
  4953   0009CE                     i2l4135:
  4954                           
  4955                           ;main.c: 370: else {;main.c: 371: LATB = 0b11110111;
  4956   0009CE  0EF7               	movlw	247
  4957   0009D0  6E8A               	movwf	138,c	;volatile
  4958                           
  4959                           ;main.c: 372: if (RB4 == 0) blacklighttoggle();
  4960   0009D2  B881               	btfsc	3969,4,c	;volatile
  4961   0009D4  D003               	goto	i2l416
  4962   0009D6  EC7F  F012         	call	_blacklighttoggle	;wreg free
  4963   0009DA  D014               	goto	i2l417
  4964   0009DC                     i2l416:
  4965                           
  4966                           ;main.c: 373: else if (RB5 == 0) PiezaAContar('0');
  4967   0009DC  BA81               	btfsc	3969,5,c	;volatile
  4968   0009DE  D004               	goto	i2l418
  4969   0009E0  0E30               	movlw	48
  4970   0009E2  EC3A  F00F         	call	_PiezaAContar
  4971   0009E6  D00E               	goto	i2l417
  4972   0009E8                     i2l418:
  4973                           
  4974                           ;main.c: 374: else if (RB6 == 0 && menu == 2) Terminar();
  4975   0009E8  BC81               	btfsc	3969,6,c	;volatile
  4976   0009EA  D009               	goto	i2l420
  4977   0009EC  0E02               	movlw	2
  4978   0009EE  0100               	movlb	0	; () banked
  4979   0009F0  196C               	xorwf	_menu& (0+255),w,b
  4980   0009F2  116D               	iorwf	(_menu+1)& (0+255),w,b
  4981   0009F4  A4D8               	btfss	status,2,c
  4982   0009F6  D003               	goto	i2l420
  4983                           
  4984                           ; BSR set to: 0
  4985   0009F8  EC85  F012         	call	_Terminar	;wreg free
  4986   0009FC  D003               	goto	i2l417
  4987   0009FE                     i2l420:
  4988                           
  4989                           ;main.c: 375: else if (RB7 == 0) escenario4();
  4990   0009FE  AE81               	btfss	3969,7,c	;volatile
  4991   000A00  ECE6  F00F         	call	_escenario4	;wreg free
  4992   000A04                     i2l417:
  4993                           
  4994                           ;main.c: 376: };main.c: 377: };main.c: 378: };main.c: 379: LATB = 0b11110000;
  4995   000A04  0EF0               	movlw	240
  4996   000A06  6E8A               	movwf	138,c	;volatile
  4997   000A08                     i2l4151:
  4998                           
  4999                           ;main.c: 380: };main.c: 381: _delay((unsigned long)((200)*(8000000/4000.0)));
  5000   000A08  0E03               	movlw	3
  5001   000A0A  6E2E               	movwf	(??_ISR+1)^0,c
  5002   000A0C  0E08               	movlw	8
  5003   000A0E  6E2D               	movwf	??_ISR^0,c
  5004   000A10  0E77               	movlw	119
  5005   000A12                     i2u380_47:
  5006   000A12  2EE8               	decfsz	wreg,f,c
  5007   000A14  D7FE               	bra	i2u380_47
  5008   000A16  2E2D               	decfsz	??_ISR^0,f,c
  5009   000A18  D7FC               	bra	i2u380_47
  5010   000A1A  2E2E               	decfsz	(??_ISR+1)^0,f,c
  5011   000A1C  D7FA               	bra	i2u380_47
  5012   000A1E  0000               	nop	
  5013                           
  5014                           ;main.c: 383: RBIF = 0;
  5015   000A20  90F2               	bcf	4082,0,c	;volatile
  5016   000A22                     i2l4155:
  5017                           
  5018                           ;main.c: 385: };main.c: 386: if (TMR0IF == 1) {
  5019   000A22  A4F2               	btfss	4082,2,c	;volatile
  5020   000A24  D02D               	goto	i2l4177
  5021                           
  5022                           ;main.c: 387: TMR0IF = 0;
  5023   000A26  94F2               	bcf	4082,2,c	;volatile
  5024                           
  5025                           ;main.c: 388: TMR0 = 3036;
  5026   000A28  0E0B               	movlw	11
  5027   000A2A  6ED7               	movwf	215,c	;volatile
  5028   000A2C  0EDC               	movlw	220
  5029   000A2E  6ED6               	movwf	214,c	;volatile
  5030                           
  5031                           ;main.c: 389: LATA1 = !LATA1;
  5032   000A30  B289               	btfsc	3977,1,c	;volatile
  5033   000A32  D002               	goto	i2u337_40
  5034   000A34  8289               	bsf	3977,1,c	;volatile
  5035   000A36  D001               	goto	i2u338_45
  5036   000A38                     i2u337_40:
  5037   000A38  9289               	bcf	3977,1,c	;volatile
  5038   000A3A                     i2u338_45:
  5039                           
  5040                           ;main.c: 390: Trasmitir();
  5041   000A3A  EC60  F011         	call	_Trasmitir	;wreg free
  5042                           
  5043                           ;main.c: 391: if (etimeout == 1)
  5044   000A3E  044C               	decf	_etimeout^0,w,c
  5045   000A40  A4D8               	btfss	status,2,c
  5046   000A42  D002               	goto	i2l4169
  5047                           
  5048                           ;main.c: 392: ctimeout++;
  5049   000A44  2A4B               	incf	_ctimeout^0,f,c
  5050   000A46  D002               	goto	i2l425
  5051   000A48                     i2l4169:
  5052                           
  5053                           ;main.c: 393: else;main.c: 394: ctimeout = 0;
  5054   000A48  0E00               	movlw	0
  5055   000A4A  6E4B               	movwf	_ctimeout^0,c
  5056   000A4C                     i2l425:
  5057                           
  5058                           ;main.c: 395: if (ctimeout >= 1)
  5059   000A4C  504B               	movf	_ctimeout^0,w,c
  5060   000A4E  B4D8               	btfsc	status,2,c
  5061   000A50  D002               	goto	i2l4173
  5062                           
  5063                           ;main.c: 396: etimeout = 0;
  5064   000A52  0E00               	movlw	0
  5065   000A54  6E4C               	movwf	_etimeout^0,c
  5066   000A56                     i2l4173:
  5067                           
  5068                           ;main.c: 398: resultado_ADC = Conversion(0);
  5069   000A56  0E00               	movlw	0
  5070   000A58  EC0A  F012         	call	_Conversion
  5071   000A5C  C001  F047         	movff	?_Conversion,_resultado_ADC
  5072   000A60  C002  F048         	movff	?_Conversion+1,_resultado_ADC+1
  5073                           
  5074                           ;main.c: 399: Duty_motor(resultado_ADC);
  5075   000A64  C047  F009         	movff	_resultado_ADC,___lwtoft@c
  5076   000A68  C048  F00A         	movff	_resultado_ADC+1,___lwtoft@c+1
  5077   000A6C  EC1D  F012         	call	___lwtoft	;wreg free
  5078   000A70  C009  F027         	movff	?___lwtoft,Duty_motor@ADC
  5079   000A74  C00A  F028         	movff	?___lwtoft+1,Duty_motor@ADC+1
  5080   000A78  C00B  F029         	movff	?___lwtoft+2,Duty_motor@ADC+2
  5081   000A7C  EC82  F00A         	call	_Duty_motor	;wreg free
  5082   000A80                     i2l4177:
  5083                           
  5084                           ;main.c: 400: };main.c: 402: if (RCIF == 1) {
  5085   000A80  AA9E               	btfss	3998,5,c	;volatile
  5086   000A82  D0D6               	goto	i2l463
  5087   000A84                     i2u341_40:
  5088   000A84  AA9E               	btfss	3998,5,c	;volatile
  5089   000A86  D7FE               	goto	i2u341_40
  5090                           
  5091                           ;main.c: 404: recibir = RCREG;
  5092   000A88  CFAE F04D          	movff	4014,_recibir	;volatile
  5093                           
  5094                           ;main.c: 405: if (recibir == 'p' || recibir == 'P') escenario4();
  5095   000A8C  0E70               	movlw	112
  5096   000A8E  184D               	xorwf	_recibir^0,w,c
  5097   000A90  B4D8               	btfsc	status,2,c
  5098   000A92  D004               	goto	i2u344_40
  5099   000A94  0E50               	movlw	80
  5100   000A96  184D               	xorwf	_recibir^0,w,c
  5101   000A98  A4D8               	btfss	status,2,c
  5102   000A9A  D003               	goto	i2l4187
  5103   000A9C                     i2u344_40:
  5104   000A9C  ECE6  F00F         	call	_escenario4	;wreg free
  5105   000AA0  D0C7               	goto	i2l463
  5106   000AA2                     i2l4187:
  5107                           
  5108                           ;main.c: 406: else if (flagParar) {
  5109   000AA2  5045               	movf	_flagParar^0,w,c
  5110   000AA4  1046               	iorwf	(_flagParar+1)^0,w,c
  5111   000AA6  B4D8               	btfsc	status,2,c
  5112   000AA8  D0C3               	goto	i2l463
  5113                           
  5114                           ;main.c: 407: if (recibir == 'e' || recibir == 'E') motorEstado = 1;
  5115   000AAA  0E65               	movlw	101
  5116   000AAC  184D               	xorwf	_recibir^0,w,c
  5117   000AAE  B4D8               	btfsc	status,2,c
  5118   000AB0  D004               	goto	i2u347_40
  5119   000AB2  0E45               	movlw	69
  5120   000AB4  184D               	xorwf	_recibir^0,w,c
  5121   000AB6  A4D8               	btfss	status,2,c
  5122   000AB8  D004               	goto	i2l4195
  5123   000ABA                     i2u347_40:
  5124   000ABA  0E00               	movlw	0
  5125   000ABC  6E40               	movwf	(_motorEstado+1)^0,c
  5126   000ABE  0E01               	movlw	1
  5127   000AC0  D00B               	goto	L1
  5128   000AC2                     i2l4195:
  5129                           
  5130                           ;main.c: 408: else if ((recibir == 'a' || recibir == 'A')) motorEstado = 0;
  5131   000AC2  0E61               	movlw	97
  5132   000AC4  184D               	xorwf	_recibir^0,w,c
  5133   000AC6  B4D8               	btfsc	status,2,c
  5134   000AC8  D004               	goto	i2u349_40
  5135   000ACA  0E41               	movlw	65
  5136   000ACC  184D               	xorwf	_recibir^0,w,c
  5137   000ACE  A4D8               	btfss	status,2,c
  5138   000AD0  D005               	goto	i2l4201
  5139   000AD2                     i2u349_40:
  5140   000AD2  0E00               	movlw	0
  5141   000AD4  6E40               	movwf	(_motorEstado+1)^0,c
  5142   000AD6  0E00               	movlw	0
  5143   000AD8                     L1:
  5144   000AD8  6E3F               	movwf	_motorEstado^0,c
  5145   000ADA  D0AA               	goto	i2l463
  5146   000ADC                     i2l4201:
  5147                           
  5148                           ;main.c: 409: else if ((recibir == 'r' || recibir == 'R') && menu == 2) Reiniciar();
  5149   000ADC  0E72               	movlw	114
  5150   000ADE  184D               	xorwf	_recibir^0,w,c
  5151   000AE0  B4D8               	btfsc	status,2,c
  5152   000AE2  D004               	goto	i2u351_40
  5153   000AE4  0E52               	movlw	82
  5154   000AE6  184D               	xorwf	_recibir^0,w,c
  5155   000AE8  A4D8               	btfss	status,2,c
  5156   000AEA  D009               	goto	i2l4209
  5157   000AEC                     i2u351_40:
  5158   000AEC  0E02               	movlw	2
  5159   000AEE  0100               	movlb	0	; () banked
  5160   000AF0  196C               	xorwf	_menu& (0+255),w,b
  5161   000AF2  116D               	iorwf	(_menu+1)& (0+255),w,b
  5162   000AF4  A4D8               	btfss	status,2,c
  5163   000AF6  D003               	goto	i2l4209
  5164                           
  5165                           ; BSR set to: 0
  5166   000AF8  EC45  F011         	call	_Reiniciar	;wreg free
  5167   000AFC  D099               	goto	i2l463
  5168   000AFE                     i2l4209:
  5169                           
  5170                           ;main.c: 410: else if ((recibir == 'z' || recibir == 'Z')) {
  5171   000AFE  0E7A               	movlw	122
  5172   000B00  184D               	xorwf	_recibir^0,w,c
  5173   000B02  B4D8               	btfsc	status,2,c
  5174   000B04  D004               	goto	i2u354_40
  5175   000B06  0E5A               	movlw	90
  5176   000B08  184D               	xorwf	_recibir^0,w,c
  5177   000B0A  A4D8               	btfss	status,2,c
  5178   000B0C  D00F               	goto	i2l4215
  5179   000B0E                     i2u354_40:
  5180                           
  5181                           ;main.c: 411: porcentajeManual = 0;
  5182   000B0E  0E00               	movlw	0
  5183   000B10  6E37               	movwf	_porcentajeManual^0,c
  5184   000B12  0E00               	movlw	0
  5185   000B14  6E38               	movwf	(_porcentajeManual+1)^0,c
  5186   000B16  0E00               	movlw	0
  5187   000B18  6E39               	movwf	(_porcentajeManual+2)^0,c
  5188                           
  5189                           ;main.c: 412: porcentaje = 0;
  5190   000B1A  0E00               	movlw	0
  5191   000B1C  0100               	movlb	0	; () banked
  5192   000B1E  6FAE               	movwf	_porcentaje& (0+255),b
  5193   000B20  0E00               	movlw	0
  5194   000B22  6FAF               	movwf	(_porcentaje+1)& (0+255),b
  5195   000B24  0E00               	movlw	0
  5196   000B26  6FB0               	movwf	(_porcentaje+2)& (0+255),b
  5197                           
  5198                           ;main.c: 413: CCPR1L = 0;
  5199   000B28  0E00               	movlw	0
  5200   000B2A  D072               	goto	L6
  5201   000B2C                     i2l4215:
  5202                           
  5203                           ;main.c: 415: else if ((recibir == 'x' || recibir == 'X')) {
  5204   000B2C  0E78               	movlw	120
  5205   000B2E  184D               	xorwf	_recibir^0,w,c
  5206   000B30  B4D8               	btfsc	status,2,c
  5207   000B32  D004               	goto	i2u356_40
  5208   000B34  0E58               	movlw	88
  5209   000B36  184D               	xorwf	_recibir^0,w,c
  5210   000B38  A4D8               	btfss	status,2,c
  5211   000B3A  D00F               	goto	i2l4221
  5212   000B3C                     i2u356_40:
  5213                           
  5214                           ;main.c: 416: porcentajeManual = 0;
  5215   000B3C  0E00               	movlw	0
  5216   000B3E  6E37               	movwf	_porcentajeManual^0,c
  5217   000B40  0E00               	movlw	0
  5218   000B42  6E38               	movwf	(_porcentajeManual+1)^0,c
  5219   000B44  0E00               	movlw	0
  5220   000B46  6E39               	movwf	(_porcentajeManual+2)^0,c
  5221                           
  5222                           ;main.c: 417: porcentaje = 20;
  5223   000B48  0E00               	movlw	0
  5224   000B4A  0100               	movlb	0	; () banked
  5225   000B4C  6FAE               	movwf	_porcentaje& (0+255),b
  5226   000B4E  0EA0               	movlw	160
  5227   000B50  6FAF               	movwf	(_porcentaje+1)& (0+255),b
  5228   000B52  0E41               	movlw	65
  5229   000B54  6FB0               	movwf	(_porcentaje+2)& (0+255),b
  5230                           
  5231                           ;main.c: 418: CCPR1L = 50;
  5232   000B56  0E32               	movlw	50
  5233   000B58  D05B               	goto	L6
  5234   000B5A                     i2l4221:
  5235                           
  5236                           ;main.c: 420: else if ((recibir == 'c' || recibir == 'C')) {
  5237   000B5A  0E63               	movlw	99
  5238   000B5C  184D               	xorwf	_recibir^0,w,c
  5239   000B5E  B4D8               	btfsc	status,2,c
  5240   000B60  D004               	goto	i2u358_40
  5241   000B62  0E43               	movlw	67
  5242   000B64  184D               	xorwf	_recibir^0,w,c
  5243   000B66  A4D8               	btfss	status,2,c
  5244   000B68  D00F               	goto	i2l4227
  5245   000B6A                     i2u358_40:
  5246                           
  5247                           ;main.c: 421: porcentajeManual = 0;
  5248   000B6A  0E00               	movlw	0
  5249   000B6C  6E37               	movwf	_porcentajeManual^0,c
  5250   000B6E  0E00               	movlw	0
  5251   000B70  6E38               	movwf	(_porcentajeManual+1)^0,c
  5252   000B72  0E00               	movlw	0
  5253   000B74  6E39               	movwf	(_porcentajeManual+2)^0,c
  5254                           
  5255                           ;main.c: 422: porcentaje = 40;
  5256   000B76  0E00               	movlw	0
  5257   000B78  0100               	movlb	0	; () banked
  5258   000B7A  6FAE               	movwf	_porcentaje& (0+255),b
  5259   000B7C  0E20               	movlw	32
  5260   000B7E  6FAF               	movwf	(_porcentaje+1)& (0+255),b
  5261   000B80  0E42               	movlw	66
  5262   000B82  6FB0               	movwf	(_porcentaje+2)& (0+255),b
  5263                           
  5264                           ;main.c: 423: CCPR1L = 100;
  5265   000B84  0E64               	movlw	100
  5266   000B86  D044               	goto	L6
  5267   000B88                     i2l4227:
  5268                           
  5269                           ;main.c: 425: else if ((recibir == 'v' || recibir == 'V')) {
  5270   000B88  0E76               	movlw	118
  5271   000B8A  184D               	xorwf	_recibir^0,w,c
  5272   000B8C  B4D8               	btfsc	status,2,c
  5273   000B8E  D004               	goto	i2u360_40
  5274   000B90  0E56               	movlw	86
  5275   000B92  184D               	xorwf	_recibir^0,w,c
  5276   000B94  A4D8               	btfss	status,2,c
  5277   000B96  D00F               	goto	i2l4233
  5278   000B98                     i2u360_40:
  5279                           
  5280                           ;main.c: 426: porcentajeManual = 0;
  5281   000B98  0E00               	movlw	0
  5282   000B9A  6E37               	movwf	_porcentajeManual^0,c
  5283   000B9C  0E00               	movlw	0
  5284   000B9E  6E38               	movwf	(_porcentajeManual+1)^0,c
  5285   000BA0  0E00               	movlw	0
  5286   000BA2  6E39               	movwf	(_porcentajeManual+2)^0,c
  5287                           
  5288                           ;main.c: 427: porcentaje = 60;
  5289   000BA4  0E00               	movlw	0
  5290   000BA6  0100               	movlb	0	; () banked
  5291   000BA8  6FAE               	movwf	_porcentaje& (0+255),b
  5292   000BAA  0E70               	movlw	112
  5293   000BAC  6FAF               	movwf	(_porcentaje+1)& (0+255),b
  5294   000BAE  0E42               	movlw	66
  5295   000BB0  6FB0               	movwf	(_porcentaje+2)& (0+255),b
  5296                           
  5297                           ;main.c: 428: CCPR1L = 150;
  5298   000BB2  0E96               	movlw	150
  5299   000BB4  D02D               	goto	L6
  5300   000BB6                     i2l4233:
  5301                           
  5302                           ;main.c: 430: else if ((recibir == 'b' || recibir == 'B')) {
  5303   000BB6  0E62               	movlw	98
  5304   000BB8  184D               	xorwf	_recibir^0,w,c
  5305   000BBA  B4D8               	btfsc	status,2,c
  5306   000BBC  D004               	goto	i2u362_40
  5307   000BBE  0E42               	movlw	66
  5308   000BC0  184D               	xorwf	_recibir^0,w,c
  5309   000BC2  A4D8               	btfss	status,2,c
  5310   000BC4  D00F               	goto	i2l4239
  5311   000BC6                     i2u362_40:
  5312                           
  5313                           ;main.c: 431: porcentajeManual = 0;
  5314   000BC6  0E00               	movlw	0
  5315   000BC8  6E37               	movwf	_porcentajeManual^0,c
  5316   000BCA  0E00               	movlw	0
  5317   000BCC  6E38               	movwf	(_porcentajeManual+1)^0,c
  5318   000BCE  0E00               	movlw	0
  5319   000BD0  6E39               	movwf	(_porcentajeManual+2)^0,c
  5320                           
  5321                           ;main.c: 432: porcentaje = 80;
  5322   000BD2  0E00               	movlw	0
  5323   000BD4  0100               	movlb	0	; () banked
  5324   000BD6  6FAE               	movwf	_porcentaje& (0+255),b
  5325   000BD8  0EA0               	movlw	160
  5326   000BDA  6FAF               	movwf	(_porcentaje+1)& (0+255),b
  5327   000BDC  0E42               	movlw	66
  5328   000BDE  6FB0               	movwf	(_porcentaje+2)& (0+255),b
  5329                           
  5330                           ;main.c: 433: CCPR1L = 200;
  5331   000BE0  0EC8               	movlw	200
  5332   000BE2  D016               	goto	L6
  5333   000BE4                     i2l4239:
  5334                           
  5335                           ;main.c: 435: else if ((recibir == 'n' || recibir == 'N')) {
  5336   000BE4  0E6E               	movlw	110
  5337   000BE6  184D               	xorwf	_recibir^0,w,c
  5338   000BE8  B4D8               	btfsc	status,2,c
  5339   000BEA  D004               	goto	i2u364_40
  5340   000BEC  0E4E               	movlw	78
  5341   000BEE  184D               	xorwf	_recibir^0,w,c
  5342   000BF0  A4D8               	btfss	status,2,c
  5343   000BF2  D010               	goto	i2l4245
  5344   000BF4                     i2u364_40:
  5345                           
  5346                           ;main.c: 436: porcentajeManual = 0;
  5347   000BF4  0E00               	movlw	0
  5348   000BF6  6E37               	movwf	_porcentajeManual^0,c
  5349   000BF8  0E00               	movlw	0
  5350   000BFA  6E38               	movwf	(_porcentajeManual+1)^0,c
  5351   000BFC  0E00               	movlw	0
  5352   000BFE  6E39               	movwf	(_porcentajeManual+2)^0,c
  5353                           
  5354                           ;main.c: 437: porcentaje = 100;
  5355   000C00  0E00               	movlw	0
  5356   000C02  0100               	movlb	0	; () banked
  5357   000C04  6FAE               	movwf	_porcentaje& (0+255),b
  5358   000C06  0EC8               	movlw	200
  5359   000C08  6FAF               	movwf	(_porcentaje+1)& (0+255),b
  5360   000C0A  0E42               	movlw	66
  5361   000C0C  6FB0               	movwf	(_porcentaje+2)& (0+255),b
  5362                           
  5363                           ;main.c: 438: CCPR1L = 250;
  5364   000C0E  0EFA               	movlw	250
  5365   000C10                     L6:
  5366   000C10  6EBE               	movwf	190,c	;volatile
  5367                           
  5368                           ;main.c: 439: }
  5369   000C12  D00E               	goto	i2l463
  5370   000C14                     i2l4245:
  5371                           
  5372                           ;main.c: 440: else if ((recibir == 'm' || recibir == 'M')) {
  5373   000C14  0E6D               	movlw	109
  5374   000C16  184D               	xorwf	_recibir^0,w,c
  5375   000C18  B4D8               	btfsc	status,2,c
  5376   000C1A  D004               	goto	i2u366_40
  5377   000C1C  0E4D               	movlw	77
  5378   000C1E  184D               	xorwf	_recibir^0,w,c
  5379   000C20  A4D8               	btfss	status,2,c
  5380   000C22  D006               	goto	i2l463
  5381   000C24                     i2u366_40:
  5382                           
  5383                           ;main.c: 441: porcentajeManual = 1;
  5384   000C24  0E00               	movlw	0
  5385   000C26  6E37               	movwf	_porcentajeManual^0,c
  5386   000C28  0E80               	movlw	128
  5387   000C2A  6E38               	movwf	(_porcentajeManual+1)^0,c
  5388   000C2C  0E3F               	movlw	63
  5389   000C2E  6E39               	movwf	(_porcentajeManual+2)^0,c
  5390   000C30                     i2l463:
  5391   000C30  C036  FFF5         	movff	??_ISR+9,tablat
  5392   000C34  C035  FFF8         	movff	??_ISR+8,tblptru
  5393   000C38  C034  FFF7         	movff	??_ISR+7,tblptrh
  5394   000C3C  C033  FFF6         	movff	??_ISR+6,tblptrl
  5395   000C40  C032  FFF4         	movff	??_ISR+5,prodh
  5396   000C44  C031  FFF3         	movff	??_ISR+4,prodl
  5397   000C48  C030  FFDA         	movff	??_ISR+3,fsr2h
  5398   000C4C  C02F  FFD9         	movff	??_ISR+2,fsr2l
  5399   000C50  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5400   000C52  0011               	retfie		f
  5401   000C54                     __end_of_ISR:
  5402                           	callstack 0
  5403                           
  5404 ;; *************** function _okmenu *****************
  5405 ;; Defined at:
  5406 ;;		line 341 in file "main.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 3F/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5423 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used: 1
  5426 ;; Hardware stack levels required when called: 5
  5427 ;; This function calls:
  5428 ;;		i2_ContarReal
  5429 ;;		i2_escenario1
  5430 ;; This function is called by:
  5431 ;;		_ISR
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text27
  5436   00237A                     __ptext27:
  5437                           	callstack 0
  5438   00237A                     _okmenu:
  5439                           	callstack 19
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;main.c: 342: if (menu == 1) ContarReal();
  5443                           
  5444                           ;incstack = 0
  5445   00237A  056C               	decf	_menu& (0+255),w,b
  5446   00237C  116D               	iorwf	(_menu+1)& (0+255),w,b
  5447   00237E  A4D8               	btfss	status,2,c
  5448   002380  D003               	goto	i2l3881
  5449                           
  5450                           ; BSR set to: 0
  5451   002382  EC16  F009         	call	i2_ContarReal	;wreg free
  5452   002386  0012               	return	
  5453   002388                     i2l3881:
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;main.c: 343: else if (menu == 2);
  5457   002388  0E02               	movlw	2
  5458   00238A  196C               	xorwf	_menu& (0+255),w,b
  5459   00238C  116D               	iorwf	(_menu+1)& (0+255),w,b
  5460   00238E  B4D8               	btfsc	status,2,c
  5461   002390  0012               	return	
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;main.c: 344: else if (menu == 3) escenario1();
  5465   002392  0E03               	movlw	3
  5466   002394  196C               	xorwf	_menu& (0+255),w,b
  5467   002396  116D               	iorwf	(_menu+1)& (0+255),w,b
  5468   002398  A4D8               	btfss	status,2,c
  5469   00239A  0012               	return	
  5470                           
  5471                           ; BSR set to: 0
  5472   00239C  EC0C  F010         	call	i2_escenario1	;wreg free
  5473   0023A0  0012               	return		;funcret
  5474   0023A2                     __end_of_okmenu:
  5475                           	callstack 0
  5476                           
  5477 ;; *************** function i2_ContarReal *****************
  5478 ;; Defined at:
  5479 ;;		line 278 in file "main.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;		None
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;		None
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  1    wreg      void 
  5486 ;; Registers used:
  5487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 3F/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5493 ;;      Params:         0       0       0       0       0       0       0       0       0
  5494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5495 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5496 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5497 ;;Total ram usage:        2 bytes
  5498 ;; Hardware stack levels used: 1
  5499 ;; Hardware stack levels required when called: 4
  5500 ;; This function calls:
  5501 ;;		i2___awdiv
  5502 ;;		i2___awmod
  5503 ;;		i2___wmul
  5504 ;;		i2_escenario2
  5505 ;;		i2_escenario3
  5506 ;;		i2_vaciar
  5507 ;; This function is called by:
  5508 ;;		_okmenu
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text28
  5513   00122C                     __ptext28:
  5514                           	callstack 0
  5515   00122C                     i2_ContarReal:
  5516                           	callstack 19
  5517                           
  5518                           ; BSR set to: 0
  5519                           ;main.c: 279: cantidad = (decena * 10) + unidad;
  5520                           
  5521                           ;incstack = 0
  5522   00122C  C0C1  F001         	movff	_decena,i2___wmul@multiplier
  5523   001230  C0C2  F002         	movff	_decena+1,i2___wmul@multiplier+1
  5524   001234  0E00               	movlw	0
  5525   001236  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5526   001238  0E0A               	movlw	10
  5527   00123A  6E03               	movwf	i2___wmul@multiplicand^0,c
  5528   00123C  ECF7  F011         	call	i2___wmul	;wreg free
  5529   001240  51BF               	movf	_unidad& (0+255),w,b
  5530   001242  2401               	addwf	?i2___wmul^0,w,c
  5531   001244  6FBD               	movwf	_cantidad& (0+255),b
  5532   001246  51C0               	movf	(_unidad+1)& (0+255),w,b
  5533   001248  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5534   00124A  6FBE               	movwf	(_cantidad+1)& (0+255),b
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;main.c: 280: contador++;
  5538   00124C  4BBB               	infsnz	_contador& (0+255),f,b
  5539   00124E  2BBC               	incf	(_contador+1)& (0+255),f,b
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;main.c: 281: cantidadResta = cantidad - contador + 1;
  5543   001250  51BB               	movf	_contador& (0+255),w,b
  5544   001252  5DBD               	subwf	_cantidad& (0+255),w,b
  5545   001254  6E09               	movwf	??i2_ContarReal^0,c
  5546   001256  51BC               	movf	(_contador+1)& (0+255),w,b
  5547   001258  59BE               	subwfb	(_cantidad+1)& (0+255),w,b
  5548   00125A  6E0A               	movwf	(??i2_ContarReal+1)^0,c
  5549   00125C  0E01               	movlw	1
  5550   00125E  2409               	addwf	??i2_ContarReal^0,w,c
  5551   001260  6FB9               	movwf	_cantidadResta& (0+255),b
  5552   001262  0E00               	movlw	0
  5553   001264  200A               	addwfc	(??i2_ContarReal+1)^0,w,c
  5554   001266  6FBA               	movwf	(_cantidadResta+1)& (0+255),b
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;main.c: 282: cantidadRestaUnidad = 0b00110000 + cantidadResta % 10;
  5558   001268  C0B9  F001         	movff	_cantidadResta,i2___awmod@dividend
  5559   00126C  C0BA  F002         	movff	_cantidadResta+1,i2___awmod@dividend+1
  5560   001270  0E00               	movlw	0
  5561   001272  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5562   001274  0E0A               	movlw	10
  5563   001276  6E03               	movwf	i2___awmod@divisor^0,c
  5564   001278  ECCF  F00E         	call	i2___awmod	;wreg free
  5565   00127C  0E30               	movlw	48
  5566   00127E  2401               	addwf	?i2___awmod^0,w,c
  5567   001280  6FB7               	movwf	_cantidadRestaUnidad& (0+255),b
  5568   001282  0E00               	movlw	0
  5569   001284  2002               	addwfc	(?i2___awmod+1)^0,w,c
  5570   001286  6FB8               	movwf	(_cantidadRestaUnidad+1)& (0+255),b
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;main.c: 283: cantidadRestaDecena = 0b00110000 + cantidadResta / 10;
  5574   001288  C0B9  F001         	movff	_cantidadResta,i2___awdiv@dividend
  5575   00128C  C0BA  F002         	movff	_cantidadResta+1,i2___awdiv@dividend+1
  5576   001290  0E00               	movlw	0
  5577   001292  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  5578   001294  0E0A               	movlw	10
  5579   001296  6E03               	movwf	i2___awdiv@divisor^0,c
  5580   001298  ECDA  F00D         	call	i2___awdiv	;wreg free
  5581   00129C  0E30               	movlw	48
  5582   00129E  2401               	addwf	?i2___awdiv^0,w,c
  5583   0012A0  6FB5               	movwf	_cantidadRestaDecena& (0+255),b
  5584   0012A2  0E00               	movlw	0
  5585   0012A4  2002               	addwfc	(?i2___awdiv+1)^0,w,c
  5586   0012A6  6FB6               	movwf	(_cantidadRestaDecena+1)& (0+255),b
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;main.c: 284: contadorUnidad = (contador - 1) % 10;
  5590   0012A8  0EFF               	movlw	255
  5591   0012AA  25BB               	addwf	_contador& (0+255),w,b
  5592   0012AC  6E01               	movwf	i2___awmod@dividend^0,c
  5593   0012AE  0EFF               	movlw	255
  5594   0012B0  21BC               	addwfc	(_contador+1)& (0+255),w,b
  5595   0012B2  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  5596   0012B4  0E00               	movlw	0
  5597   0012B6  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5598   0012B8  0E0A               	movlw	10
  5599   0012BA  6E03               	movwf	i2___awmod@divisor^0,c
  5600   0012BC  ECCF  F00E         	call	i2___awmod	;wreg free
  5601   0012C0  C001  F0B3         	movff	?i2___awmod,_contadorUnidad
  5602   0012C4  C002  F0B4         	movff	?i2___awmod+1,_contadorUnidad+1
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;main.c: 285: contadorDecena = (contador - 1) / 10;
  5606   0012C8  0EFF               	movlw	255
  5607   0012CA  25BB               	addwf	_contador& (0+255),w,b
  5608   0012CC  6E01               	movwf	i2___awdiv@dividend^0,c
  5609   0012CE  0EFF               	movlw	255
  5610   0012D0  21BC               	addwfc	(_contador+1)& (0+255),w,b
  5611   0012D2  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
  5612   0012D4  0E00               	movlw	0
  5613   0012D6  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  5614   0012D8  0E0A               	movlw	10
  5615   0012DA  6E03               	movwf	i2___awdiv@divisor^0,c
  5616   0012DC  ECDA  F00D         	call	i2___awdiv	;wreg free
  5617   0012E0  C001  F0B1         	movff	?i2___awdiv,_contadorDecena
  5618   0012E4  C002  F0B2         	movff	?i2___awdiv+1,_contadorDecena+1
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;main.c: 287: LATD = contadorUnidad;
  5622   0012E8  C0B3  FF8C         	movff	_contadorUnidad,3980	;volatile
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;main.c: 288: LATE = color[contadorDecena];
  5626   0012EC  51B1               	movf	_contadorDecena& (0+255),w,b
  5627   0012EE  0D02               	mullw	2
  5628   0012F0  50F3               	movf	243,w,c
  5629   0012F2  0F60               	addlw	low _color
  5630   0012F4  6ED9               	movwf	fsr2l,c
  5631   0012F6  6ADA               	clrf	fsr2h,c
  5632   0012F8  50DF               	movf	indf2,w,c
  5633   0012FA  6E8D               	movwf	141,c	;volatile
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;main.c: 289: escenario2();
  5637   0012FC  EC0B  F00D         	call	i2_escenario2	;wreg free
  5638                           
  5639                           ;main.c: 290: _delay((unsigned long)((1000)*(8000000/4000.0)));
  5640   001300  0E0B               	movlw	11
  5641   001302  6E0A               	movwf	(??i2_ContarReal+1)^0,c
  5642   001304  0E26               	movlw	38
  5643   001306  6E09               	movwf	??i2_ContarReal^0,c
  5644   001308  0E5E               	movlw	94
  5645   00130A                     i2u381_47:
  5646   00130A  2EE8               	decfsz	wreg,f,c
  5647   00130C  D7FE               	bra	i2u381_47
  5648   00130E  2E09               	decfsz	??i2_ContarReal^0,f,c
  5649   001310  D7FC               	bra	i2u381_47
  5650   001312  2E0A               	decfsz	(??i2_ContarReal+1)^0,f,c
  5651   001314  D7FA               	bra	i2u381_47
  5652                           
  5653                           ;main.c: 291: if (!cantidadResta) {
  5654   001316  0100               	movlb	0	; () banked
  5655   001318  51B9               	movf	_cantidadResta& (0+255),w,b
  5656   00131A  11BA               	iorwf	(_cantidadResta+1)& (0+255),w,b
  5657   00131C  A4D8               	btfss	status,2,c
  5658   00131E  0012               	return	
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;main.c: 292: vaciar();
  5662   001320  EC71  F010         	call	i2_vaciar	;wreg free
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;main.c: 293: escenario3();
  5666   001324  EC2A  F011         	call	i2_escenario3	;wreg free
  5667   001328  0012               	return		;funcret
  5668   00132A                     __end_ofi2_ContarReal:
  5669                           	callstack 0
  5670                           
  5671 ;; *************** function i2_escenario3 *****************
  5672 ;; Defined at:
  5673 ;;		line 217 in file "main.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;		None
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;		None
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  1    wreg      void 
  5680 ;; Registers used:
  5681 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 3F/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5687 ;;      Params:         0       0       0       0       0       0       0       0       0
  5688 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5690 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5691 ;;Total ram usage:        0 bytes
  5692 ;; Hardware stack levels used: 1
  5693 ;; Hardware stack levels required when called: 3
  5694 ;; This function calls:
  5695 ;;		i2_Lcd_Clear
  5696 ;;		i2_Lcd_NoBlink
  5697 ;;		i2_Lcd_Set_Cursor
  5698 ;;		i2_Lcd_Write_String
  5699 ;; This function is called by:
  5700 ;;		i2_ContarReal
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text29
  5705   002254                     __ptext29:
  5706                           	callstack 0
  5707   002254                     i2_escenario3:
  5708                           	callstack 19
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;main.c: 218: menu = 3;
  5712                           
  5713                           ;incstack = 0
  5714   002254  0E00               	movlw	0
  5715   002256  6F6D               	movwf	(_menu+1)& (0+255),b
  5716   002258  0E03               	movlw	3
  5717   00225A  6F6C               	movwf	_menu& (0+255),b
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;main.c: 219: Lcd_Clear();
  5721   00225C  EC78  F012         	call	i2_Lcd_Clear	;wreg free
  5722                           
  5723                           ;main.c: 220: Lcd_NoBlink();
  5724   002260  EC71  F012         	call	i2_Lcd_NoBlink	;wreg free
  5725                           
  5726                           ;main.c: 221: Lcd_Set_Cursor(1, 1);
  5727   002264  0E01               	movlw	1
  5728   002266  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  5729   002268  0E01               	movlw	1
  5730   00226A  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  5731                           
  5732                           ;main.c: 222: Lcd_Write_String("Cuenta finalizada");
  5733   00226E  0E54               	movlw	low STR_11
  5734   002270  6E05               	movwf	i2Lcd_Write_String@a^0,c
  5735   002272  ECD1  F010         	call	i2_Lcd_Write_String	;wreg free
  5736                           
  5737                           ;main.c: 223: Lcd_Set_Cursor(2, 13);
  5738   002276  0E0D               	movlw	13
  5739   002278  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  5740   00227A  0E02               	movlw	2
  5741   00227C  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  5742                           
  5743                           ;main.c: 224: Lcd_Write_String("A:OK");
  5744   002280  0ECF               	movlw	low STR_12
  5745   002282  6E05               	movwf	i2Lcd_Write_String@a^0,c
  5746   002284  ECD1  F010         	call	i2_Lcd_Write_String	;wreg free
  5747   002288  0012               	return		;funcret
  5748   00228A                     __end_ofi2_escenario3:
  5749                           	callstack 0
  5750                           
  5751 ;; *************** function i2___wmul *****************
  5752 ;; Defined at:
  5753 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/Umul16.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  multiplier      2    0[COMRAM] unsigned int 
  5756 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  product         2    4[COMRAM] unsigned int 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  2    0[COMRAM] unsigned int 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0, prodl, prodh
  5763 ;; Tracked objects:
  5764 ;;		On entry : 3F/0
  5765 ;;		On exit  : 3F/0
  5766 ;;		Unchanged: 3F/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5768 ;;      Params:         4       0       0       0       0       0       0       0       0
  5769 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5771 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5772 ;;Total ram usage:        6 bytes
  5773 ;; Hardware stack levels used: 1
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		i2_ContarReal
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text30
  5782   0023EE                     __ptext30:
  5783                           	callstack 0
  5784   0023EE                     i2___wmul:
  5785                           	callstack 22
  5786                           
  5787                           ; BSR set to: 0
  5788                           
  5789                           ;incstack = 0
  5790   0023EE  5001               	movf	i2___wmul@multiplier^0,w,c
  5791   0023F0  0203               	mulwf	i2___wmul@multiplicand^0,c
  5792   0023F2  CFF3 F005          	movff	prodl,i2___wmul@product
  5793   0023F6  CFF4 F006          	movff	prodh,i2___wmul@product+1
  5794   0023FA  5001               	movf	i2___wmul@multiplier^0,w,c
  5795   0023FC  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  5796   0023FE  50F3               	movf	243,w,c
  5797   002400  2606               	addwf	(i2___wmul@product+1)^0,f,c
  5798   002402  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  5799   002404  0203               	mulwf	i2___wmul@multiplicand^0,c
  5800   002406  50F3               	movf	243,w,c
  5801   002408  2606               	addwf	(i2___wmul@product+1)^0,f,c
  5802                           
  5803                           ; BSR set to: 0
  5804   00240A  C005  F001         	movff	i2___wmul@product,?i2___wmul
  5805   00240E  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  5806                           
  5807                           ; BSR set to: 0
  5808   002412  0012               	return		;funcret
  5809   002414                     __end_ofi2___wmul:
  5810                           	callstack 0
  5811                           
  5812 ;; *************** function i2___awmod *****************
  5813 ;; Defined at:
  5814 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awmod.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  dividend        2    0[COMRAM] int 
  5817 ;;  divisor         2    2[COMRAM] int 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  sign            1    5[COMRAM] unsigned char 
  5820 ;;  counter         1    4[COMRAM] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  2    0[COMRAM] int 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0
  5825 ;; Tracked objects:
  5826 ;;		On entry : 3F/0
  5827 ;;		On exit  : 3F/0
  5828 ;;		Unchanged: 3F/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5830 ;;      Params:         4       0       0       0       0       0       0       0       0
  5831 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5833 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5834 ;;Total ram usage:        6 bytes
  5835 ;; Hardware stack levels used: 1
  5836 ;; This function calls:
  5837 ;;		Nothing
  5838 ;; This function is called by:
  5839 ;;		i2_ContarReal
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           	psect	text31
  5844   001D9E                     __ptext31:
  5845                           	callstack 0
  5846   001D9E                     i2___awmod:
  5847                           	callstack 22
  5848                           
  5849                           ; BSR set to: 0
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;incstack = 0
  5853   001D9E  0E00               	movlw	0
  5854   001DA0  6E06               	movwf	i2___awmod@sign^0,c
  5855                           
  5856                           ; BSR set to: 0
  5857   001DA2  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  5858   001DA4  D006               	goto	i2l3103
  5859                           
  5860                           ; BSR set to: 0
  5861   001DA6  6C01               	negf	i2___awmod@dividend^0,c
  5862   001DA8  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5863   001DAA  B0D8               	btfsc	status,0,c
  5864   001DAC  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5865                           
  5866                           ; BSR set to: 0
  5867   001DAE  0E01               	movlw	1
  5868   001DB0  6E06               	movwf	i2___awmod@sign^0,c
  5869   001DB2                     i2l3103:
  5870                           
  5871                           ; BSR set to: 0
  5872   001DB2  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  5873   001DB4  D004               	goto	i2l3107
  5874                           
  5875                           ; BSR set to: 0
  5876   001DB6  6C03               	negf	i2___awmod@divisor^0,c
  5877   001DB8  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  5878   001DBA  B0D8               	btfsc	status,0,c
  5879   001DBC  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  5880   001DBE                     i2l3107:
  5881                           
  5882                           ; BSR set to: 0
  5883   001DBE  5003               	movf	i2___awmod@divisor^0,w,c
  5884   001DC0  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  5885   001DC2  B4D8               	btfsc	status,2,c
  5886   001DC4  D018               	goto	i2l3123
  5887                           
  5888                           ; BSR set to: 0
  5889   001DC6  0E01               	movlw	1
  5890   001DC8  6E05               	movwf	i2___awmod@counter^0,c
  5891   001DCA  D004               	goto	i2l3113
  5892   001DCC                     i2l3111:
  5893                           
  5894                           ; BSR set to: 0
  5895   001DCC  90D8               	bcf	status,0,c
  5896   001DCE  3603               	rlcf	i2___awmod@divisor^0,f,c
  5897   001DD0  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  5898   001DD2  2A05               	incf	i2___awmod@counter^0,f,c
  5899   001DD4                     i2l3113:
  5900                           
  5901                           ; BSR set to: 0
  5902   001DD4  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  5903   001DD6  D7FA               	goto	i2l3111
  5904   001DD8                     i2u219_40:
  5905                           
  5906                           ; BSR set to: 0
  5907   001DD8  5003               	movf	i2___awmod@divisor^0,w,c
  5908   001DDA  5C01               	subwf	i2___awmod@dividend^0,w,c
  5909   001DDC  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5910   001DDE  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  5911   001DE0  A0D8               	btfss	status,0,c
  5912   001DE2  D004               	goto	i2l3119
  5913                           
  5914                           ; BSR set to: 0
  5915   001DE4  5003               	movf	i2___awmod@divisor^0,w,c
  5916   001DE6  5E01               	subwf	i2___awmod@dividend^0,f,c
  5917   001DE8  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5918   001DEA  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  5919   001DEC                     i2l3119:
  5920                           
  5921                           ; BSR set to: 0
  5922   001DEC  90D8               	bcf	status,0,c
  5923   001DEE  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  5924   001DF0  3203               	rrcf	i2___awmod@divisor^0,f,c
  5925                           
  5926                           ; BSR set to: 0
  5927   001DF2  2E05               	decfsz	i2___awmod@counter^0,f,c
  5928   001DF4  D7F1               	goto	i2u219_40
  5929   001DF6                     i2l3123:
  5930                           
  5931                           ; BSR set to: 0
  5932   001DF6  5006               	movf	i2___awmod@sign^0,w,c
  5933   001DF8  B4D8               	btfsc	status,2,c
  5934   001DFA  D004               	goto	i2l3127
  5935                           
  5936                           ; BSR set to: 0
  5937   001DFC  6C01               	negf	i2___awmod@dividend^0,c
  5938   001DFE  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5939   001E00  B0D8               	btfsc	status,0,c
  5940   001E02  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5941   001E04                     i2l3127:
  5942                           
  5943                           ; BSR set to: 0
  5944   001E04  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  5945   001E08  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  5946                           
  5947                           ; BSR set to: 0
  5948   001E0C  0012               	return		;funcret
  5949   001E0E                     __end_ofi2___awmod:
  5950                           	callstack 0
  5951                           
  5952 ;; *************** function i2___awdiv *****************
  5953 ;; Defined at:
  5954 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awdiv.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  dividend        2    0[COMRAM] int 
  5957 ;;  divisor         2    2[COMRAM] int 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  quotient        2    6[COMRAM] int 
  5960 ;;  sign            1    5[COMRAM] unsigned char 
  5961 ;;  counter         1    4[COMRAM] unsigned char 
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  2    0[COMRAM] int 
  5964 ;; Registers used:
  5965 ;;		wreg, status,2, status,0
  5966 ;; Tracked objects:
  5967 ;;		On entry : 3F/0
  5968 ;;		On exit  : 3F/0
  5969 ;;		Unchanged: 3F/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5971 ;;      Params:         4       0       0       0       0       0       0       0       0
  5972 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5974 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5975 ;;Total ram usage:        8 bytes
  5976 ;; Hardware stack levels used: 1
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		i2_ContarReal
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text32
  5985   001BB4                     __ptext32:
  5986                           	callstack 0
  5987   001BB4                     i2___awdiv:
  5988                           	callstack 22
  5989                           
  5990                           ; BSR set to: 0
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;incstack = 0
  5994   001BB4  0E00               	movlw	0
  5995   001BB6  6E06               	movwf	i2___awdiv@sign^0,c
  5996                           
  5997                           ; BSR set to: 0
  5998   001BB8  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  5999   001BBA  D006               	goto	i2l3059
  6000                           
  6001                           ; BSR set to: 0
  6002   001BBC  6C03               	negf	i2___awdiv@divisor^0,c
  6003   001BBE  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  6004   001BC0  B0D8               	btfsc	status,0,c
  6005   001BC2  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  6006                           
  6007                           ; BSR set to: 0
  6008   001BC4  0E01               	movlw	1
  6009   001BC6  6E06               	movwf	i2___awdiv@sign^0,c
  6010   001BC8                     i2l3059:
  6011                           
  6012                           ; BSR set to: 0
  6013   001BC8  AE02               	btfss	(i2___awdiv@dividend+1)^0,7,c
  6014   001BCA  D006               	goto	i2l3065
  6015                           
  6016                           ; BSR set to: 0
  6017   001BCC  6C01               	negf	i2___awdiv@dividend^0,c
  6018   001BCE  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  6019   001BD0  B0D8               	btfsc	status,0,c
  6020   001BD2  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  6021                           
  6022                           ; BSR set to: 0
  6023   001BD4  0E01               	movlw	1
  6024   001BD6  1A06               	xorwf	i2___awdiv@sign^0,f,c
  6025   001BD8                     i2l3065:
  6026                           
  6027                           ; BSR set to: 0
  6028   001BD8  0E00               	movlw	0
  6029   001BDA  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  6030   001BDC  0E00               	movlw	0
  6031   001BDE  6E07               	movwf	i2___awdiv@quotient^0,c
  6032                           
  6033                           ; BSR set to: 0
  6034   001BE0  5003               	movf	i2___awdiv@divisor^0,w,c
  6035   001BE2  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  6036   001BE4  B4D8               	btfsc	status,2,c
  6037   001BE6  D01C               	goto	i2l3087
  6038                           
  6039                           ; BSR set to: 0
  6040   001BE8  0E01               	movlw	1
  6041   001BEA  6E05               	movwf	i2___awdiv@counter^0,c
  6042   001BEC  D004               	goto	i2l3073
  6043   001BEE                     i2l3071:
  6044                           
  6045                           ; BSR set to: 0
  6046   001BEE  90D8               	bcf	status,0,c
  6047   001BF0  3603               	rlcf	i2___awdiv@divisor^0,f,c
  6048   001BF2  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  6049   001BF4  2A05               	incf	i2___awdiv@counter^0,f,c
  6050   001BF6                     i2l3073:
  6051                           
  6052                           ; BSR set to: 0
  6053   001BF6  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  6054   001BF8  D7FA               	goto	i2l3071
  6055   001BFA                     i2u213_40:
  6056                           
  6057                           ; BSR set to: 0
  6058   001BFA  90D8               	bcf	status,0,c
  6059   001BFC  3607               	rlcf	i2___awdiv@quotient^0,f,c
  6060   001BFE  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  6061                           
  6062                           ; BSR set to: 0
  6063   001C00  5003               	movf	i2___awdiv@divisor^0,w,c
  6064   001C02  5C01               	subwf	i2___awdiv@dividend^0,w,c
  6065   001C04  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  6066   001C06  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  6067   001C08  A0D8               	btfss	status,0,c
  6068   001C0A  D005               	goto	i2l3083
  6069                           
  6070                           ; BSR set to: 0
  6071   001C0C  5003               	movf	i2___awdiv@divisor^0,w,c
  6072   001C0E  5E01               	subwf	i2___awdiv@dividend^0,f,c
  6073   001C10  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  6074   001C12  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  6075                           
  6076                           ; BSR set to: 0
  6077   001C14  8007               	bsf	i2___awdiv@quotient^0,0,c
  6078   001C16                     i2l3083:
  6079                           
  6080                           ; BSR set to: 0
  6081   001C16  90D8               	bcf	status,0,c
  6082   001C18  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  6083   001C1A  3203               	rrcf	i2___awdiv@divisor^0,f,c
  6084                           
  6085                           ; BSR set to: 0
  6086   001C1C  2E05               	decfsz	i2___awdiv@counter^0,f,c
  6087   001C1E  D7ED               	goto	i2u213_40
  6088   001C20                     i2l3087:
  6089                           
  6090                           ; BSR set to: 0
  6091   001C20  5006               	movf	i2___awdiv@sign^0,w,c
  6092   001C22  B4D8               	btfsc	status,2,c
  6093   001C24  D004               	goto	i2l3091
  6094                           
  6095                           ; BSR set to: 0
  6096   001C26  6C07               	negf	i2___awdiv@quotient^0,c
  6097   001C28  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  6098   001C2A  B0D8               	btfsc	status,0,c
  6099   001C2C  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  6100   001C2E                     i2l3091:
  6101                           
  6102                           ; BSR set to: 0
  6103   001C2E  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  6104   001C32  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  6105                           
  6106                           ; BSR set to: 0
  6107   001C36  0012               	return		;funcret
  6108   001C38                     __end_ofi2___awdiv:
  6109                           	callstack 0
  6110                           
  6111 ;; *************** function _escenario4 *****************
  6112 ;; Defined at:
  6113 ;;		line 228 in file "main.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;		None
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1    wreg      void 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6127 ;;      Params:         0       0       0       0       0       0       0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6130 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6131 ;;Total ram usage:        0 bytes
  6132 ;; Hardware stack levels used: 1
  6133 ;; Hardware stack levels required when called: 3
  6134 ;; This function calls:
  6135 ;;		i2_Lcd_Clear
  6136 ;;		i2_Lcd_NoBlink
  6137 ;;		i2_Lcd_Set_Cursor
  6138 ;;		i2_Lcd_Write_Char
  6139 ;;		i2_Lcd_Write_String
  6140 ;; This function is called by:
  6141 ;;		_ISR
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text33
  6146   001FCC                     __ptext33:
  6147                           	callstack 0
  6148   001FCC                     _escenario4:
  6149                           	callstack 21
  6150                           
  6151                           ;main.c: 229: Lcd_Clear();
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;incstack = 0
  6155   001FCC  EC78  F012         	call	i2_Lcd_Clear	;wreg free
  6156                           
  6157                           ;main.c: 230: Lcd_NoBlink();
  6158   001FD0  EC71  F012         	call	i2_Lcd_NoBlink	;wreg free
  6159                           
  6160                           ;main.c: 231: Lcd_Set_Cursor(1, 1);
  6161   001FD4  0E01               	movlw	1
  6162   001FD6  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6163   001FD8  0E01               	movlw	1
  6164   001FDA  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  6165                           
  6166                           ;main.c: 232: Lcd_Write_String("Parada de");
  6167   001FDE  0EBD               	movlw	low STR_13
  6168   001FE0  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6169   001FE2  ECD1  F010         	call	i2_Lcd_Write_String	;wreg free
  6170                           
  6171                           ;main.c: 233: Lcd_Set_Cursor(2, 1);
  6172   001FE6  0E01               	movlw	1
  6173   001FE8  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6174   001FEA  0E02               	movlw	2
  6175   001FEC  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  6176                           
  6177                           ;main.c: 234: Lcd_Write_String("Emergencia ");
  6178   001FF0  0E86               	movlw	low STR_14
  6179   001FF2  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6180   001FF4  ECD1  F010         	call	i2_Lcd_Write_String	;wreg free
  6181                           
  6182                           ;main.c: 235: Lcd_Write_Char(3);
  6183   001FF8  0E03               	movlw	3
  6184   001FFA  EC0E  F011         	call	i2_Lcd_Write_Char
  6185                           
  6186                           ;main.c: 236: flagParar = 0;
  6187   001FFE  0E00               	movlw	0
  6188   002000  6E46               	movwf	(_flagParar+1)^0,c
  6189   002002  0E00               	movlw	0
  6190   002004  6E45               	movwf	_flagParar^0,c
  6191                           
  6192                           ;main.c: 237: LATE = rojo;
  6193   002006  C03D  FF8D         	movff	_rojo,3981	;volatile
  6194                           
  6195                           ;main.c: 238: CCPR1L = 0;
  6196   00200A  0E00               	movlw	0
  6197   00200C  6EBE               	movwf	190,c	;volatile
  6198                           
  6199                           ;main.c: 239: motorEstado = 0;
  6200   00200E  0E00               	movlw	0
  6201   002010  6E40               	movwf	(_motorEstado+1)^0,c
  6202   002012  0E00               	movlw	0
  6203   002014  6E3F               	movwf	_motorEstado^0,c
  6204   002016  0012               	return		;funcret
  6205   002018                     __end_of_escenario4:
  6206                           	callstack 0
  6207                           
  6208 ;; *************** function _borrarDigito *****************
  6209 ;; Defined at:
  6210 ;;		line 267 in file "main.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;		None
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;		None
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  1    wreg      void 
  6217 ;; Registers used:
  6218 ;;		wreg, status,2, status,0, cstack
  6219 ;; Tracked objects:
  6220 ;;		On entry : 3F/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6224 ;;      Params:         0       0       0       0       0       0       0       0       0
  6225 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6227 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6228 ;;Total ram usage:        0 bytes
  6229 ;; Hardware stack levels used: 1
  6230 ;; Hardware stack levels required when called: 3
  6231 ;; This function calls:
  6232 ;;		i2_Lcd_Set_Cursor
  6233 ;;		i2_Lcd_Write_Char
  6234 ;; This function is called by:
  6235 ;;		_ISR
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text34
  6240   001F2A                     __ptext34:
  6241                           	callstack 0
  6242   001F2A                     _borrarDigito:
  6243                           	callstack 21
  6244                           
  6245                           ; BSR set to: 0
  6246                           ;main.c: 268: if (digito != 1) {
  6247                           
  6248                           ;incstack = 0
  6249   001F2A  0441               	decf	_digito^0,w,c
  6250   001F2C  1042               	iorwf	(_digito+1)^0,w,c
  6251   001F2E  B4D8               	btfsc	status,2,c
  6252   001F30  0012               	return	
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;main.c: 269: Lcd_Set_Cursor(2, digito - 1);
  6256   001F32  0441               	decf	_digito^0,w,c
  6257   001F34  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6258   001F36  0E02               	movlw	2
  6259   001F38  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  6260                           
  6261                           ;main.c: 270: Lcd_Write_Char(' ');
  6262   001F3C  0E20               	movlw	32
  6263   001F3E  EC0E  F011         	call	i2_Lcd_Write_Char
  6264                           
  6265                           ;main.c: 271: Lcd_Set_Cursor(2, digito - 1);
  6266   001F42  0441               	decf	_digito^0,w,c
  6267   001F44  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6268   001F46  0E02               	movlw	2
  6269   001F48  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  6270                           
  6271                           ;main.c: 272: digito--;
  6272   001F4C  0641               	decf	_digito^0,f,c
  6273   001F4E  A0D8               	btfss	status,0,c
  6274   001F50  0642               	decf	(_digito+1)^0,f,c
  6275                           
  6276                           ;main.c: 273: if (digito == 1) decena = 0;
  6277   001F52  0441               	decf	_digito^0,w,c
  6278   001F54  1042               	iorwf	(_digito+1)^0,w,c
  6279   001F56  A4D8               	btfss	status,2,c
  6280   001F58  D006               	goto	i2l3843
  6281   001F5A  0E00               	movlw	0
  6282   001F5C  0100               	movlb	0	; () banked
  6283   001F5E  6FC2               	movwf	(_decena+1)& (0+255),b
  6284   001F60  0E00               	movlw	0
  6285   001F62  6FC1               	movwf	_decena& (0+255),b
  6286   001F64  0012               	return	
  6287   001F66                     i2l3843:
  6288                           
  6289                           ;main.c: 274: else if (digito == 2) unidad = 0;
  6290   001F66  0E02               	movlw	2
  6291   001F68  1841               	xorwf	_digito^0,w,c
  6292   001F6A  1042               	iorwf	(_digito+1)^0,w,c
  6293   001F6C  A4D8               	btfss	status,2,c
  6294   001F6E  0012               	return	
  6295   001F70  0E00               	movlw	0
  6296   001F72  0100               	movlb	0	; () banked
  6297   001F74  6FC0               	movwf	(_unidad+1)& (0+255),b
  6298   001F76  0E00               	movlw	0
  6299   001F78  6FBF               	movwf	_unidad& (0+255),b
  6300   001F7A  0012               	return		;funcret
  6301   001F7C                     __end_of_borrarDigito:
  6302                           	callstack 0
  6303                           
  6304 ;; *************** function _blacklighttoggle *****************
  6305 ;; Defined at:
  6306 ;;		line 179 in file "main.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;		None
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		None
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0
  6321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6323 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6324 ;;Total ram usage:        0 bytes
  6325 ;; Hardware stack levels used: 1
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		_ISR
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           	psect	text35
  6334   0024FE                     __ptext35:
  6335                           	callstack 0
  6336   0024FE                     _blacklighttoggle:
  6337                           	callstack 24
  6338                           
  6339                           ;main.c: 180: LATA5 = !LATA5;
  6340                           
  6341                           ;incstack = 0
  6342   0024FE  BA89               	btfsc	3977,5,c	;volatile
  6343   002500  D002               	goto	i2u284_40
  6344   002502  8A89               	bsf	3977,5,c	;volatile
  6345   002504  0012               	return	
  6346   002506                     i2u284_40:
  6347   002506  9A89               	bcf	3977,5,c	;volatile
  6348   002508  0012               	return		;funcret
  6349   00250A                     __end_of_blacklighttoggle:
  6350                           	callstack 0
  6351                           
  6352 ;; *************** function ___lwtoft *****************
  6353 ;; Defined at:
  6354 ;;		line 28 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/lwtoft.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  c               2    8[COMRAM] unsigned int 
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  3    8[COMRAM] float 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6368 ;;      Params:         3       0       0       0       0       0       0       0       0
  6369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6371 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6372 ;;Total ram usage:        3 bytes
  6373 ;; Hardware stack levels used: 1
  6374 ;; Hardware stack levels required when called: 1
  6375 ;; This function calls:
  6376 ;;		___ftpack
  6377 ;; This function is called by:
  6378 ;;		_ISR
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text36
  6383   00243A                     __ptext36:
  6384                           	callstack 0
  6385   00243A                     ___lwtoft:
  6386                           	callstack 23
  6387                           
  6388                           ;incstack = 0
  6389   00243A  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  6390   00243E  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  6391   002442  6A03               	clrf	(___ftpack@arg+2)^0,c
  6392   002444  0E8E               	movlw	142
  6393   002446  6E04               	movwf	___ftpack@exp^0,c
  6394   002448  0E00               	movlw	0
  6395   00244A  6E05               	movwf	___ftpack@sign^0,c
  6396   00244C  ECC0  F00B         	call	___ftpack	;wreg free
  6397   002450  C001  F009         	movff	?___ftpack,?___lwtoft
  6398   002454  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  6399   002458  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  6400   00245C  0012               	return		;funcret
  6401   00245E                     __end_of___lwtoft:
  6402                           	callstack 0
  6403                           
  6404 ;; *************** function _Trasmitir *****************
  6405 ;; Defined at:
  6406 ;;		line 325 in file "main.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  i               2    0[COMRAM] int 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1    wreg      void 
  6413 ;; Registers used:
  6414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6420 ;;      Params:         0       0       0       0       0       0       0       0       0
  6421 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6423 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6424 ;;Total ram usage:        2 bytes
  6425 ;; Hardware stack levels used: 1
  6426 ;; This function calls:
  6427 ;;		Nothing
  6428 ;; This function is called by:
  6429 ;;		_ISR
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           	psect	text37
  6434   0022C0                     __ptext37:
  6435                           	callstack 0
  6436   0022C0                     _Trasmitir:
  6437                           	callstack 24
  6438                           
  6439                           ;main.c: 326: int i;;main.c: 327: for (i = 0; buffer[i] != '\0'; i++) {
  6440                           
  6441                           ;incstack = 0
  6442   0022C0  0E00               	movlw	0
  6443   0022C2  6E02               	movwf	(Trasmitir@i+1)^0,c
  6444   0022C4  0E00               	movlw	0
  6445   0022C6  6E01               	movwf	Trasmitir@i^0,c
  6446   0022C8  D00A               	goto	i2l3869
  6447   0022CA                     i2l367:
  6448   0022CA  A2AC               	btfss	4012,1,c	;volatile
  6449   0022CC  D7FE               	goto	i2l367
  6450                           
  6451                           ;main.c: 329: TXREG = buffer[i];
  6452   0022CE  5001               	movf	Trasmitir@i^0,w,c
  6453   0022D0  0F6E               	addlw	low _buffer
  6454   0022D2  6ED9               	movwf	fsr2l,c
  6455   0022D4  6ADA               	clrf	fsr2h,c
  6456   0022D6  50DF               	movf	indf2,w,c
  6457   0022D8  6EAD               	movwf	173,c	;volatile
  6458   0022DA  4A01               	infsnz	Trasmitir@i^0,f,c
  6459   0022DC  2A02               	incf	(Trasmitir@i+1)^0,f,c
  6460   0022DE                     i2l3869:
  6461   0022DE  5001               	movf	Trasmitir@i^0,w,c
  6462   0022E0  0F6E               	addlw	low _buffer
  6463   0022E2  6ED9               	movwf	fsr2l,c
  6464   0022E4  6ADA               	clrf	fsr2h,c
  6465   0022E6  50DF               	movf	indf2,w,c
  6466   0022E8  A4D8               	btfss	status,2,c
  6467   0022EA  D7EF               	goto	i2l367
  6468                           
  6469                           ;main.c: 330: };main.c: 331: TXREG = '\n';
  6470   0022EC  0E0A               	movlw	10
  6471   0022EE  6EAD               	movwf	173,c	;volatile
  6472   0022F0  0012               	return		;funcret
  6473   0022F2                     __end_of_Trasmitir:
  6474                           	callstack 0
  6475                           
  6476 ;; *************** function _Terminar *****************
  6477 ;; Defined at:
  6478 ;;		line 320 in file "main.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;		None
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;		None
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      void 
  6485 ;; Registers used:
  6486 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6487 ;; Tracked objects:
  6488 ;;		On entry : 3F/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6492 ;;      Params:         0       0       0       0       0       0       0       0       0
  6493 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6495 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6496 ;;Total ram usage:        0 bytes
  6497 ;; Hardware stack levels used: 1
  6498 ;; Hardware stack levels required when called: 4
  6499 ;; This function calls:
  6500 ;;		i2_escenario1
  6501 ;;		i2_vaciar
  6502 ;; This function is called by:
  6503 ;;		_ISR
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           	psect	text38
  6508   00250A                     __ptext38:
  6509                           	callstack 0
  6510   00250A                     _Terminar:
  6511                           	callstack 20
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;main.c: 321: vaciar();
  6515                           
  6516                           ;incstack = 0
  6517   00250A  EC71  F010         	call	i2_vaciar	;wreg free
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;main.c: 322: escenario1();
  6521   00250E  EC0C  F010         	call	i2_escenario1	;wreg free
  6522   002512  0012               	return		;funcret
  6523   002514                     __end_of_Terminar:
  6524                           	callstack 0
  6525                           
  6526 ;; *************** function i2_vaciar *****************
  6527 ;; Defined at:
  6528 ;;		line 298 in file "main.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;		None
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;		None
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  1    wreg      void 
  6535 ;; Registers used:
  6536 ;;		wreg, status,2, status,0
  6537 ;; Tracked objects:
  6538 ;;		On entry : 3F/0
  6539 ;;		On exit  : 3F/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6542 ;;      Params:         0       0       0       0       0       0       0       0       0
  6543 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6545 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6546 ;;Total ram usage:        0 bytes
  6547 ;; Hardware stack levels used: 1
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_Terminar
  6552 ;;		i2_ContarReal
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           	psect	text39
  6557   0020E2                     __ptext39:
  6558                           	callstack 0
  6559   0020E2                     i2_vaciar:
  6560                           	callstack 22
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;main.c: 299: unidad = 0;
  6564                           
  6565                           ;incstack = 0
  6566   0020E2  0E00               	movlw	0
  6567   0020E4  6FC0               	movwf	(_unidad+1)& (0+255),b
  6568   0020E6  0E00               	movlw	0
  6569   0020E8  6FBF               	movwf	_unidad& (0+255),b
  6570                           
  6571                           ;main.c: 300: unidad = 0;
  6572   0020EA  0E00               	movlw	0
  6573   0020EC  6FC0               	movwf	(_unidad+1)& (0+255),b
  6574   0020EE  0E00               	movlw	0
  6575   0020F0  6FBF               	movwf	_unidad& (0+255),b
  6576                           
  6577                           ; BSR set to: 0
  6578                           ;main.c: 301: cantidadRestaUnidad = 0b00110000 + unidad;
  6579   0020F2  0E30               	movlw	48
  6580   0020F4  25BF               	addwf	_unidad& (0+255),w,b
  6581   0020F6  6FB7               	movwf	_cantidadRestaUnidad& (0+255),b
  6582   0020F8  0E00               	movlw	0
  6583   0020FA  21C0               	addwfc	(_unidad+1)& (0+255),w,b
  6584   0020FC  6FB8               	movwf	(_cantidadRestaUnidad+1)& (0+255),b
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;main.c: 302: cantidadRestaDecena = 0b00110000 + unidad;
  6588   0020FE  0E30               	movlw	48
  6589   002100  25BF               	addwf	_unidad& (0+255),w,b
  6590   002102  6FB5               	movwf	_cantidadRestaDecena& (0+255),b
  6591   002104  0E00               	movlw	0
  6592   002106  21C0               	addwfc	(_unidad+1)& (0+255),w,b
  6593   002108  6FB6               	movwf	(_cantidadRestaDecena+1)& (0+255),b
  6594                           
  6595                           ;main.c: 303: LATD = 0;
  6596   00210A  0E00               	movlw	0
  6597   00210C  6E8C               	movwf	140,c	;volatile
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;main.c: 304: LATE = color[0];
  6601   00210E  C060  FF8D         	movff	_color,3981	;volatile
  6602                           
  6603                           ;main.c: 305: contador = 0;
  6604   002112  0E00               	movlw	0
  6605   002114  6FBC               	movwf	(_contador+1)& (0+255),b
  6606   002116  0E00               	movlw	0
  6607   002118  6FBB               	movwf	_contador& (0+255),b
  6608                           
  6609                           ;main.c: 306: digito = 1;
  6610   00211A  0E00               	movlw	0
  6611   00211C  6E42               	movwf	(_digito+1)^0,c
  6612   00211E  0E01               	movlw	1
  6613   002120  6E41               	movwf	_digito^0,c
  6614                           
  6615                           ; BSR set to: 0
  6616   002122  0012               	return		;funcret
  6617   002124                     __end_ofi2_vaciar:
  6618                           	callstack 0
  6619                           
  6620 ;; *************** function i2_escenario1 *****************
  6621 ;; Defined at:
  6622 ;;		line 183 in file "main.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;		None
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;		None
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 3F/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6636 ;;      Params:         0       0       0       0       0       0       0       0       0
  6637 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6639 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6640 ;;Total ram usage:        0 bytes
  6641 ;; Hardware stack levels used: 1
  6642 ;; Hardware stack levels required when called: 3
  6643 ;; This function calls:
  6644 ;;		i2_Lcd_Blink
  6645 ;;		i2_Lcd_Clear
  6646 ;;		i2_Lcd_Set_Cursor
  6647 ;;		i2_Lcd_Write_Char
  6648 ;;		i2_Lcd_Write_String
  6649 ;; This function is called by:
  6650 ;;		_Terminar
  6651 ;;		_okmenu
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655                           	psect	text40
  6656   002018                     __ptext40:
  6657                           	callstack 0
  6658   002018                     i2_escenario1:
  6659                           	callstack 20
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;main.c: 184: menu = 1;
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;incstack = 0
  6666   002018  0E00               	movlw	0
  6667   00201A  6F6D               	movwf	(_menu+1)& (0+255),b
  6668   00201C  0E01               	movlw	1
  6669   00201E  6F6C               	movwf	_menu& (0+255),b
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;main.c: 185: Lcd_Clear();
  6673   002020  EC78  F012         	call	i2_Lcd_Clear	;wreg free
  6674                           
  6675                           ;main.c: 186: Lcd_Set_Cursor(1, 1);
  6676   002024  0E01               	movlw	1
  6677   002026  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6678   002028  0E01               	movlw	1
  6679   00202A  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  6680                           
  6681                           ;main.c: 187: Lcd_Write_String("Piezas a contar:");
  6682   00202E  0E66               	movlw	low STR_5
  6683   002030  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6684   002032  ECD1  F010         	call	i2_Lcd_Write_String	;wreg free
  6685                           
  6686                           ;main.c: 188: Lcd_Set_Cursor(2, 9);
  6687   002036  0E09               	movlw	9
  6688   002038  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6689   00203A  0E02               	movlw	2
  6690   00203C  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  6691                           
  6692                           ;main.c: 189: Lcd_Write_String("A:ok B:");
  6693   002040  0EC7               	movlw	low STR_6
  6694   002042  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6695   002044  ECD1  F010         	call	i2_Lcd_Write_String	;wreg free
  6696                           
  6697                           ;main.c: 190: Lcd_Write_Char(0b01111111);
  6698   002048  0E7F               	movlw	127
  6699   00204A  EC0E  F011         	call	i2_Lcd_Write_Char
  6700                           
  6701                           ;main.c: 191: Lcd_Set_Cursor(2, 1);
  6702   00204E  0E01               	movlw	1
  6703   002050  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6704   002052  0E02               	movlw	2
  6705   002054  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  6706                           
  6707                           ;main.c: 192: Lcd_Blink();
  6708   002058  EC6A  F012         	call	i2_Lcd_Blink	;wreg free
  6709   00205C  0012               	return		;funcret
  6710   00205E                     __end_ofi2_escenario1:
  6711                           	callstack 0
  6712                           
  6713 ;; *************** function i2_Lcd_Blink *****************
  6714 ;; Defined at:
  6715 ;;		line 124 in file "lcd.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;		None
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;		None
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1    wreg      void 
  6722 ;; Registers used:
  6723 ;;		wreg, status,2, cstack
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6729 ;;      Params:         0       0       0       0       0       0       0       0       0
  6730 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6732 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6733 ;;Total ram usage:        0 bytes
  6734 ;; Hardware stack levels used: 1
  6735 ;; Hardware stack levels required when called: 2
  6736 ;; This function calls:
  6737 ;;		i2_Lcd_Cmd
  6738 ;; This function is called by:
  6739 ;;		i2_escenario1
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text41
  6744   0024D4                     __ptext41:
  6745                           	callstack 0
  6746   0024D4                     i2_Lcd_Blink:
  6747                           	callstack 20
  6748                           
  6749                           ;lcd.c: 126: Lcd_Cmd(0x00);
  6750                           
  6751                           ;incstack = 0
  6752   0024D4  0E00               	movlw	0
  6753   0024D6  EC2F  F012         	call	i2_Lcd_Cmd
  6754                           
  6755                           ;lcd.c: 127: Lcd_Cmd(0x0F);
  6756   0024DA  0E0F               	movlw	15
  6757   0024DC  EC2F  F012         	call	i2_Lcd_Cmd
  6758   0024E0  0012               	return		;funcret
  6759   0024E2                     __end_ofi2_Lcd_Blink:
  6760                           	callstack 0
  6761                           
  6762 ;; *************** function _Reiniciar *****************
  6763 ;; Defined at:
  6764 ;;		line 309 in file "main.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;		None
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;		None
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  1    wreg      void 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 3F/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6778 ;;      Params:         0       0       0       0       0       0       0       0       0
  6779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6781 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6782 ;;Total ram usage:        0 bytes
  6783 ;; Hardware stack levels used: 1
  6784 ;; Hardware stack levels required when called: 4
  6785 ;; This function calls:
  6786 ;;		i2_escenario2
  6787 ;; This function is called by:
  6788 ;;		_ISR
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           	psect	text42
  6793   00228A                     __ptext42:
  6794                           	callstack 0
  6795   00228A                     _Reiniciar:
  6796                           	callstack 20
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;main.c: 311: cantidadRestaUnidad = 0b00110000 + unidad;
  6800                           
  6801                           ;incstack = 0
  6802   00228A  0E30               	movlw	48
  6803   00228C  25BF               	addwf	_unidad& (0+255),w,b
  6804   00228E  6FB7               	movwf	_cantidadRestaUnidad& (0+255),b
  6805   002290  0E00               	movlw	0
  6806   002292  21C0               	addwfc	(_unidad+1)& (0+255),w,b
  6807   002294  6FB8               	movwf	(_cantidadRestaUnidad+1)& (0+255),b
  6808                           
  6809                           ;main.c: 312: cantidadRestaDecena = 0b00110000 + decena;
  6810   002296  0E30               	movlw	48
  6811   002298  25C1               	addwf	_decena& (0+255),w,b
  6812   00229A  6FB5               	movwf	_cantidadRestaDecena& (0+255),b
  6813   00229C  0E00               	movlw	0
  6814   00229E  21C2               	addwfc	(_decena+1)& (0+255),w,b
  6815   0022A0  6FB6               	movwf	(_cantidadRestaDecena+1)& (0+255),b
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;main.c: 313: LATD = 0;
  6819   0022A2  0E00               	movlw	0
  6820   0022A4  6E8C               	movwf	140,c	;volatile
  6821                           
  6822                           ; BSR set to: 0
  6823                           ;main.c: 314: LATE = color[0];
  6824   0022A6  C060  FF8D         	movff	_color,3981	;volatile
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;main.c: 315: contador = 0;
  6828   0022AA  0E00               	movlw	0
  6829   0022AC  6FBC               	movwf	(_contador+1)& (0+255),b
  6830   0022AE  0E00               	movlw	0
  6831   0022B0  6FBB               	movwf	_contador& (0+255),b
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;main.c: 316: digito = 1;
  6835   0022B2  0E00               	movlw	0
  6836   0022B4  6E42               	movwf	(_digito+1)^0,c
  6837   0022B6  0E01               	movlw	1
  6838   0022B8  6E41               	movwf	_digito^0,c
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;main.c: 317: escenario2();
  6842   0022BA  EC0B  F00D         	call	i2_escenario2	;wreg free
  6843   0022BE  0012               	return		;funcret
  6844   0022C0                     __end_of_Reiniciar:
  6845                           	callstack 0
  6846                           
  6847 ;; *************** function i2_escenario2 *****************
  6848 ;; Defined at:
  6849 ;;		line 195 in file "main.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;		None
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      void 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 3F/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6863 ;;      Params:         0       0       0       0       0       0       0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6866 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used: 1
  6869 ;; Hardware stack levels required when called: 3
  6870 ;; This function calls:
  6871 ;;		i2_Lcd_Clear
  6872 ;;		i2_Lcd_NoBlink
  6873 ;;		i2_Lcd_Set_Cursor
  6874 ;;		i2_Lcd_Write_Char
  6875 ;;		i2_Lcd_Write_String
  6876 ;; This function is called by:
  6877 ;;		_Reiniciar
  6878 ;;		i2_ContarReal
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text43
  6883   001A16                     __ptext43:
  6884                           	callstack 0
  6885   001A16                     i2_escenario2:
  6886                           	callstack 19
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;main.c: 196: menu = 2;
  6890                           
  6891                           ;incstack = 0
  6892   001A16  0E00               	movlw	0
  6893   001A18  6F6D               	movwf	(_menu+1)& (0+255),b
  6894   001A1A  0E02               	movlw	2
  6895   001A1C  6F6C               	movwf	_menu& (0+255),b
  6896                           
  6897                           ;main.c: 197: mostrar = 1;
  6898   001A1E  0E00               	movlw	0
  6899   001A20  6E4A               	movwf	(_mostrar+1)^0,c
  6900   001A22  0E01               	movlw	1
  6901   001A24  6E49               	movwf	_mostrar^0,c
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;main.c: 198: Lcd_Clear();
  6905   001A26  EC78  F012         	call	i2_Lcd_Clear	;wreg free
  6906                           
  6907                           ;main.c: 199: Lcd_NoBlink();
  6908   001A2A  EC71  F012         	call	i2_Lcd_NoBlink	;wreg free
  6909                           
  6910                           ;main.c: 200: Lcd_Set_Cursor(1, 1);
  6911   001A2E  0E01               	movlw	1
  6912   001A30  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6913   001A32  0E01               	movlw	1
  6914   001A34  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  6915                           
  6916                           ;main.c: 201: Lcd_Write_String("Faltante:");
  6917   001A38  0EA9               	movlw	low STR_7
  6918   001A3A  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6919   001A3C  ECD1  F010         	call	i2_Lcd_Write_String	;wreg free
  6920                           
  6921                           ;main.c: 202: Lcd_Write_Char(cantidadRestaDecena);
  6922   001A40  0100               	movlb	0	; () banked
  6923   001A42  51B5               	movf	_cantidadRestaDecena& (0+255),w,b
  6924   001A44  EC0E  F011         	call	i2_Lcd_Write_Char
  6925                           
  6926                           ;main.c: 203: Lcd_Write_Char(cantidadRestaUnidad);
  6927   001A48  0100               	movlb	0	; () banked
  6928   001A4A  51B7               	movf	_cantidadRestaUnidad& (0+255),w,b
  6929   001A4C  EC0E  F011         	call	i2_Lcd_Write_Char
  6930                           
  6931                           ;main.c: 204: Lcd_Set_Cursor(1, 14);
  6932   001A50  0E0E               	movlw	14
  6933   001A52  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6934   001A54  0E01               	movlw	1
  6935   001A56  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  6936                           
  6937                           ;main.c: 205: Lcd_Write_String("C=");
  6938   001A5A  0ED8               	movlw	low STR_8
  6939   001A5C  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6940   001A5E  ECD1  F010         	call	i2_Lcd_Write_String	;wreg free
  6941                           
  6942                           ;main.c: 206: Lcd_Write_Char(4);
  6943   001A62  0E04               	movlw	4
  6944   001A64  EC0E  F011         	call	i2_Lcd_Write_Char
  6945                           
  6946                           ;main.c: 207: Lcd_Set_Cursor(2, 1);
  6947   001A68  0E01               	movlw	1
  6948   001A6A  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6949   001A6C  0E02               	movlw	2
  6950   001A6E  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  6951                           
  6952                           ;main.c: 208: Lcd_Write_String("Objetivo:");
  6953   001A72  0EB3               	movlw	low STR_9
  6954   001A74  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6955   001A76  ECD1  F010         	call	i2_Lcd_Write_String	;wreg free
  6956                           
  6957                           ;main.c: 209: Lcd_Write_Char(0b00110000 + decena);
  6958   001A7A  0100               	movlb	0	; () banked
  6959   001A7C  51C1               	movf	_decena& (0+255),w,b
  6960   001A7E  0F30               	addlw	48
  6961   001A80  EC0E  F011         	call	i2_Lcd_Write_Char
  6962                           
  6963                           ;main.c: 210: Lcd_Write_Char(0b00110000 + unidad);
  6964   001A84  0100               	movlb	0	; () banked
  6965   001A86  51BF               	movf	_unidad& (0+255),w,b
  6966   001A88  0F30               	addlw	48
  6967   001A8A  EC0E  F011         	call	i2_Lcd_Write_Char
  6968                           
  6969                           ;main.c: 211: Lcd_Set_Cursor(2, 14);
  6970   001A8E  0E0E               	movlw	14
  6971   001A90  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6972   001A92  0E02               	movlw	2
  6973   001A94  EC6C  F00C         	call	i2_Lcd_Set_Cursor
  6974                           
  6975                           ;main.c: 212: Lcd_Write_String("#=X");
  6976   001A98  0ED4               	movlw	low STR_10
  6977   001A9A  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6978   001A9C  ECD1  F010         	call	i2_Lcd_Write_String	;wreg free
  6979                           
  6980                           ;main.c: 213: Lcd_Write_Char(3);
  6981   001AA0  0E03               	movlw	3
  6982   001AA2  EC0E  F011         	call	i2_Lcd_Write_Char
  6983   001AA6  0012               	return		;funcret
  6984   001AA8                     __end_ofi2_escenario2:
  6985                           	callstack 0
  6986                           
  6987 ;; *************** function i2_Lcd_Write_String *****************
  6988 ;; Defined at:
  6989 ;;		line 105 in file "lcd.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  a               1    4[COMRAM] PTR const unsigned char 
  6992 ;;		 -> STR_14(12), STR_13(10), STR_12(5), STR_11(18), 
  6993 ;;		 -> STR_10(4), STR_9(10), STR_8(3), STR_7(10), 
  6994 ;;		 -> STR_6(8), STR_5(17), STR_3(12), STR_2(11), 
  6995 ;;		 -> STR_1(15), 
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;  i               2    6[COMRAM] int 
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  1    wreg      void 
  7000 ;; Registers used:
  7001 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7007 ;;      Params:         1       0       0       0       0       0       0       0       0
  7008 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7009 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7010 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7011 ;;Total ram usage:        4 bytes
  7012 ;; Hardware stack levels used: 1
  7013 ;; Hardware stack levels required when called: 2
  7014 ;; This function calls:
  7015 ;;		i2_Lcd_Write_Char
  7016 ;; This function is called by:
  7017 ;;		_escenario4
  7018 ;;		i2_escenario1
  7019 ;;		i2_escenario2
  7020 ;;		i2_escenario3
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           	psect	text44
  7025   0021A2                     __ptext44:
  7026                           	callstack 0
  7027   0021A2                     i2_Lcd_Write_String:
  7028                           	callstack 20
  7029                           
  7030                           ;lcd.c: 107: int i;;lcd.c: 108: for(i=0;a[i]!='\0';i++)
  7031                           
  7032                           ;incstack = 0
  7033   0021A2  0E00               	movlw	0
  7034   0021A4  6E08               	movwf	(i2Lcd_Write_String@i+1)^0,c
  7035   0021A6  0E00               	movlw	0
  7036   0021A8  6E07               	movwf	i2Lcd_Write_String@i^0,c
  7037   0021AA  D00D               	goto	i2l2903
  7038   0021AC                     i2l2899:
  7039                           
  7040                           ;lcd.c: 109: Lcd_Write_Char(a[i]);
  7041   0021AC  5005               	movf	i2Lcd_Write_String@a^0,w,c
  7042   0021AE  2407               	addwf	i2Lcd_Write_String@i^0,w,c
  7043   0021B0  6E06               	movwf	??i2_Lcd_Write_String^0,c
  7044   0021B2  C006  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  7045   0021B6                     	if	1	;There is more than 1 active tblptr byte
  7046   0021B6  0E08               	movlw	high __smallconst
  7047   0021B8  6EF7               	movwf	tblptrh,c
  7048   0021BA                     	endif
  7049   0021BA                     	if	0	;tblptru may be non-zero
  7050   0021BA                     	endif
  7051   0021BA                     	if	0	;tblptru may be non-zero
  7052   0021BA                     	endif
  7053   0021BA  0008               	tblrd		*
  7054   0021BC  50F5               	movf	tablat,w,c
  7055   0021BE  EC0E  F011         	call	i2_Lcd_Write_Char
  7056   0021C2  4A07               	infsnz	i2Lcd_Write_String@i^0,f,c
  7057   0021C4  2A08               	incf	(i2Lcd_Write_String@i+1)^0,f,c
  7058   0021C6                     i2l2903:
  7059   0021C6  5005               	movf	i2Lcd_Write_String@a^0,w,c
  7060   0021C8  2407               	addwf	i2Lcd_Write_String@i^0,w,c
  7061   0021CA  6E06               	movwf	??i2_Lcd_Write_String^0,c
  7062   0021CC  C006  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  7063   0021D0                     	if	1	;There is more than 1 active tblptr byte
  7064   0021D0  0E08               	movlw	high __smallconst
  7065   0021D2  6EF7               	movwf	tblptrh,c
  7066   0021D4                     	endif
  7067   0021D4                     	if	0	;tblptru may be non-zero
  7068   0021D4                     	endif
  7069   0021D4                     	if	0	;tblptru may be non-zero
  7070   0021D4                     	endif
  7071   0021D4  0008               	tblrd		*
  7072   0021D6  50F5               	movf	tablat,w,c
  7073   0021D8  0900               	iorlw	0
  7074   0021DA  B4D8               	btfsc	status,2,c
  7075   0021DC  0012               	return	
  7076   0021DE  D7E6               	goto	i2l2899
  7077   0021E0                     __end_ofi2_Lcd_Write_String:
  7078                           	callstack 0
  7079                           
  7080 ;; *************** function i2_Lcd_Set_Cursor *****************
  7081 ;; Defined at:
  7082 ;;		line 27 in file "lcd.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  a               1    wreg     unsigned char 
  7085 ;;  b               1    3[COMRAM] unsigned char 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  a               1    4[COMRAM] unsigned char 
  7088 ;;  temp            1    7[COMRAM] unsigned char 
  7089 ;;  y               1    6[COMRAM] unsigned char 
  7090 ;;  z               1    5[COMRAM] unsigned char 
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  1    wreg      void 
  7093 ;; Registers used:
  7094 ;;		wreg, status,2, status,0, cstack
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7100 ;;      Params:         1       0       0       0       0       0       0       0       0
  7101 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7103 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7104 ;;Total ram usage:        5 bytes
  7105 ;; Hardware stack levels used: 1
  7106 ;; Hardware stack levels required when called: 2
  7107 ;; This function calls:
  7108 ;;		i2_Lcd_Cmd
  7109 ;; This function is called by:
  7110 ;;		_escenario4
  7111 ;;		_borrarDigito
  7112 ;;		i2_escenario1
  7113 ;;		i2_escenario2
  7114 ;;		i2_escenario3
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text45
  7119   0018D8                     __ptext45:
  7120                           	callstack 0
  7121   0018D8                     i2_Lcd_Set_Cursor:
  7122                           	callstack 20
  7123                           
  7124                           ;incstack = 0
  7125                           ;i2Lcd_Set_Cursor@a stored from wreg
  7126   0018D8  6E05               	movwf	i2Lcd_Set_Cursor@a^0,c
  7127                           
  7128                           ;lcd.c: 29: char temp,z,y;;lcd.c: 30: if(a == 1)
  7129   0018DA  0405               	decf	i2Lcd_Set_Cursor@a^0,w,c
  7130   0018DC  A4D8               	btfss	status,2,c
  7131   0018DE  D010               	goto	i2l2873
  7132                           
  7133                           ;lcd.c: 31: {;lcd.c: 32: temp = 0x80 + b - 1;
  7134   0018E0  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  7135   0018E2  0F7F               	addlw	127
  7136   0018E4  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  7137                           
  7138                           ;lcd.c: 33: z = temp>>4;
  7139   0018E6  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  7140   0018E8  0B0F               	andlw	15
  7141   0018EA  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  7142                           
  7143                           ;lcd.c: 34: y = temp & 0x0F;
  7144   0018EC  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  7145   0018EE  0B0F               	andlw	15
  7146   0018F0  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  7147                           
  7148                           ;lcd.c: 35: Lcd_Cmd(z);
  7149   0018F2  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  7150   0018F4  EC2F  F012         	call	i2_Lcd_Cmd
  7151                           
  7152                           ;lcd.c: 36: Lcd_Cmd(y);
  7153   0018F8  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  7154   0018FA  EC2F  F012         	call	i2_Lcd_Cmd
  7155                           
  7156                           ;lcd.c: 37: }
  7157   0018FE  0012               	return	
  7158   001900                     i2l2873:
  7159                           
  7160                           ;lcd.c: 38: else if(a == 2)
  7161   001900  0E02               	movlw	2
  7162   001902  1805               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  7163   001904  A4D8               	btfss	status,2,c
  7164   001906  D010               	goto	i2l2881
  7165                           
  7166                           ;lcd.c: 39: {;lcd.c: 40: temp = 0xC0 + b - 1;
  7167   001908  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  7168   00190A  0FBF               	addlw	191
  7169   00190C  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  7170                           
  7171                           ;lcd.c: 41: z = temp>>4;
  7172   00190E  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  7173   001910  0B0F               	andlw	15
  7174   001912  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  7175                           
  7176                           ;lcd.c: 42: y = temp & 0x0F;
  7177   001914  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  7178   001916  0B0F               	andlw	15
  7179   001918  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  7180                           
  7181                           ;lcd.c: 43: Lcd_Cmd(z);
  7182   00191A  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  7183   00191C  EC2F  F012         	call	i2_Lcd_Cmd
  7184                           
  7185                           ;lcd.c: 44: Lcd_Cmd(y);
  7186   001920  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  7187   001922  EC2F  F012         	call	i2_Lcd_Cmd
  7188                           
  7189                           ;lcd.c: 45: }
  7190   001926  0012               	return	
  7191   001928                     i2l2881:
  7192                           
  7193                           ;lcd.c: 46: else if(a == 3)
  7194   001928  0E03               	movlw	3
  7195   00192A  1805               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  7196   00192C  A4D8               	btfss	status,2,c
  7197   00192E  D010               	goto	i2l2889
  7198                           
  7199                           ;lcd.c: 47: {;lcd.c: 48: temp = 0x94 + b - 1;
  7200   001930  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  7201   001932  0F93               	addlw	147
  7202   001934  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  7203                           
  7204                           ;lcd.c: 49: z = temp>>4;
  7205   001936  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  7206   001938  0B0F               	andlw	15
  7207   00193A  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  7208                           
  7209                           ;lcd.c: 50: y = temp & 0x0F;
  7210   00193C  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  7211   00193E  0B0F               	andlw	15
  7212   001940  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  7213                           
  7214                           ;lcd.c: 51: Lcd_Cmd(z);
  7215   001942  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  7216   001944  EC2F  F012         	call	i2_Lcd_Cmd
  7217                           
  7218                           ;lcd.c: 52: Lcd_Cmd(y);
  7219   001948  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  7220   00194A  EC2F  F012         	call	i2_Lcd_Cmd
  7221                           
  7222                           ;lcd.c: 53: }
  7223   00194E  0012               	return	
  7224   001950                     i2l2889:
  7225                           
  7226                           ;lcd.c: 54: else if(a == 4)
  7227   001950  0E04               	movlw	4
  7228   001952  1805               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  7229   001954  A4D8               	btfss	status,2,c
  7230   001956  0012               	return	
  7231                           
  7232                           ;lcd.c: 55: {;lcd.c: 56: temp = 0xD4 + b - 1;
  7233   001958  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  7234   00195A  0FD3               	addlw	211
  7235   00195C  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  7236                           
  7237                           ;lcd.c: 57: z = temp>>4;
  7238   00195E  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  7239   001960  0B0F               	andlw	15
  7240   001962  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  7241                           
  7242                           ;lcd.c: 58: y = temp & 0x0F;
  7243   001964  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  7244   001966  0B0F               	andlw	15
  7245   001968  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  7246                           
  7247                           ;lcd.c: 59: Lcd_Cmd(z);
  7248   00196A  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  7249   00196C  EC2F  F012         	call	i2_Lcd_Cmd
  7250                           
  7251                           ;lcd.c: 60: Lcd_Cmd(y);
  7252   001970  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  7253   001972  EC2F  F012         	call	i2_Lcd_Cmd
  7254   001976  0012               	return	
  7255   001978                     __end_ofi2_Lcd_Set_Cursor:
  7256                           	callstack 0
  7257                           
  7258 ;; *************** function i2_Lcd_NoBlink *****************
  7259 ;; Defined at:
  7260 ;;		line 130 in file "lcd.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;		None
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;		None
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  1    wreg      void 
  7267 ;; Registers used:
  7268 ;;		wreg, status,2, cstack
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7274 ;;      Params:         0       0       0       0       0       0       0       0       0
  7275 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7277 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7278 ;;Total ram usage:        0 bytes
  7279 ;; Hardware stack levels used: 1
  7280 ;; Hardware stack levels required when called: 2
  7281 ;; This function calls:
  7282 ;;		i2_Lcd_Cmd
  7283 ;; This function is called by:
  7284 ;;		_escenario4
  7285 ;;		i2_escenario2
  7286 ;;		i2_escenario3
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text46
  7291   0024E2                     __ptext46:
  7292                           	callstack 0
  7293   0024E2                     i2_Lcd_NoBlink:
  7294                           	callstack 19
  7295                           
  7296                           ;lcd.c: 132: Lcd_Cmd(0x00);
  7297                           
  7298                           ;incstack = 0
  7299   0024E2  0E00               	movlw	0
  7300   0024E4  EC2F  F012         	call	i2_Lcd_Cmd
  7301                           
  7302                           ;lcd.c: 133: Lcd_Cmd(0x0C);
  7303   0024E8  0E0C               	movlw	12
  7304   0024EA  EC2F  F012         	call	i2_Lcd_Cmd
  7305   0024EE  0012               	return		;funcret
  7306   0024F0                     __end_ofi2_Lcd_NoBlink:
  7307                           	callstack 0
  7308                           
  7309 ;; *************** function i2_Lcd_Clear *****************
  7310 ;; Defined at:
  7311 ;;		line 21 in file "lcd.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;		None
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      void 
  7318 ;; Registers used:
  7319 ;;		wreg, status,2, cstack
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7325 ;;      Params:         0       0       0       0       0       0       0       0       0
  7326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7328 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7329 ;;Total ram usage:        0 bytes
  7330 ;; Hardware stack levels used: 1
  7331 ;; Hardware stack levels required when called: 2
  7332 ;; This function calls:
  7333 ;;		i2_Lcd_Cmd
  7334 ;; This function is called by:
  7335 ;;		_escenario4
  7336 ;;		i2_escenario1
  7337 ;;		i2_escenario2
  7338 ;;		i2_escenario3
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text47
  7343   0024F0                     __ptext47:
  7344                           	callstack 0
  7345   0024F0                     i2_Lcd_Clear:
  7346                           	callstack 20
  7347                           
  7348                           ;lcd.c: 23: Lcd_Cmd(0);
  7349                           
  7350                           ;incstack = 0
  7351   0024F0  0E00               	movlw	0
  7352   0024F2  EC2F  F012         	call	i2_Lcd_Cmd
  7353                           
  7354                           ;lcd.c: 24: Lcd_Cmd(1);
  7355   0024F6  0E01               	movlw	1
  7356   0024F8  EC2F  F012         	call	i2_Lcd_Cmd
  7357   0024FC  0012               	return		;funcret
  7358   0024FE                     __end_ofi2_Lcd_Clear:
  7359                           	callstack 0
  7360                           
  7361 ;; *************** function i2_Lcd_Cmd *****************
  7362 ;; Defined at:
  7363 ;;		line 12 in file "lcd.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  a               1    wreg     unsigned char 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  a               1    2[COMRAM] unsigned char 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      void 
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7377 ;;      Params:         0       0       0       0       0       0       0       0       0
  7378 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7379 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7380 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7381 ;;Total ram usage:        2 bytes
  7382 ;; Hardware stack levels used: 1
  7383 ;; Hardware stack levels required when called: 1
  7384 ;; This function calls:
  7385 ;;		i2_Lcd_Port
  7386 ;; This function is called by:
  7387 ;;		i2_Lcd_Clear
  7388 ;;		i2_Lcd_Set_Cursor
  7389 ;;		i2_Lcd_Blink
  7390 ;;		i2_Lcd_NoBlink
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text48
  7395   00245E                     __ptext48:
  7396                           	callstack 0
  7397   00245E                     i2_Lcd_Cmd:
  7398                           	callstack 20
  7399                           
  7400                           ;incstack = 0
  7401                           ;i2Lcd_Cmd@a stored from wreg
  7402   00245E  6E03               	movwf	i2Lcd_Cmd@a^0,c
  7403                           
  7404                           ;lcd.c: 14: LATAbits.LA3 = 0;
  7405   002460  9689               	bcf	137,3,c	;volatile
  7406                           
  7407                           ;lcd.c: 15: Lcd_Port(a);
  7408   002462  5003               	movf	i2Lcd_Cmd@a^0,w,c
  7409   002464  ECA7  F011         	call	i2_Lcd_Port
  7410                           
  7411                           ;lcd.c: 16: LATAbits.LA4 = 1;
  7412   002468  8889               	bsf	137,4,c	;volatile
  7413                           
  7414                           ;lcd.c: 17: _delay((unsigned long)((4)*(8000000/4000.0)));
  7415   00246A  0E0B               	movlw	11
  7416   00246C  6E02               	movwf	??i2_Lcd_Cmd^0,c
  7417   00246E  0E62               	movlw	98
  7418   002470                     i2u382_47:
  7419   002470  2EE8               	decfsz	wreg,f,c
  7420   002472  D7FE               	bra	i2u382_47
  7421   002474  2E02               	decfsz	??i2_Lcd_Cmd^0,f,c
  7422   002476  D7FC               	bra	i2u382_47
  7423   002478  D000               	nop2	
  7424                           
  7425                           ;lcd.c: 18: LATAbits.LA4 = 0;
  7426   00247A  9889               	bcf	137,4,c	;volatile
  7427   00247C  0012               	return		;funcret
  7428   00247E                     __end_ofi2_Lcd_Cmd:
  7429                           	callstack 0
  7430                           
  7431 ;; *************** function _PiezaAContar *****************
  7432 ;; Defined at:
  7433 ;;		line 251 in file "main.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  a               1    wreg     unsigned char 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  a               1    5[COMRAM] unsigned char 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  1    wreg      void 
  7440 ;; Registers used:
  7441 ;;		wreg, status,2, status,0, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7447 ;;      Params:         0       0       0       0       0       0       0       0       0
  7448 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7449 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7450 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7451 ;;Total ram usage:        2 bytes
  7452 ;; Hardware stack levels used: 1
  7453 ;; Hardware stack levels required when called: 2
  7454 ;; This function calls:
  7455 ;;		i2_Lcd_Write_Char
  7456 ;; This function is called by:
  7457 ;;		_ISR
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           	psect	text49
  7462   001E74                     __ptext49:
  7463                           	callstack 0
  7464   001E74                     _PiezaAContar:
  7465                           	callstack 22
  7466                           
  7467                           ;incstack = 0
  7468                           ;PiezaAContar@a stored from wreg
  7469   001E74  6E06               	movwf	PiezaAContar@a^0,c
  7470                           
  7471                           ;main.c: 253: if (digito == 1) {
  7472   001E76  0441               	decf	_digito^0,w,c
  7473   001E78  1042               	iorwf	(_digito+1)^0,w,c
  7474   001E7A  A4D8               	btfss	status,2,c
  7475   001E7C  D01B               	goto	i2l3825
  7476                           
  7477                           ;main.c: 254: decena = a & 0x0f;
  7478   001E7E  C006  F005         	movff	PiezaAContar@a,??_PiezaAContar
  7479   001E82  0E0F               	movlw	15
  7480   001E84  1605               	andwf	??_PiezaAContar^0,f,c
  7481   001E86  5005               	movf	??_PiezaAContar^0,w,c
  7482   001E88  0100               	movlb	0	; () banked
  7483   001E8A  6FC1               	movwf	_decena& (0+255),b
  7484   001E8C  6BC2               	clrf	(_decena+1)& (0+255),b
  7485                           
  7486                           ;main.c: 255: if (decena >= 6) decena = 5;
  7487   001E8E  BFC2               	btfsc	(_decena+1)& (0+255),7,b
  7488   001E90  D00A               	goto	i2l3821
  7489   001E92  51C2               	movf	(_decena+1)& (0+255),w,b
  7490   001E94  E104               	bnz	i2u287_40
  7491   001E96  0E06               	movlw	6
  7492   001E98  5DC1               	subwf	_decena& (0+255),w,b
  7493   001E9A  A0D8               	btfss	status,0,c
  7494   001E9C  D004               	goto	i2l3821
  7495   001E9E                     i2u287_40:
  7496                           
  7497                           ; BSR set to: 0
  7498   001E9E  0E00               	movlw	0
  7499   001EA0  6FC2               	movwf	(_decena+1)& (0+255),b
  7500   001EA2  0E05               	movlw	5
  7501   001EA4  6FC1               	movwf	_decena& (0+255),b
  7502   001EA6                     i2l3821:
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;main.c: 256: Lcd_Write_Char(0b00110000 + decena);
  7506   001EA6  51C1               	movf	_decena& (0+255),w,b
  7507   001EA8  0F30               	addlw	48
  7508   001EAA  EC0E  F011         	call	i2_Lcd_Write_Char
  7509   001EAE                     i2l3823:
  7510                           
  7511                           ;main.c: 257: digito++;
  7512   001EAE  4A41               	infsnz	_digito^0,f,c
  7513   001EB0  2A42               	incf	(_digito+1)^0,f,c
  7514                           
  7515                           ;main.c: 258: } else if (digito == 2) {
  7516   001EB2  0012               	return	
  7517   001EB4                     i2l3825:
  7518   001EB4  0E02               	movlw	2
  7519   001EB6  1841               	xorwf	_digito^0,w,c
  7520   001EB8  1042               	iorwf	(_digito+1)^0,w,c
  7521   001EBA  A4D8               	btfss	status,2,c
  7522   001EBC  0012               	return	
  7523                           
  7524                           ;main.c: 259: unidad = a & 0x0f;
  7525   001EBE  C006  F005         	movff	PiezaAContar@a,??_PiezaAContar
  7526   001EC2  0E0F               	movlw	15
  7527   001EC4  1605               	andwf	??_PiezaAContar^0,f,c
  7528   001EC6  5005               	movf	??_PiezaAContar^0,w,c
  7529   001EC8  0100               	movlb	0	; () banked
  7530   001ECA  6FBF               	movwf	_unidad& (0+255),b
  7531   001ECC  6BC0               	clrf	(_unidad+1)& (0+255),b
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;main.c: 260: Lcd_Write_Char(0b00110000 + unidad);
  7535   001ECE  51BF               	movf	_unidad& (0+255),w,b
  7536   001ED0  0F30               	addlw	48
  7537   001ED2  EC0E  F011         	call	i2_Lcd_Write_Char
  7538   001ED6  D7EB               	goto	i2l3823
  7539   001ED8                     __end_of_PiezaAContar:
  7540                           	callstack 0
  7541                           
  7542 ;; *************** function i2_Lcd_Write_Char *****************
  7543 ;; Defined at:
  7544 ;;		line 89 in file "lcd.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  a               1    wreg     unsigned char 
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;  a               1    3[COMRAM] unsigned char 
  7549 ;;  y               1    2[COMRAM] unsigned char 
  7550 ;;  temp            1    1[COMRAM] unsigned char 
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  1    wreg      void 
  7553 ;; Registers used:
  7554 ;;		wreg, status,2, status,0, cstack
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7560 ;;      Params:         0       0       0       0       0       0       0       0       0
  7561 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7563 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7564 ;;Total ram usage:        3 bytes
  7565 ;; Hardware stack levels used: 1
  7566 ;; Hardware stack levels required when called: 1
  7567 ;; This function calls:
  7568 ;;		i2_Lcd_Port
  7569 ;; This function is called by:
  7570 ;;		_escenario4
  7571 ;;		_PiezaAContar
  7572 ;;		_borrarDigito
  7573 ;;		i2_Lcd_Write_String
  7574 ;;		i2_escenario1
  7575 ;;		i2_escenario2
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           
  7579                           	psect	text50
  7580   00221C                     __ptext50:
  7581                           	callstack 0
  7582   00221C                     i2_Lcd_Write_Char:
  7583                           	callstack 20
  7584                           
  7585                           ;incstack = 0
  7586                           ;i2Lcd_Write_Char@a stored from wreg
  7587   00221C  6E04               	movwf	i2Lcd_Write_Char@a^0,c
  7588                           
  7589                           ;lcd.c: 91: char temp,y;;lcd.c: 92: temp = a&0x0F;
  7590   00221E  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  7591   002220  0B0F               	andlw	15
  7592   002222  6E02               	movwf	i2Lcd_Write_Char@temp^0,c
  7593                           
  7594                           ;lcd.c: 93: y = a&0xF0;
  7595   002224  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  7596   002226  0BF0               	andlw	240
  7597   002228  6E03               	movwf	i2Lcd_Write_Char@y^0,c
  7598                           
  7599                           ;lcd.c: 94: LATAbits.LA3 = 1;
  7600   00222A  8689               	bsf	137,3,c	;volatile
  7601                           
  7602                           ;lcd.c: 95: Lcd_Port(y>>4);
  7603   00222C  3803               	swapf	i2Lcd_Write_Char@y^0,w,c
  7604   00222E  0B0F               	andlw	15
  7605   002230  ECA7  F011         	call	i2_Lcd_Port
  7606                           
  7607                           ;lcd.c: 96: LATAbits.LA4 = 1;
  7608   002234  8889               	bsf	137,4,c	;volatile
  7609                           
  7610                           ;lcd.c: 97: _delay((unsigned long)((40)*(8000000/4000000.0)));
  7611   002236  0E1A               	movlw	26
  7612   002238                     i2u383_47:
  7613   002238  2EE8               	decfsz	wreg,f,c
  7614   00223A  D7FE               	bra	i2u383_47
  7615   00223C  D000               	nop2	
  7616                           
  7617                           ;lcd.c: 98: LATAbits.LA4 = 0;
  7618   00223E  9889               	bcf	137,4,c	;volatile
  7619                           
  7620                           ;lcd.c: 99: Lcd_Port(temp);
  7621   002240  5002               	movf	i2Lcd_Write_Char@temp^0,w,c
  7622   002242  ECA7  F011         	call	i2_Lcd_Port
  7623                           
  7624                           ;lcd.c: 100: LATAbits.LA4 = 1;
  7625   002246  8889               	bsf	137,4,c	;volatile
  7626                           
  7627                           ;lcd.c: 101: _delay((unsigned long)((40)*(8000000/4000000.0)));
  7628   002248  0E1A               	movlw	26
  7629   00224A                     i2u384_47:
  7630   00224A  2EE8               	decfsz	wreg,f,c
  7631   00224C  D7FE               	bra	i2u384_47
  7632   00224E  D000               	nop2	
  7633                           
  7634                           ;lcd.c: 102: LATAbits.LA4 = 0;
  7635   002250  9889               	bcf	137,4,c	;volatile
  7636   002252  0012               	return		;funcret
  7637   002254                     __end_ofi2_Lcd_Write_Char:
  7638                           	callstack 0
  7639                           
  7640 ;; *************** function i2_Lcd_Port *****************
  7641 ;; Defined at:
  7642 ;;		line 4 in file "lcd.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;  a               1    wreg     unsigned char 
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;  a               1    0[COMRAM] unsigned char 
  7647 ;; Return value:  Size  Location     Type
  7648 ;;                  1    wreg      void 
  7649 ;; Registers used:
  7650 ;;		wreg
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7656 ;;      Params:         0       0       0       0       0       0       0       0       0
  7657 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7659 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7660 ;;Total ram usage:        1 bytes
  7661 ;; Hardware stack levels used: 1
  7662 ;; This function calls:
  7663 ;;		Nothing
  7664 ;; This function is called by:
  7665 ;;		i2_Lcd_Cmd
  7666 ;;		i2_Lcd_Write_Char
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           	psect	text51
  7671   00234E                     __ptext51:
  7672                           	callstack 0
  7673   00234E                     i2_Lcd_Port:
  7674                           	callstack 20
  7675                           
  7676                           ;incstack = 0
  7677                           ;i2Lcd_Port@a stored from wreg
  7678   00234E  6E01               	movwf	i2Lcd_Port@a^0,c
  7679                           
  7680                           ;lcd.c: 6: (a & 1) ? (LATDbits.LD4 = 1) : (LATDbits.LD4 = 0);
  7681   002350  A001               	btfss	i2Lcd_Port@a^0,0,c
  7682   002352  D002               	goto	i2l14
  7683   002354  888C               	bsf	140,4,c	;volatile
  7684   002356  D001               	goto	i2l2775
  7685   002358                     i2l14:
  7686   002358  988C               	bcf	140,4,c	;volatile
  7687   00235A                     i2l2775:
  7688                           
  7689                           ;lcd.c: 7: (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  7690   00235A  A201               	btfss	i2Lcd_Port@a^0,1,c
  7691   00235C  D002               	goto	i2l18
  7692   00235E  8A8C               	bsf	140,5,c	;volatile
  7693   002360  D001               	goto	i2l2779
  7694   002362                     i2l18:
  7695   002362  9A8C               	bcf	140,5,c	;volatile
  7696   002364                     i2l2779:
  7697                           
  7698                           ;lcd.c: 8: (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  7699   002364  A401               	btfss	i2Lcd_Port@a^0,2,c
  7700   002366  D002               	goto	i2l22
  7701   002368  8C8C               	bsf	140,6,c	;volatile
  7702   00236A  D001               	goto	i2l2783
  7703   00236C                     i2l22:
  7704   00236C  9C8C               	bcf	140,6,c	;volatile
  7705   00236E                     i2l2783:
  7706                           
  7707                           ;lcd.c: 9: (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  7708   00236E  A601               	btfss	i2Lcd_Port@a^0,3,c
  7709   002370  D002               	goto	i2l26
  7710   002372  8E8C               	bsf	140,7,c	;volatile
  7711   002374  0012               	return	
  7712   002376                     i2l26:
  7713   002376  9E8C               	bcf	140,7,c	;volatile
  7714   002378  0012               	return		;funcret
  7715   00237A                     __end_ofi2_Lcd_Port:
  7716                           	callstack 0
  7717                           
  7718 ;; *************** function _Duty_motor *****************
  7719 ;; Defined at:
  7720 ;;		line 447 in file "main.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;  ADC             3   38[COMRAM] float 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;  escalarADC      3   41[COMRAM] float 
  7725 ;; Return value:  Size  Location     Type
  7726 ;;                  1    wreg      void 
  7727 ;; Registers used:
  7728 ;;		wreg, status,2, status,0, cstack
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7734 ;;      Params:         3       0       0       0       0       0       0       0       0
  7735 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7737 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7738 ;;Total ram usage:        6 bytes
  7739 ;; Hardware stack levels used: 1
  7740 ;; Hardware stack levels required when called: 2
  7741 ;; This function calls:
  7742 ;;		___ftdiv
  7743 ;;		___ftge
  7744 ;;		___ftmul
  7745 ;;		i2___fttol
  7746 ;; This function is called by:
  7747 ;;		_ISR
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           	psect	text52
  7752   001504                     __ptext52:
  7753                           	callstack 0
  7754   001504                     _Duty_motor:
  7755                           	callstack 22
  7756                           
  7757                           ;main.c: 448: if (motorEstado) {
  7758                           
  7759                           ;incstack = 0
  7760   001504  503F               	movf	_motorEstado^0,w,c
  7761   001506  1040               	iorwf	(_motorEstado+1)^0,w,c
  7762   001508  B4D8               	btfsc	status,2,c
  7763   00150A  D064               	goto	i2l3903
  7764                           
  7765                           ;main.c: 449: float escalarADC = (ADC / 1024)*249;
  7766   00150C  0E00               	movlw	0
  7767   00150E  6E0C               	movwf	___ftdiv@f2^0,c
  7768   001510  0E80               	movlw	128
  7769   001512  6E0D               	movwf	(___ftdiv@f2+1)^0,c
  7770   001514  0E44               	movlw	68
  7771   001516  6E0E               	movwf	(___ftdiv@f2+2)^0,c
  7772   001518  C027  F009         	movff	Duty_motor@ADC,___ftdiv@f1
  7773   00151C  C028  F00A         	movff	Duty_motor@ADC+1,___ftdiv@f1+1
  7774   001520  C029  F00B         	movff	Duty_motor@ADC+2,___ftdiv@f1+2
  7775   001524  EC0F  F00A         	call	___ftdiv	;wreg free
  7776   001528  C009  F018         	movff	?___ftdiv,___ftmul@f1
  7777   00152C  C00A  F019         	movff	?___ftdiv+1,___ftmul@f1+1
  7778   001530  C00B  F01A         	movff	?___ftdiv+2,___ftmul@f1+2
  7779   001534  0E00               	movlw	0
  7780   001536  6E1B               	movwf	___ftmul@f2^0,c
  7781   001538  0E79               	movlw	121
  7782   00153A  6E1C               	movwf	(___ftmul@f2+1)^0,c
  7783   00153C  0E43               	movlw	67
  7784   00153E  6E1D               	movwf	(___ftmul@f2+2)^0,c
  7785   001540  EC95  F009         	call	___ftmul	;wreg free
  7786   001544  C018  F02A         	movff	?___ftmul,Duty_motor@escalarADC
  7787   001548  C019  F02B         	movff	?___ftmul+1,Duty_motor@escalarADC+1
  7788   00154C  C01A  F02C         	movff	?___ftmul+2,Duty_motor@escalarADC+2
  7789                           
  7790                           ;main.c: 451: if (escalarADC >= 249) escalarADC = 249;
  7791   001550  C02A  F001         	movff	Duty_motor@escalarADC,___ftge@ff1
  7792   001554  C02B  F002         	movff	Duty_motor@escalarADC+1,___ftge@ff1+1
  7793   001558  C02C  F003         	movff	Duty_motor@escalarADC+2,___ftge@ff1+2
  7794   00155C  0E00               	movlw	0
  7795   00155E  6E04               	movwf	___ftge@ff2^0,c
  7796   001560  0E79               	movlw	121
  7797   001562  6E05               	movwf	(___ftge@ff2+1)^0,c
  7798   001564  0E43               	movlw	67
  7799   001566  6E06               	movwf	(___ftge@ff2+2)^0,c
  7800   001568  EC5D  F00E         	call	___ftge	;wreg free
  7801   00156C  A0D8               	btfss	status,0,c
  7802   00156E  D006               	goto	i2l3895
  7803   001570  0E00               	movlw	0
  7804   001572  6E2A               	movwf	Duty_motor@escalarADC^0,c
  7805   001574  0E79               	movlw	121
  7806   001576  6E2B               	movwf	(Duty_motor@escalarADC+1)^0,c
  7807   001578  0E43               	movlw	67
  7808   00157A  D007               	goto	L7
  7809   00157C                     i2l3895:
  7810                           
  7811                           ;main.c: 452: else if (escalarADC < 0) escalarADC = 0;
  7812   00157C  AE2C               	btfss	(Duty_motor@escalarADC+2)^0,7,c
  7813   00157E  D006               	goto	i2l3899
  7814   001580  0E00               	movlw	0
  7815   001582  6E2A               	movwf	Duty_motor@escalarADC^0,c
  7816   001584  0E00               	movlw	0
  7817   001586  6E2B               	movwf	(Duty_motor@escalarADC+1)^0,c
  7818   001588  0E00               	movlw	0
  7819   00158A                     L7:
  7820   00158A  6E2C               	movwf	(Duty_motor@escalarADC+2)^0,c
  7821   00158C                     i2l3899:
  7822                           
  7823                           ;main.c: 453: if(porcentajeManual){
  7824   00158C  5037               	movf	_porcentajeManual^0,w,c
  7825   00158E  1038               	iorwf	(_porcentajeManual+1)^0,w,c
  7826   001590  1039               	iorwf	(_porcentajeManual+2)^0,w,c
  7827   001592  B4D8               	btfsc	status,2,c
  7828   001594  0012               	return	
  7829                           
  7830                           ;main.c: 454: porcentaje = escalarADC * 0.4;
  7831   001596  C02A  F018         	movff	Duty_motor@escalarADC,___ftmul@f1
  7832   00159A  C02B  F019         	movff	Duty_motor@escalarADC+1,___ftmul@f1+1
  7833   00159E  C02C  F01A         	movff	Duty_motor@escalarADC+2,___ftmul@f1+2
  7834   0015A2  0ECD               	movlw	205
  7835   0015A4  6E1B               	movwf	___ftmul@f2^0,c
  7836   0015A6  0ECC               	movlw	204
  7837   0015A8  6E1C               	movwf	(___ftmul@f2+1)^0,c
  7838   0015AA  0E3E               	movlw	62
  7839   0015AC  6E1D               	movwf	(___ftmul@f2+2)^0,c
  7840   0015AE  EC95  F009         	call	___ftmul	;wreg free
  7841   0015B2  C018  F0AE         	movff	?___ftmul,_porcentaje
  7842   0015B6  C019  F0AF         	movff	?___ftmul+1,_porcentaje+1
  7843   0015BA  C01A  F0B0         	movff	?___ftmul+2,_porcentaje+2
  7844                           
  7845                           ;main.c: 455: CCPR1L = (int) escalarADC;
  7846   0015BE  C02A  F001         	movff	Duty_motor@escalarADC,i2___fttol@f1
  7847   0015C2  C02B  F002         	movff	Duty_motor@escalarADC+1,i2___fttol@f1+1
  7848   0015C6  C02C  F003         	movff	Duty_motor@escalarADC+2,i2___fttol@f1+2
  7849   0015CA  EC57  F00B         	call	i2___fttol	;wreg free
  7850   0015CE  5001               	movf	?i2___fttol^0,w,c
  7851   0015D0  6EBE               	movwf	190,c	;volatile
  7852   0015D2  0012               	return	
  7853   0015D4                     i2l3903:
  7854                           
  7855                           ;main.c: 458: else CCPR1L = 0;
  7856   0015D4  0E00               	movlw	0
  7857   0015D6  6EBE               	movwf	190,c	;volatile
  7858   0015D8  0012               	return		;funcret
  7859   0015DA                     __end_of_Duty_motor:
  7860                           	callstack 0
  7861                           
  7862 ;; *************** function i2___fttol *****************
  7863 ;; Defined at:
  7864 ;;		line 44 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/fttol.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  f1              3    0[COMRAM] float 
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  lval            4   10[COMRAM] unsigned long 
  7869 ;;  exp1            1   14[COMRAM] unsigned char 
  7870 ;;  sign1           1    9[COMRAM] unsigned char 
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  4    0[COMRAM] long 
  7873 ;; Registers used:
  7874 ;;		wreg, status,2, status,0
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7880 ;;      Params:         4       0       0       0       0       0       0       0       0
  7881 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7882 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7883 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7884 ;;Total ram usage:       15 bytes
  7885 ;; Hardware stack levels used: 1
  7886 ;; This function calls:
  7887 ;;		Nothing
  7888 ;; This function is called by:
  7889 ;;		_Duty_motor
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           	psect	text53
  7894   0016AE                     __ptext53:
  7895                           	callstack 0
  7896   0016AE                     i2___fttol:
  7897                           	callstack 23
  7898                           
  7899                           ;incstack = 0
  7900   0016AE  C003  F005         	movff	i2___fttol@f1+2,??i2___fttol
  7901   0016B2  6A06               	clrf	(??i2___fttol+1)^0,c
  7902   0016B4  6A07               	clrf	(??i2___fttol+2)^0,c
  7903   0016B6  3402               	rlcf	(i2___fttol@f1+1)^0,w,c
  7904   0016B8  3605               	rlcf	??i2___fttol^0,f,c
  7905   0016BA  E301               	bnc	u255_41
  7906   0016BC  8006               	bsf	(??i2___fttol+1)^0,0,c
  7907   0016BE                     u255_41:
  7908   0016BE  5005               	movf	??i2___fttol^0,w,c
  7909   0016C0  6E0F               	movwf	i2___fttol@exp1^0,c
  7910   0016C2  500F               	movf	i2___fttol@exp1^0,w,c
  7911   0016C4  A4D8               	btfss	status,2,c
  7912   0016C6  D009               	goto	i2l3477
  7913   0016C8                     i2u256_40:
  7914   0016C8  0E00               	movlw	0
  7915   0016CA  6E01               	movwf	?i2___fttol^0,c
  7916   0016CC  0E00               	movlw	0
  7917   0016CE  6E02               	movwf	(?i2___fttol+1)^0,c
  7918   0016D0  0E00               	movlw	0
  7919   0016D2  6E03               	movwf	(?i2___fttol+2)^0,c
  7920   0016D4  0E00               	movlw	0
  7921   0016D6  6E04               	movwf	(?i2___fttol+3)^0,c
  7922   0016D8  0012               	return	
  7923   0016DA                     i2l3477:
  7924   0016DA  0E17               	movlw	23
  7925   0016DC  6E05               	movwf	??i2___fttol^0,c
  7926   0016DE  C001  F006         	movff	i2___fttol@f1,??i2___fttol+1
  7927   0016E2  C002  F007         	movff	i2___fttol@f1+1,??i2___fttol+2
  7928   0016E6  C003  F008         	movff	i2___fttol@f1+2,??i2___fttol+3
  7929   0016EA  2805               	incf	??i2___fttol^0,w,c
  7930   0016EC  6E09               	movwf	(??i2___fttol+4)^0,c
  7931   0016EE  D004               	goto	i2u257_40
  7932   0016F0                     i2u257_45:
  7933   0016F0  90D8               	bcf	status,0,c
  7934   0016F2  3208               	rrcf	(??i2___fttol+3)^0,f,c
  7935   0016F4  3207               	rrcf	(??i2___fttol+2)^0,f,c
  7936   0016F6  3206               	rrcf	(??i2___fttol+1)^0,f,c
  7937   0016F8                     i2u257_40:
  7938   0016F8  2E09               	decfsz	(??i2___fttol+4)^0,f,c
  7939   0016FA  D7FA               	goto	i2u257_45
  7940   0016FC  5006               	movf	(??i2___fttol+1)^0,w,c
  7941   0016FE  6E0A               	movwf	i2___fttol@sign1^0,c
  7942   001700  8E02               	bsf	(i2___fttol@f1+1)^0,7,c
  7943   001702  0EFF               	movlw	255
  7944   001704  1601               	andwf	i2___fttol@f1^0,f,c
  7945   001706  0EFF               	movlw	255
  7946   001708  1602               	andwf	(i2___fttol@f1+1)^0,f,c
  7947   00170A  0E00               	movlw	0
  7948   00170C  1603               	andwf	(i2___fttol@f1+2)^0,f,c
  7949   00170E  5001               	movf	i2___fttol@f1^0,w,c
  7950   001710  6E0B               	movwf	i2___fttol@lval^0,c
  7951   001712  5002               	movf	(i2___fttol@f1+1)^0,w,c
  7952   001714  6E0C               	movwf	(i2___fttol@lval+1)^0,c
  7953   001716  5003               	movf	(i2___fttol@f1+2)^0,w,c
  7954   001718  6E0D               	movwf	(i2___fttol@lval+2)^0,c
  7955   00171A  6A0E               	clrf	(i2___fttol@lval+3)^0,c
  7956   00171C  0E8E               	movlw	142
  7957   00171E  5E0F               	subwf	i2___fttol@exp1^0,f,c
  7958   001720  AE0F               	btfss	i2___fttol@exp1^0,7,c
  7959   001722  D00D               	goto	i2l3499
  7960   001724  500F               	movf	i2___fttol@exp1^0,w,c
  7961   001726  0A80               	xorlw	128
  7962   001728  0F8F               	addlw	143
  7963   00172A  A0D8               	btfss	status,0,c
  7964   00172C  D7CD               	goto	i2u256_40
  7965   00172E                     i2l3495:
  7966   00172E  90D8               	bcf	status,0,c
  7967   001730  320E               	rrcf	(i2___fttol@lval+3)^0,f,c
  7968   001732  320D               	rrcf	(i2___fttol@lval+2)^0,f,c
  7969   001734  320C               	rrcf	(i2___fttol@lval+1)^0,f,c
  7970   001736  320B               	rrcf	i2___fttol@lval^0,f,c
  7971   001738  3E0F               	incfsz	i2___fttol@exp1^0,f,c
  7972   00173A  D7F9               	goto	i2l3495
  7973   00173C  D00D               	goto	i2u261_40
  7974   00173E                     i2l3499:
  7975   00173E  0E17               	movlw	23
  7976   001740  640F               	cpfsgt	i2___fttol@exp1^0,c
  7977   001742  D007               	goto	i2l3507
  7978   001744  D7C1               	goto	i2u256_40
  7979   001746                     i2l3505:
  7980   001746  90D8               	bcf	status,0,c
  7981   001748  360B               	rlcf	i2___fttol@lval^0,f,c
  7982   00174A  360C               	rlcf	(i2___fttol@lval+1)^0,f,c
  7983   00174C  360D               	rlcf	(i2___fttol@lval+2)^0,f,c
  7984   00174E  360E               	rlcf	(i2___fttol@lval+3)^0,f,c
  7985   001750  060F               	decf	i2___fttol@exp1^0,f,c
  7986   001752                     i2l3507:
  7987   001752  500F               	movf	i2___fttol@exp1^0,w,c
  7988   001754  A4D8               	btfss	status,2,c
  7989   001756  D7F7               	goto	i2l3505
  7990   001758                     i2u261_40:
  7991   001758  500A               	movf	i2___fttol@sign1^0,w,c
  7992   00175A  B4D8               	btfsc	status,2,c
  7993   00175C  D008               	goto	i2l3513
  7994   00175E  1E0E               	comf	(i2___fttol@lval+3)^0,f,c
  7995   001760  1E0D               	comf	(i2___fttol@lval+2)^0,f,c
  7996   001762  1E0C               	comf	(i2___fttol@lval+1)^0,f,c
  7997   001764  6C0B               	negf	i2___fttol@lval^0,c
  7998   001766  0E00               	movlw	0
  7999   001768  220C               	addwfc	(i2___fttol@lval+1)^0,f,c
  8000   00176A  220D               	addwfc	(i2___fttol@lval+2)^0,f,c
  8001   00176C  220E               	addwfc	(i2___fttol@lval+3)^0,f,c
  8002   00176E                     i2l3513:
  8003   00176E  C00B  F001         	movff	i2___fttol@lval,?i2___fttol
  8004   001772  C00C  F002         	movff	i2___fttol@lval+1,?i2___fttol+1
  8005   001776  C00D  F003         	movff	i2___fttol@lval+2,?i2___fttol+2
  8006   00177A  C00E  F004         	movff	i2___fttol@lval+3,?i2___fttol+3
  8007   00177E  0012               	return		;funcret
  8008   001780                     __end_ofi2___fttol:
  8009                           	callstack 0
  8010                           
  8011 ;; *************** function ___ftmul *****************
  8012 ;; Defined at:
  8013 ;;		line 62 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/ftmul.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  f1              3   23[COMRAM] float 
  8016 ;;  f2              3   26[COMRAM] float 
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;  f3_as_produc    3   33[COMRAM] unsigned um
  8019 ;;  sign            1   37[COMRAM] unsigned char 
  8020 ;;  cntr            1   36[COMRAM] unsigned char 
  8021 ;;  exp             1   32[COMRAM] unsigned char 
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  3   23[COMRAM] float 
  8024 ;; Registers used:
  8025 ;;		wreg, status,2, status,0, cstack
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8031 ;;      Params:         6       0       0       0       0       0       0       0       0
  8032 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8033 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8034 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8035 ;;Total ram usage:       15 bytes
  8036 ;; Hardware stack levels used: 1
  8037 ;; Hardware stack levels required when called: 1
  8038 ;; This function calls:
  8039 ;;		___ftpack
  8040 ;; This function is called by:
  8041 ;;		_Duty_motor
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text54
  8046   00132A                     __ptext54:
  8047                           	callstack 0
  8048   00132A                     ___ftmul:
  8049                           	callstack 22
  8050                           
  8051                           ;incstack = 0
  8052   00132A  C01A  F01E         	movff	___ftmul@f1+2,??___ftmul
  8053   00132E  6A1F               	clrf	(??___ftmul+1)^0,c
  8054   001330  6A20               	clrf	(??___ftmul+2)^0,c
  8055   001332  3419               	rlcf	(___ftmul@f1+1)^0,w,c
  8056   001334  361E               	rlcf	??___ftmul^0,f,c
  8057   001336  E301               	bnc	u227_41
  8058   001338  801F               	bsf	(??___ftmul+1)^0,0,c
  8059   00133A                     u227_41:
  8060   00133A  501E               	movf	??___ftmul^0,w,c
  8061   00133C  6E21               	movwf	___ftmul@exp^0,c
  8062   00133E  5021               	movf	___ftmul@exp^0,w,c
  8063   001340  A4D8               	btfss	status,2,c
  8064   001342  D007               	goto	i2l3247
  8065   001344  0E00               	movlw	0
  8066   001346  6E18               	movwf	?___ftmul^0,c
  8067   001348  0E00               	movlw	0
  8068   00134A  6E19               	movwf	(?___ftmul+1)^0,c
  8069   00134C  0E00               	movlw	0
  8070   00134E  6E1A               	movwf	(?___ftmul+2)^0,c
  8071   001350  0012               	return	
  8072   001352                     i2l3247:
  8073   001352  C01D  F01E         	movff	___ftmul@f2+2,??___ftmul
  8074   001356  6A1F               	clrf	(??___ftmul+1)^0,c
  8075   001358  6A20               	clrf	(??___ftmul+2)^0,c
  8076   00135A  341C               	rlcf	(___ftmul@f2+1)^0,w,c
  8077   00135C  361E               	rlcf	??___ftmul^0,f,c
  8078   00135E  E301               	bnc	u229_41
  8079   001360  801F               	bsf	(??___ftmul+1)^0,0,c
  8080   001362                     u229_41:
  8081   001362  501E               	movf	??___ftmul^0,w,c
  8082   001364  6E26               	movwf	___ftmul@sign^0,c
  8083   001366  5026               	movf	___ftmul@sign^0,w,c
  8084   001368  A4D8               	btfss	status,2,c
  8085   00136A  D007               	goto	i2l3253
  8086   00136C  0E00               	movlw	0
  8087   00136E  6E18               	movwf	?___ftmul^0,c
  8088   001370  0E00               	movlw	0
  8089   001372  6E19               	movwf	(?___ftmul+1)^0,c
  8090   001374  0E00               	movlw	0
  8091   001376  6E1A               	movwf	(?___ftmul+2)^0,c
  8092   001378  0012               	return	
  8093   00137A                     i2l3253:
  8094   00137A  5026               	movf	___ftmul@sign^0,w,c
  8095   00137C  0F7B               	addlw	123
  8096   00137E  2621               	addwf	___ftmul@exp^0,f,c
  8097   001380  C01A  F026         	movff	___ftmul@f1+2,___ftmul@sign
  8098   001384  501D               	movf	(___ftmul@f2+2)^0,w,c
  8099   001386  1A26               	xorwf	___ftmul@sign^0,f,c
  8100   001388  0E80               	movlw	128
  8101   00138A  1626               	andwf	___ftmul@sign^0,f,c
  8102   00138C  8E19               	bsf	(___ftmul@f1+1)^0,7,c
  8103   00138E  8E1C               	bsf	(___ftmul@f2+1)^0,7,c
  8104   001390  0EFF               	movlw	255
  8105   001392  161B               	andwf	___ftmul@f2^0,f,c
  8106   001394  0EFF               	movlw	255
  8107   001396  161C               	andwf	(___ftmul@f2+1)^0,f,c
  8108   001398  0E00               	movlw	0
  8109   00139A  161D               	andwf	(___ftmul@f2+2)^0,f,c
  8110   00139C  0E00               	movlw	0
  8111   00139E  6E22               	movwf	___ftmul@f3_as_product^0,c
  8112   0013A0  0E00               	movlw	0
  8113   0013A2  6E23               	movwf	(___ftmul@f3_as_product+1)^0,c
  8114   0013A4  0E00               	movlw	0
  8115   0013A6  6E24               	movwf	(___ftmul@f3_as_product+2)^0,c
  8116   0013A8  0E07               	movlw	7
  8117   0013AA  6E25               	movwf	___ftmul@cntr^0,c
  8118   0013AC                     i2l3267:
  8119   0013AC  A018               	btfss	___ftmul@f1^0,0,c
  8120   0013AE  D006               	goto	i2l3271
  8121   0013B0  501B               	movf	___ftmul@f2^0,w,c
  8122   0013B2  2622               	addwf	___ftmul@f3_as_product^0,f,c
  8123   0013B4  501C               	movf	(___ftmul@f2+1)^0,w,c
  8124   0013B6  2223               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  8125   0013B8  501D               	movf	(___ftmul@f2+2)^0,w,c
  8126   0013BA  2224               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  8127   0013BC                     i2l3271:
  8128   0013BC  90D8               	bcf	status,0,c
  8129   0013BE  321A               	rrcf	(___ftmul@f1+2)^0,f,c
  8130   0013C0  3219               	rrcf	(___ftmul@f1+1)^0,f,c
  8131   0013C2  3218               	rrcf	___ftmul@f1^0,f,c
  8132   0013C4  90D8               	bcf	status,0,c
  8133   0013C6  361B               	rlcf	___ftmul@f2^0,f,c
  8134   0013C8  361C               	rlcf	(___ftmul@f2+1)^0,f,c
  8135   0013CA  361D               	rlcf	(___ftmul@f2+2)^0,f,c
  8136   0013CC  2E25               	decfsz	___ftmul@cntr^0,f,c
  8137   0013CE  D7EE               	goto	i2l3267
  8138   0013D0  0E09               	movlw	9
  8139   0013D2  6E25               	movwf	___ftmul@cntr^0,c
  8140   0013D4                     i2l3277:
  8141   0013D4  A018               	btfss	___ftmul@f1^0,0,c
  8142   0013D6  D006               	goto	i2l3281
  8143   0013D8  501B               	movf	___ftmul@f2^0,w,c
  8144   0013DA  2622               	addwf	___ftmul@f3_as_product^0,f,c
  8145   0013DC  501C               	movf	(___ftmul@f2+1)^0,w,c
  8146   0013DE  2223               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  8147   0013E0  501D               	movf	(___ftmul@f2+2)^0,w,c
  8148   0013E2  2224               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  8149   0013E4                     i2l3281:
  8150   0013E4  90D8               	bcf	status,0,c
  8151   0013E6  321A               	rrcf	(___ftmul@f1+2)^0,f,c
  8152   0013E8  3219               	rrcf	(___ftmul@f1+1)^0,f,c
  8153   0013EA  3218               	rrcf	___ftmul@f1^0,f,c
  8154   0013EC  90D8               	bcf	status,0,c
  8155   0013EE  3224               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  8156   0013F0  3223               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  8157   0013F2  3222               	rrcf	___ftmul@f3_as_product^0,f,c
  8158   0013F4  2E25               	decfsz	___ftmul@cntr^0,f,c
  8159   0013F6  D7EE               	goto	i2l3277
  8160   0013F8  C022  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  8161   0013FC  C023  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8162   001400  C024  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8163   001404  C021  F004         	movff	___ftmul@exp,___ftpack@exp
  8164   001408  C026  F005         	movff	___ftmul@sign,___ftpack@sign
  8165   00140C  ECC0  F00B         	call	___ftpack	;wreg free
  8166   001410  C001  F018         	movff	?___ftpack,?___ftmul
  8167   001414  C002  F019         	movff	?___ftpack+1,?___ftmul+1
  8168   001418  C003  F01A         	movff	?___ftpack+2,?___ftmul+2
  8169   00141C  0012               	return		;funcret
  8170   00141E                     __end_of___ftmul:
  8171                           	callstack 0
  8172                           
  8173 ;; *************** function ___ftge *****************
  8174 ;; Defined at:
  8175 ;;		line 4 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/ftge.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  ff1             3    0[COMRAM] float 
  8178 ;;  ff2             3    3[COMRAM] float 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;		None
  8181 ;; Return value:  Size  Location     Type
  8182 ;;		None               void
  8183 ;; Registers used:
  8184 ;;		wreg, status,2, status,0
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8190 ;;      Params:         6       0       0       0       0       0       0       0       0
  8191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8192 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8193 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8194 ;;Total ram usage:        9 bytes
  8195 ;; Hardware stack levels used: 1
  8196 ;; This function calls:
  8197 ;;		Nothing
  8198 ;; This function is called by:
  8199 ;;		_Duty_motor
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text55
  8204   001CBA                     __ptext55:
  8205                           	callstack 0
  8206   001CBA                     ___ftge:
  8207                           	callstack 23
  8208                           
  8209                           ;incstack = 0
  8210   001CBA  AE03               	btfss	(___ftge@ff1+2)^0,7,c
  8211   001CBC  D00F               	goto	i2l3373
  8212   001CBE  0E00               	movlw	0
  8213   001CC0  6E07               	movwf	??___ftge^0,c
  8214   001CC2  0E00               	movlw	0
  8215   001CC4  6E08               	movwf	(??___ftge+1)^0,c
  8216   001CC6  0E80               	movlw	128
  8217   001CC8  6E09               	movwf	(??___ftge+2)^0,c
  8218   001CCA  5001               	movf	___ftge@ff1^0,w,c
  8219   001CCC  5C07               	subwf	??___ftge^0,w,c
  8220   001CCE  6E01               	movwf	___ftge@ff1^0,c
  8221   001CD0  5002               	movf	(___ftge@ff1+1)^0,w,c
  8222   001CD2  5808               	subwfb	(??___ftge+1)^0,w,c
  8223   001CD4  6E02               	movwf	(___ftge@ff1+1)^0,c
  8224   001CD6  5003               	movf	(___ftge@ff1+2)^0,w,c
  8225   001CD8  5809               	subwfb	(??___ftge+2)^0,w,c
  8226   001CDA  6E03               	movwf	(___ftge@ff1+2)^0,c
  8227   001CDC                     i2l3373:
  8228   001CDC  AE06               	btfss	(___ftge@ff2+2)^0,7,c
  8229   001CDE  D00F               	goto	i2l3377
  8230   001CE0  0E00               	movlw	0
  8231   001CE2  6E07               	movwf	??___ftge^0,c
  8232   001CE4  0E00               	movlw	0
  8233   001CE6  6E08               	movwf	(??___ftge+1)^0,c
  8234   001CE8  0E80               	movlw	128
  8235   001CEA  6E09               	movwf	(??___ftge+2)^0,c
  8236   001CEC  5004               	movf	___ftge@ff2^0,w,c
  8237   001CEE  5C07               	subwf	??___ftge^0,w,c
  8238   001CF0  6E04               	movwf	___ftge@ff2^0,c
  8239   001CF2  5005               	movf	(___ftge@ff2+1)^0,w,c
  8240   001CF4  5808               	subwfb	(??___ftge+1)^0,w,c
  8241   001CF6  6E05               	movwf	(___ftge@ff2+1)^0,c
  8242   001CF8  5006               	movf	(___ftge@ff2+2)^0,w,c
  8243   001CFA  5809               	subwfb	(??___ftge+2)^0,w,c
  8244   001CFC  6E06               	movwf	(___ftge@ff2+2)^0,c
  8245   001CFE                     i2l3377:
  8246   001CFE  0E00               	movlw	0
  8247   001D00  1A01               	xorwf	___ftge@ff1^0,f,c
  8248   001D02  0E00               	movlw	0
  8249   001D04  1A02               	xorwf	(___ftge@ff1+1)^0,f,c
  8250   001D06  0E80               	movlw	128
  8251   001D08  1A03               	xorwf	(___ftge@ff1+2)^0,f,c
  8252   001D0A  0E00               	movlw	0
  8253   001D0C  1A04               	xorwf	___ftge@ff2^0,f,c
  8254   001D0E  0E00               	movlw	0
  8255   001D10  1A05               	xorwf	(___ftge@ff2+1)^0,f,c
  8256   001D12  0E80               	movlw	128
  8257   001D14  1A06               	xorwf	(___ftge@ff2+2)^0,f,c
  8258   001D16  5004               	movf	___ftge@ff2^0,w,c
  8259   001D18  5C01               	subwf	___ftge@ff1^0,w,c
  8260   001D1A  5005               	movf	(___ftge@ff2+1)^0,w,c
  8261   001D1C  5802               	subwfb	(___ftge@ff1+1)^0,w,c
  8262   001D1E  5006               	movf	(___ftge@ff2+2)^0,w,c
  8263   001D20  5803               	subwfb	(___ftge@ff1+2)^0,w,c
  8264   001D22  B0D8               	btfsc	status,0,c
  8265   001D24  D002               	goto	i2l3383
  8266   001D26  90D8               	bcf	status,0,c
  8267   001D28  0012               	return	
  8268   001D2A                     i2l3383:
  8269   001D2A  80D8               	bsf	status,0,c
  8270   001D2C  0012               	return		;funcret
  8271   001D2E                     __end_of___ftge:
  8272                           	callstack 0
  8273                           
  8274 ;; *************** function ___ftdiv *****************
  8275 ;; Defined at:
  8276 ;;		line 54 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/ftdiv.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;  f1              3    8[COMRAM] float 
  8279 ;;  f2              3   11[COMRAM] float 
  8280 ;; Auto vars:     Size  Location     Type
  8281 ;;  f3              3   18[COMRAM] float 
  8282 ;;  sign            1   22[COMRAM] unsigned char 
  8283 ;;  exp             1   21[COMRAM] unsigned char 
  8284 ;;  cntr            1   17[COMRAM] unsigned char 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  3    8[COMRAM] float 
  8287 ;; Registers used:
  8288 ;;		wreg, status,2, status,0, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8294 ;;      Params:         6       0       0       0       0       0       0       0       0
  8295 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8296 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8297 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8298 ;;Total ram usage:       15 bytes
  8299 ;; Hardware stack levels used: 1
  8300 ;; Hardware stack levels required when called: 1
  8301 ;; This function calls:
  8302 ;;		___ftpack
  8303 ;; This function is called by:
  8304 ;;		_Duty_motor
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           	psect	text56
  8309   00141E                     __ptext56:
  8310                           	callstack 0
  8311   00141E                     ___ftdiv:
  8312                           	callstack 22
  8313                           
  8314                           ;incstack = 0
  8315   00141E  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  8316   001422  6A10               	clrf	(??___ftdiv+1)^0,c
  8317   001424  6A11               	clrf	(??___ftdiv+2)^0,c
  8318   001426  340A               	rlcf	(___ftdiv@f1+1)^0,w,c
  8319   001428  360F               	rlcf	??___ftdiv^0,f,c
  8320   00142A  E301               	bnc	u222_41
  8321   00142C  8010               	bsf	(??___ftdiv+1)^0,0,c
  8322   00142E                     u222_41:
  8323   00142E  500F               	movf	??___ftdiv^0,w,c
  8324   001430  6E16               	movwf	___ftdiv@exp^0,c
  8325   001432  5016               	movf	___ftdiv@exp^0,w,c
  8326   001434  A4D8               	btfss	status,2,c
  8327   001436  D007               	goto	i2l3201
  8328   001438  0E00               	movlw	0
  8329   00143A  6E09               	movwf	?___ftdiv^0,c
  8330   00143C  0E00               	movlw	0
  8331   00143E  6E0A               	movwf	(?___ftdiv+1)^0,c
  8332   001440  0E00               	movlw	0
  8333   001442  6E0B               	movwf	(?___ftdiv+2)^0,c
  8334   001444  0012               	return	
  8335   001446                     i2l3201:
  8336   001446  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  8337   00144A  6A10               	clrf	(??___ftdiv+1)^0,c
  8338   00144C  6A11               	clrf	(??___ftdiv+2)^0,c
  8339   00144E  340D               	rlcf	(___ftdiv@f2+1)^0,w,c
  8340   001450  360F               	rlcf	??___ftdiv^0,f,c
  8341   001452  E301               	bnc	u224_41
  8342   001454  8010               	bsf	(??___ftdiv+1)^0,0,c
  8343   001456                     u224_41:
  8344   001456  500F               	movf	??___ftdiv^0,w,c
  8345   001458  6E17               	movwf	___ftdiv@sign^0,c
  8346   00145A  5017               	movf	___ftdiv@sign^0,w,c
  8347   00145C  A4D8               	btfss	status,2,c
  8348   00145E  D007               	goto	i2l3207
  8349   001460  0E00               	movlw	0
  8350   001462  6E09               	movwf	?___ftdiv^0,c
  8351   001464  0E00               	movlw	0
  8352   001466  6E0A               	movwf	(?___ftdiv+1)^0,c
  8353   001468  0E00               	movlw	0
  8354   00146A  6E0B               	movwf	(?___ftdiv+2)^0,c
  8355   00146C  0012               	return	
  8356   00146E                     i2l3207:
  8357   00146E  0E00               	movlw	0
  8358   001470  6E13               	movwf	___ftdiv@f3^0,c
  8359   001472  0E00               	movlw	0
  8360   001474  6E14               	movwf	(___ftdiv@f3+1)^0,c
  8361   001476  0E00               	movlw	0
  8362   001478  6E15               	movwf	(___ftdiv@f3+2)^0,c
  8363   00147A  5017               	movf	___ftdiv@sign^0,w,c
  8364   00147C  0F89               	addlw	137
  8365   00147E  5E16               	subwf	___ftdiv@exp^0,f,c
  8366   001480  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  8367   001484  500E               	movf	(___ftdiv@f2+2)^0,w,c
  8368   001486  1A17               	xorwf	___ftdiv@sign^0,f,c
  8369   001488  0E80               	movlw	128
  8370   00148A  1617               	andwf	___ftdiv@sign^0,f,c
  8371   00148C  8E0A               	bsf	(___ftdiv@f1+1)^0,7,c
  8372   00148E  0EFF               	movlw	255
  8373   001490  1609               	andwf	___ftdiv@f1^0,f,c
  8374   001492  0EFF               	movlw	255
  8375   001494  160A               	andwf	(___ftdiv@f1+1)^0,f,c
  8376   001496  0E00               	movlw	0
  8377   001498  160B               	andwf	(___ftdiv@f1+2)^0,f,c
  8378   00149A  8E0D               	bsf	(___ftdiv@f2+1)^0,7,c
  8379   00149C  0EFF               	movlw	255
  8380   00149E  160C               	andwf	___ftdiv@f2^0,f,c
  8381   0014A0  0EFF               	movlw	255
  8382   0014A2  160D               	andwf	(___ftdiv@f2+1)^0,f,c
  8383   0014A4  0E00               	movlw	0
  8384   0014A6  160E               	andwf	(___ftdiv@f2+2)^0,f,c
  8385   0014A8  0E18               	movlw	24
  8386   0014AA  6E12               	movwf	___ftdiv@cntr^0,c
  8387   0014AC                     i2l3227:
  8388   0014AC  90D8               	bcf	status,0,c
  8389   0014AE  3613               	rlcf	___ftdiv@f3^0,f,c
  8390   0014B0  3614               	rlcf	(___ftdiv@f3+1)^0,f,c
  8391   0014B2  3615               	rlcf	(___ftdiv@f3+2)^0,f,c
  8392   0014B4  500C               	movf	___ftdiv@f2^0,w,c
  8393   0014B6  5C09               	subwf	___ftdiv@f1^0,w,c
  8394   0014B8  500D               	movf	(___ftdiv@f2+1)^0,w,c
  8395   0014BA  580A               	subwfb	(___ftdiv@f1+1)^0,w,c
  8396   0014BC  500E               	movf	(___ftdiv@f2+2)^0,w,c
  8397   0014BE  580B               	subwfb	(___ftdiv@f1+2)^0,w,c
  8398   0014C0  A0D8               	btfss	status,0,c
  8399   0014C2  D007               	goto	i2l871
  8400   0014C4  500C               	movf	___ftdiv@f2^0,w,c
  8401   0014C6  5E09               	subwf	___ftdiv@f1^0,f,c
  8402   0014C8  500D               	movf	(___ftdiv@f2+1)^0,w,c
  8403   0014CA  5A0A               	subwfb	(___ftdiv@f1+1)^0,f,c
  8404   0014CC  500E               	movf	(___ftdiv@f2+2)^0,w,c
  8405   0014CE  5A0B               	subwfb	(___ftdiv@f1+2)^0,f,c
  8406   0014D0  8013               	bsf	___ftdiv@f3^0,0,c
  8407   0014D2                     i2l871:
  8408   0014D2  90D8               	bcf	status,0,c
  8409   0014D4  3609               	rlcf	___ftdiv@f1^0,f,c
  8410   0014D6  360A               	rlcf	(___ftdiv@f1+1)^0,f,c
  8411   0014D8  360B               	rlcf	(___ftdiv@f1+2)^0,f,c
  8412   0014DA  2E12               	decfsz	___ftdiv@cntr^0,f,c
  8413   0014DC  D7E7               	goto	i2l3227
  8414   0014DE  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  8415   0014E2  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8416   0014E6  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8417   0014EA  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  8418   0014EE  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  8419   0014F2  ECC0  F00B         	call	___ftpack	;wreg free
  8420   0014F6  C001  F009         	movff	?___ftpack,?___ftdiv
  8421   0014FA  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  8422   0014FE  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  8423   001502  0012               	return		;funcret
  8424   001504                     __end_of___ftdiv:
  8425                           	callstack 0
  8426                           
  8427 ;; *************** function ___ftpack *****************
  8428 ;; Defined at:
  8429 ;;		line 62 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/float.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;  arg             3    0[COMRAM] unsigned um
  8432 ;;  exp             1    3[COMRAM] unsigned char 
  8433 ;;  sign            1    4[COMRAM] unsigned char 
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;		None
  8436 ;; Return value:  Size  Location     Type
  8437 ;;                  3    0[COMRAM] float 
  8438 ;; Registers used:
  8439 ;;		wreg, status,2, status,0
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8445 ;;      Params:         5       0       0       0       0       0       0       0       0
  8446 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8447 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8448 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8449 ;;Total ram usage:        8 bytes
  8450 ;; Hardware stack levels used: 1
  8451 ;; This function calls:
  8452 ;;		Nothing
  8453 ;; This function is called by:
  8454 ;;		___ftdiv
  8455 ;;		___ftmul
  8456 ;;		___lwtoft
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           	psect	text57
  8461   001780                     __ptext57:
  8462                           	callstack 0
  8463   001780                     ___ftpack:
  8464                           	callstack 23
  8465                           
  8466                           ;incstack = 0
  8467   001780  5004               	movf	___ftpack@exp^0,w,c
  8468   001782  B4D8               	btfsc	status,2,c
  8469   001784  D005               	goto	i2u203_40
  8470   001786  5001               	movf	___ftpack@arg^0,w,c
  8471   001788  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  8472   00178A  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  8473   00178C  A4D8               	btfss	status,2,c
  8474   00178E  D00C               	goto	i2l2961
  8475   001790                     i2u203_40:
  8476   001790  0E00               	movlw	0
  8477   001792  6E01               	movwf	?___ftpack^0,c
  8478   001794  0E00               	movlw	0
  8479   001796  6E02               	movwf	(?___ftpack+1)^0,c
  8480   001798  0E00               	movlw	0
  8481   00179A  6E03               	movwf	(?___ftpack+2)^0,c
  8482   00179C  0012               	return	
  8483   00179E                     i2l2959:
  8484   00179E  2A04               	incf	___ftpack@exp^0,f,c
  8485   0017A0  90D8               	bcf	status,0,c
  8486   0017A2  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  8487   0017A4  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  8488   0017A6  3201               	rrcf	___ftpack@arg^0,f,c
  8489   0017A8                     i2l2961:
  8490   0017A8  0E00               	movlw	0
  8491   0017AA  1401               	andwf	___ftpack@arg^0,w,c
  8492   0017AC  6E06               	movwf	??___ftpack^0,c
  8493   0017AE  0E00               	movlw	0
  8494   0017B0  1402               	andwf	(___ftpack@arg+1)^0,w,c
  8495   0017B2  6E07               	movwf	(??___ftpack+1)^0,c
  8496   0017B4  0EFE               	movlw	254
  8497   0017B6  1403               	andwf	(___ftpack@arg+2)^0,w,c
  8498   0017B8  6E08               	movwf	(??___ftpack+2)^0,c
  8499   0017BA  5006               	movf	??___ftpack^0,w,c
  8500   0017BC  1007               	iorwf	(??___ftpack+1)^0,w,c
  8501   0017BE  1008               	iorwf	(??___ftpack+2)^0,w,c
  8502   0017C0  B4D8               	btfsc	status,2,c
  8503   0017C2  D00C               	goto	i2l2967
  8504   0017C4  D7EC               	goto	i2l2959
  8505   0017C6                     i2l2963:
  8506   0017C6  2A04               	incf	___ftpack@exp^0,f,c
  8507   0017C8  0E01               	movlw	1
  8508   0017CA  2601               	addwf	___ftpack@arg^0,f,c
  8509   0017CC  0E00               	movlw	0
  8510   0017CE  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  8511   0017D0  0E00               	movlw	0
  8512   0017D2  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  8513   0017D4  90D8               	bcf	status,0,c
  8514   0017D6  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  8515   0017D8  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  8516   0017DA  3201               	rrcf	___ftpack@arg^0,f,c
  8517   0017DC                     i2l2967:
  8518   0017DC  0E00               	movlw	0
  8519   0017DE  1401               	andwf	___ftpack@arg^0,w,c
  8520   0017E0  6E06               	movwf	??___ftpack^0,c
  8521   0017E2  0E00               	movlw	0
  8522   0017E4  1402               	andwf	(___ftpack@arg+1)^0,w,c
  8523   0017E6  6E07               	movwf	(??___ftpack+1)^0,c
  8524   0017E8  0EFF               	movlw	255
  8525   0017EA  1403               	andwf	(___ftpack@arg+2)^0,w,c
  8526   0017EC  6E08               	movwf	(??___ftpack+2)^0,c
  8527   0017EE  5006               	movf	??___ftpack^0,w,c
  8528   0017F0  1007               	iorwf	(??___ftpack+1)^0,w,c
  8529   0017F2  1008               	iorwf	(??___ftpack+2)^0,w,c
  8530   0017F4  B4D8               	btfsc	status,2,c
  8531   0017F6  D006               	goto	i2l2971
  8532   0017F8  D7E6               	goto	i2l2963
  8533   0017FA                     i2l2969:
  8534   0017FA  0604               	decf	___ftpack@exp^0,f,c
  8535   0017FC  90D8               	bcf	status,0,c
  8536   0017FE  3601               	rlcf	___ftpack@arg^0,f,c
  8537   001800  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  8538   001802  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  8539   001804                     i2l2971:
  8540   001804  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  8541   001806  D003               	goto	i2u207_40
  8542   001808  0E02               	movlw	2
  8543   00180A  6004               	cpfslt	___ftpack@exp^0,c
  8544   00180C  D7F6               	goto	i2l2969
  8545   00180E                     i2u207_40:
  8546   00180E  A004               	btfss	___ftpack@exp^0,0,c
  8547   001810  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  8548   001812  90D8               	bcf	status,0,c
  8549   001814  3204               	rrcf	___ftpack@exp^0,f,c
  8550   001816  5004               	movf	___ftpack@exp^0,w,c
  8551   001818  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  8552   00181A  5005               	movf	___ftpack@sign^0,w,c
  8553   00181C  A4D8               	btfss	status,2,c
  8554   00181E  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  8555   001820  C001  F001         	movff	___ftpack@arg,?___ftpack
  8556   001824  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  8557   001828  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  8558   00182C  0012               	return		;funcret
  8559   00182E                     __end_of___ftpack:
  8560                           	callstack 0
  8561                           
  8562 ;; *************** function _Conversion *****************
  8563 ;; Defined at:
  8564 ;;		line 334 in file "main.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  canal           1    wreg     unsigned char 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;  canal           1    3[COMRAM] unsigned char 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  2    0[COMRAM] unsigned int 
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8578 ;;      Params:         2       0       0       0       0       0       0       0       0
  8579 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8580 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8581 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8582 ;;Total ram usage:        4 bytes
  8583 ;; Hardware stack levels used: 1
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_ISR
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           	psect	text58
  8592   002414                     __ptext58:
  8593                           	callstack 0
  8594   002414                     _Conversion:
  8595                           	callstack 24
  8596                           
  8597                           ;incstack = 0
  8598                           ;Conversion@canal stored from wreg
  8599   002414  6E04               	movwf	Conversion@canal^0,c
  8600                           
  8601                           ;main.c: 335: ADCON0 = (ADCON0 & 0b00000011) | (canal << 2);
  8602   002416  C004  F003         	movff	Conversion@canal,??_Conversion
  8603   00241A  90D8               	bcf	status,0,c
  8604   00241C  3603               	rlcf	??_Conversion^0,f,c
  8605   00241E  90D8               	bcf	status,0,c
  8606   002420  3603               	rlcf	??_Conversion^0,f,c
  8607   002422  50C2               	movf	194,w,c	;volatile
  8608   002424  0B03               	andlw	3
  8609   002426  1003               	iorwf	??_Conversion^0,w,c
  8610   002428  6EC2               	movwf	194,c	;volatile
  8611                           
  8612                           ;main.c: 336: GO = 1;
  8613   00242A  82C2               	bsf	4034,1,c	;volatile
  8614   00242C                     i2l374:
  8615   00242C  B2C2               	btfsc	4034,1,c	;volatile
  8616   00242E  D7FE               	goto	i2l374
  8617                           
  8618                           ;main.c: 338: return ADRES;
  8619   002430  CFC3 F001          	movff	4035,?_Conversion	;volatile
  8620   002434  CFC4 F002          	movff	4036,?_Conversion+1	;volatile
  8621   002438  0012               	return		;funcret
  8622   00243A                     __end_of_Conversion:
  8623                           	callstack 0
  8624                           
  8625                           	psect	rparam
  8626   000000                     
  8627                           	psect	temp
  8628   00004F                     btemp:
  8629                           	callstack 0
  8630   00004F                     	ds	1
  8631   000000                     int$flags	set	btemp
  8632   000000                     wtemp8	set	btemp+1
  8633   000000                     ttemp5	set	btemp+1
  8634   000000                     ttemp6	set	btemp+4
  8635   000000                     ttemp7	set	btemp+8
  8636                           
  8637                           	psect	idloc
  8638                           
  8639                           ;Config register IDLOC0 @ 0x200000
  8640                           ;	unspecified, using default values
  8641   200000                     	org	2097152
  8642   200000  FF                 	db	255
  8643                           
  8644                           ;Config register IDLOC1 @ 0x200001
  8645                           ;	unspecified, using default values
  8646   200001                     	org	2097153
  8647   200001  FF                 	db	255
  8648                           
  8649                           ;Config register IDLOC2 @ 0x200002
  8650                           ;	unspecified, using default values
  8651   200002                     	org	2097154
  8652   200002  FF                 	db	255
  8653                           
  8654                           ;Config register IDLOC3 @ 0x200003
  8655                           ;	unspecified, using default values
  8656   200003                     	org	2097155
  8657   200003  FF                 	db	255
  8658                           
  8659                           ;Config register IDLOC4 @ 0x200004
  8660                           ;	unspecified, using default values
  8661   200004                     	org	2097156
  8662   200004  FF                 	db	255
  8663                           
  8664                           ;Config register IDLOC5 @ 0x200005
  8665                           ;	unspecified, using default values
  8666   200005                     	org	2097157
  8667   200005  FF                 	db	255
  8668                           
  8669                           ;Config register IDLOC6 @ 0x200006
  8670                           ;	unspecified, using default values
  8671   200006                     	org	2097158
  8672   200006  FF                 	db	255
  8673                           
  8674                           ;Config register IDLOC7 @ 0x200007
  8675                           ;	unspecified, using default values
  8676   200007                     	org	2097159
  8677   200007  FF                 	db	255
  8678                           
  8679                           	psect	config
  8680                           
  8681                           ;Config register CONFIG1L @ 0x300000
  8682                           ;	unspecified, using default values
  8683                           ;	PLL Prescaler Selection bits
  8684                           ;	PLLDIV = 0x0, unprogrammed default
  8685                           ;	System Clock Postscaler Selection bits
  8686                           ;	CPUDIV = 0x0, unprogrammed default
  8687                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8688                           ;	USBDIV = 0x0, unprogrammed default
  8689   300000                     	org	3145728
  8690   300000  00                 	db	0
  8691                           
  8692                           ;Config register CONFIG1H @ 0x300001
  8693                           ;	Oscillator Selection bits
  8694                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  8695                           ;	Fail-Safe Clock Monitor Enable bit
  8696                           ;	FCMEN = 0x0, unprogrammed default
  8697                           ;	Internal/External Oscillator Switchover bit
  8698                           ;	IESO = 0x0, unprogrammed default
  8699   300001                     	org	3145729
  8700   300001  09                 	db	9
  8701                           
  8702                           ;Config register CONFIG2L @ 0x300002
  8703                           ;	unspecified, using default values
  8704                           ;	Power-up Timer Enable bit
  8705                           ;	PWRT = 0x1, unprogrammed default
  8706                           ;	Brown-out Reset Enable bits
  8707                           ;	BOR = 0x3, unprogrammed default
  8708                           ;	Brown-out Reset Voltage bits
  8709                           ;	BORV = 0x3, unprogrammed default
  8710                           ;	USB Voltage Regulator Enable bit
  8711                           ;	VREGEN = 0x0, unprogrammed default
  8712   300002                     	org	3145730
  8713   300002  1F                 	db	31
  8714                           
  8715                           ;Config register CONFIG2H @ 0x300003
  8716                           ;	Watchdog Timer Enable bit
  8717                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8718                           ;	Watchdog Timer Postscale Select bits
  8719                           ;	WDTPS = 0xF, unprogrammed default
  8720   300003                     	org	3145731
  8721   300003  1E                 	db	30
  8722                           
  8723                           ; Padding undefined space
  8724   300004                     	org	3145732
  8725   300004  FF                 	db	255
  8726                           
  8727                           ;Config register CONFIG3H @ 0x300005
  8728                           ;	CCP2 MUX bit
  8729                           ;	CCP2MX = 0x1, unprogrammed default
  8730                           ;	PORTB A/D Enable bit
  8731                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8732                           ;	Low-Power Timer 1 Oscillator Enable bit
  8733                           ;	LPT1OSC = 0x0, unprogrammed default
  8734                           ;	MCLR Pin Enable bit
  8735                           ;	MCLRE = 0x1, unprogrammed default
  8736   300005                     	org	3145733
  8737   300005  81                 	db	129
  8738                           
  8739                           ;Config register CONFIG4L @ 0x300006
  8740                           ;	Stack Full/Underflow Reset Enable bit
  8741                           ;	STVREN = 0x1, unprogrammed default
  8742                           ;	Single-Supply ICSP Enable bit
  8743                           ;	LVP = OFF, Single-Supply ICSP disabled
  8744                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8745                           ;	ICPRT = 0x0, unprogrammed default
  8746                           ;	Extended Instruction Set Enable bit
  8747                           ;	XINST = 0x0, unprogrammed default
  8748                           ;	Background Debugger Enable bit
  8749                           ;	DEBUG = 0x1, unprogrammed default
  8750   300006                     	org	3145734
  8751   300006  81                 	db	129
  8752                           
  8753                           ; Padding undefined space
  8754   300007                     	org	3145735
  8755   300007  FF                 	db	255
  8756                           
  8757                           ;Config register CONFIG5L @ 0x300008
  8758                           ;	unspecified, using default values
  8759                           ;	Code Protection bit
  8760                           ;	CP0 = 0x1, unprogrammed default
  8761                           ;	Code Protection bit
  8762                           ;	CP1 = 0x1, unprogrammed default
  8763                           ;	Code Protection bit
  8764                           ;	CP2 = 0x1, unprogrammed default
  8765                           ;	Code Protection bit
  8766                           ;	CP3 = 0x1, unprogrammed default
  8767   300008                     	org	3145736
  8768   300008  0F                 	db	15
  8769                           
  8770                           ;Config register CONFIG5H @ 0x300009
  8771                           ;	unspecified, using default values
  8772                           ;	Boot Block Code Protection bit
  8773                           ;	CPB = 0x1, unprogrammed default
  8774                           ;	Data EEPROM Code Protection bit
  8775                           ;	CPD = 0x1, unprogrammed default
  8776   300009                     	org	3145737
  8777   300009  C0                 	db	192
  8778                           
  8779                           ;Config register CONFIG6L @ 0x30000A
  8780                           ;	unspecified, using default values
  8781                           ;	Write Protection bit
  8782                           ;	WRT0 = 0x1, unprogrammed default
  8783                           ;	Write Protection bit
  8784                           ;	WRT1 = 0x1, unprogrammed default
  8785                           ;	Write Protection bit
  8786                           ;	WRT2 = 0x1, unprogrammed default
  8787                           ;	Write Protection bit
  8788                           ;	WRT3 = 0x1, unprogrammed default
  8789   30000A                     	org	3145738
  8790   30000A  0F                 	db	15
  8791                           
  8792                           ;Config register CONFIG6H @ 0x30000B
  8793                           ;	unspecified, using default values
  8794                           ;	Configuration Register Write Protection bit
  8795                           ;	WRTC = 0x1, unprogrammed default
  8796                           ;	Boot Block Write Protection bit
  8797                           ;	WRTB = 0x1, unprogrammed default
  8798                           ;	Data EEPROM Write Protection bit
  8799                           ;	WRTD = 0x1, unprogrammed default
  8800   30000B                     	org	3145739
  8801   30000B  E0                 	db	224
  8802                           
  8803                           ;Config register CONFIG7L @ 0x30000C
  8804                           ;	unspecified, using default values
  8805                           ;	Table Read Protection bit
  8806                           ;	EBTR0 = 0x1, unprogrammed default
  8807                           ;	Table Read Protection bit
  8808                           ;	EBTR1 = 0x1, unprogrammed default
  8809                           ;	Table Read Protection bit
  8810                           ;	EBTR2 = 0x1, unprogrammed default
  8811                           ;	Table Read Protection bit
  8812                           ;	EBTR3 = 0x1, unprogrammed default
  8813   30000C                     	org	3145740
  8814   30000C  0F                 	db	15
  8815                           
  8816                           ;Config register CONFIG7H @ 0x30000D
  8817                           ;	unspecified, using default values
  8818                           ;	Boot Block Table Read Protection bit
  8819                           ;	EBTRB = 0x1, unprogrammed default
  8820   30000D                     	org	3145741
  8821   30000D  40                 	db	64
  8822                           tosu	equ	0xFFF
  8823                           tosh	equ	0xFFE
  8824                           tosl	equ	0xFFD
  8825                           stkptr	equ	0xFFC
  8826                           pclatu	equ	0xFFB
  8827                           pclath	equ	0xFFA
  8828                           pcl	equ	0xFF9
  8829                           tblptru	equ	0xFF8
  8830                           tblptrh	equ	0xFF7
  8831                           tblptrl	equ	0xFF6
  8832                           tablat	equ	0xFF5
  8833                           prodh	equ	0xFF4
  8834                           prodl	equ	0xFF3
  8835                           indf0	equ	0xFEF
  8836                           postinc0	equ	0xFEE
  8837                           postdec0	equ	0xFED
  8838                           preinc0	equ	0xFEC
  8839                           plusw0	equ	0xFEB
  8840                           fsr0h	equ	0xFEA
  8841                           fsr0l	equ	0xFE9
  8842                           wreg	equ	0xFE8
  8843                           indf1	equ	0xFE7
  8844                           postinc1	equ	0xFE6
  8845                           postdec1	equ	0xFE5
  8846                           preinc1	equ	0xFE4
  8847                           plusw1	equ	0xFE3
  8848                           fsr1h	equ	0xFE2
  8849                           fsr1l	equ	0xFE1
  8850                           bsr	equ	0xFE0
  8851                           indf2	equ	0xFDF
  8852                           postinc2	equ	0xFDE
  8853                           postdec2	equ	0xFDD
  8854                           preinc2	equ	0xFDC
  8855                           plusw2	equ	0xFDB
  8856                           fsr2h	equ	0xFDA
  8857                           fsr2l	equ	0xFD9
  8858                           status	equ	0xFD8

Data Sizes:
    Strings     168
    Constant    50
    Data        60
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      78
    BANK0           160     34      99
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Lcd_CGRAM_CreateChar@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> figura_1(CODE[8]), figura_2(CODE[8]), figura_3(CODE[8]), figura_4(CODE[8]), 
		 -> figura_5(CODE[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[15]), STR_10(CODE[4]), STR_11(CODE[18]), STR_12(CODE[5]), 
		 -> STR_13(CODE[10]), STR_14(CODE[12]), STR_2(CODE[11]), STR_3(CODE[12]), 
		 -> STR_5(CODE[17]), STR_6(CODE[8]), STR_7(CODE[10]), STR_8(CODE[3]), 
		 -> STR_9(CODE[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_4(CODE[33]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> buffer(BANK0[30]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_Duty_motor
    _okmenu->i2_ContarReal
    i2_ContarReal->i2___awdiv
    i2_escenario3->i2_Lcd_Set_Cursor
    i2_escenario3->i2_Lcd_Write_String
    _escenario4->i2_Lcd_Set_Cursor
    _escenario4->i2_Lcd_Write_String
    _borrarDigito->i2_Lcd_Set_Cursor
    ___lwtoft->___ftpack
    i2_escenario1->i2_Lcd_Set_Cursor
    i2_escenario1->i2_Lcd_Write_String
    i2_Lcd_Blink->i2_Lcd_Cmd
    i2_escenario2->i2_Lcd_Set_Cursor
    i2_escenario2->i2_Lcd_Write_String
    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_NoBlink->i2_Lcd_Cmd
    i2_Lcd_Clear->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port
    _PiezaAContar->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port
    _Duty_motor->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___ftpack

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fttol
    ___lwmod->___lwdiv
    _escenario1->_Lcd_Set_Cursor
    _escenario1->_Lcd_Write_String
    _Lcd_Blink->_Lcd_Cmd
    _MedirDistancia->___lwdiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_CGRAM_Init->_Lcd_Cmd
    _Lcd_CGRAM_CreateChar->_Lcd_Write_Char
    _Lcd_CGRAM_Close->_Lcd_Cmd
    _ContarReal->___awdiv
    _escenario3->_Lcd_Set_Cursor
    _escenario3->_Lcd_Write_String
    _escenario2->_Lcd_Set_Cursor
    _escenario2->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   20566
                                             30 BANK0      4     4      0
                         _ContarReal
                          _Lcd_Blink
                    _Lcd_CGRAM_Close
               _Lcd_CGRAM_CreateChar
                     _Lcd_CGRAM_Init
                          _Lcd_Clear
                           _Lcd_Init
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                     _MedirDistancia
                            ___fttol
                         _escenario1
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8    1385
                                             15 BANK0     15     7      8
                            ___fttol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _escenario1                                           0     0      0    3731
                          _Lcd_Blink
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Blink                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     378
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (1) _MedirDistancia                                       1     1      0     491
                                              7 BANK0      1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     308
                                              3 BANK0      1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Init                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_CreateChar                                11    10      1    1300
                                              4 BANK0     11    10      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Close                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _ContarReal                                           2     2      0    8799
                                              8 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                             ___wmul
                         _escenario2
                         _escenario3
                             _vaciar
 ---------------------------------------------------------------------------------
 (2) _vaciar                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _escenario3                                           0     0      0    3553
                          _Lcd_Clear
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _escenario2                                           0     0      0    3731
                          _Lcd_Clear
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     3      1    1204
                                              4 BANK0      4     3      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     178
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    2129
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_NoBlink                                          0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 10    10      0   24363
                                             44 COMRAM    10    10      0
                         _Conversion
                         _Duty_motor
                       _PiezaAContar
                          _Reiniciar
                           _Terminar
                          _Trasmitir
                           ___lwtoft
                   _blacklighttoggle
                       _borrarDigito
                         _escenario4
                             _okmenu
 ---------------------------------------------------------------------------------
 (7) _okmenu                                               0     0      0    6579
                       i2_ContarReal
                       i2_escenario1
 ---------------------------------------------------------------------------------
 (8) i2_ContarReal                                         2     2      0    4665
                                              8 COMRAM     2     2      0
                          i2___awdiv
                          i2___awmod
                           i2___wmul
                       i2_escenario2
                       i2_escenario3
                           i2_vaciar
 ---------------------------------------------------------------------------------
 (9) i2_escenario3                                         0     0      0    1736
                        i2_Lcd_Clear
                      i2_Lcd_NoBlink
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awdiv                                            8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _escenario4                                           0     0      0    1914
                        i2_Lcd_Clear
                      i2_Lcd_NoBlink
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (7) _borrarDigito                                         0     0      0    1166
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) _blacklighttoggle                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) ___lwtoft                                             3     0      3    2903
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) _Trasmitir                                            2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Terminar                                             0     0      0    1914
                       i2_escenario1
                           i2_vaciar
 ---------------------------------------------------------------------------------
 (9) i2_vaciar                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_escenario1                                         0     0      0    1914
                        i2_Lcd_Blink
                        i2_Lcd_Clear
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Blink                                          0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) _Reiniciar                                            0     0      0    1914
                       i2_escenario2
 ---------------------------------------------------------------------------------
 (9) i2_escenario2                                         0     0      0    1914
                        i2_Lcd_Clear
                      i2_Lcd_NoBlink
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Write_String                                   4     3      1     528
                                              4 COMRAM     4     3      1
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Set_Cursor                                     5     4      1     988
                                              3 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_NoBlink                                       0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Clear                                          0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Cmd                                           2     2      0     110
                                              1 COMRAM     2     2      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) _PiezaAContar                                         2     2      0     222
                                              4 COMRAM     2     2      0
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Write_Char                                    3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (11) i2_Lcd_Port                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Duty_motor                                           6     3      3    7683
                                             38 COMRAM     6     3      3
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lwtoft (ARG)
                          i2___fttol
 ---------------------------------------------------------------------------------
 (8) i2___fttol                                           15    11      4     278
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (8) ___ftmul                                             15     9      6    3563
                                             23 COMRAM    15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftge                                               9     3      6     288
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) ___ftdiv                                             15     9      6    3365
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    2805
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) _Conversion                                           4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ContarReal
     ___awdiv
     ___awmod
     ___wmul
     _escenario2
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_NoBlink
         _Lcd_Cmd
       _Lcd_Set_Cursor
         _Lcd_Cmd
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
     _escenario3
       _Lcd_Clear
       _Lcd_NoBlink
       _Lcd_Set_Cursor
       _Lcd_Write_String
     _vaciar
   _Lcd_Blink
     _Lcd_Cmd
   _Lcd_CGRAM_Close
     _Lcd_Cmd
   _Lcd_CGRAM_CreateChar
     _Lcd_Write_Char
   _Lcd_CGRAM_Init
     _Lcd_Cmd
   _Lcd_Clear
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_NoBlink
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
   _MedirDistancia
     ___lwdiv
   ___fttol
   _escenario1
     _Lcd_Blink
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_Char
     _Lcd_Write_String
   _sprintf
     ___fttol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)

 _ISR (ROOT)
   _Conversion
   _Duty_motor
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___ftdiv (ARG)
       ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     i2___fttol (ARG)
   _PiezaAContar
     i2_Lcd_Write_Char
       i2_Lcd_Port
   _Reiniciar
     i2_escenario2
       i2_Lcd_Clear
         i2_Lcd_Cmd
           i2_Lcd_Port
       i2_Lcd_NoBlink
         i2_Lcd_Cmd
       i2_Lcd_Set_Cursor
         i2_Lcd_Cmd
       i2_Lcd_Write_Char
       i2_Lcd_Write_String
         i2_Lcd_Write_Char
   _Terminar
     i2_escenario1
       i2_Lcd_Blink
         i2_Lcd_Cmd
       i2_Lcd_Clear
       i2_Lcd_Set_Cursor
       i2_Lcd_Write_Char
       i2_Lcd_Write_String
     i2_vaciar
   _Trasmitir
   ___lwtoft
   _blacklighttoggle
   _borrarDigito
     i2_Lcd_Set_Cursor
     i2_Lcd_Write_Char
   _escenario4
     i2_Lcd_Clear
     i2_Lcd_NoBlink
     i2_Lcd_Set_Cursor
     i2_Lcd_Write_Char
     i2_Lcd_Write_String
   _okmenu
     i2_ContarReal
       i2___awdiv
       i2___awmod
       i2___wmul
       i2_escenario2
       i2_escenario3
         i2_Lcd_Clear
         i2_Lcd_NoBlink
         i2_Lcd_Set_Cursor
         i2_Lcd_Write_String
       i2_vaciar
     i2_escenario1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     22      63       5       61.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      4E       1       83.0%
BITBIGSFRlll        21      0       0      34        0.0%
BITBIGSFRhhhhlh     19      0       0      21        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhhhlll      9      0       0      28        0.0%
BITBIGSFRhhhlll      8      0       0      27        0.0%
BITBIGSFRhhhlll      7      0       0      30        0.0%
BITBIGSFRllh         6      0       0      33        0.0%
BITBIGSFRhhhlhl      5      0       0      24        0.0%
BITBIGSFRhl          4      0       0      31        0.0%
BITBIGSFRhhhlhh      3      0       0      23        0.0%
BITBIGSFRhhhlll      2      0       0      29        0.0%
BITBIGSFRhhhlll      1      0       0      25        0.0%
BITBIGSFRhhhlll      1      0       0      26        0.0%
BITBIGSFRhhhhll      1      0       0      22        0.0%
BITBIGSFRlh          1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B1      35        0.0%
DATA                 0      0      B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Sep 13 03:06:42 2024

                           _t 003A                             _v 0043                            l22 2314  
                          l14 2300                            l26 231E                            l18 230A  
                          _GO 7E11                  ___awdiv@sign 0091           ___wmul@multiplicand 008E  
                         l492 1C72                           l494 1C74                           l487 1C5E  
                         _GIE 7F97                           _RC0 7C10                           _RC1 7C11  
                         _RB4 7C0C                           _RB5 7C0D                           _RB6 7C0E  
                         _RB7 7C0F                           _PR2 0FCB                           _ISR 0008  
               ?_borrarDigito 0001                  ___awmod@sign 0091                _contadorDecena 00B1  
                         wreg 0FE8           __end_of_Lcd_NoBlink 24C6                          ?_ISR 0001  
              _contadorUnidad 00B3                  ___ftdiv@cntr 0012         Lcd_CGRAM_CreateChar@i 0093  
                ___ftdiv@sign 0017                          l1009 1F20                          l1019 2096  
                        l3311 1B72                          l3303 1B54                          l3321 1B92  
                        l3309 1B6A                          l3325 1B9C                          l3341 1D42  
                        l3405 1F16                          l3421 208C                          l3413 206C  
                        l3351 1D64                          l3415 2074                          l4047 0D98  
                        l3329 1BAA                          l3361 1D86                          l3345 1D4E  
                        l3611 0F50                          l4075 0E14                          l3365 1D94  
                        l3357 1D7C                          l3349 1D5C                          l3605 0F2A  
                        l4085 0E62                          l3623 0F7A                          l3551 0E82  
                        l3703 1C9C                          l3711 100A                          l3297 1B44  
                        l3641 0FA8                          l3617 0F54                          l3393 1EEE  
                        l3705 1CB6                          l3635 0FA4                          l3563 0EA8  
                        l3395 1EF6                          l3731 103C                          l2933 18AE  
                        l2925 1884                          l2917 185A                          l3629 0F7E  
                        l3581 0ED6                          l3557 0E86                          l3733 1066  
                        l3717 1020                          l2791 2302                          l2943 212E  
                        l3575 0ED2                          l3911 1606                          l3751 10AE  
                        l3743 107C                          l3727 1036                          l3719 1026  
                        l3593 0F00                          l3569 0EAC                          l3649 0FCE  
                        l2795 230C                          l2947 214A                          l3587 0EFC  
                        l3941 1680                          l3933 166C                          l3757 10FE  
                        l2799 2316                          l3599 0F26                          l3929 165C  
                        l3699 1C88                          l3947 169C                          l3939 1674  
                        STR_1 0877                          STR_2 089E                          STR_3 0892  
                        STR_4 0833                          STR_5 0866                          STR_6 08C7  
                        STR_7 08A9                          STR_8 08D8                          STR_9 08B3  
             ?_Lcd_CGRAM_Init 0001                          u3021 15EA                          u3030 15F4  
                        _LATB 0F8A                          u3040 1624                          _LATD 0F8C  
                        _LATE 0F8D                          u2420 1D68                          u3045 161C  
                        u2360 1B76                          u3080 1686                          u2520 2078  
                        u2720 1C68                          u2800 10A8                          u2490 1EFA  
                        u2810 1106                          u2820 1120                          u2750 1C7C  
                        u3707 0DF4                          u2780 1012                          u3717 0E6E  
                        u3727 1C4A                          _RBIE 7F93                          _RBIF 7F90  
                        u3737 1AC2                          u3747 1ADA                          _RCIF 7CF5  
                        u3757 1AF2                          u3677 0C60                          i2l22 236C  
                        i2l14 2358                          u3767 120A                          u3687 0CB2  
                        u3777 2184                          u3697 0D82                          i2l26 2376  
                        i2l18 2362                          u3787 2198                          u3797 23BA  
                        _RBPU 7F8F                          _TMR0 0FD6                          _TMR1 0FCE  
                        _TMR2 0FCC                          _TRMT 7D61             ?_Lcd_Write_String 0090  
                        _main 0C54                  ___ftpack@arg 0001                          _menu 006C  
                ___ftpack@exp 0004                          _rojo 003D                          fsr2h 0FDA  
                        indf2 0FDF                          fsr1l 0FE1                          fsr2l 0FD9  
                        btemp 004F                          prodh 0FF4                          prodl 0FF3  
                        start 000E            ??_Lcd_Write_String 0091               __end_of_Lcd_Cmd 23C8  
                ___ftmul@cntr 0025                  ___param_bank 0000                  ___ftmul@sign 0026  
                i2___fttol@f1 0001                         ??_ISR 002D                  ___fttol@exp1 009A  
                ___fttol@lval 0096                         ?_main 0001               __end_of___awdiv 1BB4  
                       _ADRES 0FC3                         STR_10 08D4                         _CCPR2 0FBB  
                       STR_11 0854                         STR_12 08CF                         STR_13 08BD  
                       STR_14 0886               __end_of___awmod 1D9E              ?_Lcd_CGRAM_Close 0001  
             __end_of___ftdiv 1504                ??_borrarDigito 0009               __end_of___ftmul 141E  
                       _T0CON 0FD5               ___awdiv@divisor 008E                         _T1CON 0FCD  
             __end_of___fttol 16AE                         _T2CON 0FCA                         _LATA1 7C49  
                       _LATA5 7C4D               __end_of___lwdiv 1F2A               __end_of___lwmod 20A0  
                       i2l400 0964                         i2l410 09AC                         i2l402 0970  
                       i2l420 09FE                         i2l412 09B8                         i2l404 097C  
                       i2l416 09DC                         i2l408 09A0                         i2l425 0A4C  
                       i2l417 0A04                         i2l418 09E8                         i2l374 242C  
                       i2l367 22CA                         i2l463 0C30                         i2l392 0926  
                       i2l394 0932                         i2l396 093E                         i2l871 14D2  
             ___awdiv@counter 0090                         _RCREG 0FAE                         _RCSTA 0FAB  
                       _SPBRG 0FAF                         _PORTB 0F81                         _TRISA 0F92  
                       _TRISB 0F93                         _TRISC 0F94                         _TRISD 0F95  
                       _TRISE 0F96                         _TXREG 0FAD                         _TXSTA 0FAC  
                       _Tecla 004E                   ?i2_Lcd_Port 0001               __end_of_dpowers 080B  
                       _color 0060                    _ContarReal 112A                 ___ftpack@sign 0005  
                       main@d 00AC                         main@i 00AD                         tablat 0FF5  
                  _Conversion 2414              __end_ofi2___wmul 2414                         ttemp5 0050  
                       ttemp6 0053                         ttemp7 0057                         status 0FD8  
                       wtemp8 0050               __end_of_sprintf 112A              __end_ofi2_vaciar 2124  
            i2_Lcd_Set_Cursor 18D8              __end_of_Lcd_Init 1B30              __end_of_Lcd_Port 2322  
             __initialization 1E0E                  __end_of_main 0E7E                   _Lcd_NoBlink 24B8  
                      ??_main 00AA                 ___fttol@sign1 0095                 __activetblptr 0002  
                  _Duty_motor 1504              __end_of_Terminar 2514       Lcd_CGRAM_CreateChar@add 0092  
                      _ADCON0 0FC2                        _ADCON2 0FC0                        _CCP2IF 7D08  
                      _CCPR1L 0FBE              ___awdiv@dividend 008C              __end_of___ftpack 182E  
                      i2l3111 1DCC                        i2l3103 1DB2                        i2l3201 1446  
                      i2l3113 1DD4                        i2l3123 1DF6                        i2l3107 1DBE  
                      i2l3207 146E                        i2l3071 1BEE                        i2l3127 1E04  
                      i2l3119 1DEC                  i2_escenario1 2018                  i2_escenario2 1A16  
                      i2l3073 1BF6                        i2l3065 1BD8                        i2l4201 0ADC  
                      i2l4121 0990                  i2_escenario3 2254                        i2l3227 14AC  
                      i2l3091 1C2E                        i2l3083 1C16                        i2l3059 1BC8  
                      i2l4107 0954                        i2l3253 137A                        i2l4221 0B5A  
                      i2l3271 13BC                        i2l3247 1352                        i2l3087 1C20  
                      i2l4215 0B2C                        i2l4135 09CE                        i2l4151 0A08  
                      i2l3281 13E4                        i2l3513 176E                        i2l3505 1746  
                      i2l4233 0BB6                        i2l4209 0AFE                        i2l3267 13AC  
                      i2l3507 1752                        i2l4227 0B88                        i2l4155 0A22  
                      u222_41 142E                        i2l3373 1CDC                        i2l3277 13D4  
                      i2l4245 0C14                        i2l4173 0A56                        i2l3383 1D2A  
                      i2l2903 21C6                        i2l4239 0BE4                        i2l3377 1CFE  
                      i2l4169 0A48                        i2l4177 0A80                        i2l4195 0AC2  
                      i2l4187 0AA2                        i2l3477 16DA                        i2l3821 1EA6  
                      i2l3495 172E                        i2l3903 15D4                        i2l2783 236E  
                      i2l2775 235A                        i2l3823 1EAE                        i2l2961 17A8  
                      i2l3825 1EB4                        i2l2881 1928                        i2l2873 1900  
                      i2l2971 1804                        i2l2963 17C6                        i2l3499 173E  
                      i2l2779 2364                        i2l3843 1F66                        u224_41 1456  
                      i2l2967 17DC                        i2l2959 179E                        i2l2969 17FA  
                      i2l2889 1950                        i2l3881 2388                        i2l2899 21AC  
                      i2l3869 22DE                        i2l3895 157C                        i2l3899 158C  
                      u227_41 133A                        u229_41 1362                        u255_41 16BE  
            __end_of___lwtoft 245E                        _OSCCON 0FD3                     ??_Lcd_Cmd 008D  
                      _TMR0IE 7F95                        _TMR0IF 7F92                        _TMR1IF 7CF0  
                      _TMR0ON 7EAF                        _TMR1ON 7E68                        _TMR2ON 7E52  
               ?_PiezaAContar 0001              __end_of_figura_1 0833              __end_of_figura_2 082B  
            __end_of_figura_3 0823              __end_of_figura_4 081B              __end_of_figura_5 0813  
                ?i2_Lcd_Clear 0001                        ___ftge 1CBA                  ?i2_Lcd_Blink 0001  
           __end_ofi2_Lcd_Cmd 247E  Lcd_CGRAM_CreateChar@chardata 0090                        ___wmul 23C8  
                   ??___awdiv 0090                        _decena 00C1                     ??___awmod 0090  
                   ??___ftdiv 000F                     ??___ftmul 001E                     ??___fttol 0090  
                      _digito 0041                     ??___lwdiv 0090                     ??___lwmod 0097  
                      _buffer 006E           i2Lcd_Write_String@a 0005           i2Lcd_Write_String@i 0007  
                      clear_0 1E54                        clear_1 1E60              ___awdiv@quotient 0092  
                      _vaciar 20A0               ___awmod@divisor 008E                        _okmenu 237A  
                      isa$std 0001               ___awmod@counter 0090                        _unidad 00BF  
            i2_Lcd_Write_Char 221C                i2___awdiv@sign 0006         ___ftmul@f3_as_product 0022  
                __pdataCOMRAM 0037             __end_ofi2___awdiv 1C38             __end_ofi2___awmod 1E0E  
           __end_ofi2___fttol 1780                  __mediumconst 0000                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8                i2___awmod@sign 0006  
                 ?_ContarReal 0001                     ??_sprintf 00A3             MedirDistancia@aux 0093  
             Lcd_Set_Cursor@a 0090               Lcd_Set_Cursor@b 008F               Lcd_Set_Cursor@y 0092  
             Lcd_Set_Cursor@z 0091     Lcd_CGRAM_CreateChar@i_243 0094     Lcd_CGRAM_CreateChar@i_244 0095  
   Lcd_CGRAM_CreateChar@i_245 0096     Lcd_CGRAM_CreateChar@i_246 0097     Lcd_CGRAM_CreateChar@i_247 0098  
   Lcd_CGRAM_CreateChar@i_248 0099     Lcd_CGRAM_CreateChar@i_249 009A                   ?_Conversion 0001  
            ??_MedirDistancia 0093                    __accesstop 0060       __end_of__initialization 1E66  
              ??_PiezaAContar 0005                    ___ftge@ff1 0001                    ___ftge@ff2 0004  
           __end_of_Lcd_Clear 24D4             __end_of_Lcd_Blink 249C                 ___rparam_used 0001  
        __end_of_borrarDigito 1F7C                    ___ftdiv@f1 0009                    ___ftdiv@f2 000C  
                  ___ftdiv@f3 0013                    ___ftmul@f1 0018                    ___ftmul@f2 001B  
                  ___fttol@f1 008C                __pcstackCOMRAM 0001                    Trasmitir@i 0001  
                __pidataBANK0 2322                i2___fttol@exp1 000F         __end_ofi2_Lcd_NoBlink 24F0  
                  ___lwtoft@c 0009                i2___fttol@lval 000B             i2Lcd_Write_Char@a 0004  
           i2Lcd_Write_Char@y 0003                     ?i2___wmul 0001                _Lcd_Set_Cursor 182E  
                 ?_Duty_motor 0027              ??_Lcd_CGRAM_Init 008F                     ?i2_vaciar 0001  
                   ?_Lcd_Init 0001                     ?_Lcd_Port 0001          i2Lcd_Write_Char@temp 0002  
           __end_of_Reiniciar 22C0                    __pbssBANK0 00AE              _blacklighttoggle 24FE  
                   ?_Terminar 0001                       ?___ftge 0001                       ?___wmul 008C  
           __end_of_Trasmitir 22F2                       _CCP1CON 0FBD                       _CCP2CON 0FBA  
                     _BAUDCON 0FB8          i2Lcd_Set_Cursor@temp 0008                       ?_vaciar 0001  
                     ?_okmenu 0001                     ?___ftpack 0001        __end_of_Lcd_Set_Cursor 18D8  
                   ?___lwtoft 0009                    ??i2___wmul 0005      __end_ofi2_Lcd_Set_Cursor 1978  
                  ??i2_vaciar 0001                    ??_Lcd_Init 008F                  ??i2_Lcd_Port 0001  
                  ??_Lcd_Port 008C                    _escenario1 1F7C                    _escenario2 1978  
                  _escenario3 21E0                    _escenario4 1FCC                _Lcd_Write_Char 2164  
                     _Lcd_Cmd 23A2                       __Hparam 0000                       __Lparam 0000  
                  ??_Terminar 0009                       ___awdiv 1B30                       ___awmod 1D2E  
                     ___ftdiv 141E                       ___ftmul 132A                       ___fttol 15DA  
                     ___lwdiv 1ED8                       ___lwmod 205E                  __psmallconst 0800  
          __end_ofi2_Lcd_Port 237A                       __pcinit 1E0E                    ??___ftpack 0006  
                     __ramtop 0800               ?_Lcd_Set_Cursor 008F                  ?_Lcd_NoBlink 0001  
                     __ptext0 0C54                       __ptext1 1004                       __ptext2 205E  
                     __ptext3 1F7C                       __ptext4 248E                       __ptext5 15DA  
                     __ptext6 1C38                       __ptext7 1ED8                       __ptext8 1AA8  
                     __ptext9 249C                    ??___lwtoft 000C          __end_of_PiezaAContar 1ED8  
                     _dpowers 0801                       _recibir 004D              ___awmod@dividend 008C  
                     _mostrar 0049                 ?i2_ContarReal 0001                       _sprintf 1004  
      __end_of_Lcd_Write_Char 21A2                __pintcode_body 08DC          end_of_initialization 1E66  
             Conversion@canal 0004                 __Lmediumconst 0000                       int_func 08DC  
         i2___wmul@multiplier 0001      __end_ofi2_Lcd_Write_Char 2254                       postdec1 0FE5  
                     postdec2 0FDD                       postinc0 0FEE                       postinc2 0FDE  
                   Lcd_Port@a 008C                    _porcentaje 00AE                     i2_Lcd_Cmd 245E  
                _borrarDigito 1F2A                     _TRISAbits 0F92                     _TRISDbits 0F95  
              ??i2_ContarReal 0009                  ??_ContarReal 0094                     i2___awdiv 1BB4  
                   i2___awmod 1D9E                     i2___fttol 16AE               ?_Lcd_Write_Char 0001  
                 ?_escenario1 0001                   ?_escenario2 0001                   ?_escenario3 0001  
                 ?_escenario4 0001             Lcd_Write_String@a 0090             Lcd_Write_String@i 0092  
                ??_Conversion 0003                   ___ftdiv@exp 0016            i2___awdiv@dividend 0001  
                 ___ftmul@exp 0021                     _Lcd_Clear 24C6                     _Lcd_Blink 248E  
        Duty_motor@escalarADC 002A                __end_of___ftge 1D2E                __end_of___wmul 23EE  
          __end_of_ContarReal 122C              _Lcd_Write_String 2124                 __pidataCOMRAM 247E  
                  ?i2_Lcd_Cmd 0001  __end_of_Lcd_CGRAM_CreateChar 1004                __end_of_vaciar 20E2  
              __end_of_okmenu 23A2            __end_of_Conversion 243A                 _cantidadResta 00B9  
            i2___wmul@product 0005                  ??_Duty_motor 002A           start_initialization 1E0E  
    __end_of_blacklighttoggle 250A            i2___awdiv@quotient 0007                   __end_of_ISR 0C54  
             i2___fttol@sign1 000A                    ?i2___awdiv 0001                    ?i2___awmod 0001  
                  ?i2___fttol 0001                     _Reiniciar 228A             ??_Lcd_CGRAM_Close 008F  
          __end_of_Duty_motor 15DA                    ?_Lcd_Clear 0001                    ?_Lcd_Blink 0001  
                    ??___ftge 0007    __end_ofi2_Lcd_Write_String 21E0                      ??___wmul 0090  
                 __pdataBANK0 0060               Lcd_Write_Char@a 008F               Lcd_Write_Char@y 008E  
                    ??_vaciar 008C                      ??_okmenu 000B                     _Trasmitir 22C0  
                 __pbssCOMRAM 0047                 __pcstackBANK0 008C             ?i2_Lcd_Set_Cursor 0004  
          ??i2_Lcd_Set_Cursor 0005           _cantidadRestaDecena 00B5                      ?_Lcd_Cmd 0001  
                 sprintf@flag 00A4                   sprintf@prec 00A7                    ?_Reiniciar 0001  
                _PiezaAContar 1E74           _cantidadRestaUnidad 00B7              ___lwdiv@dividend 008C  
            ??_Lcd_Set_Cursor 0090                     _flagParar 0045                     __pintcode 0008  
        __end_ofi2_ContarReal 132A                      ?___awdiv 008C                      ?___awmod 008C  
                    ?___ftdiv 0009                      ?___ftmul 0018                      ?___fttol 008C  
                    ?___lwdiv 008C                      ?___lwmod 0093                   ??i2_Lcd_Cmd 0002  
                  ?_Trasmitir 0001                   __smallconst 0800              ___lwdiv@quotient 0090  
                 ??i2___awdiv 0005                   ??i2___awmod 0005                      ?_sprintf 009B  
                 ??i2___fttol 0005                 ?i2_escenario1 0001                 ?i2_escenario2 0001  
               ?i2_escenario3 0001                ___wmul@product 0090                      _LATAbits 0F89  
                    _LATDbits 0F8C             ?i2_Lcd_Write_Char 0001          _Lcd_CGRAM_CreateChar 0E7E  
                    i2u203_40 1790                      i2u213_40 1BFA                      i2u207_40 180E  
                    Lcd_Cmd@a 008E                      i2u219_40 1DD8                      i2u261_40 1758  
                    i2u341_40 0A84                      i2u351_40 0AEC                      i2u256_40 16C8  
                    i2u360_40 0B98                      i2u344_40 0A9C                      i2u257_40 16F8  
                    i2u337_40 0A38                      i2u257_45 16F0                      i2u362_40 0BC6  
                    i2u354_40 0B0E                      i2u338_45 0A3A                      i2u347_40 0ABA  
                    i2u284_40 2506                      i2u364_40 0BF4                      i2u356_40 0B3C  
                    i2u380_47 0A12                      i2u349_40 0AD2                      i2u381_47 130A  
                    i2u366_40 0C24                      i2u358_40 0B6A                      i2u382_47 2470  
                    i2u287_40 1E9E            ??i2_Lcd_Write_Char 0002                      i2u383_47 2238  
                    i2u384_47 224A                 ??i2_Lcd_Clear 0004                 ??i2_Lcd_Blink 0004  
                 ??_Lcd_Clear 008F                   ??_Lcd_Blink 008F                    _ADCON1bits 0FC1  
           ___wmul@multiplier 008C                      i2___wmul 23EE                 i2_Lcd_NoBlink 24E2  
            ??_Lcd_Write_Char 008D             i2___awdiv@divisor 0003                      i2_vaciar 20E2  
           i2___awdiv@counter 0005                      _Lcd_Init 1AA8                      _Lcd_Port 22F2  
              ??i2_escenario1 0009                ??i2_escenario2 0009                ??i2_escenario3 0009  
                   copy_data0 1E22                     copy_data1 1E42                  ??_escenario1 0094  
                ??_escenario2 0094                  ??_escenario3 0094                  ??_escenario4 0009  
          i2___awmod@dividend 0001      __end_of_Lcd_Write_String 2164                   ??_Reiniciar 0009  
       ?_Lcd_CGRAM_CreateChar 0090                      __Hrparam 0000                      __Lrparam 0000  
                    _Terminar 250A         i2___wmul@multiplicand 0003                      ___ftpack 1780  
          __end_of_escenario1 1FCC            __end_of_escenario2 1A16            __end_of_escenario3 221C  
          __end_of_escenario4 2018                ?i2_Lcd_NoBlink 0001           __end_ofi2_Lcd_Clear 24FE  
         __end_ofi2_Lcd_Blink 24E2                   ??_Trasmitir 0001                      ___lwtoft 243A  
                  sprintf@val 00A5                      _cantidad 00BD               ___lwdiv@divisor 008E  
           ?_blacklighttoggle 0001               _Lcd_CGRAM_Close 24AA                 Duty_motor@ADC 0027  
             ___lwdiv@counter 0092                      __ptext10 0E7E                      __ptext11 24AA  
                    __ptext20 24C6                      __ptext12 112A                      __ptext21 23A2  
                    __ptext13 20A0                      __ptext30 23EE                      __ptext22 22F2  
                    __ptext14 21E0                      __ptext31 1D9E                      __ptext23 23C8  
                    __ptext15 1978                      __ptext40 2018                      __ptext32 1BB4  
                    __ptext24 1D2E                      __ptext16 2124                      __ptext41 24D4  
                    __ptext33 1FCC                      __ptext25 1B30                      __ptext17 2164  
                    __ptext50 221C                      __ptext42 228A                      __ptext34 1F2A  
                    __ptext18 182E                      __ptext51 234E                      __ptext43 1A16  
                    __ptext35 24FE                      __ptext27 237A                      __ptext19 24B8  
                    __ptext52 1504                      __ptext44 21A2                      __ptext36 243A  
                    __ptext28 122C                      __ptext53 16AE                      __ptext45 18D8  
                    __ptext37 22C0                      __ptext29 2254                      __ptext54 132A  
                    __ptext46 24E2                      __ptext38 250A                      __ptext55 1CBA  
                    __ptext47 24F0                      __ptext39 20E2                      __ptext56 141E  
                    __ptext48 245E                      __ptext57 1780                      __ptext49 1E74  
                    __ptext58 2414                      _figura_1 082B                      _figura_2 0823  
                    _figura_3 081B                      _figura_4 0813                      _figura_5 080B  
          ??_blacklighttoggle 0001                      _contador 00BB                      _ctimeout 004B  
               _resultado_ADC 0047                      _etimeout 004C                      isa$xinst 0000  
              _MedirDistancia 1C38                      int$flags 004F                   i2Lcd_Port@a 0001  
           i2___awmod@divisor 0003              _porcentajeManual 0037             i2___awmod@counter 0005  
               PiezaAContar@a 0006            i2_Lcd_Write_String 21A2                  i2_ContarReal 122C  
          Lcd_Write_Char@temp 008D                      intlevel2 0000                     sprintf@ap 00A8  
                   sprintf@sp 009B           ?i2_Lcd_Write_String 0005        ??_Lcd_CGRAM_CreateChar 0091  
           i2Lcd_Set_Cursor@a 0005             i2Lcd_Set_Cursor@b 0004             i2Lcd_Set_Cursor@y 0007  
           i2Lcd_Set_Cursor@z 0006                _Lcd_CGRAM_Init 249C              ___lwmod@dividend 0093  
      __end_of_MedirDistancia 1CBA                    i2Lcd_Cmd@a 0003                   i2_Lcd_Clear 24F0  
                 i2_Lcd_Blink 24D4                   _motorEstado 003F          __end_ofi2_escenario1 205E  
        __end_ofi2_escenario2 1AA8          __end_ofi2_escenario3 228A               ??i2_Lcd_NoBlink 0004  
        ??i2_Lcd_Write_String 0006            Lcd_Set_Cursor@temp 0093                 ??_Lcd_NoBlink 008F  
     __end_of_Lcd_CGRAM_Close 24B8                      sprintf@c 00A9                      sprintf@f 009C  
             ___lwmod@divisor 0095               ___lwmod@counter 0097                    i2_Lcd_Port 234E  
      __end_of_Lcd_CGRAM_Init 24AA               ?_MedirDistancia 0001  
