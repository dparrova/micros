

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Sep 10 17:31:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70   000000                     
    71                           ; Generated 05/01/2024 GMT
    72                           ; 
    73                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4550 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105   000000                     
   106                           	psect	idataCOMRAM
   107   001BA2                     __pidataCOMRAM:
   108                           	callstack 0
   109                           
   110                           ;initializer for _t
   111   001BA2  8F                 	db	143
   112   001BA3  C2                 	db	194
   113   001BA4  41                 	db	65
   114                           
   115                           ;initializer for _rojo
   116   001BA5  0003               	dw	3
   117                           
   118                           ;initializer for _digito
   119   001BA7  0001               	dw	1
   120                           
   121                           ;initializer for _v
   122   001BA9  03FF               	dw	1023
   123                           
   124                           ;initializer for _menu
   125   001BAB  0002               	dw	2
   126                           
   127                           ;initializer for _flagParar
   128   001BAD  0001               	dw	1
   129                           
   130                           	psect	idataBANK0
   131   001AE2                     __pidataBANK0:
   132                           	callstack 0
   133                           
   134                           ;initializer for _color
   135   001AE2  0002               	dw	2
   136   001AE4  0006               	dw	6
   137   001AE6  0004               	dw	4
   138   001AE8  0005               	dw	5
   139   001AEA  0001               	dw	1
   140   001AEC  0000               	dw	0
   141                           
   142                           ;initializer for _buffer
   143   001AEE  76                 	db	118
   144   001AEF  61                 	db	97
   145   001AF0  6C                 	db	108
   146   001AF1  6F                 	db	111
   147   001AF2  72                 	db	114
   148   001AF3  20                 	db	32
   149   001AF4  64                 	db	100
   150   001AF5  65                 	db	101
   151   001AF6  20                 	db	32
   152   001AF7  41                 	db	65
   153   001AF8  44                 	db	68
   154   001AF9  43                 	db	67
   155   001AFA  3D                 	db	61
   156   001AFB  00                 	db	0
   157   001AFC  00                 	db	0
   158   001AFD  00                 	db	0
   159   001AFE  00                 	db	0
   160   001AFF  00                 	db	0
   161   001B00  00                 	db	0
   162   001B01  00                 	db	0
   163                           
   164                           	psect	smallconst
   165   000800                     __psmallconst:
   166                           	callstack 0
   167   000800  00                 	db	0
   168   000801                     _dpowers:
   169                           	callstack 0
   170   000801  0001               	dw	1
   171   000803  000A               	dw	10
   172   000805  0064               	dw	100
   173   000807  03E8               	dw	1000
   174   000809  2710               	dw	10000
   175   00080B                     __end_of_dpowers:
   176                           	callstack 0
   177   00080B                     _figura_5:
   178                           	callstack 0
   179   00080B  0F                 	db	15
   180   00080C  09                 	db	9
   181   00080D  1C                 	db	28
   182   00080E  08                 	db	8
   183   00080F  02                 	db	2
   184   000810  07                 	db	7
   185   000811  12                 	db	18
   186   000812  1E                 	db	30
   187   000813                     __end_of_figura_5:
   188                           	callstack 0
   189   000813                     _figura_4:
   190                           	callstack 0
   191   000813  04                 	db	4
   192   000814  0E                 	db	14
   193   000815  0A                 	db	10
   194   000816  0A                 	db	10
   195   000817  1F                 	db	31
   196   000818  1B                 	db	27
   197   000819  1F                 	db	31
   198   00081A  00                 	db	0
   199   00081B                     __end_of_figura_4:
   200                           	callstack 0
   201   00081B                     _figura_3:
   202                           	callstack 0
   203   00081B  03                 	db	3
   204   00081C  03                 	db	3
   205   00081D  02                 	db	2
   206   00081E  07                 	db	7
   207   00081F  06                 	db	6
   208   000820  0E                 	db	14
   209   000821  0A                 	db	10
   210   000822  13                 	db	19
   211   000823                     __end_of_figura_3:
   212                           	callstack 0
   213   000823                     _figura_2:
   214                           	callstack 0
   215   000823  04                 	db	4
   216   000824  11                 	db	17
   217   000825  0E                 	db	14
   218   000826  04                 	db	4
   219   000827  04                 	db	4
   220   000828  0A                 	db	10
   221   000829  11                 	db	17
   222   00082A  00                 	db	0
   223   00082B                     __end_of_figura_2:
   224                           	callstack 0
   225   00082B                     _figura_1:
   226                           	callstack 0
   227   00082B  0A                 	db	10
   228   00082C  0A                 	db	10
   229   00082D  0A                 	db	10
   230   00082E  00                 	db	0
   231   00082F  11                 	db	17
   232   000830  11                 	db	17
   233   000831  0E                 	db	14
   234   000832  00                 	db	0
   235   000833                     __end_of_figura_1:
   236                           	callstack 0
   237   000000                     _ADCON1bits	set	4033
   238   000000                     _LATB	set	3978
   239   000000                     _TRISB	set	3987
   240   000000                     _TRISC	set	3988
   241   000000                     _TRISDbits	set	3989
   242   000000                     _LATC2	set	31834
   243   000000                     _LATD	set	3980
   244   000000                     _TRISA	set	3986
   245   000000                     _TRISD	set	3989
   246   000000                     _LATA1	set	31817
   247   000000                     _RB7	set	31759
   248   000000                     _RB6	set	31758
   249   000000                     _RB5	set	31757
   250   000000                     _RB4	set	31756
   251   000000                     _GO	set	32273
   252   000000                     _TRMT	set	32097
   253   000000                     _GIE	set	32663
   254   000000                     _RBIE	set	32659
   255   000000                     _RBIF	set	32656
   256   000000                     _TMR0ON	set	32431
   257   000000                     _TMR0IE	set	32661
   258   000000                     _LATA5	set	31821
   259   000000                     _PORTAbits	set	3968
   260   000000                     _LATAbits	set	3977
   261   000000                     _LATDbits	set	3980
   262   000000                     _LATE	set	3981
   263   000000                     _TRISAbits	set	3986
   264   000000                     _RCSTA	set	4011
   265   000000                     _TXSTA	set	4012
   266   000000                     _TRISE	set	3990
   267   000000                     _ADCON2	set	4032
   268   000000                     _ADCON0	set	4034
   269   000000                     _ADRES	set	4035
   270   000000                     _TMR0	set	4054
   271   000000                     _T0CON	set	4053
   272   000000                     _RBPU	set	32655
   273   000000                     _TXREG	set	4013
   274   000000                     _SPBRG	set	4015
   275   000000                     _BAUDCON	set	4024
   276   000000                     _TMR0IF	set	32658
   277   000000                     _PORTB	set	3969
   278   000833                     STR_11:
   279   000833  43                 	db	67	;'C'
   280   000834  75                 	db	117	;'u'
   281   000835  65                 	db	101	;'e'
   282   000836  6E                 	db	110	;'n'
   283   000837  74                 	db	116	;'t'
   284   000838  61                 	db	97	;'a'
   285   000839  20                 	db	32
   286   00083A  66                 	db	102	;'f'
   287   00083B  69                 	db	105	;'i'
   288   00083C  6E                 	db	110	;'n'
   289   00083D  61                 	db	97	;'a'
   290   00083E  6C                 	db	108	;'l'
   291   00083F  69                 	db	105	;'i'
   292   000840  7A                 	db	122	;'z'
   293   000841  61                 	db	97	;'a'
   294   000842  64                 	db	100	;'d'
   295   000843  61                 	db	97	;'a'
   296   000844  00                 	db	0
   297   000845                     STR_4:
   298   000845  56                 	db	86	;'V'
   299   000846  61                 	db	97	;'a'
   300   000847  6C                 	db	108	;'l'
   301   000848  6F                 	db	111	;'o'
   302   000849  72                 	db	114	;'r'
   303   00084A  20                 	db	32
   304   00084B  64                 	db	100	;'d'
   305   00084C  65                 	db	101	;'e'
   306   00084D  20                 	db	32
   307   00084E  41                 	db	65	;'A'
   308   00084F  44                 	db	68	;'D'
   309   000850  43                 	db	67	;'C'
   310   000851  20                 	db	32
   311   000852  3D                 	db	61	;'='
   312   000853  20                 	db	32
   313   000854  25                 	db	37
   314   000855  75                 	db	117	;'u'
   315   000856  00                 	db	0
   316   000857                     STR_5:
   317   000857  50                 	db	80	;'P'
   318   000858  69                 	db	105	;'i'
   319   000859  65                 	db	101	;'e'
   320   00085A  7A                 	db	122	;'z'
   321   00085B  61                 	db	97	;'a'
   322   00085C  73                 	db	115	;'s'
   323   00085D  20                 	db	32
   324   00085E  61                 	db	97	;'a'
   325   00085F  20                 	db	32
   326   000860  63                 	db	99	;'c'
   327   000861  6F                 	db	111	;'o'
   328   000862  6E                 	db	110	;'n'
   329   000863  74                 	db	116	;'t'
   330   000864  61                 	db	97	;'a'
   331   000865  72                 	db	114	;'r'
   332   000866  3A                 	db	58	;':'
   333   000867  00                 	db	0
   334   000868                     STR_1:
   335   000868  4C                 	db	76	;'L'
   336   000869  61                 	db	97	;'a'
   337   00086A  62                 	db	98	;'b'
   338   00086B  6F                 	db	111	;'o'
   339   00086C  72                 	db	114	;'r'
   340   00086D  61                 	db	97	;'a'
   341   00086E  74                 	db	116	;'t'
   342   00086F  6F                 	db	111	;'o'
   343   000870  72                 	db	114	;'r'
   344   000871  69                 	db	105	;'i'
   345   000872  6F                 	db	111	;'o'
   346   000873  20                 	db	32
   347   000874  30                 	db	48	;'0'
   348   000875  34                 	db	52	;'4'
   349   000876  00                 	db	0
   350   000877                     STR_14:
   351   000877  45                 	db	69	;'E'
   352   000878  6D                 	db	109	;'m'
   353   000879  65                 	db	101	;'e'
   354   00087A  72                 	db	114	;'r'
   355   00087B  67                 	db	103	;'g'
   356   00087C  65                 	db	101	;'e'
   357   00087D  6E                 	db	110	;'n'
   358   00087E  63                 	db	99	;'c'
   359   00087F  69                 	db	105	;'i'
   360   000880  61                 	db	97	;'a'
   361   000881  20                 	db	32
   362   000882  00                 	db	0
   363   000883                     STR_3:
   364   000883  4D                 	db	77	;'M'
   365   000884  69                 	db	105	;'i'
   366   000885  63                 	db	99	;'c'
   367   000886  72                 	db	114	;'r'
   368   000887  6F                 	db	111	;'o'
   369   000888  73                 	db	115	;'s'
   370   000889  20                 	db	32
   371   00088A  55                 	db	85	;'U'
   372   00088B  4E                 	db	78	;'N'
   373   00088C  41                 	db	65	;'A'
   374   00088D  4C                 	db	76	;'L'
   375   00088E  00                 	db	0
   376   00088F                     STR_2:
   377   00088F  50                 	db	80	;'P'
   378   000890  49                 	db	73	;'I'
   379   000891  43                 	db	67	;'C'
   380   000892  31                 	db	49	;'1'
   381   000893  38                 	db	56	;'8'
   382   000894  46                 	db	70	;'F'
   383   000895  34                 	db	52	;'4'
   384   000896  35                 	db	53	;'5'
   385   000897  35                 	db	53	;'5'
   386   000898  30                 	db	48	;'0'
   387   000899  00                 	db	0
   388   00089A                     STR_7:
   389   00089A  46                 	db	70	;'F'
   390   00089B  61                 	db	97	;'a'
   391   00089C  6C                 	db	108	;'l'
   392   00089D  74                 	db	116	;'t'
   393   00089E  61                 	db	97	;'a'
   394   00089F  6E                 	db	110	;'n'
   395   0008A0  74                 	db	116	;'t'
   396   0008A1  65                 	db	101	;'e'
   397   0008A2  3A                 	db	58	;':'
   398   0008A3  00                 	db	0
   399   0008A4                     STR_9:
   400   0008A4  4F                 	db	79	;'O'
   401   0008A5  62                 	db	98	;'b'
   402   0008A6  6A                 	db	106	;'j'
   403   0008A7  65                 	db	101	;'e'
   404   0008A8  74                 	db	116	;'t'
   405   0008A9  69                 	db	105	;'i'
   406   0008AA  76                 	db	118	;'v'
   407   0008AB  6F                 	db	111	;'o'
   408   0008AC  3A                 	db	58	;':'
   409   0008AD  00                 	db	0
   410   0008AE                     STR_13:
   411   0008AE  50                 	db	80	;'P'
   412   0008AF  61                 	db	97	;'a'
   413   0008B0  72                 	db	114	;'r'
   414   0008B1  61                 	db	97	;'a'
   415   0008B2  64                 	db	100	;'d'
   416   0008B3  61                 	db	97	;'a'
   417   0008B4  20                 	db	32
   418   0008B5  64                 	db	100	;'d'
   419   0008B6  65                 	db	101	;'e'
   420   0008B7  00                 	db	0
   421   0008B8                     STR_6:
   422   0008B8  41                 	db	65	;'A'
   423   0008B9  3A                 	db	58	;':'
   424   0008BA  6F                 	db	111	;'o'
   425   0008BB  6B                 	db	107	;'k'
   426   0008BC  20                 	db	32
   427   0008BD  42                 	db	66	;'B'
   428   0008BE  3A                 	db	58	;':'
   429   0008BF  00                 	db	0
   430   0008C0                     STR_12:
   431   0008C0  41                 	db	65	;'A'
   432   0008C1  3A                 	db	58	;':'
   433   0008C2  4F                 	db	79	;'O'
   434   0008C3  4B                 	db	75	;'K'
   435   0008C4  00                 	db	0
   436   0008C5                     STR_10:
   437   0008C5  23                 	db	35
   438   0008C6  3D                 	db	61	;'='
   439   0008C7  58                 	db	88	;'X'
   440   0008C8  00                 	db	0
   441   0008C9                     STR_8:
   442   0008C9  43                 	db	67	;'C'
   443   0008CA  3D                 	db	61	;'='
   444   0008CB  00                 	db	0
   445   0008CC  00                 	db	0	; dummy byte at the end
   446   000000                     
   447                           ; #config settings
   448                           
   449                           	psect	cinit
   450   0015A4                     __pcinit:
   451                           	callstack 0
   452   0015A4                     start_initialization:
   453                           	callstack 0
   454   0015A4                     __initialization:
   455                           	callstack 0
   456                           
   457                           ; Initialize objects allocated to BANK0 (32 bytes)
   458                           ; load TBLPTR registers with __pidataBANK0
   459   0015A4  0EE2               	movlw	low __pidataBANK0
   460   0015A6  6EF6               	movwf	tblptrl,c
   461   0015A8  0E1A               	movlw	high __pidataBANK0
   462   0015AA  6EF7               	movwf	tblptrh,c
   463   0015AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   464   0015AE  6EF8               	movwf	tblptru,c
   465   0015B0  EE00  F060         	lfsr	0,__pdataBANK0
   466   0015B4  EE10 F020          	lfsr	1,32
   467   0015B8                     copy_data0:
   468   0015B8  0009               	tblrd		*+
   469   0015BA  CFF5 FFEE          	movff	tablat,postinc0
   470   0015BE  50E5               	movf	postdec1,w,c
   471   0015C0  50E1               	movf	fsr1l,w,c
   472   0015C2  E1FA               	bnz	copy_data0
   473                           
   474                           ; Initialize objects allocated to COMRAM (13 bytes)
   475                           ; load TBLPTR registers with __pidataCOMRAM
   476   0015C4  0EA2               	movlw	low __pidataCOMRAM
   477   0015C6  6EF6               	movwf	tblptrl,c
   478   0015C8  0E1B               	movlw	high __pidataCOMRAM
   479   0015CA  6EF7               	movwf	tblptrh,c
   480   0015CC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   481   0015CE  6EF8               	movwf	tblptru,c
   482   0015D0  EE00  F03E         	lfsr	0,__pdataCOMRAM
   483   0015D4  EE10 F00D          	lfsr	1,13
   484   0015D8                     copy_data1:
   485   0015D8  0009               	tblrd		*+
   486   0015DA  CFF5 FFEE          	movff	tablat,postinc0
   487   0015DE  50E5               	movf	postdec1,w,c
   488   0015E0  50E1               	movf	fsr1l,w,c
   489   0015E2  E1FA               	bnz	copy_data1
   490                           
   491                           ; Clear objects allocated to COMRAM (23 bytes)
   492   0015E4  EE00  F027         	lfsr	0,__pbssCOMRAM
   493   0015E8  0E17               	movlw	23
   494   0015EA                     clear_0:
   495   0015EA  6AEE               	clrf	postinc0,c
   496   0015EC  06E8               	decf	wreg,f,c
   497   0015EE  E1FD               	bnz	clear_0
   498   0015F0                     end_of_initialization:
   499                           	callstack 0
   500   0015F0                     __end_of__initialization:
   501                           	callstack 0
   502   0015F0  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   503   0015F2  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   504   0015F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   505   0015F6  6EF8               	movwf	tblptru,c
   506   0015F8  0100               	movlb	0
   507   0015FA  EF67  F004         	goto	_main	;jump to C main() function
   508                           
   509                           	psect	bssCOMRAM
   510   000027                     __pbssCOMRAM:
   511                           	callstack 0
   512   000027                     _resultado_ADC:
   513                           	callstack 0
   514   000027                     	ds	2
   515   000029                     _contadorDecena:
   516                           	callstack 0
   517   000029                     	ds	2
   518   00002B                     _contadorUnidad:
   519                           	callstack 0
   520   00002B                     	ds	2
   521   00002D                     _cantidadRestaDecena:
   522                           	callstack 0
   523   00002D                     	ds	2
   524   00002F                     _cantidadRestaUnidad:
   525                           	callstack 0
   526   00002F                     	ds	2
   527   000031                     _cantidadResta:
   528                           	callstack 0
   529   000031                     	ds	2
   530   000033                     _contador:
   531                           	callstack 0
   532   000033                     	ds	2
   533   000035                     _cantidad:
   534                           	callstack 0
   535   000035                     	ds	2
   536   000037                     _mostrar:
   537                           	callstack 0
   538   000037                     	ds	2
   539   000039                     _unidad:
   540                           	callstack 0
   541   000039                     	ds	2
   542   00003B                     _decena:
   543                           	callstack 0
   544   00003B                     	ds	2
   545   00003D                     _Tecla:
   546                           	callstack 0
   547   00003D                     	ds	1
   548                           
   549                           	psect	dataCOMRAM
   550   00003E                     __pdataCOMRAM:
   551                           	callstack 0
   552   00003E                     _t:
   553                           	callstack 0
   554   00003E                     	ds	3
   555   000041                     _rojo:
   556                           	callstack 0
   557   000041                     	ds	2
   558   000043                     _digito:
   559                           	callstack 0
   560   000043                     	ds	2
   561   000045                     _v:
   562                           	callstack 0
   563   000045                     	ds	2
   564   000047                     _menu:
   565                           	callstack 0
   566   000047                     	ds	2
   567   000049                     _flagParar:
   568                           	callstack 0
   569   000049                     	ds	2
   570                           
   571                           	psect	dataBANK0
   572   000060                     __pdataBANK0:
   573                           	callstack 0
   574   000060                     _color:
   575                           	callstack 0
   576   000060                     	ds	12
   577   00006C                     _buffer:
   578                           	callstack 0
   579   00006C                     	ds	20
   580                           
   581                           	psect	cstackBANK0
   582   000080                     __pcstackBANK0:
   583                           	callstack 0
   584   000080                     sprintf@flag:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x0
   588   000080                     	ds	1
   589   000081                     sprintf@ap:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x1
   593   000081                     	ds	1
   594   000082                     sprintf@val:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x2
   598   000082                     	ds	2
   599   000084                     sprintf@prec:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x4
   603   000084                     	ds	1
   604   000085                     sprintf@c:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x5
   608   000085                     	ds	1
   609   000086                     main@pina0:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x6
   613   000086                     	ds	2
   614   000088                     main@i:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x8
   618   000088                     	ds	1
   619                           
   620                           	psect	cstackCOMRAM
   621   000001                     __pcstackCOMRAM:
   622                           	callstack 0
   623   000001                     ?i2___wmul:
   624                           	callstack 0
   625   000001                     ?i2___awdiv:
   626                           	callstack 0
   627   000001                     ?i2___awmod:
   628                           	callstack 0
   629   000001                     i2Lcd_Port@a:
   630                           	callstack 0
   631   000001                     Trasmitir@i:
   632                           	callstack 0
   633   000001                     i2___wmul@multiplier:
   634                           	callstack 0
   635   000001                     i2___awdiv@dividend:
   636                           	callstack 0
   637   000001                     i2___awmod@dividend:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x0
   641   000001                     	ds	1
   642   000002                     i2Lcd_Cmd@a:
   643                           	callstack 0
   644   000002                     i2Lcd_Write_Char@temp:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x1
   648   000002                     	ds	1
   649   000003                     i2Lcd_Set_Cursor@b:
   650                           	callstack 0
   651   000003                     i2Lcd_Write_Char@y:
   652                           	callstack 0
   653   000003                     i2___wmul@multiplicand:
   654                           	callstack 0
   655   000003                     i2___awdiv@divisor:
   656                           	callstack 0
   657   000003                     i2___awmod@divisor:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x2
   661   000003                     	ds	1
   662   000004                     i2Lcd_Set_Cursor@a:
   663                           	callstack 0
   664   000004                     i2Lcd_Write_Char@a:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x3
   668   000004                     	ds	1
   669   000005                     ??_PiezaAContar:
   670   000005                     i2Lcd_Set_Cursor@z:
   671                           	callstack 0
   672   000005                     i2Lcd_Write_String@a:
   673                           	callstack 0
   674   000005                     i2___awdiv@counter:
   675                           	callstack 0
   676   000005                     i2___awmod@counter:
   677                           	callstack 0
   678   000005                     i2___wmul@product:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x4
   682   000005                     	ds	1
   683   000006                     ??i2_Lcd_Write_String:
   684   000006                     PiezaAContar@a:
   685                           	callstack 0
   686   000006                     i2Lcd_Set_Cursor@y:
   687                           	callstack 0
   688   000006                     i2___awdiv@sign:
   689                           	callstack 0
   690   000006                     i2___awmod@sign:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x5
   694   000006                     	ds	1
   695   000007                     i2Lcd_Set_Cursor@temp:
   696                           	callstack 0
   697   000007                     i2Lcd_Write_String@i:
   698                           	callstack 0
   699   000007                     i2___awdiv@quotient:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x6
   703   000007                     	ds	1
   704   000008                     
   705                           ; 1 bytes @ 0x7
   706   000008                     	ds	1
   707   000009                     ??i2_ContarReal:
   708                           
   709                           ; 1 bytes @ 0x8
   710   000009                     	ds	2
   711   00000B                     ??_ISR:
   712                           
   713                           ; 1 bytes @ 0xA
   714   00000B                     	ds	9
   715   000014                     ?_Conversion:
   716                           	callstack 0
   717   000014                     ?___wmul:
   718                           	callstack 0
   719   000014                     ?___awdiv:
   720                           	callstack 0
   721   000014                     ?___awmod:
   722                           	callstack 0
   723   000014                     ?___lwdiv:
   724                           	callstack 0
   725   000014                     Lcd_Port@a:
   726                           	callstack 0
   727   000014                     ___wmul@multiplier:
   728                           	callstack 0
   729   000014                     ___awdiv@dividend:
   730                           	callstack 0
   731   000014                     ___awmod@dividend:
   732                           	callstack 0
   733   000014                     ___lwdiv@dividend:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x13
   737   000014                     	ds	1
   738   000015                     Lcd_Cmd@a:
   739                           	callstack 0
   740   000015                     Lcd_Write_Char@temp:
   741                           	callstack 0
   742                           
   743                           ; 1 bytes @ 0x14
   744   000015                     	ds	1
   745   000016                     ??_Conversion:
   746   000016                     ??_Lcd_Init:
   747   000016                     Lcd_Set_Cursor@b:
   748                           	callstack 0
   749   000016                     Lcd_Write_Char@y:
   750                           	callstack 0
   751   000016                     ___wmul@multiplicand:
   752                           	callstack 0
   753   000016                     ___awdiv@divisor:
   754                           	callstack 0
   755   000016                     ___awmod@divisor:
   756                           	callstack 0
   757   000016                     ___lwdiv@divisor:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x15
   761   000016                     	ds	1
   762   000017                     Lcd_Set_Cursor@a:
   763                           	callstack 0
   764   000017                     Lcd_Write_Char@a:
   765                           	callstack 0
   766   000017                     Conversion@canal:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x16
   770   000017                     	ds	1
   771   000018                     Lcd_Set_Cursor@z:
   772                           	callstack 0
   773   000018                     Lcd_Write_String@a:
   774                           	callstack 0
   775   000018                     Lcd_CGRAM_CreateChar@chardata:
   776                           	callstack 0
   777   000018                     ___awdiv@counter:
   778                           	callstack 0
   779   000018                     ___awmod@counter:
   780                           	callstack 0
   781   000018                     ___lwdiv@counter:
   782                           	callstack 0
   783   000018                     ___wmul@product:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x17
   787   000018                     	ds	1
   788   000019                     ??_Lcd_Write_String:
   789   000019                     ??_Lcd_CGRAM_CreateChar:
   790   000019                     Lcd_Set_Cursor@y:
   791                           	callstack 0
   792   000019                     ___awdiv@sign:
   793                           	callstack 0
   794   000019                     ___awmod@sign:
   795                           	callstack 0
   796   000019                     ___lwdiv@quotient:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x18
   800   000019                     	ds	1
   801   00001A                     Lcd_Set_Cursor@temp:
   802                           	callstack 0
   803   00001A                     Lcd_CGRAM_CreateChar@add:
   804                           	callstack 0
   805   00001A                     Lcd_Write_String@i:
   806                           	callstack 0
   807   00001A                     ___awdiv@quotient:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x19
   811   00001A                     	ds	1
   812   00001B                     ?___lwmod:
   813                           	callstack 0
   814   00001B                     Lcd_CGRAM_CreateChar@i:
   815                           	callstack 0
   816   00001B                     ___lwmod@dividend:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x1A
   820   00001B                     	ds	1
   821   00001C                     ??_ContarReal:
   822   00001C                     Lcd_CGRAM_CreateChar@i_243:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x1B
   826   00001C                     	ds	1
   827   00001D                     Lcd_CGRAM_CreateChar@i_244:
   828                           	callstack 0
   829   00001D                     ___lwmod@divisor:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x1C
   833   00001D                     	ds	1
   834   00001E                     Lcd_CGRAM_CreateChar@i_245:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x1D
   838   00001E                     	ds	1
   839   00001F                     Lcd_CGRAM_CreateChar@i_246:
   840                           	callstack 0
   841   00001F                     ___lwmod@counter:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x1E
   845   00001F                     	ds	1
   846   000020                     ?_sprintf:
   847                           	callstack 0
   848   000020                     Lcd_CGRAM_CreateChar@i_247:
   849                           	callstack 0
   850   000020                     sprintf@sp:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x1F
   854   000020                     	ds	1
   855   000021                     Lcd_CGRAM_CreateChar@i_248:
   856                           	callstack 0
   857   000021                     sprintf@f:
   858                           	callstack 0
   859                           
   860                           ; 1 bytes @ 0x20
   861   000021                     	ds	1
   862   000022                     Lcd_CGRAM_CreateChar@i_249:
   863                           	callstack 0
   864                           
   865                           ; 1 bytes @ 0x21
   866   000022                     	ds	2
   867   000024                     ??_sprintf:
   868                           
   869                           ; 1 bytes @ 0x23
   870   000024                     	ds	1
   871   000025                     ??_main:
   872                           
   873                           ; 1 bytes @ 0x24
   874   000025                     	ds	2
   875                           
   876 ;;
   877 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   878 ;;
   879 ;; *************** function _main *****************
   880 ;; Defined at:
   881 ;;		line 63 in file "Lab4.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  pina0           2    6[BANK0 ] int 
   886 ;;  i               1    8[BANK0 ] unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   896 ;;      Params:         0       0       0       0       0       0       0       0       0
   897 ;;      Locals:         0       3       0       0       0       0       0       0       0
   898 ;;      Temps:          2       0       0       0       0       0       0       0       0
   899 ;;      Totals:         2       3       0       0       0       0       0       0       0
   900 ;;Total ram usage:        5 bytes
   901 ;; Hardware stack levels required when called: 12
   902 ;; This function calls:
   903 ;;		_ContarReal
   904 ;;		_Conversion
   905 ;;		_Lcd_Blink
   906 ;;		_Lcd_CGRAM_Close
   907 ;;		_Lcd_CGRAM_CreateChar
   908 ;;		_Lcd_CGRAM_Init
   909 ;;		_Lcd_Clear
   910 ;;		_Lcd_Init
   911 ;;		_Lcd_NoBlink
   912 ;;		_Lcd_Set_Cursor
   913 ;;		_Lcd_Write_Char
   914 ;;		_Lcd_Write_String
   915 ;;		_escenario1
   916 ;;		_sprintf
   917 ;; This function is called by:
   918 ;;		Startup code after reset
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text0
   923   0008CE                     __ptext0:
   924                           	callstack 0
   925   0008CE                     _main:
   926                           	callstack 19
   927                           
   928                           ;Lab4.c: 64: ADCON0=0b00000001;
   929                           
   930                           ;incstack = 0
   931   0008CE  0E01               	movlw	1
   932   0008D0  6EC2               	movwf	194,c	;volatile
   933                           
   934                           ;Lab4.c: 65: ADCON2=0b10001000;
   935   0008D2  0E88               	movlw	136
   936   0008D4  6EC0               	movwf	192,c	;volatile
   937                           
   938                           ;Lab4.c: 67: int pina0;;Lab4.c: 68: TRISE = 0;
   939   0008D6  0E00               	movlw	0
   940   0008D8  6E96               	movwf	150,c	;volatile
   941                           
   942                           ;Lab4.c: 69: TRISD = 0;
   943   0008DA  0E00               	movlw	0
   944   0008DC  6E95               	movwf	149,c	;volatile
   945                           
   946                           ;Lab4.c: 70: TRISA = 0b00000001;
   947   0008DE  0E01               	movlw	1
   948   0008E0  6E92               	movwf	146,c	;volatile
   949                           
   950                           ;Lab4.c: 71: TRISC = 0b00000000;
   951   0008E2  0E00               	movlw	0
   952   0008E4  6E94               	movwf	148,c	;volatile
   953                           
   954                           ;Lab4.c: 73: LATD = 0b00000000;
   955   0008E6  0E00               	movlw	0
   956   0008E8  6E8C               	movwf	140,c	;volatile
   957                           
   958                           ;Lab4.c: 74: LATE = 0b00000111;
   959   0008EA  0E07               	movlw	7
   960   0008EC  6E8D               	movwf	141,c	;volatile
   961                           
   962                           ;Lab4.c: 76: LATA5=1;
   963   0008EE  8A89               	bsf	3977,5,c	;volatile
   964                           
   965                           ;Lab4.c: 77: TXSTA = 0b00100100;
   966   0008F0  0E24               	movlw	36
   967   0008F2  6EAC               	movwf	172,c	;volatile
   968                           
   969                           ;Lab4.c: 78: RCSTA = 0b10000000;
   970   0008F4  0E80               	movlw	128
   971   0008F6  6EAB               	movwf	171,c	;volatile
   972                           
   973                           ;Lab4.c: 79: BAUDCON = 0b00001000;
   974   0008F8  0E08               	movlw	8
   975   0008FA  6EB8               	movwf	184,c	;volatile
   976                           
   977                           ;Lab4.c: 80: SPBRG = 25;
   978   0008FC  0E19               	movlw	25
   979   0008FE  6EAF               	movwf	175,c	;volatile
   980                           
   981                           ;Lab4.c: 82: unsigned char i;;Lab4.c: 83: TRISB = 0b11110000;
   982   000900  0EF0               	movlw	240
   983   000902  6E93               	movwf	147,c	;volatile
   984                           
   985                           ;Lab4.c: 84: LATB = 0b00000000;
   986   000904  0E00               	movlw	0
   987   000906  6E8A               	movwf	138,c	;volatile
   988                           
   989                           ;Lab4.c: 85: RBPU = 0;
   990   000908  9EF1               	bcf	4081,7,c	;volatile
   991                           
   992                           ;Lab4.c: 86: _delay((unsigned long)((100)*(1000000/4000.0)));
   993   00090A  0E21               	movlw	33
   994   00090C  6E25               	movwf	??_main^0,c
   995   00090E  0E76               	movlw	118
   996   000910                     u2627:
   997   000910  2EE8               	decfsz	wreg,f,c
   998   000912  D7FE               	bra	u2627
   999   000914  2E25               	decfsz	??_main^0,f,c
  1000   000916  D7FC               	bra	u2627
  1001   000918  D000               	nop2	
  1002                           
  1003                           ;Lab4.c: 87: TMR0 = 3036;
  1004   00091A  0E0B               	movlw	11
  1005   00091C  6ED7               	movwf	215,c	;volatile
  1006   00091E  0EDC               	movlw	220
  1007   000920  6ED6               	movwf	214,c	;volatile
  1008                           
  1009                           ;Lab4.c: 88: T0CON = 0b00000001;
  1010   000922  0E01               	movlw	1
  1011   000924  6ED5               	movwf	213,c	;volatile
  1012                           
  1013                           ;Lab4.c: 89: TMR0IF = 0;
  1014   000926  94F2               	bcf	4082,2,c	;volatile
  1015                           
  1016                           ;Lab4.c: 90: TMR0IE = 1;
  1017   000928  8AF2               	bsf	4082,5,c	;volatile
  1018                           
  1019                           ;Lab4.c: 91: TMR0ON = 1;
  1020   00092A  8ED5               	bsf	4053,7,c	;volatile
  1021                           
  1022                           ;Lab4.c: 92: RBIF = 0;
  1023   00092C  90F2               	bcf	4082,0,c	;volatile
  1024                           
  1025                           ;Lab4.c: 93: RBIE = 1;
  1026   00092E  86F2               	bsf	4082,3,c	;volatile
  1027                           
  1028                           ;Lab4.c: 94: GIE = 1;
  1029   000930  8EF2               	bsf	4082,7,c	;volatile
  1030                           
  1031                           ;Lab4.c: 95: ADCON1bits.PCFG = 0x0E;
  1032   000932  50C1               	movf	193,w,c	;volatile
  1033   000934  0BF0               	andlw	-16
  1034   000936  090E               	iorlw	14
  1035   000938  6EC1               	movwf	193,c	;volatile
  1036                           
  1037                           ;Lab4.c: 96: Lcd_Init();
  1038   00093A  ECF4  F009         	call	_Lcd_Init	;wreg free
  1039                           
  1040                           ;Lab4.c: 98: Lcd_CGRAM_Init();
  1041   00093E  ECA0  F00D         	call	_Lcd_CGRAM_Init	;wreg free
  1042                           
  1043                           ;Lab4.c: 99: Lcd_CGRAM_CreateChar(0, figura_1);
  1044   000942  0E2B               	movlw	low _figura_1
  1045   000944  6E18               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1046   000946  0E00               	movlw	0
  1047   000948  EC07  F006         	call	_Lcd_CGRAM_CreateChar
  1048                           
  1049                           ;Lab4.c: 100: Lcd_CGRAM_CreateChar(1, figura_2);
  1050   00094C  0E23               	movlw	low _figura_2
  1051   00094E  6E18               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1052   000950  0E01               	movlw	1
  1053   000952  EC07  F006         	call	_Lcd_CGRAM_CreateChar
  1054                           
  1055                           ;Lab4.c: 101: Lcd_CGRAM_CreateChar(2, figura_3);
  1056   000956  0E1B               	movlw	low _figura_3
  1057   000958  6E18               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1058   00095A  0E02               	movlw	2
  1059   00095C  EC07  F006         	call	_Lcd_CGRAM_CreateChar
  1060                           
  1061                           ;Lab4.c: 102: Lcd_CGRAM_CreateChar(3, figura_4);
  1062   000960  0E13               	movlw	low _figura_4
  1063   000962  6E18               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1064   000964  0E03               	movlw	3
  1065   000966  EC07  F006         	call	_Lcd_CGRAM_CreateChar
  1066                           
  1067                           ;Lab4.c: 103: Lcd_CGRAM_CreateChar(4, figura_5);
  1068   00096A  0E0B               	movlw	low _figura_5
  1069   00096C  6E18               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1070   00096E  0E04               	movlw	4
  1071   000970  EC07  F006         	call	_Lcd_CGRAM_CreateChar
  1072                           
  1073                           ;Lab4.c: 104: Lcd_CGRAM_Close();
  1074   000974  ECA7  F00D         	call	_Lcd_CGRAM_Close	;wreg free
  1075                           
  1076                           ;Lab4.c: 105: Lcd_Clear();
  1077   000978  ECB5  F00D         	call	_Lcd_Clear	;wreg free
  1078                           
  1079                           ;Lab4.c: 108: Lcd_Set_Cursor(1, 1);
  1080   00097C  0E01               	movlw	1
  1081   00097E  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1082   000980  0E01               	movlw	1
  1083   000982  EC46  F008         	call	_Lcd_Set_Cursor
  1084                           
  1085                           ;Lab4.c: 109: Lcd_Write_String("Laboratorio 04");
  1086   000986  0E68               	movlw	low STR_1
  1087   000988  6E18               	movwf	Lcd_Write_String@a^0,c
  1088   00098A  EC18  F00C         	call	_Lcd_Write_String	;wreg free
  1089                           
  1090                           ;Lab4.c: 110: Lcd_Set_Cursor(2, 1);
  1091   00098E  0E01               	movlw	1
  1092   000990  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1093   000992  0E02               	movlw	2
  1094   000994  EC46  F008         	call	_Lcd_Set_Cursor
  1095                           
  1096                           ;Lab4.c: 111: Lcd_Write_String("PIC18F4550");
  1097   000998  0E8F               	movlw	low STR_2
  1098   00099A  6E18               	movwf	Lcd_Write_String@a^0,c
  1099   00099C  EC18  F00C         	call	_Lcd_Write_String	;wreg free
  1100                           
  1101                           ;Lab4.c: 112: Lcd_Set_Cursor(2, 12);
  1102   0009A0  0E0C               	movlw	12
  1103   0009A2  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1104   0009A4  0E02               	movlw	2
  1105   0009A6  EC46  F008         	call	_Lcd_Set_Cursor
  1106                           
  1107                           ;Lab4.c: 113: Lcd_Blink();
  1108   0009AA  EC99  F00D         	call	_Lcd_Blink	;wreg free
  1109                           
  1110                           ;Lab4.c: 114: _delay((unsigned long)((200)*(1000000/4000.0)));
  1111   0009AE  0E41               	movlw	65
  1112   0009B0  6E25               	movwf	??_main^0,c
  1113   0009B2  0EEE               	movlw	238
  1114   0009B4                     u2637:
  1115   0009B4  2EE8               	decfsz	wreg,f,c
  1116   0009B6  D7FE               	bra	u2637
  1117   0009B8  2E25               	decfsz	??_main^0,f,c
  1118   0009BA  D7FC               	bra	u2637
  1119   0009BC  D000               	nop2	
  1120                           
  1121                           ;Lab4.c: 115: Lcd_NoBlink();
  1122   0009BE  ECAE  F00D         	call	_Lcd_NoBlink	;wreg free
  1123                           
  1124                           ;Lab4.c: 118: for (i = 1; i <= 5; i++) {
  1125   0009C2  0E01               	movlw	1
  1126   0009C4  0100               	movlb	0	; () banked
  1127   0009C6  6F88               	movwf	main@i& (0+255),b
  1128   0009C8                     l3853:
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;Lab4.c: 119: Lcd_Clear();
  1132   0009C8  ECB5  F00D         	call	_Lcd_Clear	;wreg free
  1133                           
  1134                           ;Lab4.c: 120: Lcd_Set_Cursor(1, 1);
  1135   0009CC  0E01               	movlw	1
  1136   0009CE  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1137   0009D0  0E01               	movlw	1
  1138   0009D2  EC46  F008         	call	_Lcd_Set_Cursor
  1139                           
  1140                           ;Lab4.c: 121: Lcd_Write_String("Micros UNAL");
  1141   0009D6  0E83               	movlw	low STR_3
  1142   0009D8  6E18               	movwf	Lcd_Write_String@a^0,c
  1143   0009DA  EC18  F00C         	call	_Lcd_Write_String	;wreg free
  1144                           
  1145                           ;Lab4.c: 122: Lcd_Set_Cursor(2, 1);
  1146   0009DE  0E01               	movlw	1
  1147   0009E0  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1148   0009E2  0E02               	movlw	2
  1149   0009E4  EC46  F008         	call	_Lcd_Set_Cursor
  1150                           
  1151                           ;Lab4.c: 123: Lcd_Write_Char(0);
  1152   0009E8  0E00               	movlw	0
  1153   0009EA  EC56  F00C         	call	_Lcd_Write_Char
  1154                           
  1155                           ;Lab4.c: 124: Lcd_Set_Cursor(2, 7);
  1156   0009EE  0E07               	movlw	7
  1157   0009F0  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1158   0009F2  0E02               	movlw	2
  1159   0009F4  EC46  F008         	call	_Lcd_Set_Cursor
  1160                           
  1161                           ;Lab4.c: 125: Lcd_Write_Char(1);
  1162   0009F8  0E01               	movlw	1
  1163   0009FA  EC56  F00C         	call	_Lcd_Write_Char
  1164                           
  1165                           ;Lab4.c: 126: Lcd_Set_Cursor(2, 2 + i);
  1166   0009FE  0100               	movlb	0	; () banked
  1167   000A00  5188               	movf	main@i& (0+255),w,b
  1168   000A02  0F02               	addlw	2
  1169   000A04  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1170   000A06  0E02               	movlw	2
  1171   000A08  EC46  F008         	call	_Lcd_Set_Cursor
  1172                           
  1173                           ;Lab4.c: 127: Lcd_Write_Char(2);
  1174   000A0C  0E02               	movlw	2
  1175   000A0E  EC56  F00C         	call	_Lcd_Write_Char
  1176                           
  1177                           ;Lab4.c: 128: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1178   000A12  0E02               	movlw	2
  1179   000A14  6E26               	movwf	(??_main+1)^0,c
  1180   000A16  0E45               	movlw	69
  1181   000A18  6E25               	movwf	??_main^0,c
  1182   000A1A  0EAA               	movlw	170
  1183   000A1C                     u2647:
  1184   000A1C  2EE8               	decfsz	wreg,f,c
  1185   000A1E  D7FE               	bra	u2647
  1186   000A20  2E25               	decfsz	??_main^0,f,c
  1187   000A22  D7FC               	bra	u2647
  1188   000A24  2E26               	decfsz	(??_main+1)^0,f,c
  1189   000A26  D7FA               	bra	u2647
  1190   000A28  0100               	movlb	0	; () banked
  1191   000A2A  2B88               	incf	main@i& (0+255),f,b
  1192                           
  1193                           ; BSR set to: 0
  1194   000A2C  0E05               	movlw	5
  1195   000A2E  6588               	cpfsgt	main@i& (0+255),b
  1196   000A30  D7CB               	goto	l3853
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;Lab4.c: 129: };Lab4.c: 130: Lcd_Clear();
  1200   000A32  ECB5  F00D         	call	_Lcd_Clear	;wreg free
  1201                           
  1202                           ;Lab4.c: 131: escenario1();
  1203   000A36  EC4F  F00B         	call	_escenario1	;wreg free
  1204   000A3A                     l3881:
  1205                           
  1206                           ;Lab4.c: 134: resultado_ADC=Conversion(0);
  1207   000A3A  0E00               	movlw	0
  1208   000A3C  EC38  F00D         	call	_Conversion
  1209   000A40  C014  F027         	movff	?_Conversion,_resultado_ADC
  1210   000A44  C015  F028         	movff	?_Conversion+1,_resultado_ADC+1
  1211                           
  1212                           ;Lab4.c: 135: sprintf(buffer, "Valor de ADC = %u", resultado_ADC);
  1213   000A48  0E6C               	movlw	low _buffer
  1214   000A4A  6E20               	movwf	sprintf@sp^0,c
  1215   000A4C  0E45               	movlw	low STR_4
  1216   000A4E  6E21               	movwf	sprintf@f^0,c
  1217   000A50  C027  F022         	movff	_resultado_ADC,?_sprintf+2
  1218   000A54  C028  F023         	movff	_resultado_ADC+1,?_sprintf+3
  1219   000A58  ECC1  F006         	call	_sprintf	;wreg free
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;Lab4.c: 137: if(resultado_ADC>550) LATC2 = 1;
  1223   000A5C  0E27               	movlw	39
  1224   000A5E  5C27               	subwf	_resultado_ADC^0,w,c
  1225   000A60  0E02               	movlw	2
  1226   000A62  5828               	subwfb	(_resultado_ADC+1)^0,w,c
  1227   000A64  A0D8               	btfss	status,0,c
  1228   000A66  D002               	goto	l268
  1229                           
  1230                           ; BSR set to: 0
  1231   000A68  848B               	bsf	3979,2,c	;volatile
  1232   000A6A  D001               	goto	l3889
  1233   000A6C                     l268:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;Lab4.c: 138: else LATC2 = 0;
  1237   000A6C  948B               	bcf	3979,2,c	;volatile
  1238   000A6E                     l3889:
  1239                           
  1240                           ; BSR set to: 0
  1241                           ;Lab4.c: 141: pina0 = PORTAbits.RA2;
  1242   000A6E  A480               	btfss	128,2,c	;volatile
  1243   000A70  D003               	goto	u2590
  1244   000A72  6A25               	clrf	??_main^0,c
  1245   000A74  2A25               	incf	??_main^0,f,c
  1246   000A76  D001               	goto	u2598
  1247   000A78                     u2590:
  1248   000A78  6A25               	clrf	??_main^0,c
  1249   000A7A                     u2598:
  1250   000A7A  5025               	movf	??_main^0,w,c
  1251   000A7C  0100               	movlb	0	; () banked
  1252   000A7E  6F86               	movwf	main@pina0& (0+255),b
  1253   000A80  6B87               	clrf	(main@pina0+1)& (0+255),b
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;Lab4.c: 142: if (mostrar && pina0==1) {
  1257   000A82  5037               	movf	_mostrar^0,w,c
  1258   000A84  1038               	iorwf	(_mostrar+1)^0,w,c
  1259   000A86  B4D8               	btfsc	status,2,c
  1260   000A88  D7D8               	goto	l3881
  1261                           
  1262                           ; BSR set to: 0
  1263   000A8A  0586               	decf	main@pina0& (0+255),w,b
  1264   000A8C  1187               	iorwf	(main@pina0+1)& (0+255),w,b
  1265   000A8E  A4D8               	btfss	status,2,c
  1266   000A90  D7D4               	goto	l3881
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;Lab4.c: 143: ContarReal();
  1270   000A92  EC4A  F007         	call	_ContarReal	;wreg free
  1271   000A96  D7D1               	goto	l3881
  1272   000A98                     __end_of_main:
  1273                           	callstack 0
  1274                           
  1275 ;; *************** function _sprintf *****************
  1276 ;; Defined at:
  1277 ;;		line 505 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/doprnt.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  sp              1   31[COMRAM] PTR unsigned char 
  1280 ;;		 -> buffer(20), 
  1281 ;;  f               1   32[COMRAM] PTR const unsigned char 
  1282 ;;		 -> STR_4(18), 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  tmpval          4    0        struct .
  1285 ;;  cp              3    0        PTR const unsigned char 
  1286 ;;  val             2    2[BANK0 ] unsigned int 
  1287 ;;  len             2    0        unsigned int 
  1288 ;;  c               1    5[BANK0 ] unsigned char 
  1289 ;;  prec            1    4[BANK0 ] char 
  1290 ;;  ap              1    1[BANK0 ] PTR void [1]
  1291 ;;		 -> ?_sprintf(2), 
  1292 ;;  flag            1    0[BANK0 ] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  2   31[COMRAM] int 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 3F/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1302 ;;      Params:         4       0       0       0       0       0       0       0       0
  1303 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1304 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1305 ;;      Totals:         5       6       0       0       0       0       0       0       0
  1306 ;;Total ram usage:       11 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 8
  1309 ;; This function calls:
  1310 ;;		___lwdiv
  1311 ;;		___lwmod
  1312 ;; This function is called by:
  1313 ;;		_main
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text1
  1318   000D82                     __ptext1:
  1319                           	callstack 0
  1320   000D82                     _sprintf:
  1321                           	callstack 22
  1322                           
  1323                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  1324                           
  1325                           ;incstack = 0
  1326   000D82  0E22               	movlw	low (?_sprintf+2)
  1327   000D84  0100               	movlb	0	; () banked
  1328   000D86  6F81               	movwf	sprintf@ap& (0+255),b
  1329                           
  1330                           ;doprnt.c: 553: while((c = *f++)) {
  1331   000D88  D073               	goto	u2540
  1332   000D8A                     l3713:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;doprnt.c: 555: if(c != '%')
  1336   000D8A  0E25               	movlw	37
  1337   000D8C  1985               	xorwf	sprintf@c& (0+255),w,b
  1338   000D8E  B4D8               	btfsc	status,2,c
  1339   000D90  D007               	goto	l3719
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1343   000D92  5020               	movf	sprintf@sp^0,w,c
  1344   000D94  6ED9               	movwf	fsr2l,c
  1345   000D96  6ADA               	clrf	fsr2h,c
  1346   000D98  C085  FFDF         	movff	sprintf@c,indf2
  1347                           
  1348                           ; BSR set to: 0
  1349   000D9C  2A20               	incf	sprintf@sp^0,f,c
  1350                           
  1351                           ;doprnt.c: 559: continue;
  1352   000D9E  D068               	goto	u2540
  1353   000DA0                     l3719:
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1357   000DA0  0E00               	movlw	0
  1358   000DA2  6F80               	movwf	sprintf@flag& (0+255),b
  1359                           
  1360                           ;doprnt.c: 661: switch(c = *f++) {
  1361   000DA4  D003               	goto	l3725
  1362   000DA6                     l3721:
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;doprnt.c: 844: flag |= 0xC0;
  1366   000DA6  0EC0               	movlw	192
  1367   000DA8  1380               	iorwf	sprintf@flag& (0+255),f,b
  1368                           
  1369                           ;doprnt.c: 845: break;
  1370   000DAA  D012               	goto	l3727
  1371   000DAC                     l3725:
  1372                           
  1373                           ; BSR set to: 0
  1374   000DAC  2A21               	incf	sprintf@f^0,f,c
  1375   000DAE  0421               	decf	sprintf@f^0,w,c
  1376   000DB0  6E24               	movwf	??_sprintf^0,c
  1377   000DB2  C024  FFF6         	movff	??_sprintf,tblptrl
  1378   000DB6                     	if	1	;There is more than 1 active tblptr byte
  1379   000DB6  0E08               	movlw	high __smallconst
  1380   000DB8  6EF7               	movwf	tblptrh,c
  1381   000DBA                     	endif
  1382   000DBA                     	if	0	;tblptru may be non-zero
  1383   000DBA                     	endif
  1384   000DBA                     	if	0	;tblptru may be non-zero
  1385   000DBA                     	endif
  1386   000DBA  0008               	tblrd		*
  1387   000DBC  CFF5 F085          	movff	tablat,sprintf@c
  1388   000DC0  5185               	movf	sprintf@c& (0+255),w,b
  1389                           
  1390                           ; Switch size 1, requested type "simple"
  1391                           ; Number of cases is 2, Range of values is 0 to 117
  1392                           ; switch strategies available:
  1393                           ; Name         Instructions Cycles
  1394                           ; simple_byte            7     4 (average)
  1395                           ;	Chosen strategy is simple_byte
  1396   000DC2  0A00               	xorlw	0	; case 0
  1397   000DC4  B4D8               	btfsc	status,2,c
  1398   000DC6  D061               	goto	u2550
  1399   000DC8  0A75               	xorlw	117	; case 117
  1400   000DCA  B4D8               	btfsc	status,2,c
  1401   000DCC  D7EC               	goto	l3721
  1402   000DCE  D050               	goto	u2540
  1403   000DD0                     l3727:
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (uns
      +                          igned)0));
  1407   000DD0  5181               	movf	sprintf@ap& (0+255),w,b
  1408   000DD2  6ED9               	movwf	fsr2l,c
  1409   000DD4  6ADA               	clrf	fsr2h,c
  1410   000DD6  CFDE F082          	movff	postinc2,sprintf@val
  1411   000DDA  CFDD F083          	movff	postdec2,sprintf@val+1
  1412                           
  1413                           ; BSR set to: 0
  1414   000DDE  0E02               	movlw	2
  1415   000DE0  2781               	addwf	sprintf@ap& (0+255),f,b
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  1419   000DE2  0E01               	movlw	1
  1420   000DE4  6F85               	movwf	sprintf@c& (0+255),b
  1421   000DE6                     l3737:
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;doprnt.c: 1332: if(val < dpowers[c])
  1425   000DE6  5185               	movf	sprintf@c& (0+255),w,b
  1426   000DE8  0D02               	mullw	2
  1427   000DEA  50F3               	movf	243,w,c
  1428   000DEC  0F01               	addlw	low _dpowers
  1429   000DEE  6E24               	movwf	??_sprintf^0,c
  1430   000DF0  C024  FFF6         	movff	??_sprintf,tblptrl
  1431   000DF4                     	if	1	;There is more than 1 active tblptr byte
  1432   000DF4  0E08               	movlw	high __smallconst
  1433   000DF6  6EF7               	movwf	tblptrh,c
  1434   000DF8                     	endif
  1435   000DF8                     	if	0	;tblptru may be non-zero
  1436   000DF8                     	endif
  1437   000DF8                     	if	0	;tblptru may be non-zero
  1438   000DF8                     	endif
  1439   000DF8  0009               	tblrd		*+
  1440   000DFA  50F5               	movf	tablat,w,c
  1441   000DFC  5D82               	subwf	sprintf@val& (0+255),w,b
  1442   000DFE  0009               	tblrd		*+
  1443   000E00  50F5               	movf	tablat,w,c
  1444   000E02  5983               	subwfb	(sprintf@val+1)& (0+255),w,b
  1445   000E04  A0D8               	btfss	status,0,c
  1446   000E06  D005               	goto	u2530
  1447                           
  1448                           ; BSR set to: 0
  1449   000E08  2B85               	incf	sprintf@c& (0+255),f,b
  1450                           
  1451                           ; BSR set to: 0
  1452   000E0A  0E05               	movlw	5
  1453   000E0C  1985               	xorwf	sprintf@c& (0+255),w,b
  1454   000E0E  A4D8               	btfss	status,2,c
  1455   000E10  D7EA               	goto	l3737
  1456   000E12                     u2530:
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;doprnt.c: 1448: {;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1460   000E12  C085  F084         	movff	sprintf@c,sprintf@prec
  1461                           
  1462                           ;doprnt.c: 1500: while(prec--) {
  1463   000E16  D028               	goto	l3751
  1464   000E18                     l3745:
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1468   000E18  5184               	movf	sprintf@prec& (0+255),w,b
  1469   000E1A  0D02               	mullw	2
  1470   000E1C  50F3               	movf	243,w,c
  1471   000E1E  0F01               	addlw	low _dpowers
  1472   000E20  6E24               	movwf	??_sprintf^0,c
  1473   000E22  C024  FFF6         	movff	??_sprintf,tblptrl
  1474   000E26                     	if	1	;There is more than 1 active tblptr byte
  1475   000E26  0E08               	movlw	high __smallconst
  1476   000E28  6EF7               	movwf	tblptrh,c
  1477   000E2A                     	endif
  1478   000E2A                     	if	0	;tblptru may be non-zero
  1479   000E2A                     	endif
  1480   000E2A                     	if	0	;tblptru may be non-zero
  1481   000E2A                     	endif
  1482   000E2A  0009               	tblrd		*+
  1483   000E2C  CFF5 F016          	movff	tablat,___lwdiv@divisor
  1484   000E30  000A               	tblrd		*-
  1485   000E32  CFF5 F017          	movff	tablat,___lwdiv@divisor+1
  1486   000E36  C082  F014         	movff	sprintf@val,___lwdiv@dividend
  1487   000E3A  C083  F015         	movff	sprintf@val+1,___lwdiv@dividend+1
  1488   000E3E  ECFF  F00A         	call	___lwdiv	;wreg free
  1489   000E42  C014  F01B         	movff	?___lwdiv,___lwmod@dividend
  1490   000E46  C015  F01C         	movff	?___lwdiv+1,___lwmod@dividend+1
  1491   000E4A  0E00               	movlw	0
  1492   000E4C  6E1E               	movwf	(___lwmod@divisor+1)^0,c
  1493   000E4E  0E0A               	movlw	10
  1494   000E50  6E1D               	movwf	___lwmod@divisor^0,c
  1495   000E52  EC95  F00B         	call	___lwmod	;wreg free
  1496   000E56  501B               	movf	?___lwmod^0,w,c
  1497   000E58  0F30               	addlw	48
  1498   000E5A  6F85               	movwf	sprintf@c& (0+255),b
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  1502   000E5C  5020               	movf	sprintf@sp^0,w,c
  1503   000E5E  6ED9               	movwf	fsr2l,c
  1504   000E60  6ADA               	clrf	fsr2h,c
  1505   000E62  C085  FFDF         	movff	sprintf@c,indf2
  1506                           
  1507                           ; BSR set to: 0
  1508   000E66  2A20               	incf	sprintf@sp^0,f,c
  1509   000E68                     l3751:
  1510                           
  1511                           ; BSR set to: 0
  1512   000E68  0784               	decf	sprintf@prec& (0+255),f,b
  1513   000E6A  2984               	incf	sprintf@prec& (0+255),w,b
  1514   000E6C  A4D8               	btfss	status,2,c
  1515   000E6E  D7D4               	goto	l3745
  1516   000E70                     u2540:
  1517                           
  1518                           ; BSR set to: 0
  1519   000E70  2A21               	incf	sprintf@f^0,f,c
  1520   000E72  0421               	decf	sprintf@f^0,w,c
  1521   000E74  6E24               	movwf	??_sprintf^0,c
  1522   000E76  C024  FFF6         	movff	??_sprintf,tblptrl
  1523   000E7A                     	if	1	;There is more than 1 active tblptr byte
  1524   000E7A  0E08               	movlw	high __smallconst
  1525   000E7C  6EF7               	movwf	tblptrh,c
  1526   000E7E                     	endif
  1527   000E7E                     	if	0	;tblptru may be non-zero
  1528   000E7E                     	endif
  1529   000E7E                     	if	0	;tblptru may be non-zero
  1530   000E7E                     	endif
  1531   000E7E  0008               	tblrd		*
  1532   000E80  CFF5 F085          	movff	tablat,sprintf@c
  1533   000E84  5185               	movf	sprintf@c& (0+255),w,b
  1534   000E86  A4D8               	btfss	status,2,c
  1535   000E88  D780               	goto	l3713
  1536   000E8A                     u2550:
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;doprnt.c: 1564: *sp = 0;
  1540   000E8A  5020               	movf	sprintf@sp^0,w,c
  1541   000E8C  6ED9               	movwf	fsr2l,c
  1542   000E8E  6ADA               	clrf	fsr2h,c
  1543   000E90  6ADF               	clrf	indf2,c
  1544                           
  1545                           ; BSR set to: 0
  1546   000E92  0012               	return		;funcret
  1547   000E94                     __end_of_sprintf:
  1548                           	callstack 0
  1549                           
  1550 ;; *************** function ___lwmod *****************
  1551 ;; Defined at:
  1552 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/lwmod.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  dividend        2   26[COMRAM] unsigned int 
  1555 ;;  divisor         2   28[COMRAM] unsigned int 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  counter         1   30[COMRAM] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  2   26[COMRAM] unsigned int 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0
  1562 ;; Tracked objects:
  1563 ;;		On entry : 3F/0
  1564 ;;		On exit  : 3F/0
  1565 ;;		Unchanged: 3F/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1567 ;;      Params:         4       0       0       0       0       0       0       0       0
  1568 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1570 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1571 ;;Total ram usage:        5 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; Hardware stack levels required when called: 7
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_sprintf
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text2
  1582   00172A                     __ptext2:
  1583                           	callstack 0
  1584   00172A                     ___lwmod:
  1585                           	callstack 22
  1586                           
  1587                           ; BSR set to: 0
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;incstack = 0
  1591   00172A  501D               	movf	___lwmod@divisor^0,w,c
  1592   00172C  101E               	iorwf	(___lwmod@divisor+1)^0,w,c
  1593   00172E  B4D8               	btfsc	status,2,c
  1594   001730  D018               	goto	l897
  1595                           
  1596                           ; BSR set to: 0
  1597   001732  0E01               	movlw	1
  1598   001734  6E1F               	movwf	___lwmod@counter^0,c
  1599   001736  D004               	goto	l3541
  1600   001738                     l3539:
  1601                           
  1602                           ; BSR set to: 0
  1603   001738  90D8               	bcf	status,0,c
  1604   00173A  361D               	rlcf	___lwmod@divisor^0,f,c
  1605   00173C  361E               	rlcf	(___lwmod@divisor+1)^0,f,c
  1606   00173E  2A1F               	incf	___lwmod@counter^0,f,c
  1607   001740                     l3541:
  1608                           
  1609                           ; BSR set to: 0
  1610   001740  AE1E               	btfss	(___lwmod@divisor+1)^0,7,c
  1611   001742  D7FA               	goto	l3539
  1612   001744                     u2400:
  1613                           
  1614                           ; BSR set to: 0
  1615   001744  501D               	movf	___lwmod@divisor^0,w,c
  1616   001746  5C1B               	subwf	___lwmod@dividend^0,w,c
  1617   001748  501E               	movf	(___lwmod@divisor+1)^0,w,c
  1618   00174A  581C               	subwfb	(___lwmod@dividend+1)^0,w,c
  1619   00174C  A0D8               	btfss	status,0,c
  1620   00174E  D004               	goto	l3547
  1621                           
  1622                           ; BSR set to: 0
  1623   001750  501D               	movf	___lwmod@divisor^0,w,c
  1624   001752  5E1B               	subwf	___lwmod@dividend^0,f,c
  1625   001754  501E               	movf	(___lwmod@divisor+1)^0,w,c
  1626   001756  5A1C               	subwfb	(___lwmod@dividend+1)^0,f,c
  1627   001758                     l3547:
  1628                           
  1629                           ; BSR set to: 0
  1630   001758  90D8               	bcf	status,0,c
  1631   00175A  321E               	rrcf	(___lwmod@divisor+1)^0,f,c
  1632   00175C  321D               	rrcf	___lwmod@divisor^0,f,c
  1633                           
  1634                           ; BSR set to: 0
  1635   00175E  2E1F               	decfsz	___lwmod@counter^0,f,c
  1636   001760  D7F1               	goto	u2400
  1637   001762                     l897:
  1638                           
  1639                           ; BSR set to: 0
  1640   001762  C01B  F01B         	movff	___lwmod@dividend,?___lwmod
  1641   001766  C01C  F01C         	movff	___lwmod@dividend+1,?___lwmod+1
  1642                           
  1643                           ; BSR set to: 0
  1644   00176A  0012               	return		;funcret
  1645   00176C                     __end_of___lwmod:
  1646                           	callstack 0
  1647                           
  1648 ;; *************** function ___lwdiv *****************
  1649 ;; Defined at:
  1650 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/lwdiv.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  dividend        2   19[COMRAM] unsigned int 
  1653 ;;  divisor         2   21[COMRAM] unsigned int 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  quotient        2   24[COMRAM] unsigned int 
  1656 ;;  counter         1   23[COMRAM] unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  2   19[COMRAM] unsigned int 
  1659 ;; Registers used:
  1660 ;;		wreg, status,2, status,0
  1661 ;; Tracked objects:
  1662 ;;		On entry : 3F/0
  1663 ;;		On exit  : 3F/0
  1664 ;;		Unchanged: 3F/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1666 ;;      Params:         4       0       0       0       0       0       0       0       0
  1667 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1669 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1670 ;;Total ram usage:        7 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; Hardware stack levels required when called: 7
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_sprintf
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text3
  1681   0015FE                     __ptext3:
  1682                           	callstack 0
  1683   0015FE                     ___lwdiv:
  1684                           	callstack 22
  1685                           
  1686                           ; BSR set to: 0
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;incstack = 0
  1690   0015FE  0E00               	movlw	0
  1691   001600  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  1692   001602  0E00               	movlw	0
  1693   001604  6E19               	movwf	___lwdiv@quotient^0,c
  1694                           
  1695                           ; BSR set to: 0
  1696   001606  5016               	movf	___lwdiv@divisor^0,w,c
  1697   001608  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1698   00160A  B4D8               	btfsc	status,2,c
  1699   00160C  D01C               	goto	l887
  1700                           
  1701                           ; BSR set to: 0
  1702   00160E  0E01               	movlw	1
  1703   001610  6E18               	movwf	___lwdiv@counter^0,c
  1704   001612  D004               	goto	l3521
  1705   001614                     l3519:
  1706                           
  1707                           ; BSR set to: 0
  1708   001614  90D8               	bcf	status,0,c
  1709   001616  3616               	rlcf	___lwdiv@divisor^0,f,c
  1710   001618  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1711   00161A  2A18               	incf	___lwdiv@counter^0,f,c
  1712   00161C                     l3521:
  1713                           
  1714                           ; BSR set to: 0
  1715   00161C  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  1716   00161E  D7FA               	goto	l3519
  1717   001620                     u2370:
  1718                           
  1719                           ; BSR set to: 0
  1720   001620  90D8               	bcf	status,0,c
  1721   001622  3619               	rlcf	___lwdiv@quotient^0,f,c
  1722   001624  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1723                           
  1724                           ; BSR set to: 0
  1725   001626  5016               	movf	___lwdiv@divisor^0,w,c
  1726   001628  5C14               	subwf	___lwdiv@dividend^0,w,c
  1727   00162A  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  1728   00162C  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1729   00162E  A0D8               	btfss	status,0,c
  1730   001630  D005               	goto	l3531
  1731                           
  1732                           ; BSR set to: 0
  1733   001632  5016               	movf	___lwdiv@divisor^0,w,c
  1734   001634  5E14               	subwf	___lwdiv@dividend^0,f,c
  1735   001636  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  1736   001638  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1737                           
  1738                           ; BSR set to: 0
  1739   00163A  8019               	bsf	___lwdiv@quotient^0,0,c
  1740   00163C                     l3531:
  1741                           
  1742                           ; BSR set to: 0
  1743   00163C  90D8               	bcf	status,0,c
  1744   00163E  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1745   001640  3216               	rrcf	___lwdiv@divisor^0,f,c
  1746                           
  1747                           ; BSR set to: 0
  1748   001642  2E18               	decfsz	___lwdiv@counter^0,f,c
  1749   001644  D7ED               	goto	u2370
  1750   001646                     l887:
  1751                           
  1752                           ; BSR set to: 0
  1753   001646  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  1754   00164A  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1755                           
  1756                           ; BSR set to: 0
  1757   00164E  0012               	return		;funcret
  1758   001650                     __end_of___lwdiv:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _escenario1 *****************
  1762 ;; Defined at:
  1763 ;;		line 154 in file "Lab4.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0
  1778 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1780 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1781 ;;Total ram usage:        0 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 10
  1784 ;; This function calls:
  1785 ;;		_Lcd_Blink
  1786 ;;		_Lcd_Clear
  1787 ;;		_Lcd_Set_Cursor
  1788 ;;		_Lcd_Write_Char
  1789 ;;		_Lcd_Write_String
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text4
  1796   00169E                     __ptext4:
  1797                           	callstack 0
  1798   00169E                     _escenario1:
  1799                           	callstack 20
  1800                           
  1801                           ;Lab4.c: 155: menu=1;
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;incstack = 0
  1805   00169E  0E00               	movlw	0
  1806   0016A0  6E48               	movwf	(_menu+1)^0,c
  1807   0016A2  0E01               	movlw	1
  1808   0016A4  6E47               	movwf	_menu^0,c
  1809                           
  1810                           ;Lab4.c: 156: Lcd_Clear();
  1811   0016A6  ECB5  F00D         	call	_Lcd_Clear	;wreg free
  1812                           
  1813                           ;Lab4.c: 157: Lcd_Set_Cursor(1, 1);
  1814   0016AA  0E01               	movlw	1
  1815   0016AC  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1816   0016AE  0E01               	movlw	1
  1817   0016B0  EC46  F008         	call	_Lcd_Set_Cursor
  1818                           
  1819                           ;Lab4.c: 158: Lcd_Write_String("Piezas a contar:");
  1820   0016B4  0E57               	movlw	low STR_5
  1821   0016B6  6E18               	movwf	Lcd_Write_String@a^0,c
  1822   0016B8  EC18  F00C         	call	_Lcd_Write_String	;wreg free
  1823                           
  1824                           ;Lab4.c: 159: Lcd_Set_Cursor(2, 9);
  1825   0016BC  0E09               	movlw	9
  1826   0016BE  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1827   0016C0  0E02               	movlw	2
  1828   0016C2  EC46  F008         	call	_Lcd_Set_Cursor
  1829                           
  1830                           ;Lab4.c: 160: Lcd_Write_String("A:ok B:");
  1831   0016C6  0EB8               	movlw	low STR_6
  1832   0016C8  6E18               	movwf	Lcd_Write_String@a^0,c
  1833   0016CA  EC18  F00C         	call	_Lcd_Write_String	;wreg free
  1834                           
  1835                           ;Lab4.c: 161: Lcd_Write_Char(0b01111111);
  1836   0016CE  0E7F               	movlw	127
  1837   0016D0  EC56  F00C         	call	_Lcd_Write_Char
  1838                           
  1839                           ;Lab4.c: 162: Lcd_Set_Cursor(2, 1);
  1840   0016D4  0E01               	movlw	1
  1841   0016D6  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1842   0016D8  0E02               	movlw	2
  1843   0016DA  EC46  F008         	call	_Lcd_Set_Cursor
  1844                           
  1845                           ;Lab4.c: 163: Lcd_Blink();
  1846   0016DE  EC99  F00D         	call	_Lcd_Blink	;wreg free
  1847   0016E2  0012               	return		;funcret
  1848   0016E4                     __end_of_escenario1:
  1849                           	callstack 0
  1850                           
  1851 ;; *************** function _Lcd_Blink *****************
  1852 ;; Defined at:
  1853 ;;		line 124 in file "lcd.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1867 ;;      Params:         0       0       0       0       0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1870 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1871 ;;Total ram usage:        0 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 9
  1874 ;; This function calls:
  1875 ;;		_Lcd_Cmd
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;;		_escenario1
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text5
  1883   001B32                     __ptext5:
  1884                           	callstack 0
  1885   001B32                     _Lcd_Blink:
  1886                           	callstack 20
  1887                           
  1888                           ;lcd.c: 126: Lcd_Cmd(0x00);
  1889                           
  1890                           ;incstack = 0
  1891   001B32  0E00               	movlw	0
  1892   001B34  EC81  F00D         	call	_Lcd_Cmd
  1893                           
  1894                           ;lcd.c: 127: Lcd_Cmd(0x0F);
  1895   001B38  0E0F               	movlw	15
  1896   001B3A  EC81  F00D         	call	_Lcd_Cmd
  1897   001B3E  0012               	return		;funcret
  1898   001B40                     __end_of_Lcd_Blink:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _Lcd_Init *****************
  1902 ;; Defined at:
  1903 ;;		line 64 in file "lcd.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1917 ;;      Params:         0       0       0       0       0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1919 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1920 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1921 ;;Total ram usage:        1 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 10
  1924 ;; This function calls:
  1925 ;;		_Lcd_Clear
  1926 ;;		_Lcd_Cmd
  1927 ;;		_Lcd_Port
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text6
  1934   0013E8                     __ptext6:
  1935                           	callstack 0
  1936   0013E8                     _Lcd_Init:
  1937                           	callstack 20
  1938                           
  1939                           ;lcd.c: 66: TRISAbits.TRISA3 = 0;
  1940                           
  1941                           ;incstack = 0
  1942   0013E8  9692               	bcf	146,3,c	;volatile
  1943                           
  1944                           ;lcd.c: 67: TRISAbits.TRISA4 = 0;
  1945   0013EA  9892               	bcf	146,4,c	;volatile
  1946                           
  1947                           ;lcd.c: 68: TRISDbits.TRISD4 = 0;
  1948   0013EC  9895               	bcf	149,4,c	;volatile
  1949                           
  1950                           ;lcd.c: 69: TRISDbits.TRISD5 = 0;
  1951   0013EE  9A95               	bcf	149,5,c	;volatile
  1952                           
  1953                           ;lcd.c: 70: TRISDbits.TRISD6 = 0;
  1954   0013F0  9C95               	bcf	149,6,c	;volatile
  1955                           
  1956                           ;lcd.c: 71: TRISDbits.TRISD7 = 0;
  1957   0013F2  9E95               	bcf	149,7,c	;volatile
  1958                           
  1959                           ;lcd.c: 72: Lcd_Port(0x00);
  1960   0013F4  0E00               	movlw	0
  1961   0013F6  ECF8  F00C         	call	_Lcd_Port
  1962                           
  1963                           ;lcd.c: 73: _delay((unsigned long)((20)*(1000000/4000.0)));
  1964   0013FA  0E07               	movlw	7
  1965   0013FC  6E16               	movwf	??_Lcd_Init^0,c
  1966   0013FE  0E7D               	movlw	125
  1967   001400                     u2657:
  1968   001400  2EE8               	decfsz	wreg,f,c
  1969   001402  D7FE               	bra	u2657
  1970   001404  2E16               	decfsz	??_Lcd_Init^0,f,c
  1971   001406  D7FC               	bra	u2657
  1972   001408  0000               	nop	
  1973                           
  1974                           ;lcd.c: 74: Lcd_Cmd(0x03);
  1975   00140A  0E03               	movlw	3
  1976   00140C  EC81  F00D         	call	_Lcd_Cmd
  1977                           
  1978                           ;lcd.c: 75: _delay((unsigned long)((5)*(1000000/4000.0)));
  1979   001410  0EFA               	movlw	250
  1980   001412                     u2667:
  1981   001412  D000               	nop2	
  1982   001414  2EE8               	decfsz	wreg,f,c
  1983   001416  D7FD               	bra	u2667
  1984                           
  1985                           ;lcd.c: 76: Lcd_Cmd(0x03);
  1986   001418  0E03               	movlw	3
  1987   00141A  EC81  F00D         	call	_Lcd_Cmd
  1988                           
  1989                           ;lcd.c: 77: _delay((unsigned long)((11)*(1000000/4000.0)));
  1990   00141E  0E04               	movlw	4
  1991   001420  6E16               	movwf	??_Lcd_Init^0,c
  1992   001422  0E91               	movlw	145
  1993   001424                     u2677:
  1994   001424  2EE8               	decfsz	wreg,f,c
  1995   001426  D7FE               	bra	u2677
  1996   001428  2E16               	decfsz	??_Lcd_Init^0,f,c
  1997   00142A  D7FC               	bra	u2677
  1998   00142C  0000               	nop	
  1999                           
  2000                           ;lcd.c: 78: Lcd_Cmd(0x03);
  2001   00142E  0E03               	movlw	3
  2002   001430  EC81  F00D         	call	_Lcd_Cmd
  2003                           
  2004                           ;lcd.c: 79: Lcd_Cmd(0x02);
  2005   001434  0E02               	movlw	2
  2006   001436  EC81  F00D         	call	_Lcd_Cmd
  2007                           
  2008                           ;lcd.c: 80: Lcd_Cmd(0x02);
  2009   00143A  0E02               	movlw	2
  2010   00143C  EC81  F00D         	call	_Lcd_Cmd
  2011                           
  2012                           ;lcd.c: 81: Lcd_Cmd(0x08);
  2013   001440  0E08               	movlw	8
  2014   001442  EC81  F00D         	call	_Lcd_Cmd
  2015                           
  2016                           ;lcd.c: 82: Lcd_Cmd(0x00);
  2017   001446  0E00               	movlw	0
  2018   001448  EC81  F00D         	call	_Lcd_Cmd
  2019                           
  2020                           ;lcd.c: 83: Lcd_Cmd(0x0C);
  2021   00144C  0E0C               	movlw	12
  2022   00144E  EC81  F00D         	call	_Lcd_Cmd
  2023                           
  2024                           ;lcd.c: 84: Lcd_Cmd(0x00);
  2025   001452  0E00               	movlw	0
  2026   001454  EC81  F00D         	call	_Lcd_Cmd
  2027                           
  2028                           ;lcd.c: 85: Lcd_Cmd(0x06);
  2029   001458  0E06               	movlw	6
  2030   00145A  EC81  F00D         	call	_Lcd_Cmd
  2031                           
  2032                           ;lcd.c: 86: Lcd_Clear();
  2033   00145E  ECB5  F00D         	call	_Lcd_Clear	;wreg free
  2034   001462  0012               	return		;funcret
  2035   001464                     __end_of_Lcd_Init:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _Lcd_CGRAM_Init *****************
  2039 ;; Defined at:
  2040 ;;		line 186 in file "lcd.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2054 ;;      Params:         0       0       0       0       0       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2057 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2058 ;;Total ram usage:        0 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 9
  2061 ;; This function calls:
  2062 ;;		_Lcd_Cmd
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text7
  2069   001B40                     __ptext7:
  2070                           	callstack 0
  2071   001B40                     _Lcd_CGRAM_Init:
  2072                           	callstack 21
  2073                           
  2074                           ;lcd.c: 188: Lcd_Cmd(0x04);
  2075                           
  2076                           ;incstack = 0
  2077   001B40  0E04               	movlw	4
  2078   001B42  EC81  F00D         	call	_Lcd_Cmd
  2079                           
  2080                           ;lcd.c: 189: Lcd_Cmd(0x00);
  2081   001B46  0E00               	movlw	0
  2082   001B48  EC81  F00D         	call	_Lcd_Cmd
  2083   001B4C  0012               	return		;funcret
  2084   001B4E                     __end_of_Lcd_CGRAM_Init:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _Lcd_CGRAM_CreateChar *****************
  2088 ;; Defined at:
  2089 ;;		line 147 in file "lcd.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  add             1    wreg     unsigned char 
  2092 ;;  chardata        1   23[COMRAM] PTR const unsigned char 
  2093 ;;		 -> figura_5(8), figura_4(8), figura_3(8), figura_2(8), 
  2094 ;;		 -> figura_1(8), 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  add             1   25[COMRAM] unsigned char 
  2097 ;;  i               1   33[COMRAM] unsigned char 
  2098 ;;  i               1   32[COMRAM] unsigned char 
  2099 ;;  i               1   31[COMRAM] unsigned char 
  2100 ;;  i               1   30[COMRAM] unsigned char 
  2101 ;;  i               1   29[COMRAM] unsigned char 
  2102 ;;  i               1   28[COMRAM] unsigned char 
  2103 ;;  i               1   27[COMRAM] unsigned char 
  2104 ;;  i               1   26[COMRAM] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2114 ;;      Params:         1       0       0       0       0       0       0       0       0
  2115 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2116 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2117 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2118 ;;Total ram usage:       11 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 9
  2121 ;; This function calls:
  2122 ;;		_Lcd_Write_Char
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text8
  2129   000C0E                     __ptext8:
  2130                           	callstack 0
  2131   000C0E                     _Lcd_CGRAM_CreateChar:
  2132                           	callstack 21
  2133                           
  2134                           ;incstack = 0
  2135                           ;Lcd_CGRAM_CreateChar@add stored from wreg
  2136   000C0E  6E1A               	movwf	Lcd_CGRAM_CreateChar@add^0,c
  2137                           
  2138                           ;lcd.c: 149: switch(add)
  2139   000C10  D09E               	goto	l3683
  2140   000C12                     l3585:
  2141                           
  2142                           ;lcd.c: 152: for(char i=0; i<=7; i++)
  2143   000C12  0E00               	movlw	0
  2144   000C14  6E1B               	movwf	Lcd_CGRAM_CreateChar@i^0,c
  2145   000C16                     l3591:
  2146                           
  2147                           ;lcd.c: 153: Lcd_Write_Char(chardata[i]);
  2148   000C16  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2149   000C18  241B               	addwf	Lcd_CGRAM_CreateChar@i^0,w,c
  2150   000C1A  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2151   000C1C  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2152   000C20                     	if	1	;There is more than 1 active tblptr byte
  2153   000C20  0E08               	movlw	high __smallconst
  2154   000C22  6EF7               	movwf	tblptrh,c
  2155   000C24                     	endif
  2156   000C24                     	if	0	;tblptru may be non-zero
  2157   000C24                     	endif
  2158   000C24                     	if	0	;tblptru may be non-zero
  2159   000C24                     	endif
  2160   000C24  0008               	tblrd		*
  2161   000C26  50F5               	movf	tablat,w,c
  2162   000C28  EC56  F00C         	call	_Lcd_Write_Char
  2163   000C2C  2A1B               	incf	Lcd_CGRAM_CreateChar@i^0,f,c
  2164   000C2E  0E07               	movlw	7
  2165   000C30  641B               	cpfsgt	Lcd_CGRAM_CreateChar@i^0,c
  2166   000C32  D7F1               	goto	l3591
  2167   000C34  0012               	return	
  2168   000C36                     l3597:
  2169                           
  2170                           ;lcd.c: 156: for(char i=8; i<=15; i++)
  2171   000C36  0E08               	movlw	8
  2172   000C38  6E1C               	movwf	Lcd_CGRAM_CreateChar@i_243^0,c
  2173   000C3A                     l3603:
  2174                           
  2175                           ;lcd.c: 157: Lcd_Write_Char(chardata[i-8]);
  2176   000C3A  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2177   000C3C  241C               	addwf	Lcd_CGRAM_CreateChar@i_243^0,w,c
  2178   000C3E  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2179   000C40  0EF8               	movlw	-8
  2180   000C42  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2181   000C44  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2182   000C48                     	if	1	;There is more than 1 active tblptr byte
  2183   000C48  0E08               	movlw	high __smallconst
  2184   000C4A  6EF7               	movwf	tblptrh,c
  2185   000C4C                     	endif
  2186   000C4C                     	if	0	;tblptru may be non-zero
  2187   000C4C                     	endif
  2188   000C4C                     	if	0	;tblptru may be non-zero
  2189   000C4C                     	endif
  2190   000C4C  0008               	tblrd		*
  2191   000C4E  50F5               	movf	tablat,w,c
  2192   000C50  EC56  F00C         	call	_Lcd_Write_Char
  2193   000C54  2A1C               	incf	Lcd_CGRAM_CreateChar@i_243^0,f,c
  2194   000C56  0E0F               	movlw	15
  2195   000C58  641C               	cpfsgt	Lcd_CGRAM_CreateChar@i_243^0,c
  2196   000C5A  D7EF               	goto	l3603
  2197   000C5C  0012               	return	
  2198   000C5E                     l3609:
  2199                           
  2200                           ;lcd.c: 160: for(char i=16; i<=23; i++)
  2201   000C5E  0E10               	movlw	16
  2202   000C60  6E1D               	movwf	Lcd_CGRAM_CreateChar@i_244^0,c
  2203   000C62                     l3615:
  2204                           
  2205                           ;lcd.c: 161: Lcd_Write_Char(chardata[i-16]);
  2206   000C62  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2207   000C64  241D               	addwf	Lcd_CGRAM_CreateChar@i_244^0,w,c
  2208   000C66  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2209   000C68  0EF0               	movlw	-16
  2210   000C6A  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2211   000C6C  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2212   000C70                     	if	1	;There is more than 1 active tblptr byte
  2213   000C70  0E08               	movlw	high __smallconst
  2214   000C72  6EF7               	movwf	tblptrh,c
  2215   000C74                     	endif
  2216   000C74                     	if	0	;tblptru may be non-zero
  2217   000C74                     	endif
  2218   000C74                     	if	0	;tblptru may be non-zero
  2219   000C74                     	endif
  2220   000C74  0008               	tblrd		*
  2221   000C76  50F5               	movf	tablat,w,c
  2222   000C78  EC56  F00C         	call	_Lcd_Write_Char
  2223   000C7C  2A1D               	incf	Lcd_CGRAM_CreateChar@i_244^0,f,c
  2224   000C7E  0E17               	movlw	23
  2225   000C80  641D               	cpfsgt	Lcd_CGRAM_CreateChar@i_244^0,c
  2226   000C82  D7EF               	goto	l3615
  2227   000C84  0012               	return	
  2228   000C86                     l3621:
  2229                           
  2230                           ;lcd.c: 164: for(char i=24; i<=31; i++)
  2231   000C86  0E18               	movlw	24
  2232   000C88  6E1E               	movwf	Lcd_CGRAM_CreateChar@i_245^0,c
  2233   000C8A                     l3627:
  2234                           
  2235                           ;lcd.c: 165: Lcd_Write_Char(chardata[i-24]);
  2236   000C8A  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2237   000C8C  241E               	addwf	Lcd_CGRAM_CreateChar@i_245^0,w,c
  2238   000C8E  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2239   000C90  0EE8               	movlw	-24
  2240   000C92  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2241   000C94  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2242   000C98                     	if	1	;There is more than 1 active tblptr byte
  2243   000C98  0E08               	movlw	high __smallconst
  2244   000C9A  6EF7               	movwf	tblptrh,c
  2245   000C9C                     	endif
  2246   000C9C                     	if	0	;tblptru may be non-zero
  2247   000C9C                     	endif
  2248   000C9C                     	if	0	;tblptru may be non-zero
  2249   000C9C                     	endif
  2250   000C9C  0008               	tblrd		*
  2251   000C9E  50F5               	movf	tablat,w,c
  2252   000CA0  EC56  F00C         	call	_Lcd_Write_Char
  2253   000CA4  2A1E               	incf	Lcd_CGRAM_CreateChar@i_245^0,f,c
  2254   000CA6  0E1F               	movlw	31
  2255   000CA8  641E               	cpfsgt	Lcd_CGRAM_CreateChar@i_245^0,c
  2256   000CAA  D7EF               	goto	l3627
  2257   000CAC  0012               	return	
  2258   000CAE                     l3633:
  2259                           
  2260                           ;lcd.c: 168: for(char i=32; i<=39; i++)
  2261   000CAE  0E20               	movlw	32
  2262   000CB0  6E1F               	movwf	Lcd_CGRAM_CreateChar@i_246^0,c
  2263   000CB2                     l3639:
  2264                           
  2265                           ;lcd.c: 169: Lcd_Write_Char(chardata[i-32]);
  2266   000CB2  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2267   000CB4  241F               	addwf	Lcd_CGRAM_CreateChar@i_246^0,w,c
  2268   000CB6  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2269   000CB8  0EE0               	movlw	-32
  2270   000CBA  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2271   000CBC  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2272   000CC0                     	if	1	;There is more than 1 active tblptr byte
  2273   000CC0  0E08               	movlw	high __smallconst
  2274   000CC2  6EF7               	movwf	tblptrh,c
  2275   000CC4                     	endif
  2276   000CC4                     	if	0	;tblptru may be non-zero
  2277   000CC4                     	endif
  2278   000CC4                     	if	0	;tblptru may be non-zero
  2279   000CC4                     	endif
  2280   000CC4  0008               	tblrd		*
  2281   000CC6  50F5               	movf	tablat,w,c
  2282   000CC8  EC56  F00C         	call	_Lcd_Write_Char
  2283   000CCC  2A1F               	incf	Lcd_CGRAM_CreateChar@i_246^0,f,c
  2284   000CCE  0E27               	movlw	39
  2285   000CD0  641F               	cpfsgt	Lcd_CGRAM_CreateChar@i_246^0,c
  2286   000CD2  D7EF               	goto	l3639
  2287   000CD4  0012               	return	
  2288   000CD6                     l3645:
  2289                           
  2290                           ;lcd.c: 172: for(char i=40; i<=47; i++)
  2291   000CD6  0E28               	movlw	40
  2292   000CD8  6E20               	movwf	Lcd_CGRAM_CreateChar@i_247^0,c
  2293   000CDA                     l3651:
  2294                           
  2295                           ;lcd.c: 173: Lcd_Write_Char(chardata[i-40]);
  2296   000CDA  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2297   000CDC  2420               	addwf	Lcd_CGRAM_CreateChar@i_247^0,w,c
  2298   000CDE  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2299   000CE0  0ED8               	movlw	-40
  2300   000CE2  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2301   000CE4  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2302   000CE8                     	if	1	;There is more than 1 active tblptr byte
  2303   000CE8  0E08               	movlw	high __smallconst
  2304   000CEA  6EF7               	movwf	tblptrh,c
  2305   000CEC                     	endif
  2306   000CEC                     	if	0	;tblptru may be non-zero
  2307   000CEC                     	endif
  2308   000CEC                     	if	0	;tblptru may be non-zero
  2309   000CEC                     	endif
  2310   000CEC  0008               	tblrd		*
  2311   000CEE  50F5               	movf	tablat,w,c
  2312   000CF0  EC56  F00C         	call	_Lcd_Write_Char
  2313   000CF4  2A20               	incf	Lcd_CGRAM_CreateChar@i_247^0,f,c
  2314   000CF6  0E2F               	movlw	47
  2315   000CF8  6420               	cpfsgt	Lcd_CGRAM_CreateChar@i_247^0,c
  2316   000CFA  D7EF               	goto	l3651
  2317   000CFC  0012               	return	
  2318   000CFE                     l3657:
  2319                           
  2320                           ;lcd.c: 176: for(char i=48; i<=55; i++)
  2321   000CFE  0E30               	movlw	48
  2322   000D00  6E21               	movwf	Lcd_CGRAM_CreateChar@i_248^0,c
  2323   000D02                     l3663:
  2324                           
  2325                           ;lcd.c: 177: Lcd_Write_Char(chardata[i-48]);
  2326   000D02  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2327   000D04  2421               	addwf	Lcd_CGRAM_CreateChar@i_248^0,w,c
  2328   000D06  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2329   000D08  0ED0               	movlw	-48
  2330   000D0A  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2331   000D0C  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2332   000D10                     	if	1	;There is more than 1 active tblptr byte
  2333   000D10  0E08               	movlw	high __smallconst
  2334   000D12  6EF7               	movwf	tblptrh,c
  2335   000D14                     	endif
  2336   000D14                     	if	0	;tblptru may be non-zero
  2337   000D14                     	endif
  2338   000D14                     	if	0	;tblptru may be non-zero
  2339   000D14                     	endif
  2340   000D14  0008               	tblrd		*
  2341   000D16  50F5               	movf	tablat,w,c
  2342   000D18  EC56  F00C         	call	_Lcd_Write_Char
  2343   000D1C  2A21               	incf	Lcd_CGRAM_CreateChar@i_248^0,f,c
  2344   000D1E  0E37               	movlw	55
  2345   000D20  6421               	cpfsgt	Lcd_CGRAM_CreateChar@i_248^0,c
  2346   000D22  D7EF               	goto	l3663
  2347   000D24  0012               	return	
  2348   000D26                     l3669:
  2349                           
  2350                           ;lcd.c: 180: for(char i=56; i<=63; i++)
  2351   000D26  0E38               	movlw	56
  2352   000D28  6E22               	movwf	Lcd_CGRAM_CreateChar@i_249^0,c
  2353   000D2A                     l3675:
  2354                           
  2355                           ;lcd.c: 181: Lcd_Write_Char(chardata[i-56]);
  2356   000D2A  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2357   000D2C  2422               	addwf	Lcd_CGRAM_CreateChar@i_249^0,w,c
  2358   000D2E  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2359   000D30  0EC8               	movlw	-56
  2360   000D32  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2361   000D34  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2362   000D38                     	if	1	;There is more than 1 active tblptr byte
  2363   000D38  0E08               	movlw	high __smallconst
  2364   000D3A  6EF7               	movwf	tblptrh,c
  2365   000D3C                     	endif
  2366   000D3C                     	if	0	;tblptru may be non-zero
  2367   000D3C                     	endif
  2368   000D3C                     	if	0	;tblptru may be non-zero
  2369   000D3C                     	endif
  2370   000D3C  0008               	tblrd		*
  2371   000D3E  50F5               	movf	tablat,w,c
  2372   000D40  EC56  F00C         	call	_Lcd_Write_Char
  2373   000D44  2A22               	incf	Lcd_CGRAM_CreateChar@i_249^0,f,c
  2374   000D46  0E3F               	movlw	63
  2375   000D48  6422               	cpfsgt	Lcd_CGRAM_CreateChar@i_249^0,c
  2376   000D4A  D7EF               	goto	l3675
  2377   000D4C  0012               	return	
  2378   000D4E                     l3683:
  2379   000D4E  501A               	movf	Lcd_CGRAM_CreateChar@add^0,w,c
  2380                           
  2381                           ; Switch size 1, requested type "simple"
  2382                           ; Number of cases is 8, Range of values is 0 to 7
  2383                           ; switch strategies available:
  2384                           ; Name         Instructions Cycles
  2385                           ; simple_byte           25    13 (average)
  2386                           ;	Chosen strategy is simple_byte
  2387   000D50  0A00               	xorlw	0	; case 0
  2388   000D52  B4D8               	btfsc	status,2,c
  2389   000D54  D75E               	goto	l3585
  2390   000D56  0A01               	xorlw	1	; case 1
  2391   000D58  B4D8               	btfsc	status,2,c
  2392   000D5A  D76D               	goto	l3597
  2393   000D5C  0A03               	xorlw	3	; case 2
  2394   000D5E  B4D8               	btfsc	status,2,c
  2395   000D60  D77E               	goto	l3609
  2396   000D62  0A01               	xorlw	1	; case 3
  2397   000D64  B4D8               	btfsc	status,2,c
  2398   000D66  D78F               	goto	l3621
  2399   000D68  0A07               	xorlw	7	; case 4
  2400   000D6A  B4D8               	btfsc	status,2,c
  2401   000D6C  D7A0               	goto	l3633
  2402   000D6E  0A01               	xorlw	1	; case 5
  2403   000D70  B4D8               	btfsc	status,2,c
  2404   000D72  D7B1               	goto	l3645
  2405   000D74  0A03               	xorlw	3	; case 6
  2406   000D76  B4D8               	btfsc	status,2,c
  2407   000D78  D7C2               	goto	l3657
  2408   000D7A  0A01               	xorlw	1	; case 7
  2409   000D7C  A4D8               	btfss	status,2,c
  2410   000D7E  0012               	return	
  2411   000D80  D7D2               	goto	l3669
  2412   000D82                     __end_of_Lcd_CGRAM_CreateChar:
  2413                           	callstack 0
  2414                           
  2415 ;; *************** function _Lcd_CGRAM_Close *****************
  2416 ;; Defined at:
  2417 ;;		line 192 in file "lcd.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2431 ;;      Params:         0       0       0       0       0       0       0       0       0
  2432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2434 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2435 ;;Total ram usage:        0 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 9
  2438 ;; This function calls:
  2439 ;;		_Lcd_Cmd
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text9
  2446   001B4E                     __ptext9:
  2447                           	callstack 0
  2448   001B4E                     _Lcd_CGRAM_Close:
  2449                           	callstack 21
  2450                           
  2451                           ;lcd.c: 194: Lcd_Cmd(0x00);
  2452                           
  2453                           ;incstack = 0
  2454   001B4E  0E00               	movlw	0
  2455   001B50  EC81  F00D         	call	_Lcd_Cmd
  2456                           
  2457                           ;lcd.c: 195: Lcd_Cmd(0x02);
  2458   001B54  0E02               	movlw	2
  2459   001B56  EC81  F00D         	call	_Lcd_Cmd
  2460   001B5A  0012               	return		;funcret
  2461   001B5C                     __end_of_Lcd_CGRAM_Close:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function _Conversion *****************
  2465 ;; Defined at:
  2466 ;;		line 311 in file "Lab4.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  canal           1    wreg     unsigned char 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  canal           1   22[COMRAM] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  2   19[COMRAM] unsigned int 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2480 ;;      Params:         2       0       0       0       0       0       0       0       0
  2481 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2482 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2483 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2484 ;;Total ram usage:        4 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 7
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text10
  2495   001A70                     __ptext10:
  2496                           	callstack 0
  2497   001A70                     _Conversion:
  2498                           	callstack 23
  2499                           
  2500                           ;incstack = 0
  2501                           ;Conversion@canal stored from wreg
  2502   001A70  6E17               	movwf	Conversion@canal^0,c
  2503                           
  2504                           ;Lab4.c: 312: ADCON0=(ADCON0 & 0b00000011) | (canal<<2);
  2505   001A72  C017  F016         	movff	Conversion@canal,??_Conversion
  2506   001A76  90D8               	bcf	status,0,c
  2507   001A78  3616               	rlcf	??_Conversion^0,f,c
  2508   001A7A  90D8               	bcf	status,0,c
  2509   001A7C  3616               	rlcf	??_Conversion^0,f,c
  2510   001A7E  50C2               	movf	194,w,c	;volatile
  2511   001A80  0B03               	andlw	3
  2512   001A82  1016               	iorwf	??_Conversion^0,w,c
  2513   001A84  6EC2               	movwf	194,c	;volatile
  2514                           
  2515                           ;Lab4.c: 313: GO=1;
  2516   001A86  82C2               	bsf	4034,1,c	;volatile
  2517   001A88                     l330:
  2518   001A88  B2C2               	btfsc	4034,1,c	;volatile
  2519   001A8A  D7FE               	goto	l330
  2520                           
  2521                           ;Lab4.c: 315: return ADRES;
  2522   001A8C  CFC3 F014          	movff	4035,?_Conversion	;volatile
  2523   001A90  CFC4 F015          	movff	4036,?_Conversion+1	;volatile
  2524   001A94  0012               	return		;funcret
  2525   001A96                     __end_of_Conversion:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _ContarReal *****************
  2529 ;; Defined at:
  2530 ;;		line 248 in file "Lab4.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 3F/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2544 ;;      Params:         0       0       0       0       0       0       0       0       0
  2545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2546 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2547 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2548 ;;Total ram usage:        2 bytes
  2549 ;; Hardware stack levels used: 1
  2550 ;; Hardware stack levels required when called: 11
  2551 ;; This function calls:
  2552 ;;		___awdiv
  2553 ;;		___awmod
  2554 ;;		___wmul
  2555 ;;		_escenario2
  2556 ;;		_escenario3
  2557 ;;		_vaciar
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text11
  2564   000E94                     __ptext11:
  2565                           	callstack 0
  2566   000E94                     _ContarReal:
  2567                           	callstack 19
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;Lab4.c: 249: cantidad = (decena * 10) + unidad;
  2571                           
  2572                           ;incstack = 0
  2573   000E94  C03B  F014         	movff	_decena,___wmul@multiplier
  2574   000E98  C03C  F015         	movff	_decena+1,___wmul@multiplier+1
  2575   000E9C  0E00               	movlw	0
  2576   000E9E  6E17               	movwf	(___wmul@multiplicand+1)^0,c
  2577   000EA0  0E0A               	movlw	10
  2578   000EA2  6E16               	movwf	___wmul@multiplicand^0,c
  2579   000EA4  EC4B  F00D         	call	___wmul	;wreg free
  2580   000EA8  5039               	movf	_unidad^0,w,c
  2581   000EAA  2414               	addwf	?___wmul^0,w,c
  2582   000EAC  6E35               	movwf	_cantidad^0,c
  2583   000EAE  503A               	movf	(_unidad+1)^0,w,c
  2584   000EB0  2015               	addwfc	(?___wmul+1)^0,w,c
  2585   000EB2  6E36               	movwf	(_cantidad+1)^0,c
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;Lab4.c: 250: contador++;
  2589   000EB4  4A33               	infsnz	_contador^0,f,c
  2590   000EB6  2A34               	incf	(_contador+1)^0,f,c
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;Lab4.c: 251: cantidadResta = cantidad - contador +1;
  2594   000EB8  5033               	movf	_contador^0,w,c
  2595   000EBA  5C35               	subwf	_cantidad^0,w,c
  2596   000EBC  6E1C               	movwf	??_ContarReal^0,c
  2597   000EBE  5034               	movf	(_contador+1)^0,w,c
  2598   000EC0  5836               	subwfb	(_cantidad+1)^0,w,c
  2599   000EC2  6E1D               	movwf	(??_ContarReal+1)^0,c
  2600   000EC4  0E01               	movlw	1
  2601   000EC6  241C               	addwf	??_ContarReal^0,w,c
  2602   000EC8  6E31               	movwf	_cantidadResta^0,c
  2603   000ECA  0E00               	movlw	0
  2604   000ECC  201D               	addwfc	(??_ContarReal+1)^0,w,c
  2605   000ECE  6E32               	movwf	(_cantidadResta+1)^0,c
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;Lab4.c: 252: cantidadRestaUnidad =0b00110000 + cantidadResta%10;
  2609   000ED0  C031  F014         	movff	_cantidadResta,___awmod@dividend
  2610   000ED4  C032  F015         	movff	_cantidadResta+1,___awmod@dividend+1
  2611   000ED8  0E00               	movlw	0
  2612   000EDA  6E17               	movwf	(___awmod@divisor+1)^0,c
  2613   000EDC  0E0A               	movlw	10
  2614   000EDE  6E16               	movwf	___awmod@divisor^0,c
  2615   000EE0  EC32  F00A         	call	___awmod	;wreg free
  2616   000EE4  0E30               	movlw	48
  2617   000EE6  2414               	addwf	?___awmod^0,w,c
  2618   000EE8  6E2F               	movwf	_cantidadRestaUnidad^0,c
  2619   000EEA  0E00               	movlw	0
  2620   000EEC  2015               	addwfc	(?___awmod+1)^0,w,c
  2621   000EEE  6E30               	movwf	(_cantidadRestaUnidad+1)^0,c
  2622                           
  2623                           ;Lab4.c: 253: cantidadRestaDecena =0b00110000 + cantidadResta/10;
  2624   000EF0  C031  F014         	movff	_cantidadResta,___awdiv@dividend
  2625   000EF4  C032  F015         	movff	_cantidadResta+1,___awdiv@dividend+1
  2626   000EF8  0E00               	movlw	0
  2627   000EFA  6E17               	movwf	(___awdiv@divisor+1)^0,c
  2628   000EFC  0E0A               	movlw	10
  2629   000EFE  6E16               	movwf	___awdiv@divisor^0,c
  2630   000F00  EC70  F009         	call	___awdiv	;wreg free
  2631   000F04  0E30               	movlw	48
  2632   000F06  2414               	addwf	?___awdiv^0,w,c
  2633   000F08  6E2D               	movwf	_cantidadRestaDecena^0,c
  2634   000F0A  0E00               	movlw	0
  2635   000F0C  2015               	addwfc	(?___awdiv+1)^0,w,c
  2636   000F0E  6E2E               	movwf	(_cantidadRestaDecena+1)^0,c
  2637                           
  2638                           ;Lab4.c: 254: contadorUnidad = (contador-1)%10;
  2639   000F10  0EFF               	movlw	255
  2640   000F12  2433               	addwf	_contador^0,w,c
  2641   000F14  6E14               	movwf	___awmod@dividend^0,c
  2642   000F16  0EFF               	movlw	255
  2643   000F18  2034               	addwfc	(_contador+1)^0,w,c
  2644   000F1A  6E15               	movwf	(___awmod@dividend+1)^0,c
  2645   000F1C  0E00               	movlw	0
  2646   000F1E  6E17               	movwf	(___awmod@divisor+1)^0,c
  2647   000F20  0E0A               	movlw	10
  2648   000F22  6E16               	movwf	___awmod@divisor^0,c
  2649   000F24  EC32  F00A         	call	___awmod	;wreg free
  2650   000F28  C014  F02B         	movff	?___awmod,_contadorUnidad
  2651   000F2C  C015  F02C         	movff	?___awmod+1,_contadorUnidad+1
  2652                           
  2653                           ;Lab4.c: 255: contadorDecena = (contador-1)/10;
  2654   000F30  0EFF               	movlw	255
  2655   000F32  2433               	addwf	_contador^0,w,c
  2656   000F34  6E14               	movwf	___awdiv@dividend^0,c
  2657   000F36  0EFF               	movlw	255
  2658   000F38  2034               	addwfc	(_contador+1)^0,w,c
  2659   000F3A  6E15               	movwf	(___awdiv@dividend+1)^0,c
  2660   000F3C  0E00               	movlw	0
  2661   000F3E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  2662   000F40  0E0A               	movlw	10
  2663   000F42  6E16               	movwf	___awdiv@divisor^0,c
  2664   000F44  EC70  F009         	call	___awdiv	;wreg free
  2665   000F48  C014  F029         	movff	?___awdiv,_contadorDecena
  2666   000F4C  C015  F02A         	movff	?___awdiv+1,_contadorDecena+1
  2667                           
  2668                           ;Lab4.c: 257: LATD = contadorUnidad;
  2669   000F50  C02B  FF8C         	movff	_contadorUnidad,3980	;volatile
  2670                           
  2671                           ;Lab4.c: 258: LATE = color[contadorDecena];
  2672   000F54  5029               	movf	_contadorDecena^0,w,c
  2673   000F56  0D02               	mullw	2
  2674   000F58  50F3               	movf	243,w,c
  2675   000F5A  0F60               	addlw	low _color
  2676   000F5C  6ED9               	movwf	fsr2l,c
  2677   000F5E  6ADA               	clrf	fsr2h,c
  2678   000F60  50DF               	movf	indf2,w,c
  2679   000F62  6E8D               	movwf	141,c	;volatile
  2680                           
  2681                           ;Lab4.c: 259: escenario2();
  2682   000F64  ECE6  F008         	call	_escenario2	;wreg free
  2683                           
  2684                           ;Lab4.c: 260: _delay((unsigned long)((1000)*(1000000/4000.0)));
  2685   000F68  0E02               	movlw	2
  2686   000F6A  6E1D               	movwf	(??_ContarReal+1)^0,c
  2687   000F6C  0E45               	movlw	69
  2688   000F6E  6E1C               	movwf	??_ContarReal^0,c
  2689   000F70  0EAA               	movlw	170
  2690   000F72                     u2687:
  2691   000F72  2EE8               	decfsz	wreg,f,c
  2692   000F74  D7FE               	bra	u2687
  2693   000F76  2E1C               	decfsz	??_ContarReal^0,f,c
  2694   000F78  D7FC               	bra	u2687
  2695   000F7A  2E1D               	decfsz	(??_ContarReal+1)^0,f,c
  2696   000F7C  D7FA               	bra	u2687
  2697                           
  2698                           ;Lab4.c: 261: if(!cantidadResta) {
  2699   000F7E  5031               	movf	_cantidadResta^0,w,c
  2700   000F80  1032               	iorwf	(_cantidadResta+1)^0,w,c
  2701   000F82  A4D8               	btfss	status,2,c
  2702   000F84  0012               	return	
  2703                           
  2704                           ;Lab4.c: 262: vaciar();
  2705   000F86  ECB6  F00B         	call	_vaciar	;wreg free
  2706                           
  2707                           ;Lab4.c: 263: escenario3();
  2708   000F8A  EC8E  F00C         	call	_escenario3	;wreg free
  2709   000F8E  0012               	return		;funcret
  2710   000F90                     __end_of_ContarReal:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _vaciar *****************
  2714 ;; Defined at:
  2715 ;;		line 268 in file "Lab4.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;		None
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;		None
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      void 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2729 ;;      Params:         0       0       0       0       0       0       0       0       0
  2730 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2732 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2733 ;;Total ram usage:        0 bytes
  2734 ;; Hardware stack levels used: 1
  2735 ;; Hardware stack levels required when called: 7
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_ContarReal
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text12
  2744   00176C                     __ptext12:
  2745                           	callstack 0
  2746   00176C                     _vaciar:
  2747                           	callstack 22
  2748                           
  2749                           ;Lab4.c: 269: unidad = 0 ;
  2750                           
  2751                           ;incstack = 0
  2752   00176C  0E00               	movlw	0
  2753   00176E  6E3A               	movwf	(_unidad+1)^0,c
  2754   001770  0E00               	movlw	0
  2755   001772  6E39               	movwf	_unidad^0,c
  2756                           
  2757                           ;Lab4.c: 270: unidad = 0;
  2758   001774  0E00               	movlw	0
  2759   001776  6E3A               	movwf	(_unidad+1)^0,c
  2760   001778  0E00               	movlw	0
  2761   00177A  6E39               	movwf	_unidad^0,c
  2762                           
  2763                           ;Lab4.c: 271: cantidadRestaUnidad =0b00110000 + unidad;
  2764   00177C  0E30               	movlw	48
  2765   00177E  2439               	addwf	_unidad^0,w,c
  2766   001780  6E2F               	movwf	_cantidadRestaUnidad^0,c
  2767   001782  0E00               	movlw	0
  2768   001784  203A               	addwfc	(_unidad+1)^0,w,c
  2769   001786  6E30               	movwf	(_cantidadRestaUnidad+1)^0,c
  2770                           
  2771                           ;Lab4.c: 272: cantidadRestaDecena =0b00110000 + unidad;
  2772   001788  0E30               	movlw	48
  2773   00178A  2439               	addwf	_unidad^0,w,c
  2774   00178C  6E2D               	movwf	_cantidadRestaDecena^0,c
  2775   00178E  0E00               	movlw	0
  2776   001790  203A               	addwfc	(_unidad+1)^0,w,c
  2777   001792  6E2E               	movwf	(_cantidadRestaDecena+1)^0,c
  2778                           
  2779                           ;Lab4.c: 273: LATD = 0;
  2780   001794  0E00               	movlw	0
  2781   001796  6E8C               	movwf	140,c	;volatile
  2782                           
  2783                           ;Lab4.c: 274: LATE = color[0];
  2784   001798  C060  FF8D         	movff	_color,3981	;volatile
  2785                           
  2786                           ;Lab4.c: 275: contador =0;
  2787   00179C  0E00               	movlw	0
  2788   00179E  6E34               	movwf	(_contador+1)^0,c
  2789   0017A0  0E00               	movlw	0
  2790   0017A2  6E33               	movwf	_contador^0,c
  2791                           
  2792                           ;Lab4.c: 276: digito = 1;
  2793   0017A4  0E00               	movlw	0
  2794   0017A6  6E44               	movwf	(_digito+1)^0,c
  2795   0017A8  0E01               	movlw	1
  2796   0017AA  6E43               	movwf	_digito^0,c
  2797   0017AC  0012               	return		;funcret
  2798   0017AE                     __end_of_vaciar:
  2799                           	callstack 0
  2800                           
  2801 ;; *************** function _escenario3 *****************
  2802 ;; Defined at:
  2803 ;;		line 188 in file "Lab4.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2817 ;;      Params:         0       0       0       0       0       0       0       0       0
  2818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2820 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2821 ;;Total ram usage:        0 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; Hardware stack levels required when called: 10
  2824 ;; This function calls:
  2825 ;;		_Lcd_Clear
  2826 ;;		_Lcd_NoBlink
  2827 ;;		_Lcd_Set_Cursor
  2828 ;;		_Lcd_Write_String
  2829 ;; This function is called by:
  2830 ;;		_ContarReal
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text13
  2835   00191C                     __ptext13:
  2836                           	callstack 0
  2837   00191C                     _escenario3:
  2838                           	callstack 19
  2839                           
  2840                           ;Lab4.c: 189: menu=3;
  2841                           
  2842                           ;incstack = 0
  2843   00191C  0E00               	movlw	0
  2844   00191E  6E48               	movwf	(_menu+1)^0,c
  2845   001920  0E03               	movlw	3
  2846   001922  6E47               	movwf	_menu^0,c
  2847                           
  2848                           ;Lab4.c: 190: Lcd_Clear();
  2849   001924  ECB5  F00D         	call	_Lcd_Clear	;wreg free
  2850                           
  2851                           ;Lab4.c: 191: Lcd_NoBlink();
  2852   001928  ECAE  F00D         	call	_Lcd_NoBlink	;wreg free
  2853                           
  2854                           ;Lab4.c: 192: Lcd_Set_Cursor(1, 1);
  2855   00192C  0E01               	movlw	1
  2856   00192E  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  2857   001930  0E01               	movlw	1
  2858   001932  EC46  F008         	call	_Lcd_Set_Cursor
  2859                           
  2860                           ;Lab4.c: 193: Lcd_Write_String("Cuenta finalizada");
  2861   001936  0E33               	movlw	low STR_11
  2862   001938  6E18               	movwf	Lcd_Write_String@a^0,c
  2863   00193A  EC18  F00C         	call	_Lcd_Write_String	;wreg free
  2864                           
  2865                           ;Lab4.c: 194: Lcd_Set_Cursor(2, 13);
  2866   00193E  0E0D               	movlw	13
  2867   001940  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  2868   001942  0E02               	movlw	2
  2869   001944  EC46  F008         	call	_Lcd_Set_Cursor
  2870                           
  2871                           ;Lab4.c: 195: Lcd_Write_String("A:OK");
  2872   001948  0EC0               	movlw	low STR_12
  2873   00194A  6E18               	movwf	Lcd_Write_String@a^0,c
  2874   00194C  EC18  F00C         	call	_Lcd_Write_String	;wreg free
  2875   001950  0012               	return		;funcret
  2876   001952                     __end_of_escenario3:
  2877                           	callstack 0
  2878                           
  2879 ;; *************** function _escenario2 *****************
  2880 ;; Defined at:
  2881 ;;		line 166 in file "Lab4.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2895 ;;      Params:         0       0       0       0       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2898 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 10
  2902 ;; This function calls:
  2903 ;;		_Lcd_Clear
  2904 ;;		_Lcd_NoBlink
  2905 ;;		_Lcd_Set_Cursor
  2906 ;;		_Lcd_Write_Char
  2907 ;;		_Lcd_Write_String
  2908 ;; This function is called by:
  2909 ;;		_ContarReal
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text14
  2914   0011CC                     __ptext14:
  2915                           	callstack 0
  2916   0011CC                     _escenario2:
  2917                           	callstack 19
  2918                           
  2919                           ;Lab4.c: 167: menu=2;
  2920                           
  2921                           ;incstack = 0
  2922   0011CC  0E00               	movlw	0
  2923   0011CE  6E48               	movwf	(_menu+1)^0,c
  2924   0011D0  0E02               	movlw	2
  2925   0011D2  6E47               	movwf	_menu^0,c
  2926                           
  2927                           ;Lab4.c: 168: mostrar = 1;
  2928   0011D4  0E00               	movlw	0
  2929   0011D6  6E38               	movwf	(_mostrar+1)^0,c
  2930   0011D8  0E01               	movlw	1
  2931   0011DA  6E37               	movwf	_mostrar^0,c
  2932                           
  2933                           ;Lab4.c: 169: Lcd_Clear();
  2934   0011DC  ECB5  F00D         	call	_Lcd_Clear	;wreg free
  2935                           
  2936                           ;Lab4.c: 170: Lcd_NoBlink();
  2937   0011E0  ECAE  F00D         	call	_Lcd_NoBlink	;wreg free
  2938                           
  2939                           ;Lab4.c: 171: Lcd_Set_Cursor(1, 1);
  2940   0011E4  0E01               	movlw	1
  2941   0011E6  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  2942   0011E8  0E01               	movlw	1
  2943   0011EA  EC46  F008         	call	_Lcd_Set_Cursor
  2944                           
  2945                           ;Lab4.c: 172: Lcd_Write_String("Faltante:");
  2946   0011EE  0E9A               	movlw	low STR_7
  2947   0011F0  6E18               	movwf	Lcd_Write_String@a^0,c
  2948   0011F2  EC18  F00C         	call	_Lcd_Write_String	;wreg free
  2949                           
  2950                           ;Lab4.c: 173: Lcd_Write_Char(cantidadRestaDecena);
  2951   0011F6  502D               	movf	_cantidadRestaDecena^0,w,c
  2952   0011F8  EC56  F00C         	call	_Lcd_Write_Char
  2953                           
  2954                           ;Lab4.c: 174: Lcd_Write_Char(cantidadRestaUnidad);
  2955   0011FC  502F               	movf	_cantidadRestaUnidad^0,w,c
  2956   0011FE  EC56  F00C         	call	_Lcd_Write_Char
  2957                           
  2958                           ;Lab4.c: 175: Lcd_Set_Cursor(1, 14);
  2959   001202  0E0E               	movlw	14
  2960   001204  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  2961   001206  0E01               	movlw	1
  2962   001208  EC46  F008         	call	_Lcd_Set_Cursor
  2963                           
  2964                           ;Lab4.c: 176: Lcd_Write_String("C=");
  2965   00120C  0EC9               	movlw	low STR_8
  2966   00120E  6E18               	movwf	Lcd_Write_String@a^0,c
  2967   001210  EC18  F00C         	call	_Lcd_Write_String	;wreg free
  2968                           
  2969                           ;Lab4.c: 177: Lcd_Write_Char(4);
  2970   001214  0E04               	movlw	4
  2971   001216  EC56  F00C         	call	_Lcd_Write_Char
  2972                           
  2973                           ;Lab4.c: 178: Lcd_Set_Cursor(2, 1);
  2974   00121A  0E01               	movlw	1
  2975   00121C  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  2976   00121E  0E02               	movlw	2
  2977   001220  EC46  F008         	call	_Lcd_Set_Cursor
  2978                           
  2979                           ;Lab4.c: 179: Lcd_Write_String("Objetivo:");
  2980   001224  0EA4               	movlw	low STR_9
  2981   001226  6E18               	movwf	Lcd_Write_String@a^0,c
  2982   001228  EC18  F00C         	call	_Lcd_Write_String	;wreg free
  2983                           
  2984                           ;Lab4.c: 180: Lcd_Write_Char(0b00110000 + decena);
  2985   00122C  503B               	movf	_decena^0,w,c
  2986   00122E  0F30               	addlw	48
  2987   001230  EC56  F00C         	call	_Lcd_Write_Char
  2988                           
  2989                           ;Lab4.c: 181: Lcd_Write_Char(0b00110000 + unidad);
  2990   001234  5039               	movf	_unidad^0,w,c
  2991   001236  0F30               	addlw	48
  2992   001238  EC56  F00C         	call	_Lcd_Write_Char
  2993                           
  2994                           ;Lab4.c: 182: Lcd_Set_Cursor(2, 14);
  2995   00123C  0E0E               	movlw	14
  2996   00123E  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  2997   001240  0E02               	movlw	2
  2998   001242  EC46  F008         	call	_Lcd_Set_Cursor
  2999                           
  3000                           ;Lab4.c: 183: Lcd_Write_String("#=X");
  3001   001246  0EC5               	movlw	low STR_10
  3002   001248  6E18               	movwf	Lcd_Write_String@a^0,c
  3003   00124A  EC18  F00C         	call	_Lcd_Write_String	;wreg free
  3004                           
  3005                           ;Lab4.c: 184: Lcd_Write_Char(3);
  3006   00124E  0E03               	movlw	3
  3007   001250  EC56  F00C         	call	_Lcd_Write_Char
  3008   001254  0012               	return		;funcret
  3009   001256                     __end_of_escenario2:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _Lcd_Write_String *****************
  3013 ;; Defined at:
  3014 ;;		line 105 in file "lcd.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  a               1   23[COMRAM] PTR const unsigned char 
  3017 ;;		 -> STR_14(12), STR_13(10), STR_12(5), STR_11(18), 
  3018 ;;		 -> STR_10(4), STR_9(10), STR_8(3), STR_7(10), 
  3019 ;;		 -> STR_6(8), STR_5(17), STR_3(12), STR_2(11), 
  3020 ;;		 -> STR_1(15), 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  i               2   25[COMRAM] int 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3032 ;;      Params:         1       0       0       0       0       0       0       0       0
  3033 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3034 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3035 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3036 ;;Total ram usage:        4 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; Hardware stack levels required when called: 9
  3039 ;; This function calls:
  3040 ;;		_Lcd_Write_Char
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;;		_escenario1
  3044 ;;		_escenario2
  3045 ;;		_escenario3
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text15
  3050   001830                     __ptext15:
  3051                           	callstack 0
  3052   001830                     _Lcd_Write_String:
  3053                           	callstack 20
  3054                           
  3055                           ;lcd.c: 107: int i;;lcd.c: 108: for(i=0;a[i]!='\0';i++)
  3056                           
  3057                           ;incstack = 0
  3058   001830  0E00               	movlw	0
  3059   001832  6E1B               	movwf	(Lcd_Write_String@i+1)^0,c
  3060   001834  0E00               	movlw	0
  3061   001836  6E1A               	movwf	Lcd_Write_String@i^0,c
  3062   001838  D00D               	goto	l3365
  3063   00183A                     l3361:
  3064                           
  3065                           ;lcd.c: 109: Lcd_Write_Char(a[i]);
  3066   00183A  5018               	movf	Lcd_Write_String@a^0,w,c
  3067   00183C  241A               	addwf	Lcd_Write_String@i^0,w,c
  3068   00183E  6E19               	movwf	??_Lcd_Write_String^0,c
  3069   001840  C019  FFF6         	movff	??_Lcd_Write_String,tblptrl
  3070   001844                     	if	1	;There is more than 1 active tblptr byte
  3071   001844  0E08               	movlw	high __smallconst
  3072   001846  6EF7               	movwf	tblptrh,c
  3073   001848                     	endif
  3074   001848                     	if	0	;tblptru may be non-zero
  3075   001848                     	endif
  3076   001848                     	if	0	;tblptru may be non-zero
  3077   001848                     	endif
  3078   001848  0008               	tblrd		*
  3079   00184A  50F5               	movf	tablat,w,c
  3080   00184C  EC56  F00C         	call	_Lcd_Write_Char
  3081   001850  4A1A               	infsnz	Lcd_Write_String@i^0,f,c
  3082   001852  2A1B               	incf	(Lcd_Write_String@i+1)^0,f,c
  3083   001854                     l3365:
  3084   001854  5018               	movf	Lcd_Write_String@a^0,w,c
  3085   001856  241A               	addwf	Lcd_Write_String@i^0,w,c
  3086   001858  6E19               	movwf	??_Lcd_Write_String^0,c
  3087   00185A  C019  FFF6         	movff	??_Lcd_Write_String,tblptrl
  3088   00185E                     	if	1	;There is more than 1 active tblptr byte
  3089   00185E  0E08               	movlw	high __smallconst
  3090   001860  6EF7               	movwf	tblptrh,c
  3091   001862                     	endif
  3092   001862                     	if	0	;tblptru may be non-zero
  3093   001862                     	endif
  3094   001862                     	if	0	;tblptru may be non-zero
  3095   001862                     	endif
  3096   001862  0008               	tblrd		*
  3097   001864  50F5               	movf	tablat,w,c
  3098   001866  0900               	iorlw	0
  3099   001868  B4D8               	btfsc	status,2,c
  3100   00186A  0012               	return	
  3101   00186C  D7E6               	goto	l3361
  3102   00186E                     __end_of_Lcd_Write_String:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _Lcd_Write_Char *****************
  3106 ;; Defined at:
  3107 ;;		line 89 in file "lcd.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  a               1    wreg     unsigned char 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  a               1   22[COMRAM] unsigned char 
  3112 ;;  y               1   21[COMRAM] unsigned char 
  3113 ;;  temp            1   20[COMRAM] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0
  3124 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3126 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3127 ;;Total ram usage:        3 bytes
  3128 ;; Hardware stack levels used: 1
  3129 ;; Hardware stack levels required when called: 8
  3130 ;; This function calls:
  3131 ;;		_Lcd_Port
  3132 ;; This function is called by:
  3133 ;;		_Lcd_Write_String
  3134 ;;		_Lcd_CGRAM_CreateChar
  3135 ;;		_main
  3136 ;;		_escenario1
  3137 ;;		_escenario2
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text16
  3142   0018AC                     __ptext16:
  3143                           	callstack 0
  3144   0018AC                     _Lcd_Write_Char:
  3145                           	callstack 20
  3146                           
  3147                           ;incstack = 0
  3148                           ;Lcd_Write_Char@a stored from wreg
  3149   0018AC  6E17               	movwf	Lcd_Write_Char@a^0,c
  3150                           
  3151                           ;lcd.c: 91: char temp,y;;lcd.c: 92: temp = a&0x0F;
  3152   0018AE  5017               	movf	Lcd_Write_Char@a^0,w,c
  3153   0018B0  0B0F               	andlw	15
  3154   0018B2  6E15               	movwf	Lcd_Write_Char@temp^0,c
  3155                           
  3156                           ;lcd.c: 93: y = a&0xF0;
  3157   0018B4  5017               	movf	Lcd_Write_Char@a^0,w,c
  3158   0018B6  0BF0               	andlw	240
  3159   0018B8  6E16               	movwf	Lcd_Write_Char@y^0,c
  3160                           
  3161                           ;lcd.c: 94: LATAbits.LA3 = 1;
  3162   0018BA  8689               	bsf	137,3,c	;volatile
  3163                           
  3164                           ;lcd.c: 95: Lcd_Port(y>>4);
  3165   0018BC  3816               	swapf	Lcd_Write_Char@y^0,w,c
  3166   0018BE  0B0F               	andlw	15
  3167   0018C0  ECF8  F00C         	call	_Lcd_Port
  3168                           
  3169                           ;lcd.c: 96: LATAbits.LA4 = 1;
  3170   0018C4  8889               	bsf	137,4,c	;volatile
  3171                           
  3172                           ;lcd.c: 97: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3173   0018C6  0E03               	movlw	3
  3174   0018C8                     u2697:
  3175   0018C8  2EE8               	decfsz	wreg,f,c
  3176   0018CA  D7FE               	bra	u2697
  3177   0018CC  0000               	nop	
  3178                           
  3179                           ;lcd.c: 98: LATAbits.LA4 = 0;
  3180   0018CE  9889               	bcf	137,4,c	;volatile
  3181                           
  3182                           ;lcd.c: 99: Lcd_Port(temp);
  3183   0018D0  5015               	movf	Lcd_Write_Char@temp^0,w,c
  3184   0018D2  ECF8  F00C         	call	_Lcd_Port
  3185                           
  3186                           ;lcd.c: 100: LATAbits.LA4 = 1;
  3187   0018D6  8889               	bsf	137,4,c	;volatile
  3188                           
  3189                           ;lcd.c: 101: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3190   0018D8  0E03               	movlw	3
  3191   0018DA                     u2707:
  3192   0018DA  2EE8               	decfsz	wreg,f,c
  3193   0018DC  D7FE               	bra	u2707
  3194   0018DE  0000               	nop	
  3195                           
  3196                           ;lcd.c: 102: LATAbits.LA4 = 0;
  3197   0018E0  9889               	bcf	137,4,c	;volatile
  3198   0018E2  0012               	return		;funcret
  3199   0018E4                     __end_of_Lcd_Write_Char:
  3200                           	callstack 0
  3201                           
  3202 ;; *************** function _Lcd_Set_Cursor *****************
  3203 ;; Defined at:
  3204 ;;		line 27 in file "lcd.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  a               1    wreg     unsigned char 
  3207 ;;  b               1   21[COMRAM] unsigned char 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  a               1   22[COMRAM] unsigned char 
  3210 ;;  temp            1   25[COMRAM] unsigned char 
  3211 ;;  y               1   24[COMRAM] unsigned char 
  3212 ;;  z               1   23[COMRAM] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      void 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3222 ;;      Params:         1       0       0       0       0       0       0       0       0
  3223 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3225 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3226 ;;Total ram usage:        5 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; Hardware stack levels required when called: 9
  3229 ;; This function calls:
  3230 ;;		_Lcd_Cmd
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;;		_escenario1
  3234 ;;		_escenario2
  3235 ;;		_escenario3
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text17
  3240   00108C                     __ptext17:
  3241                           	callstack 0
  3242   00108C                     _Lcd_Set_Cursor:
  3243                           	callstack 20
  3244                           
  3245                           ;incstack = 0
  3246                           ;Lcd_Set_Cursor@a stored from wreg
  3247   00108C  6E17               	movwf	Lcd_Set_Cursor@a^0,c
  3248                           
  3249                           ;lcd.c: 29: char temp,z,y;;lcd.c: 30: if(a == 1)
  3250   00108E  0417               	decf	Lcd_Set_Cursor@a^0,w,c
  3251   001090  A4D8               	btfss	status,2,c
  3252   001092  D010               	goto	l3335
  3253                           
  3254                           ;lcd.c: 31: {;lcd.c: 32: temp = 0x80 + b - 1;
  3255   001094  5016               	movf	Lcd_Set_Cursor@b^0,w,c
  3256   001096  0F7F               	addlw	127
  3257   001098  6E1A               	movwf	Lcd_Set_Cursor@temp^0,c
  3258                           
  3259                           ;lcd.c: 33: z = temp>>4;
  3260   00109A  381A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3261   00109C  0B0F               	andlw	15
  3262   00109E  6E18               	movwf	Lcd_Set_Cursor@z^0,c
  3263                           
  3264                           ;lcd.c: 34: y = temp & 0x0F;
  3265   0010A0  501A               	movf	Lcd_Set_Cursor@temp^0,w,c
  3266   0010A2  0B0F               	andlw	15
  3267   0010A4  6E19               	movwf	Lcd_Set_Cursor@y^0,c
  3268                           
  3269                           ;lcd.c: 35: Lcd_Cmd(z);
  3270   0010A6  5018               	movf	Lcd_Set_Cursor@z^0,w,c
  3271   0010A8  EC81  F00D         	call	_Lcd_Cmd
  3272                           
  3273                           ;lcd.c: 36: Lcd_Cmd(y);
  3274   0010AC  5019               	movf	Lcd_Set_Cursor@y^0,w,c
  3275   0010AE  EC81  F00D         	call	_Lcd_Cmd
  3276                           
  3277                           ;lcd.c: 37: }
  3278   0010B2  0012               	return	
  3279   0010B4                     l3335:
  3280                           
  3281                           ;lcd.c: 38: else if(a == 2)
  3282   0010B4  0E02               	movlw	2
  3283   0010B6  1817               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3284   0010B8  A4D8               	btfss	status,2,c
  3285   0010BA  D010               	goto	l3343
  3286                           
  3287                           ;lcd.c: 39: {;lcd.c: 40: temp = 0xC0 + b - 1;
  3288   0010BC  5016               	movf	Lcd_Set_Cursor@b^0,w,c
  3289   0010BE  0FBF               	addlw	191
  3290   0010C0  6E1A               	movwf	Lcd_Set_Cursor@temp^0,c
  3291                           
  3292                           ;lcd.c: 41: z = temp>>4;
  3293   0010C2  381A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3294   0010C4  0B0F               	andlw	15
  3295   0010C6  6E18               	movwf	Lcd_Set_Cursor@z^0,c
  3296                           
  3297                           ;lcd.c: 42: y = temp & 0x0F;
  3298   0010C8  501A               	movf	Lcd_Set_Cursor@temp^0,w,c
  3299   0010CA  0B0F               	andlw	15
  3300   0010CC  6E19               	movwf	Lcd_Set_Cursor@y^0,c
  3301                           
  3302                           ;lcd.c: 43: Lcd_Cmd(z);
  3303   0010CE  5018               	movf	Lcd_Set_Cursor@z^0,w,c
  3304   0010D0  EC81  F00D         	call	_Lcd_Cmd
  3305                           
  3306                           ;lcd.c: 44: Lcd_Cmd(y);
  3307   0010D4  5019               	movf	Lcd_Set_Cursor@y^0,w,c
  3308   0010D6  EC81  F00D         	call	_Lcd_Cmd
  3309                           
  3310                           ;lcd.c: 45: }
  3311   0010DA  0012               	return	
  3312   0010DC                     l3343:
  3313                           
  3314                           ;lcd.c: 46: else if(a == 3)
  3315   0010DC  0E03               	movlw	3
  3316   0010DE  1817               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3317   0010E0  A4D8               	btfss	status,2,c
  3318   0010E2  D010               	goto	l3351
  3319                           
  3320                           ;lcd.c: 47: {;lcd.c: 48: temp = 0x94 + b - 1;
  3321   0010E4  5016               	movf	Lcd_Set_Cursor@b^0,w,c
  3322   0010E6  0F93               	addlw	147
  3323   0010E8  6E1A               	movwf	Lcd_Set_Cursor@temp^0,c
  3324                           
  3325                           ;lcd.c: 49: z = temp>>4;
  3326   0010EA  381A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3327   0010EC  0B0F               	andlw	15
  3328   0010EE  6E18               	movwf	Lcd_Set_Cursor@z^0,c
  3329                           
  3330                           ;lcd.c: 50: y = temp & 0x0F;
  3331   0010F0  501A               	movf	Lcd_Set_Cursor@temp^0,w,c
  3332   0010F2  0B0F               	andlw	15
  3333   0010F4  6E19               	movwf	Lcd_Set_Cursor@y^0,c
  3334                           
  3335                           ;lcd.c: 51: Lcd_Cmd(z);
  3336   0010F6  5018               	movf	Lcd_Set_Cursor@z^0,w,c
  3337   0010F8  EC81  F00D         	call	_Lcd_Cmd
  3338                           
  3339                           ;lcd.c: 52: Lcd_Cmd(y);
  3340   0010FC  5019               	movf	Lcd_Set_Cursor@y^0,w,c
  3341   0010FE  EC81  F00D         	call	_Lcd_Cmd
  3342                           
  3343                           ;lcd.c: 53: }
  3344   001102  0012               	return	
  3345   001104                     l3351:
  3346                           
  3347                           ;lcd.c: 54: else if(a == 4)
  3348   001104  0E04               	movlw	4
  3349   001106  1817               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3350   001108  A4D8               	btfss	status,2,c
  3351   00110A  0012               	return	
  3352                           
  3353                           ;lcd.c: 55: {;lcd.c: 56: temp = 0xD4 + b - 1;
  3354   00110C  5016               	movf	Lcd_Set_Cursor@b^0,w,c
  3355   00110E  0FD3               	addlw	211
  3356   001110  6E1A               	movwf	Lcd_Set_Cursor@temp^0,c
  3357                           
  3358                           ;lcd.c: 57: z = temp>>4;
  3359   001112  381A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3360   001114  0B0F               	andlw	15
  3361   001116  6E18               	movwf	Lcd_Set_Cursor@z^0,c
  3362                           
  3363                           ;lcd.c: 58: y = temp & 0x0F;
  3364   001118  501A               	movf	Lcd_Set_Cursor@temp^0,w,c
  3365   00111A  0B0F               	andlw	15
  3366   00111C  6E19               	movwf	Lcd_Set_Cursor@y^0,c
  3367                           
  3368                           ;lcd.c: 59: Lcd_Cmd(z);
  3369   00111E  5018               	movf	Lcd_Set_Cursor@z^0,w,c
  3370   001120  EC81  F00D         	call	_Lcd_Cmd
  3371                           
  3372                           ;lcd.c: 60: Lcd_Cmd(y);
  3373   001124  5019               	movf	Lcd_Set_Cursor@y^0,w,c
  3374   001126  EC81  F00D         	call	_Lcd_Cmd
  3375   00112A  0012               	return	
  3376   00112C                     __end_of_Lcd_Set_Cursor:
  3377                           	callstack 0
  3378                           
  3379 ;; *************** function _Lcd_NoBlink *****************
  3380 ;; Defined at:
  3381 ;;		line 130 in file "lcd.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3395 ;;      Params:         0       0       0       0       0       0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3398 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3399 ;;Total ram usage:        0 bytes
  3400 ;; Hardware stack levels used: 1
  3401 ;; Hardware stack levels required when called: 9
  3402 ;; This function calls:
  3403 ;;		_Lcd_Cmd
  3404 ;; This function is called by:
  3405 ;;		_main
  3406 ;;		_escenario2
  3407 ;;		_escenario3
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text18
  3412   001B5C                     __ptext18:
  3413                           	callstack 0
  3414   001B5C                     _Lcd_NoBlink:
  3415                           	callstack 21
  3416                           
  3417                           ;lcd.c: 132: Lcd_Cmd(0x00);
  3418                           
  3419                           ;incstack = 0
  3420   001B5C  0E00               	movlw	0
  3421   001B5E  EC81  F00D         	call	_Lcd_Cmd
  3422                           
  3423                           ;lcd.c: 133: Lcd_Cmd(0x0C);
  3424   001B62  0E0C               	movlw	12
  3425   001B64  EC81  F00D         	call	_Lcd_Cmd
  3426   001B68  0012               	return		;funcret
  3427   001B6A                     __end_of_Lcd_NoBlink:
  3428                           	callstack 0
  3429                           
  3430 ;; *************** function _Lcd_Clear *****************
  3431 ;; Defined at:
  3432 ;;		line 21 in file "lcd.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  1    wreg      void 
  3439 ;; Registers used:
  3440 ;;		wreg, status,2, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3446 ;;      Params:         0       0       0       0       0       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3449 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3450 ;;Total ram usage:        0 bytes
  3451 ;; Hardware stack levels used: 1
  3452 ;; Hardware stack levels required when called: 9
  3453 ;; This function calls:
  3454 ;;		_Lcd_Cmd
  3455 ;; This function is called by:
  3456 ;;		_Lcd_Init
  3457 ;;		_main
  3458 ;;		_escenario1
  3459 ;;		_escenario2
  3460 ;;		_escenario3
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text19
  3465   001B6A                     __ptext19:
  3466                           	callstack 0
  3467   001B6A                     _Lcd_Clear:
  3468                           	callstack 20
  3469                           
  3470                           ;lcd.c: 23: Lcd_Cmd(0);
  3471                           
  3472                           ;incstack = 0
  3473   001B6A  0E00               	movlw	0
  3474   001B6C  EC81  F00D         	call	_Lcd_Cmd
  3475                           
  3476                           ;lcd.c: 24: Lcd_Cmd(1);
  3477   001B70  0E01               	movlw	1
  3478   001B72  EC81  F00D         	call	_Lcd_Cmd
  3479   001B76  0012               	return		;funcret
  3480   001B78                     __end_of_Lcd_Clear:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function _Lcd_Cmd *****************
  3484 ;; Defined at:
  3485 ;;		line 12 in file "lcd.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  a               1    wreg     unsigned char 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  a               1   20[COMRAM] unsigned char 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3499 ;;      Params:         0       0       0       0       0       0       0       0       0
  3500 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3502 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3503 ;;Total ram usage:        1 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; Hardware stack levels required when called: 8
  3506 ;; This function calls:
  3507 ;;		_Lcd_Port
  3508 ;; This function is called by:
  3509 ;;		_Lcd_Clear
  3510 ;;		_Lcd_Set_Cursor
  3511 ;;		_Lcd_Init
  3512 ;;		_Lcd_Blink
  3513 ;;		_Lcd_NoBlink
  3514 ;;		_Lcd_CGRAM_Init
  3515 ;;		_Lcd_CGRAM_Close
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text20
  3520   001B02                     __ptext20:
  3521                           	callstack 0
  3522   001B02                     _Lcd_Cmd:
  3523                           	callstack 20
  3524                           
  3525                           ;incstack = 0
  3526                           ;Lcd_Cmd@a stored from wreg
  3527   001B02  6E15               	movwf	Lcd_Cmd@a^0,c
  3528                           
  3529                           ;lcd.c: 14: LATAbits.LA3 = 0;
  3530   001B04  9689               	bcf	137,3,c	;volatile
  3531                           
  3532                           ;lcd.c: 15: Lcd_Port(a);
  3533   001B06  5015               	movf	Lcd_Cmd@a^0,w,c
  3534   001B08  ECF8  F00C         	call	_Lcd_Port
  3535                           
  3536                           ;lcd.c: 16: LATAbits.LA4 = 1;
  3537   001B0C  8889               	bsf	137,4,c	;volatile
  3538                           
  3539                           ;lcd.c: 17: _delay((unsigned long)((4)*(1000000/4000.0)));
  3540   001B0E  0EC8               	movlw	200
  3541   001B10                     u2717:
  3542   001B10  D000               	nop2	
  3543   001B12  2EE8               	decfsz	wreg,f,c
  3544   001B14  D7FD               	bra	u2717
  3545                           
  3546                           ;lcd.c: 18: LATAbits.LA4 = 0;
  3547   001B16  9889               	bcf	137,4,c	;volatile
  3548   001B18  0012               	return		;funcret
  3549   001B1A                     __end_of_Lcd_Cmd:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _Lcd_Port *****************
  3553 ;; Defined at:
  3554 ;;		line 4 in file "lcd.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  a               1    wreg     unsigned char 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  a               1   19[COMRAM] unsigned char 
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3568 ;;      Params:         0       0       0       0       0       0       0       0       0
  3569 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3571 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3572 ;;Total ram usage:        1 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; Hardware stack levels required when called: 7
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_Lcd_Cmd
  3579 ;;		_Lcd_Init
  3580 ;;		_Lcd_Write_Char
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text21
  3585   0019F0                     __ptext21:
  3586                           	callstack 0
  3587   0019F0                     _Lcd_Port:
  3588                           	callstack 20
  3589                           
  3590                           ;incstack = 0
  3591                           ;Lcd_Port@a stored from wreg
  3592   0019F0  6E14               	movwf	Lcd_Port@a^0,c
  3593                           
  3594                           ;lcd.c: 6: (a & 1) ? (LATDbits.LD4 = 1) : (LATDbits.LD4 = 0);
  3595   0019F2  A014               	btfss	Lcd_Port@a^0,0,c
  3596   0019F4  D002               	goto	l14
  3597   0019F6  888C               	bsf	140,4,c	;volatile
  3598   0019F8  D001               	goto	l3283
  3599   0019FA                     l14:
  3600   0019FA  988C               	bcf	140,4,c	;volatile
  3601   0019FC                     l3283:
  3602                           
  3603                           ;lcd.c: 7: (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  3604   0019FC  A214               	btfss	Lcd_Port@a^0,1,c
  3605   0019FE  D002               	goto	l18
  3606   001A00  8A8C               	bsf	140,5,c	;volatile
  3607   001A02  D001               	goto	l3287
  3608   001A04                     l18:
  3609   001A04  9A8C               	bcf	140,5,c	;volatile
  3610   001A06                     l3287:
  3611                           
  3612                           ;lcd.c: 8: (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  3613   001A06  A414               	btfss	Lcd_Port@a^0,2,c
  3614   001A08  D002               	goto	l22
  3615   001A0A  8C8C               	bsf	140,6,c	;volatile
  3616   001A0C  D001               	goto	l3291
  3617   001A0E                     l22:
  3618   001A0E  9C8C               	bcf	140,6,c	;volatile
  3619   001A10                     l3291:
  3620                           
  3621                           ;lcd.c: 9: (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  3622   001A10  A614               	btfss	Lcd_Port@a^0,3,c
  3623   001A12  D002               	goto	l26
  3624   001A14  8E8C               	bsf	140,7,c	;volatile
  3625   001A16  0012               	return	
  3626   001A18                     l26:
  3627   001A18  9E8C               	bcf	140,7,c	;volatile
  3628   001A1A  0012               	return		;funcret
  3629   001A1C                     __end_of_Lcd_Port:
  3630                           	callstack 0
  3631                           
  3632 ;; *************** function ___wmul *****************
  3633 ;; Defined at:
  3634 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/Umul16.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  multiplier      2   19[COMRAM] unsigned int 
  3637 ;;  multiplicand    2   21[COMRAM] unsigned int 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  product         2   23[COMRAM] unsigned int 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  2   19[COMRAM] unsigned int 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0, prodl, prodh
  3644 ;; Tracked objects:
  3645 ;;		On entry : 3F/0
  3646 ;;		On exit  : 3F/0
  3647 ;;		Unchanged: 3F/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3649 ;;      Params:         4       0       0       0       0       0       0       0       0
  3650 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3652 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3653 ;;Total ram usage:        6 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 7
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_ContarReal
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text22
  3664   001A96                     __ptext22:
  3665                           	callstack 0
  3666   001A96                     ___wmul:
  3667                           	callstack 22
  3668                           
  3669                           ; BSR set to: 0
  3670                           
  3671                           ;incstack = 0
  3672   001A96  5014               	movf	___wmul@multiplier^0,w,c
  3673   001A98  0216               	mulwf	___wmul@multiplicand^0,c
  3674   001A9A  CFF3 F018          	movff	prodl,___wmul@product
  3675   001A9E  CFF4 F019          	movff	prodh,___wmul@product+1
  3676   001AA2  5014               	movf	___wmul@multiplier^0,w,c
  3677   001AA4  0217               	mulwf	(___wmul@multiplicand+1)^0,c
  3678   001AA6  50F3               	movf	243,w,c
  3679   001AA8  2619               	addwf	(___wmul@product+1)^0,f,c
  3680   001AAA  5015               	movf	(___wmul@multiplier+1)^0,w,c
  3681   001AAC  0216               	mulwf	___wmul@multiplicand^0,c
  3682   001AAE  50F3               	movf	243,w,c
  3683   001AB0  2619               	addwf	(___wmul@product+1)^0,f,c
  3684                           
  3685                           ; BSR set to: 0
  3686   001AB2  C018  F014         	movff	___wmul@product,?___wmul
  3687   001AB6  C019  F015         	movff	___wmul@product+1,?___wmul+1
  3688                           
  3689                           ; BSR set to: 0
  3690   001ABA  0012               	return		;funcret
  3691   001ABC                     __end_of___wmul:
  3692                           	callstack 0
  3693                           
  3694 ;; *************** function ___awmod *****************
  3695 ;; Defined at:
  3696 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awmod.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  dividend        2   19[COMRAM] int 
  3699 ;;  divisor         2   21[COMRAM] int 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  sign            1   24[COMRAM] unsigned char 
  3702 ;;  counter         1   23[COMRAM] unsigned char 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  2   19[COMRAM] int 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3712 ;;      Params:         4       0       0       0       0       0       0       0       0
  3713 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3715 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3716 ;;Total ram usage:        6 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; Hardware stack levels required when called: 7
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_ContarReal
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text23
  3727   001464                     __ptext23:
  3728                           	callstack 0
  3729   001464                     ___awmod:
  3730                           	callstack 22
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;incstack = 0
  3734   001464  0E00               	movlw	0
  3735   001466  6E19               	movwf	___awmod@sign^0,c
  3736   001468  AE15               	btfss	(___awmod@dividend+1)^0,7,c
  3737   00146A  D006               	goto	l3485
  3738   00146C  6C14               	negf	___awmod@dividend^0,c
  3739   00146E  1E15               	comf	(___awmod@dividend+1)^0,f,c
  3740   001470  B0D8               	btfsc	status,0,c
  3741   001472  2A15               	incf	(___awmod@dividend+1)^0,f,c
  3742   001474  0E01               	movlw	1
  3743   001476  6E19               	movwf	___awmod@sign^0,c
  3744   001478                     l3485:
  3745   001478  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  3746   00147A  D004               	goto	l3489
  3747   00147C  6C16               	negf	___awmod@divisor^0,c
  3748   00147E  1E17               	comf	(___awmod@divisor+1)^0,f,c
  3749   001480  B0D8               	btfsc	status,0,c
  3750   001482  2A17               	incf	(___awmod@divisor+1)^0,f,c
  3751   001484                     l3489:
  3752   001484  5016               	movf	___awmod@divisor^0,w,c
  3753   001486  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  3754   001488  B4D8               	btfsc	status,2,c
  3755   00148A  D018               	goto	l3505
  3756   00148C  0E01               	movlw	1
  3757   00148E  6E18               	movwf	___awmod@counter^0,c
  3758   001490  D004               	goto	l3495
  3759   001492                     l3493:
  3760   001492  90D8               	bcf	status,0,c
  3761   001494  3616               	rlcf	___awmod@divisor^0,f,c
  3762   001496  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  3763   001498  2A18               	incf	___awmod@counter^0,f,c
  3764   00149A                     l3495:
  3765   00149A  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  3766   00149C  D7FA               	goto	l3493
  3767   00149E                     u2330:
  3768   00149E  5016               	movf	___awmod@divisor^0,w,c
  3769   0014A0  5C14               	subwf	___awmod@dividend^0,w,c
  3770   0014A2  5017               	movf	(___awmod@divisor+1)^0,w,c
  3771   0014A4  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  3772   0014A6  A0D8               	btfss	status,0,c
  3773   0014A8  D004               	goto	l3501
  3774   0014AA  5016               	movf	___awmod@divisor^0,w,c
  3775   0014AC  5E14               	subwf	___awmod@dividend^0,f,c
  3776   0014AE  5017               	movf	(___awmod@divisor+1)^0,w,c
  3777   0014B0  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  3778   0014B2                     l3501:
  3779   0014B2  90D8               	bcf	status,0,c
  3780   0014B4  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  3781   0014B6  3216               	rrcf	___awmod@divisor^0,f,c
  3782   0014B8  2E18               	decfsz	___awmod@counter^0,f,c
  3783   0014BA  D7F1               	goto	u2330
  3784   0014BC                     l3505:
  3785   0014BC  5019               	movf	___awmod@sign^0,w,c
  3786   0014BE  B4D8               	btfsc	status,2,c
  3787   0014C0  D004               	goto	l3509
  3788   0014C2  6C14               	negf	___awmod@dividend^0,c
  3789   0014C4  1E15               	comf	(___awmod@dividend+1)^0,f,c
  3790   0014C6  B0D8               	btfsc	status,0,c
  3791   0014C8  2A15               	incf	(___awmod@dividend+1)^0,f,c
  3792   0014CA                     l3509:
  3793   0014CA  C014  F014         	movff	___awmod@dividend,?___awmod
  3794   0014CE  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  3795   0014D2  0012               	return		;funcret
  3796   0014D4                     __end_of___awmod:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function ___awdiv *****************
  3800 ;; Defined at:
  3801 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awdiv.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  dividend        2   19[COMRAM] int 
  3804 ;;  divisor         2   21[COMRAM] int 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  quotient        2   25[COMRAM] int 
  3807 ;;  sign            1   24[COMRAM] unsigned char 
  3808 ;;  counter         1   23[COMRAM] unsigned char 
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  2   19[COMRAM] int 
  3811 ;; Registers used:
  3812 ;;		wreg, status,2, status,0
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3818 ;;      Params:         4       0       0       0       0       0       0       0       0
  3819 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3821 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3822 ;;Total ram usage:        8 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; Hardware stack levels required when called: 7
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_ContarReal
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text24
  3833   0012E0                     __ptext24:
  3834                           	callstack 0
  3835   0012E0                     ___awdiv:
  3836                           	callstack 22
  3837                           
  3838                           ;incstack = 0
  3839   0012E0  0E00               	movlw	0
  3840   0012E2  6E19               	movwf	___awdiv@sign^0,c
  3841   0012E4  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  3842   0012E6  D006               	goto	l3441
  3843   0012E8  6C16               	negf	___awdiv@divisor^0,c
  3844   0012EA  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  3845   0012EC  B0D8               	btfsc	status,0,c
  3846   0012EE  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  3847   0012F0  0E01               	movlw	1
  3848   0012F2  6E19               	movwf	___awdiv@sign^0,c
  3849   0012F4                     l3441:
  3850   0012F4  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  3851   0012F6  D006               	goto	l3447
  3852   0012F8  6C14               	negf	___awdiv@dividend^0,c
  3853   0012FA  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  3854   0012FC  B0D8               	btfsc	status,0,c
  3855   0012FE  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  3856   001300  0E01               	movlw	1
  3857   001302  1A19               	xorwf	___awdiv@sign^0,f,c
  3858   001304                     l3447:
  3859   001304  0E00               	movlw	0
  3860   001306  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  3861   001308  0E00               	movlw	0
  3862   00130A  6E1A               	movwf	___awdiv@quotient^0,c
  3863   00130C  5016               	movf	___awdiv@divisor^0,w,c
  3864   00130E  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  3865   001310  B4D8               	btfsc	status,2,c
  3866   001312  D01C               	goto	l3469
  3867   001314  0E01               	movlw	1
  3868   001316  6E18               	movwf	___awdiv@counter^0,c
  3869   001318  D004               	goto	l3455
  3870   00131A                     l3453:
  3871   00131A  90D8               	bcf	status,0,c
  3872   00131C  3616               	rlcf	___awdiv@divisor^0,f,c
  3873   00131E  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  3874   001320  2A18               	incf	___awdiv@counter^0,f,c
  3875   001322                     l3455:
  3876   001322  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  3877   001324  D7FA               	goto	l3453
  3878   001326                     u2270:
  3879   001326  90D8               	bcf	status,0,c
  3880   001328  361A               	rlcf	___awdiv@quotient^0,f,c
  3881   00132A  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  3882   00132C  5016               	movf	___awdiv@divisor^0,w,c
  3883   00132E  5C14               	subwf	___awdiv@dividend^0,w,c
  3884   001330  5017               	movf	(___awdiv@divisor+1)^0,w,c
  3885   001332  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  3886   001334  A0D8               	btfss	status,0,c
  3887   001336  D005               	goto	l3465
  3888   001338  5016               	movf	___awdiv@divisor^0,w,c
  3889   00133A  5E14               	subwf	___awdiv@dividend^0,f,c
  3890   00133C  5017               	movf	(___awdiv@divisor+1)^0,w,c
  3891   00133E  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  3892   001340  801A               	bsf	___awdiv@quotient^0,0,c
  3893   001342                     l3465:
  3894   001342  90D8               	bcf	status,0,c
  3895   001344  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  3896   001346  3216               	rrcf	___awdiv@divisor^0,f,c
  3897   001348  2E18               	decfsz	___awdiv@counter^0,f,c
  3898   00134A  D7ED               	goto	u2270
  3899   00134C                     l3469:
  3900   00134C  5019               	movf	___awdiv@sign^0,w,c
  3901   00134E  B4D8               	btfsc	status,2,c
  3902   001350  D004               	goto	l3473
  3903   001352  6C1A               	negf	___awdiv@quotient^0,c
  3904   001354  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  3905   001356  B0D8               	btfsc	status,0,c
  3906   001358  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  3907   00135A                     l3473:
  3908   00135A  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  3909   00135E  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  3910   001362  0012               	return		;funcret
  3911   001364                     __end_of___awdiv:
  3912                           	callstack 0
  3913                           
  3914 ;; *************** function _ISR *****************
  3915 ;; Defined at:
  3916 ;;		line 325 in file "Lab4.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3930 ;;      Params:         0       0       0       0       0       0       0       0       0
  3931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3932 ;;      Temps:          9       0       0       0       0       0       0       0       0
  3933 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3934 ;;Total ram usage:        9 bytes
  3935 ;; Hardware stack levels used: 1
  3936 ;; Hardware stack levels required when called: 6
  3937 ;; This function calls:
  3938 ;;		_PiezaAContar
  3939 ;;		_Reiniciar
  3940 ;;		_Terminar
  3941 ;;		_Trasmitir
  3942 ;;		_blacklighttoggle
  3943 ;;		_borrarDigito
  3944 ;;		_escenario4
  3945 ;;		_okmenu
  3946 ;; This function is called by:
  3947 ;;		Interrupt level 2
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	intcode
  3952   000008                     __pintcode:
  3953                           	callstack 0
  3954   000008                     _ISR:
  3955                           	callstack 19
  3956                           
  3957                           ;incstack = 0
  3958   000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3959   00000A  ED4C  F005         	call	int_func,f	;refresh shadow registers
  3960                           
  3961                           	psect	intcode_body
  3962   000A98                     __pintcode_body:
  3963                           	callstack 19
  3964   000A98                     int_func:
  3965                           	callstack 19
  3966   000A98  0006               	pop		; remove dummy address from shadow register refresh
  3967   000A9A  CFD9 F00C          	movff	fsr2l,??_ISR+1
  3968   000A9E  CFDA F00D          	movff	fsr2h,??_ISR+2
  3969   000AA2  CFF3 F00E          	movff	prodl,??_ISR+3
  3970   000AA6  CFF4 F00F          	movff	prodh,??_ISR+4
  3971   000AAA  CFF6 F010          	movff	tblptrl,??_ISR+5
  3972   000AAE  CFF7 F011          	movff	tblptrh,??_ISR+6
  3973   000AB2  CFF8 F012          	movff	tblptru,??_ISR+7
  3974   000AB6  CFF5 F013          	movff	tablat,??_ISR+8
  3975                           
  3976                           ;Lab4.c: 326: if (RBIF == 1 && flagParar) {
  3977   000ABA  A0F2               	btfss	4082,0,c	;volatile
  3978   000ABC  D088               	goto	i2l3269
  3979   000ABE  5049               	movf	_flagParar^0,w,c
  3980   000AC0  104A               	iorwf	(_flagParar+1)^0,w,c
  3981   000AC2  B4D8               	btfsc	status,2,c
  3982   000AC4  D084               	goto	i2l3269
  3983                           
  3984                           ;Lab4.c: 328: if (PORTB != 0b11110000) {
  3985   000AC6  0EF0               	movlw	240
  3986   000AC8  1881               	xorwf	129,w,c	;volatile
  3987   000ACA  B4D8               	btfsc	status,2,c
  3988   000ACC  D077               	goto	i2l3265
  3989                           
  3990                           ;Lab4.c: 329: Tecla = 0;
  3991   000ACE  0E00               	movlw	0
  3992   000AD0  6E3D               	movwf	_Tecla^0,c
  3993                           
  3994                           ;Lab4.c: 330: LATB = 0b11111110;
  3995   000AD2  0EFE               	movlw	254
  3996   000AD4  6E8A               	movwf	138,c	;volatile
  3997                           
  3998                           ;Lab4.c: 332: if (RB4 == 0) PiezaAContar('1');
  3999   000AD6  B881               	btfsc	3969,4,c	;volatile
  4000   000AD8  D004               	goto	i2l348
  4001   000ADA  0E31               	movlw	49
  4002   000ADC  ECA2  F00A         	call	_PiezaAContar
  4003   000AE0  D06B               	goto	i2l373
  4004   000AE2                     i2l348:
  4005                           
  4006                           ;Lab4.c: 333: else if (RB5 == 0) PiezaAContar('2');
  4007   000AE2  BA81               	btfsc	3969,5,c	;volatile
  4008   000AE4  D004               	goto	i2l350
  4009   000AE6  0E32               	movlw	50
  4010   000AE8  ECA2  F00A         	call	_PiezaAContar
  4011   000AEC  D065               	goto	i2l373
  4012   000AEE                     i2l350:
  4013                           
  4014                           ;Lab4.c: 334: else if (RB6 == 0) PiezaAContar('3');
  4015   000AEE  BC81               	btfsc	3969,6,c	;volatile
  4016   000AF0  D004               	goto	i2l352
  4017   000AF2  0E33               	movlw	51
  4018   000AF4  ECA2  F00A         	call	_PiezaAContar
  4019   000AF8  D05F               	goto	i2l373
  4020   000AFA                     i2l352:
  4021                           
  4022                           ;Lab4.c: 335: else if (RB7 == 0 && menu!=2) okmenu();
  4023   000AFA  BE81               	btfsc	3969,7,c	;volatile
  4024   000AFC  D008               	goto	i2l3221
  4025   000AFE  0E02               	movlw	2
  4026   000B00  1847               	xorwf	_menu^0,w,c
  4027   000B02  1048               	iorwf	(_menu+1)^0,w,c
  4028   000B04  B4D8               	btfsc	status,2,c
  4029   000B06  D003               	goto	i2l3221
  4030   000B08  EC24  F00D         	call	_okmenu	;wreg free
  4031   000B0C  D055               	goto	i2l373
  4032   000B0E                     i2l3221:
  4033                           
  4034                           ;Lab4.c: 336: else {;Lab4.c: 337: LATB = 0b11111101;
  4035   000B0E  0EFD               	movlw	253
  4036   000B10  6E8A               	movwf	138,c	;volatile
  4037                           
  4038                           ;Lab4.c: 338: if (RB4 == 0) PiezaAContar('4');
  4039   000B12  B881               	btfsc	3969,4,c	;volatile
  4040   000B14  D004               	goto	i2l356
  4041   000B16  0E34               	movlw	52
  4042   000B18  ECA2  F00A         	call	_PiezaAContar
  4043   000B1C  D04D               	goto	i2l373
  4044   000B1E                     i2l356:
  4045                           
  4046                           ;Lab4.c: 339: else if (RB5 == 0) PiezaAContar('5');
  4047   000B1E  BA81               	btfsc	3969,5,c	;volatile
  4048   000B20  D004               	goto	i2l358
  4049   000B22  0E35               	movlw	53
  4050   000B24  ECA2  F00A         	call	_PiezaAContar
  4051   000B28  D047               	goto	i2l373
  4052   000B2A                     i2l358:
  4053                           
  4054                           ;Lab4.c: 340: else if (RB6 == 0) PiezaAContar('6');
  4055   000B2A  BC81               	btfsc	3969,6,c	;volatile
  4056   000B2C  D004               	goto	i2l360
  4057   000B2E  0E36               	movlw	54
  4058   000B30  ECA2  F00A         	call	_PiezaAContar
  4059   000B34  D041               	goto	i2l373
  4060   000B36                     i2l360:
  4061                           
  4062                           ;Lab4.c: 341: else if (RB7 == 0 && menu==1) borrarDigito();
  4063   000B36  BE81               	btfsc	3969,7,c	;volatile
  4064   000B38  D007               	goto	i2l3235
  4065   000B3A  0447               	decf	_menu^0,w,c
  4066   000B3C  1048               	iorwf	(_menu+1)^0,w,c
  4067   000B3E  A4D8               	btfss	status,2,c
  4068   000B40  D003               	goto	i2l3235
  4069   000B42  EC28  F00B         	call	_borrarDigito	;wreg free
  4070   000B46  D038               	goto	i2l373
  4071   000B48                     i2l3235:
  4072                           
  4073                           ;Lab4.c: 342: else {;Lab4.c: 343: LATB = 0b11111011;
  4074   000B48  0EFB               	movlw	251
  4075   000B4A  6E8A               	movwf	138,c	;volatile
  4076                           
  4077                           ;Lab4.c: 344: if (RB4 == 0) PiezaAContar('7');
  4078   000B4C  B881               	btfsc	3969,4,c	;volatile
  4079   000B4E  D004               	goto	i2l364
  4080   000B50  0E37               	movlw	55
  4081   000B52  ECA2  F00A         	call	_PiezaAContar
  4082   000B56  D030               	goto	i2l373
  4083   000B58                     i2l364:
  4084                           
  4085                           ;Lab4.c: 345: else if (RB5 == 0) PiezaAContar('8');
  4086   000B58  BA81               	btfsc	3969,5,c	;volatile
  4087   000B5A  D004               	goto	i2l366
  4088   000B5C  0E38               	movlw	56
  4089   000B5E  ECA2  F00A         	call	_PiezaAContar
  4090   000B62  D02A               	goto	i2l373
  4091   000B64                     i2l366:
  4092                           
  4093                           ;Lab4.c: 346: else if (RB6 == 0) PiezaAContar('9');
  4094   000B64  BC81               	btfsc	3969,6,c	;volatile
  4095   000B66  D004               	goto	i2l368
  4096   000B68  0E39               	movlw	57
  4097   000B6A  ECA2  F00A         	call	_PiezaAContar
  4098   000B6E  D024               	goto	i2l373
  4099   000B70                     i2l368:
  4100                           
  4101                           ;Lab4.c: 347: else if (RB7 == 0 && menu==2) Reiniciar();
  4102   000B70  BE81               	btfsc	3969,7,c	;volatile
  4103   000B72  D008               	goto	i2l3249
  4104   000B74  0E02               	movlw	2
  4105   000B76  1847               	xorwf	_menu^0,w,c
  4106   000B78  1048               	iorwf	(_menu+1)^0,w,c
  4107   000B7A  A4D8               	btfss	status,2,c
  4108   000B7C  D003               	goto	i2l3249
  4109   000B7E  ECC4  F00C         	call	_Reiniciar	;wreg free
  4110   000B82  D01A               	goto	i2l373
  4111   000B84                     i2l3249:
  4112                           
  4113                           ;Lab4.c: 348: else {;Lab4.c: 349: LATB = 0b11110111;
  4114   000B84  0EF7               	movlw	247
  4115   000B86  6E8A               	movwf	138,c	;volatile
  4116                           
  4117                           ;Lab4.c: 350: if (RB4 == 0) blacklighttoggle();
  4118   000B88  B881               	btfsc	3969,4,c	;volatile
  4119   000B8A  D003               	goto	i2l372
  4120   000B8C  ECD8  F00D         	call	_blacklighttoggle	;wreg free
  4121   000B90  D013               	goto	i2l373
  4122   000B92                     i2l372:
  4123                           
  4124                           ;Lab4.c: 351: else if (RB5 == 0) PiezaAContar('0');
  4125   000B92  BA81               	btfsc	3969,5,c	;volatile
  4126   000B94  D004               	goto	i2l374
  4127   000B96  0E30               	movlw	48
  4128   000B98  ECA2  F00A         	call	_PiezaAContar
  4129   000B9C  D00D               	goto	i2l373
  4130   000B9E                     i2l374:
  4131                           
  4132                           ;Lab4.c: 352: else if (RB6 == 0 && menu==2) Terminar();
  4133   000B9E  BC81               	btfsc	3969,6,c	;volatile
  4134   000BA0  D008               	goto	i2l376
  4135   000BA2  0E02               	movlw	2
  4136   000BA4  1847               	xorwf	_menu^0,w,c
  4137   000BA6  1048               	iorwf	(_menu+1)^0,w,c
  4138   000BA8  A4D8               	btfss	status,2,c
  4139   000BAA  D003               	goto	i2l376
  4140   000BAC  ECDE  F00D         	call	_Terminar	;wreg free
  4141   000BB0  D003               	goto	i2l373
  4142   000BB2                     i2l376:
  4143                           
  4144                           ;Lab4.c: 353: else if (RB7 == 0) escenario4();
  4145   000BB2  AE81               	btfss	3969,7,c	;volatile
  4146   000BB4  ECF8  F00B         	call	_escenario4	;wreg free
  4147   000BB8                     i2l373:
  4148                           
  4149                           ;Lab4.c: 354: };Lab4.c: 355: };Lab4.c: 356: };Lab4.c: 357: LATB = 0b11110000;
  4150   000BB8  0EF0               	movlw	240
  4151   000BBA  6E8A               	movwf	138,c	;volatile
  4152   000BBC                     i2l3265:
  4153                           
  4154                           ;Lab4.c: 358: };Lab4.c: 359: _delay((unsigned long)((200)*(1000000/4000.0)));
  4155   000BBC  0E41               	movlw	65
  4156   000BBE  6E0B               	movwf	??_ISR^0,c
  4157   000BC0  0EEE               	movlw	238
  4158   000BC2                     i2u272_47:
  4159   000BC2  2EE8               	decfsz	wreg,f,c
  4160   000BC4  D7FE               	bra	i2u272_47
  4161   000BC6  2E0B               	decfsz	??_ISR^0,f,c
  4162   000BC8  D7FC               	bra	i2u272_47
  4163   000BCA  D000               	nop2	
  4164                           
  4165                           ;Lab4.c: 361: RBIF = 0;
  4166   000BCC  90F2               	bcf	4082,0,c	;volatile
  4167   000BCE                     i2l3269:
  4168                           
  4169                           ;Lab4.c: 363: };Lab4.c: 364: if (TMR0IF == 1) {
  4170   000BCE  A4F2               	btfss	4082,2,c	;volatile
  4171   000BD0  D00C               	goto	i2l380
  4172                           
  4173                           ;Lab4.c: 365: TMR0IF = 0;
  4174   000BD2  94F2               	bcf	4082,2,c	;volatile
  4175                           
  4176                           ;Lab4.c: 366: TMR0 = 3036;
  4177   000BD4  0E0B               	movlw	11
  4178   000BD6  6ED7               	movwf	215,c	;volatile
  4179   000BD8  0EDC               	movlw	220
  4180   000BDA  6ED6               	movwf	214,c	;volatile
  4181                           
  4182                           ;Lab4.c: 367: LATA1 = !LATA1;
  4183   000BDC  B289               	btfsc	3977,1,c	;volatile
  4184   000BDE  D002               	goto	i2u213_40
  4185   000BE0  8289               	bsf	3977,1,c	;volatile
  4186   000BE2  D001               	goto	i2u214_45
  4187   000BE4                     i2u213_40:
  4188   000BE4  9289               	bcf	3977,1,c	;volatile
  4189   000BE6                     i2u214_45:
  4190                           
  4191                           ;Lab4.c: 368: Trasmitir();
  4192   000BE6  ECDF  F00C         	call	_Trasmitir	;wreg free
  4193   000BEA                     i2l380:
  4194   000BEA  C013  FFF5         	movff	??_ISR+8,tablat
  4195   000BEE  C012  FFF8         	movff	??_ISR+7,tblptru
  4196   000BF2  C011  FFF7         	movff	??_ISR+6,tblptrh
  4197   000BF6  C010  FFF6         	movff	??_ISR+5,tblptrl
  4198   000BFA  C00F  FFF4         	movff	??_ISR+4,prodh
  4199   000BFE  C00E  FFF3         	movff	??_ISR+3,prodl
  4200   000C02  C00D  FFDA         	movff	??_ISR+2,fsr2h
  4201   000C06  C00C  FFD9         	movff	??_ISR+1,fsr2l
  4202   000C0A  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4203   000C0C  0011               	retfie		f
  4204   000C0E                     __end_of_ISR:
  4205                           	callstack 0
  4206                           
  4207 ;; *************** function _okmenu *****************
  4208 ;; Defined at:
  4209 ;;		line 318 in file "Lab4.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4223 ;;      Params:         0       0       0       0       0       0       0       0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4226 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4227 ;;Total ram usage:        0 bytes
  4228 ;; Hardware stack levels used: 1
  4229 ;; Hardware stack levels required when called: 5
  4230 ;; This function calls:
  4231 ;;		i2_ContarReal
  4232 ;;		i2_escenario1
  4233 ;; This function is called by:
  4234 ;;		_ISR
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text26
  4239   001A48                     __ptext26:
  4240                           	callstack 0
  4241   001A48                     _okmenu:
  4242                           	callstack 19
  4243                           
  4244                           ;Lab4.c: 319: if(menu==1) ContarReal();
  4245                           
  4246                           ;incstack = 0
  4247   001A48  0447               	decf	_menu^0,w,c
  4248   001A4A  1048               	iorwf	(_menu+1)^0,w,c
  4249   001A4C  A4D8               	btfss	status,2,c
  4250   001A4E  D003               	goto	i2l3083
  4251   001A50  ECC8  F007         	call	i2_ContarReal	;wreg free
  4252   001A54  0012               	return	
  4253   001A56                     i2l3083:
  4254                           
  4255                           ;Lab4.c: 320: else if(menu==2);
  4256   001A56  0E02               	movlw	2
  4257   001A58  1847               	xorwf	_menu^0,w,c
  4258   001A5A  1048               	iorwf	(_menu+1)^0,w,c
  4259   001A5C  B4D8               	btfsc	status,2,c
  4260   001A5E  0012               	return	
  4261                           
  4262                           ;Lab4.c: 321: else if(menu==3) escenario1();
  4263   001A60  0E03               	movlw	3
  4264   001A62  1847               	xorwf	_menu^0,w,c
  4265   001A64  1048               	iorwf	(_menu+1)^0,w,c
  4266   001A66  A4D8               	btfss	status,2,c
  4267   001A68  0012               	return	
  4268   001A6A  EC72  F00B         	call	i2_escenario1	;wreg free
  4269   001A6E  0012               	return		;funcret
  4270   001A70                     __end_of_okmenu:
  4271                           	callstack 0
  4272                           
  4273 ;; *************** function i2_ContarReal *****************
  4274 ;; Defined at:
  4275 ;;		line 248 in file "Lab4.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4289 ;;      Params:         0       0       0       0       0       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4291 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4292 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4293 ;;Total ram usage:        2 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 4
  4296 ;; This function calls:
  4297 ;;		i2___awdiv
  4298 ;;		i2___awmod
  4299 ;;		i2___wmul
  4300 ;;		i2_escenario2
  4301 ;;		i2_escenario3
  4302 ;;		i2_vaciar
  4303 ;; This function is called by:
  4304 ;;		_okmenu
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text27
  4309   000F90                     __ptext27:
  4310                           	callstack 0
  4311   000F90                     i2_ContarReal:
  4312                           	callstack 19
  4313                           
  4314                           ;Lab4.c: 249: cantidad = (decena * 10) + unidad;
  4315                           
  4316                           ;incstack = 0
  4317   000F90  C03B  F001         	movff	_decena,i2___wmul@multiplier
  4318   000F94  C03C  F002         	movff	_decena+1,i2___wmul@multiplier+1
  4319   000F98  0E00               	movlw	0
  4320   000F9A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4321   000F9C  0E0A               	movlw	10
  4322   000F9E  6E03               	movwf	i2___wmul@multiplicand^0,c
  4323   000FA0  EC5E  F00D         	call	i2___wmul	;wreg free
  4324   000FA4  5039               	movf	_unidad^0,w,c
  4325   000FA6  2401               	addwf	?i2___wmul^0,w,c
  4326   000FA8  6E35               	movwf	_cantidad^0,c
  4327   000FAA  503A               	movf	(_unidad+1)^0,w,c
  4328   000FAC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4329   000FAE  6E36               	movwf	(_cantidad+1)^0,c
  4330                           
  4331                           ;Lab4.c: 250: contador++;
  4332   000FB0  4A33               	infsnz	_contador^0,f,c
  4333   000FB2  2A34               	incf	(_contador+1)^0,f,c
  4334                           
  4335                           ;Lab4.c: 251: cantidadResta = cantidad - contador +1;
  4336   000FB4  5033               	movf	_contador^0,w,c
  4337   000FB6  5C35               	subwf	_cantidad^0,w,c
  4338   000FB8  6E09               	movwf	??i2_ContarReal^0,c
  4339   000FBA  5034               	movf	(_contador+1)^0,w,c
  4340   000FBC  5836               	subwfb	(_cantidad+1)^0,w,c
  4341   000FBE  6E0A               	movwf	(??i2_ContarReal+1)^0,c
  4342   000FC0  0E01               	movlw	1
  4343   000FC2  2409               	addwf	??i2_ContarReal^0,w,c
  4344   000FC4  6E31               	movwf	_cantidadResta^0,c
  4345   000FC6  0E00               	movlw	0
  4346   000FC8  200A               	addwfc	(??i2_ContarReal+1)^0,w,c
  4347   000FCA  6E32               	movwf	(_cantidadResta+1)^0,c
  4348                           
  4349                           ;Lab4.c: 252: cantidadRestaUnidad =0b00110000 + cantidadResta%10;
  4350   000FCC  C031  F001         	movff	_cantidadResta,i2___awmod@dividend
  4351   000FD0  C032  F002         	movff	_cantidadResta+1,i2___awmod@dividend+1
  4352   000FD4  0E00               	movlw	0
  4353   000FD6  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4354   000FD8  0E0A               	movlw	10
  4355   000FDA  6E03               	movwf	i2___awmod@divisor^0,c
  4356   000FDC  EC6A  F00A         	call	i2___awmod	;wreg free
  4357   000FE0  0E30               	movlw	48
  4358   000FE2  2401               	addwf	?i2___awmod^0,w,c
  4359   000FE4  6E2F               	movwf	_cantidadRestaUnidad^0,c
  4360   000FE6  0E00               	movlw	0
  4361   000FE8  2002               	addwfc	(?i2___awmod+1)^0,w,c
  4362   000FEA  6E30               	movwf	(_cantidadRestaUnidad+1)^0,c
  4363                           
  4364                           ;Lab4.c: 253: cantidadRestaDecena =0b00110000 + cantidadResta/10;
  4365   000FEC  C031  F001         	movff	_cantidadResta,i2___awdiv@dividend
  4366   000FF0  C032  F002         	movff	_cantidadResta+1,i2___awdiv@dividend+1
  4367   000FF4  0E00               	movlw	0
  4368   000FF6  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4369   000FF8  0E0A               	movlw	10
  4370   000FFA  6E03               	movwf	i2___awdiv@divisor^0,c
  4371   000FFC  ECB2  F009         	call	i2___awdiv	;wreg free
  4372   001000  0E30               	movlw	48
  4373   001002  2401               	addwf	?i2___awdiv^0,w,c
  4374   001004  6E2D               	movwf	_cantidadRestaDecena^0,c
  4375   001006  0E00               	movlw	0
  4376   001008  2002               	addwfc	(?i2___awdiv+1)^0,w,c
  4377   00100A  6E2E               	movwf	(_cantidadRestaDecena+1)^0,c
  4378                           
  4379                           ;Lab4.c: 254: contadorUnidad = (contador-1)%10;
  4380   00100C  0EFF               	movlw	255
  4381   00100E  2433               	addwf	_contador^0,w,c
  4382   001010  6E01               	movwf	i2___awmod@dividend^0,c
  4383   001012  0EFF               	movlw	255
  4384   001014  2034               	addwfc	(_contador+1)^0,w,c
  4385   001016  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  4386   001018  0E00               	movlw	0
  4387   00101A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4388   00101C  0E0A               	movlw	10
  4389   00101E  6E03               	movwf	i2___awmod@divisor^0,c
  4390   001020  EC6A  F00A         	call	i2___awmod	;wreg free
  4391   001024  C001  F02B         	movff	?i2___awmod,_contadorUnidad
  4392   001028  C002  F02C         	movff	?i2___awmod+1,_contadorUnidad+1
  4393                           
  4394                           ;Lab4.c: 255: contadorDecena = (contador-1)/10;
  4395   00102C  0EFF               	movlw	255
  4396   00102E  2433               	addwf	_contador^0,w,c
  4397   001030  6E01               	movwf	i2___awdiv@dividend^0,c
  4398   001032  0EFF               	movlw	255
  4399   001034  2034               	addwfc	(_contador+1)^0,w,c
  4400   001036  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
  4401   001038  0E00               	movlw	0
  4402   00103A  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4403   00103C  0E0A               	movlw	10
  4404   00103E  6E03               	movwf	i2___awdiv@divisor^0,c
  4405   001040  ECB2  F009         	call	i2___awdiv	;wreg free
  4406   001044  C001  F029         	movff	?i2___awdiv,_contadorDecena
  4407   001048  C002  F02A         	movff	?i2___awdiv+1,_contadorDecena+1
  4408                           
  4409                           ;Lab4.c: 257: LATD = contadorUnidad;
  4410   00104C  C02B  FF8C         	movff	_contadorUnidad,3980	;volatile
  4411                           
  4412                           ;Lab4.c: 258: LATE = color[contadorDecena];
  4413   001050  5029               	movf	_contadorDecena^0,w,c
  4414   001052  0D02               	mullw	2
  4415   001054  50F3               	movf	243,w,c
  4416   001056  0F60               	addlw	low _color
  4417   001058  6ED9               	movwf	fsr2l,c
  4418   00105A  6ADA               	clrf	fsr2h,c
  4419   00105C  50DF               	movf	indf2,w,c
  4420   00105E  6E8D               	movwf	141,c	;volatile
  4421                           
  4422                           ;Lab4.c: 259: escenario2();
  4423   001060  EC2B  F009         	call	i2_escenario2	;wreg free
  4424                           
  4425                           ;Lab4.c: 260: _delay((unsigned long)((1000)*(1000000/4000.0)));
  4426   001064  0E02               	movlw	2
  4427   001066  6E0A               	movwf	(??i2_ContarReal+1)^0,c
  4428   001068  0E45               	movlw	69
  4429   00106A  6E09               	movwf	??i2_ContarReal^0,c
  4430   00106C  0EAA               	movlw	170
  4431   00106E                     i2u273_47:
  4432   00106E  2EE8               	decfsz	wreg,f,c
  4433   001070  D7FE               	bra	i2u273_47
  4434   001072  2E09               	decfsz	??i2_ContarReal^0,f,c
  4435   001074  D7FC               	bra	i2u273_47
  4436   001076  2E0A               	decfsz	(??i2_ContarReal+1)^0,f,c
  4437   001078  D7FA               	bra	i2u273_47
  4438                           
  4439                           ;Lab4.c: 261: if(!cantidadResta) {
  4440   00107A  5031               	movf	_cantidadResta^0,w,c
  4441   00107C  1032               	iorwf	(_cantidadResta+1)^0,w,c
  4442   00107E  A4D8               	btfss	status,2,c
  4443   001080  0012               	return	
  4444                           
  4445                           ;Lab4.c: 262: vaciar();
  4446   001082  ECD7  F00B         	call	i2_vaciar	;wreg free
  4447                           
  4448                           ;Lab4.c: 263: escenario3();
  4449   001086  ECA9  F00C         	call	i2_escenario3	;wreg free
  4450   00108A  0012               	return		;funcret
  4451   00108C                     __end_ofi2_ContarReal:
  4452                           	callstack 0
  4453                           
  4454 ;; *************** function i2_escenario3 *****************
  4455 ;; Defined at:
  4456 ;;		line 188 in file "Lab4.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;		None
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4470 ;;      Params:         0       0       0       0       0       0       0       0       0
  4471 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4473 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4474 ;;Total ram usage:        0 bytes
  4475 ;; Hardware stack levels used: 1
  4476 ;; Hardware stack levels required when called: 3
  4477 ;; This function calls:
  4478 ;;		i2_Lcd_Clear
  4479 ;;		i2_Lcd_NoBlink
  4480 ;;		i2_Lcd_Set_Cursor
  4481 ;;		i2_Lcd_Write_String
  4482 ;; This function is called by:
  4483 ;;		i2_ContarReal
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text28
  4488   001952                     __ptext28:
  4489                           	callstack 0
  4490   001952                     i2_escenario3:
  4491                           	callstack 19
  4492                           
  4493                           ;Lab4.c: 189: menu=3;
  4494                           
  4495                           ;incstack = 0
  4496   001952  0E00               	movlw	0
  4497   001954  6E48               	movwf	(_menu+1)^0,c
  4498   001956  0E03               	movlw	3
  4499   001958  6E47               	movwf	_menu^0,c
  4500                           
  4501                           ;Lab4.c: 190: Lcd_Clear();
  4502   00195A  ECCA  F00D         	call	i2_Lcd_Clear	;wreg free
  4503                           
  4504                           ;Lab4.c: 191: Lcd_NoBlink();
  4505   00195E  ECC3  F00D         	call	i2_Lcd_NoBlink	;wreg free
  4506                           
  4507                           ;Lab4.c: 192: Lcd_Set_Cursor(1, 1);
  4508   001962  0E01               	movlw	1
  4509   001964  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  4510   001966  0E01               	movlw	1
  4511   001968  EC96  F008         	call	i2_Lcd_Set_Cursor
  4512                           
  4513                           ;Lab4.c: 193: Lcd_Write_String("Cuenta finalizada");
  4514   00196C  0E33               	movlw	low STR_11
  4515   00196E  6E05               	movwf	i2Lcd_Write_String@a^0,c
  4516   001970  EC37  F00C         	call	i2_Lcd_Write_String	;wreg free
  4517                           
  4518                           ;Lab4.c: 194: Lcd_Set_Cursor(2, 13);
  4519   001974  0E0D               	movlw	13
  4520   001976  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  4521   001978  0E02               	movlw	2
  4522   00197A  EC96  F008         	call	i2_Lcd_Set_Cursor
  4523                           
  4524                           ;Lab4.c: 195: Lcd_Write_String("A:OK");
  4525   00197E  0EC0               	movlw	low STR_12
  4526   001980  6E05               	movwf	i2Lcd_Write_String@a^0,c
  4527   001982  EC37  F00C         	call	i2_Lcd_Write_String	;wreg free
  4528   001986  0012               	return		;funcret
  4529   001988                     __end_ofi2_escenario3:
  4530                           	callstack 0
  4531                           
  4532 ;; *************** function i2___wmul *****************
  4533 ;; Defined at:
  4534 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/Umul16.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  multiplier      2    0[COMRAM] unsigned int 
  4537 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  product         2    4[COMRAM] unsigned int 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  2    0[COMRAM] unsigned int 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0, prodl, prodh
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4549 ;;      Params:         4       0       0       0       0       0       0       0       0
  4550 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4552 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4553 ;;Total ram usage:        6 bytes
  4554 ;; Hardware stack levels used: 1
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		i2_ContarReal
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text29
  4563   001ABC                     __ptext29:
  4564                           	callstack 0
  4565   001ABC                     i2___wmul:
  4566                           	callstack 22
  4567                           
  4568                           ;incstack = 0
  4569   001ABC  5001               	movf	i2___wmul@multiplier^0,w,c
  4570   001ABE  0203               	mulwf	i2___wmul@multiplicand^0,c
  4571   001AC0  CFF3 F005          	movff	prodl,i2___wmul@product
  4572   001AC4  CFF4 F006          	movff	prodh,i2___wmul@product+1
  4573   001AC8  5001               	movf	i2___wmul@multiplier^0,w,c
  4574   001ACA  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  4575   001ACC  50F3               	movf	243,w,c
  4576   001ACE  2606               	addwf	(i2___wmul@product+1)^0,f,c
  4577   001AD0  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  4578   001AD2  0203               	mulwf	i2___wmul@multiplicand^0,c
  4579   001AD4  50F3               	movf	243,w,c
  4580   001AD6  2606               	addwf	(i2___wmul@product+1)^0,f,c
  4581   001AD8  C005  F001         	movff	i2___wmul@product,?i2___wmul
  4582   001ADC  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  4583   001AE0  0012               	return		;funcret
  4584   001AE2                     __end_ofi2___wmul:
  4585                           	callstack 0
  4586                           
  4587 ;; *************** function i2___awmod *****************
  4588 ;; Defined at:
  4589 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awmod.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  dividend        2    0[COMRAM] int 
  4592 ;;  divisor         2    2[COMRAM] int 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  sign            1    5[COMRAM] unsigned char 
  4595 ;;  counter         1    4[COMRAM] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  2    0[COMRAM] int 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4605 ;;      Params:         4       0       0       0       0       0       0       0       0
  4606 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4608 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4609 ;;Total ram usage:        6 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		i2_ContarReal
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text30
  4619   0014D4                     __ptext30:
  4620                           	callstack 0
  4621   0014D4                     i2___awmod:
  4622                           	callstack 22
  4623                           
  4624                           ;incstack = 0
  4625   0014D4  0E00               	movlw	0
  4626   0014D6  6E06               	movwf	i2___awmod@sign^0,c
  4627   0014D8  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  4628   0014DA  D006               	goto	i2l2513
  4629   0014DC  6C01               	negf	i2___awmod@dividend^0,c
  4630   0014DE  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4631   0014E0  B0D8               	btfsc	status,0,c
  4632   0014E2  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4633   0014E4  0E01               	movlw	1
  4634   0014E6  6E06               	movwf	i2___awmod@sign^0,c
  4635   0014E8                     i2l2513:
  4636   0014E8  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  4637   0014EA  D004               	goto	i2l2517
  4638   0014EC  6C03               	negf	i2___awmod@divisor^0,c
  4639   0014EE  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  4640   0014F0  B0D8               	btfsc	status,0,c
  4641   0014F2  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  4642   0014F4                     i2l2517:
  4643   0014F4  5003               	movf	i2___awmod@divisor^0,w,c
  4644   0014F6  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  4645   0014F8  B4D8               	btfsc	status,2,c
  4646   0014FA  D018               	goto	i2l2533
  4647   0014FC  0E01               	movlw	1
  4648   0014FE  6E05               	movwf	i2___awmod@counter^0,c
  4649   001500  D004               	goto	i2l2523
  4650   001502                     i2l2521:
  4651   001502  90D8               	bcf	status,0,c
  4652   001504  3603               	rlcf	i2___awmod@divisor^0,f,c
  4653   001506  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  4654   001508  2A05               	incf	i2___awmod@counter^0,f,c
  4655   00150A                     i2l2523:
  4656   00150A  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  4657   00150C  D7FA               	goto	i2l2521
  4658   00150E                     i2u136_40:
  4659   00150E  5003               	movf	i2___awmod@divisor^0,w,c
  4660   001510  5C01               	subwf	i2___awmod@dividend^0,w,c
  4661   001512  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4662   001514  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  4663   001516  A0D8               	btfss	status,0,c
  4664   001518  D004               	goto	i2l2529
  4665   00151A  5003               	movf	i2___awmod@divisor^0,w,c
  4666   00151C  5E01               	subwf	i2___awmod@dividend^0,f,c
  4667   00151E  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4668   001520  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  4669   001522                     i2l2529:
  4670   001522  90D8               	bcf	status,0,c
  4671   001524  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  4672   001526  3203               	rrcf	i2___awmod@divisor^0,f,c
  4673   001528  2E05               	decfsz	i2___awmod@counter^0,f,c
  4674   00152A  D7F1               	goto	i2u136_40
  4675   00152C                     i2l2533:
  4676   00152C  5006               	movf	i2___awmod@sign^0,w,c
  4677   00152E  B4D8               	btfsc	status,2,c
  4678   001530  D004               	goto	i2l2537
  4679   001532  6C01               	negf	i2___awmod@dividend^0,c
  4680   001534  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4681   001536  B0D8               	btfsc	status,0,c
  4682   001538  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4683   00153A                     i2l2537:
  4684   00153A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  4685   00153E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  4686   001542  0012               	return		;funcret
  4687   001544                     __end_ofi2___awmod:
  4688                           	callstack 0
  4689                           
  4690 ;; *************** function i2___awdiv *****************
  4691 ;; Defined at:
  4692 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awdiv.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  dividend        2    0[COMRAM] int 
  4695 ;;  divisor         2    2[COMRAM] int 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  quotient        2    6[COMRAM] int 
  4698 ;;  sign            1    5[COMRAM] unsigned char 
  4699 ;;  counter         1    4[COMRAM] unsigned char 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  2    0[COMRAM] int 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2, status,0
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4709 ;;      Params:         4       0       0       0       0       0       0       0       0
  4710 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4712 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4713 ;;Total ram usage:        8 bytes
  4714 ;; Hardware stack levels used: 1
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		i2_ContarReal
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text31
  4723   001364                     __ptext31:
  4724                           	callstack 0
  4725   001364                     i2___awdiv:
  4726                           	callstack 22
  4727                           
  4728                           ;incstack = 0
  4729   001364  0E00               	movlw	0
  4730   001366  6E06               	movwf	i2___awdiv@sign^0,c
  4731   001368  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  4732   00136A  D006               	goto	i2l2469
  4733   00136C  6C03               	negf	i2___awdiv@divisor^0,c
  4734   00136E  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  4735   001370  B0D8               	btfsc	status,0,c
  4736   001372  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  4737   001374  0E01               	movlw	1
  4738   001376  6E06               	movwf	i2___awdiv@sign^0,c
  4739   001378                     i2l2469:
  4740   001378  AE02               	btfss	(i2___awdiv@dividend+1)^0,7,c
  4741   00137A  D006               	goto	i2l2475
  4742   00137C  6C01               	negf	i2___awdiv@dividend^0,c
  4743   00137E  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  4744   001380  B0D8               	btfsc	status,0,c
  4745   001382  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  4746   001384  0E01               	movlw	1
  4747   001386  1A06               	xorwf	i2___awdiv@sign^0,f,c
  4748   001388                     i2l2475:
  4749   001388  0E00               	movlw	0
  4750   00138A  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  4751   00138C  0E00               	movlw	0
  4752   00138E  6E07               	movwf	i2___awdiv@quotient^0,c
  4753   001390  5003               	movf	i2___awdiv@divisor^0,w,c
  4754   001392  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  4755   001394  B4D8               	btfsc	status,2,c
  4756   001396  D01C               	goto	i2l2497
  4757   001398  0E01               	movlw	1
  4758   00139A  6E05               	movwf	i2___awdiv@counter^0,c
  4759   00139C  D004               	goto	i2l2483
  4760   00139E                     i2l2481:
  4761   00139E  90D8               	bcf	status,0,c
  4762   0013A0  3603               	rlcf	i2___awdiv@divisor^0,f,c
  4763   0013A2  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  4764   0013A4  2A05               	incf	i2___awdiv@counter^0,f,c
  4765   0013A6                     i2l2483:
  4766   0013A6  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  4767   0013A8  D7FA               	goto	i2l2481
  4768   0013AA                     i2u130_40:
  4769   0013AA  90D8               	bcf	status,0,c
  4770   0013AC  3607               	rlcf	i2___awdiv@quotient^0,f,c
  4771   0013AE  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  4772   0013B0  5003               	movf	i2___awdiv@divisor^0,w,c
  4773   0013B2  5C01               	subwf	i2___awdiv@dividend^0,w,c
  4774   0013B4  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  4775   0013B6  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  4776   0013B8  A0D8               	btfss	status,0,c
  4777   0013BA  D005               	goto	i2l2493
  4778   0013BC  5003               	movf	i2___awdiv@divisor^0,w,c
  4779   0013BE  5E01               	subwf	i2___awdiv@dividend^0,f,c
  4780   0013C0  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  4781   0013C2  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  4782   0013C4  8007               	bsf	i2___awdiv@quotient^0,0,c
  4783   0013C6                     i2l2493:
  4784   0013C6  90D8               	bcf	status,0,c
  4785   0013C8  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  4786   0013CA  3203               	rrcf	i2___awdiv@divisor^0,f,c
  4787   0013CC  2E05               	decfsz	i2___awdiv@counter^0,f,c
  4788   0013CE  D7ED               	goto	i2u130_40
  4789   0013D0                     i2l2497:
  4790   0013D0  5006               	movf	i2___awdiv@sign^0,w,c
  4791   0013D2  B4D8               	btfsc	status,2,c
  4792   0013D4  D004               	goto	i2l2501
  4793   0013D6  6C07               	negf	i2___awdiv@quotient^0,c
  4794   0013D8  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  4795   0013DA  B0D8               	btfsc	status,0,c
  4796   0013DC  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  4797   0013DE                     i2l2501:
  4798   0013DE  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  4799   0013E2  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  4800   0013E6  0012               	return		;funcret
  4801   0013E8                     __end_ofi2___awdiv:
  4802                           	callstack 0
  4803                           
  4804 ;; *************** function _escenario4 *****************
  4805 ;; Defined at:
  4806 ;;		line 199 in file "Lab4.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4820 ;;      Params:         0       0       0       0       0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4823 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used: 1
  4826 ;; Hardware stack levels required when called: 3
  4827 ;; This function calls:
  4828 ;;		i2_Lcd_Clear
  4829 ;;		i2_Lcd_NoBlink
  4830 ;;		i2_Lcd_Set_Cursor
  4831 ;;		i2_Lcd_Write_Char
  4832 ;;		i2_Lcd_Write_String
  4833 ;; This function is called by:
  4834 ;;		_ISR
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text32
  4839   0017F0                     __ptext32:
  4840                           	callstack 0
  4841   0017F0                     _escenario4:
  4842                           	callstack 21
  4843                           
  4844                           ;Lab4.c: 200: Lcd_Clear();
  4845                           
  4846                           ;incstack = 0
  4847   0017F0  ECCA  F00D         	call	i2_Lcd_Clear	;wreg free
  4848                           
  4849                           ;Lab4.c: 201: Lcd_NoBlink();
  4850   0017F4  ECC3  F00D         	call	i2_Lcd_NoBlink	;wreg free
  4851                           
  4852                           ;Lab4.c: 202: Lcd_Set_Cursor(1, 1);
  4853   0017F8  0E01               	movlw	1
  4854   0017FA  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  4855   0017FC  0E01               	movlw	1
  4856   0017FE  EC96  F008         	call	i2_Lcd_Set_Cursor
  4857                           
  4858                           ;Lab4.c: 203: Lcd_Write_String("Parada de");
  4859   001802  0EAE               	movlw	low STR_13
  4860   001804  6E05               	movwf	i2Lcd_Write_String@a^0,c
  4861   001806  EC37  F00C         	call	i2_Lcd_Write_String	;wreg free
  4862                           
  4863                           ;Lab4.c: 204: Lcd_Set_Cursor(2, 1);
  4864   00180A  0E01               	movlw	1
  4865   00180C  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  4866   00180E  0E02               	movlw	2
  4867   001810  EC96  F008         	call	i2_Lcd_Set_Cursor
  4868                           
  4869                           ;Lab4.c: 205: Lcd_Write_String("Emergencia ");
  4870   001814  0E77               	movlw	low STR_14
  4871   001816  6E05               	movwf	i2Lcd_Write_String@a^0,c
  4872   001818  EC37  F00C         	call	i2_Lcd_Write_String	;wreg free
  4873                           
  4874                           ;Lab4.c: 206: Lcd_Write_Char(3);
  4875   00181C  0E03               	movlw	3
  4876   00181E  EC72  F00C         	call	i2_Lcd_Write_Char
  4877                           
  4878                           ;Lab4.c: 207: flagParar = 0;
  4879   001822  0E00               	movlw	0
  4880   001824  6E4A               	movwf	(_flagParar+1)^0,c
  4881   001826  0E00               	movlw	0
  4882   001828  6E49               	movwf	_flagParar^0,c
  4883                           
  4884                           ;Lab4.c: 208: LATE=rojo;
  4885   00182A  C041  FF8D         	movff	_rojo,3981	;volatile
  4886   00182E  0012               	return		;funcret
  4887   001830                     __end_of_escenario4:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _borrarDigito *****************
  4891 ;; Defined at:
  4892 ;;		line 237 in file "Lab4.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;		None
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4906 ;;      Params:         0       0       0       0       0       0       0       0       0
  4907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4909 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4910 ;;Total ram usage:        0 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; Hardware stack levels required when called: 3
  4913 ;; This function calls:
  4914 ;;		i2_Lcd_Set_Cursor
  4915 ;;		i2_Lcd_Write_Char
  4916 ;; This function is called by:
  4917 ;;		_ISR
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text33
  4922   001650                     __ptext33:
  4923                           	callstack 0
  4924   001650                     _borrarDigito:
  4925                           	callstack 21
  4926                           
  4927                           ;Lab4.c: 238: if (digito != 1) {
  4928                           
  4929                           ;incstack = 0
  4930   001650  0443               	decf	_digito^0,w,c
  4931   001652  1044               	iorwf	(_digito+1)^0,w,c
  4932   001654  B4D8               	btfsc	status,2,c
  4933   001656  0012               	return	
  4934                           
  4935                           ;Lab4.c: 239: Lcd_Set_Cursor(2, digito - 1);
  4936   001658  0443               	decf	_digito^0,w,c
  4937   00165A  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  4938   00165C  0E02               	movlw	2
  4939   00165E  EC96  F008         	call	i2_Lcd_Set_Cursor
  4940                           
  4941                           ;Lab4.c: 240: Lcd_Write_Char(' ');
  4942   001662  0E20               	movlw	32
  4943   001664  EC72  F00C         	call	i2_Lcd_Write_Char
  4944                           
  4945                           ;Lab4.c: 241: Lcd_Set_Cursor(2, digito - 1);
  4946   001668  0443               	decf	_digito^0,w,c
  4947   00166A  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  4948   00166C  0E02               	movlw	2
  4949   00166E  EC96  F008         	call	i2_Lcd_Set_Cursor
  4950                           
  4951                           ;Lab4.c: 242: digito--;
  4952   001672  0643               	decf	_digito^0,f,c
  4953   001674  A0D8               	btfss	status,0,c
  4954   001676  0644               	decf	(_digito+1)^0,f,c
  4955                           
  4956                           ;Lab4.c: 243: if(digito == 1) decena = 0;
  4957   001678  0443               	decf	_digito^0,w,c
  4958   00167A  1044               	iorwf	(_digito+1)^0,w,c
  4959   00167C  A4D8               	btfss	status,2,c
  4960   00167E  D005               	goto	i2l3049
  4961   001680  0E00               	movlw	0
  4962   001682  6E3C               	movwf	(_decena+1)^0,c
  4963   001684  0E00               	movlw	0
  4964   001686  6E3B               	movwf	_decena^0,c
  4965   001688  0012               	return	
  4966   00168A                     i2l3049:
  4967                           
  4968                           ;Lab4.c: 244: else if(digito == 2) unidad = 0;
  4969   00168A  0E02               	movlw	2
  4970   00168C  1843               	xorwf	_digito^0,w,c
  4971   00168E  1044               	iorwf	(_digito+1)^0,w,c
  4972   001690  A4D8               	btfss	status,2,c
  4973   001692  0012               	return	
  4974   001694  0E00               	movlw	0
  4975   001696  6E3A               	movwf	(_unidad+1)^0,c
  4976   001698  0E00               	movlw	0
  4977   00169A  6E39               	movwf	_unidad^0,c
  4978   00169C  0012               	return		;funcret
  4979   00169E                     __end_of_borrarDigito:
  4980                           	callstack 0
  4981                           
  4982 ;; *************** function _blacklighttoggle *****************
  4983 ;; Defined at:
  4984 ;;		line 150 in file "Lab4.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		None
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4998 ;;      Params:         0       0       0       0       0       0       0       0       0
  4999 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5001 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5002 ;;Total ram usage:        0 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_ISR
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text34
  5012   001BB0                     __ptext34:
  5013                           	callstack 0
  5014   001BB0                     _blacklighttoggle:
  5015                           	callstack 24
  5016                           
  5017                           ;Lab4.c: 151: LATA5=!LATA5;
  5018                           
  5019                           ;incstack = 0
  5020   001BB0  BA89               	btfsc	3977,5,c	;volatile
  5021   001BB2  D002               	goto	i2u65_40
  5022   001BB4  8A89               	bsf	3977,5,c	;volatile
  5023   001BB6  0012               	return	
  5024   001BB8                     i2u65_40:
  5025   001BB8  9A89               	bcf	3977,5,c	;volatile
  5026   001BBA  0012               	return		;funcret
  5027   001BBC                     __end_of_blacklighttoggle:
  5028                           	callstack 0
  5029                           
  5030 ;; *************** function _Trasmitir *****************
  5031 ;; Defined at:
  5032 ;;		line 299 in file "Lab4.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;  i               2    0[COMRAM] int 
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0
  5047 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5049 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5050 ;;Total ram usage:        2 bytes
  5051 ;; Hardware stack levels used: 1
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_ISR
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text35
  5060   0019BE                     __ptext35:
  5061                           	callstack 0
  5062   0019BE                     _Trasmitir:
  5063                           	callstack 24
  5064                           
  5065                           ;Lab4.c: 300: int i;;Lab4.c: 302: for(i=0;buffer[i]!='\0';i++)
  5066                           
  5067                           ;incstack = 0
  5068   0019BE  0E00               	movlw	0
  5069   0019C0  6E02               	movwf	(Trasmitir@i+1)^0,c
  5070   0019C2  0E00               	movlw	0
  5071   0019C4  6E01               	movwf	Trasmitir@i^0,c
  5072   0019C6  D00A               	goto	i2l3075
  5073   0019C8                     i2l323:
  5074   0019C8  A2AC               	btfss	4012,1,c	;volatile
  5075   0019CA  D7FE               	goto	i2l323
  5076                           
  5077                           ;Lab4.c: 305: TXREG = buffer[i];
  5078   0019CC  5001               	movf	Trasmitir@i^0,w,c
  5079   0019CE  0F6C               	addlw	low _buffer
  5080   0019D0  6ED9               	movwf	fsr2l,c
  5081   0019D2  6ADA               	clrf	fsr2h,c
  5082   0019D4  50DF               	movf	indf2,w,c
  5083   0019D6  6EAD               	movwf	173,c	;volatile
  5084   0019D8  4A01               	infsnz	Trasmitir@i^0,f,c
  5085   0019DA  2A02               	incf	(Trasmitir@i+1)^0,f,c
  5086   0019DC                     i2l3075:
  5087   0019DC  5001               	movf	Trasmitir@i^0,w,c
  5088   0019DE  0F6C               	addlw	low _buffer
  5089   0019E0  6ED9               	movwf	fsr2l,c
  5090   0019E2  6ADA               	clrf	fsr2h,c
  5091   0019E4  50DF               	movf	indf2,w,c
  5092   0019E6  A4D8               	btfss	status,2,c
  5093   0019E8  D7EF               	goto	i2l323
  5094                           
  5095                           ;Lab4.c: 306: };Lab4.c: 307: TXREG = '\n';
  5096   0019EA  0E0A               	movlw	10
  5097   0019EC  6EAD               	movwf	173,c	;volatile
  5098   0019EE  0012               	return		;funcret
  5099   0019F0                     __end_of_Trasmitir:
  5100                           	callstack 0
  5101                           
  5102 ;; *************** function _Terminar *****************
  5103 ;; Defined at:
  5104 ;;		line 292 in file "Lab4.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;		None
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;		None
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1    wreg      void 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5118 ;;      Params:         0       0       0       0       0       0       0       0       0
  5119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5121 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5122 ;;Total ram usage:        0 bytes
  5123 ;; Hardware stack levels used: 1
  5124 ;; Hardware stack levels required when called: 4
  5125 ;; This function calls:
  5126 ;;		i2_escenario1
  5127 ;;		i2_vaciar
  5128 ;; This function is called by:
  5129 ;;		_ISR
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text36
  5134   001BBC                     __ptext36:
  5135                           	callstack 0
  5136   001BBC                     _Terminar:
  5137                           	callstack 20
  5138                           
  5139                           ;Lab4.c: 294: vaciar();
  5140                           
  5141                           ;incstack = 0
  5142   001BBC  ECD7  F00B         	call	i2_vaciar	;wreg free
  5143                           
  5144                           ;Lab4.c: 295: escenario1();
  5145   001BC0  EC72  F00B         	call	i2_escenario1	;wreg free
  5146   001BC4  0012               	return		;funcret
  5147   001BC6                     __end_of_Terminar:
  5148                           	callstack 0
  5149                           
  5150 ;; *************** function i2_vaciar *****************
  5151 ;; Defined at:
  5152 ;;		line 268 in file "Lab4.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5166 ;;      Params:         0       0       0       0       0       0       0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5169 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5170 ;;Total ram usage:        0 bytes
  5171 ;; Hardware stack levels used: 1
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_Terminar
  5176 ;;		i2_ContarReal
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text37
  5181   0017AE                     __ptext37:
  5182                           	callstack 0
  5183   0017AE                     i2_vaciar:
  5184                           	callstack 22
  5185                           
  5186                           ;Lab4.c: 269: unidad = 0 ;
  5187                           
  5188                           ;incstack = 0
  5189   0017AE  0E00               	movlw	0
  5190   0017B0  6E3A               	movwf	(_unidad+1)^0,c
  5191   0017B2  0E00               	movlw	0
  5192   0017B4  6E39               	movwf	_unidad^0,c
  5193                           
  5194                           ;Lab4.c: 270: unidad = 0;
  5195   0017B6  0E00               	movlw	0
  5196   0017B8  6E3A               	movwf	(_unidad+1)^0,c
  5197   0017BA  0E00               	movlw	0
  5198   0017BC  6E39               	movwf	_unidad^0,c
  5199                           
  5200                           ;Lab4.c: 271: cantidadRestaUnidad =0b00110000 + unidad;
  5201   0017BE  0E30               	movlw	48
  5202   0017C0  2439               	addwf	_unidad^0,w,c
  5203   0017C2  6E2F               	movwf	_cantidadRestaUnidad^0,c
  5204   0017C4  0E00               	movlw	0
  5205   0017C6  203A               	addwfc	(_unidad+1)^0,w,c
  5206   0017C8  6E30               	movwf	(_cantidadRestaUnidad+1)^0,c
  5207                           
  5208                           ;Lab4.c: 272: cantidadRestaDecena =0b00110000 + unidad;
  5209   0017CA  0E30               	movlw	48
  5210   0017CC  2439               	addwf	_unidad^0,w,c
  5211   0017CE  6E2D               	movwf	_cantidadRestaDecena^0,c
  5212   0017D0  0E00               	movlw	0
  5213   0017D2  203A               	addwfc	(_unidad+1)^0,w,c
  5214   0017D4  6E2E               	movwf	(_cantidadRestaDecena+1)^0,c
  5215                           
  5216                           ;Lab4.c: 273: LATD = 0;
  5217   0017D6  0E00               	movlw	0
  5218   0017D8  6E8C               	movwf	140,c	;volatile
  5219                           
  5220                           ;Lab4.c: 274: LATE = color[0];
  5221   0017DA  C060  FF8D         	movff	_color,3981	;volatile
  5222                           
  5223                           ;Lab4.c: 275: contador =0;
  5224   0017DE  0E00               	movlw	0
  5225   0017E0  6E34               	movwf	(_contador+1)^0,c
  5226   0017E2  0E00               	movlw	0
  5227   0017E4  6E33               	movwf	_contador^0,c
  5228                           
  5229                           ;Lab4.c: 276: digito = 1;
  5230   0017E6  0E00               	movlw	0
  5231   0017E8  6E44               	movwf	(_digito+1)^0,c
  5232   0017EA  0E01               	movlw	1
  5233   0017EC  6E43               	movwf	_digito^0,c
  5234   0017EE  0012               	return		;funcret
  5235   0017F0                     __end_ofi2_vaciar:
  5236                           	callstack 0
  5237                           
  5238 ;; *************** function i2_escenario1 *****************
  5239 ;; Defined at:
  5240 ;;		line 154 in file "Lab4.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;		None
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;		None
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5254 ;;      Params:         0       0       0       0       0       0       0       0       0
  5255 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5256 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5257 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5258 ;;Total ram usage:        0 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 3
  5261 ;; This function calls:
  5262 ;;		i2_Lcd_Blink
  5263 ;;		i2_Lcd_Clear
  5264 ;;		i2_Lcd_Set_Cursor
  5265 ;;		i2_Lcd_Write_Char
  5266 ;;		i2_Lcd_Write_String
  5267 ;; This function is called by:
  5268 ;;		_Terminar
  5269 ;;		_okmenu
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text38
  5274   0016E4                     __ptext38:
  5275                           	callstack 0
  5276   0016E4                     i2_escenario1:
  5277                           	callstack 20
  5278                           
  5279                           ;Lab4.c: 155: menu=1;
  5280                           
  5281                           ;incstack = 0
  5282   0016E4  0E00               	movlw	0
  5283   0016E6  6E48               	movwf	(_menu+1)^0,c
  5284   0016E8  0E01               	movlw	1
  5285   0016EA  6E47               	movwf	_menu^0,c
  5286                           
  5287                           ;Lab4.c: 156: Lcd_Clear();
  5288   0016EC  ECCA  F00D         	call	i2_Lcd_Clear	;wreg free
  5289                           
  5290                           ;Lab4.c: 157: Lcd_Set_Cursor(1, 1);
  5291   0016F0  0E01               	movlw	1
  5292   0016F2  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  5293   0016F4  0E01               	movlw	1
  5294   0016F6  EC96  F008         	call	i2_Lcd_Set_Cursor
  5295                           
  5296                           ;Lab4.c: 158: Lcd_Write_String("Piezas a contar:");
  5297   0016FA  0E57               	movlw	low STR_5
  5298   0016FC  6E05               	movwf	i2Lcd_Write_String@a^0,c
  5299   0016FE  EC37  F00C         	call	i2_Lcd_Write_String	;wreg free
  5300                           
  5301                           ;Lab4.c: 159: Lcd_Set_Cursor(2, 9);
  5302   001702  0E09               	movlw	9
  5303   001704  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  5304   001706  0E02               	movlw	2
  5305   001708  EC96  F008         	call	i2_Lcd_Set_Cursor
  5306                           
  5307                           ;Lab4.c: 160: Lcd_Write_String("A:ok B:");
  5308   00170C  0EB8               	movlw	low STR_6
  5309   00170E  6E05               	movwf	i2Lcd_Write_String@a^0,c
  5310   001710  EC37  F00C         	call	i2_Lcd_Write_String	;wreg free
  5311                           
  5312                           ;Lab4.c: 161: Lcd_Write_Char(0b01111111);
  5313   001714  0E7F               	movlw	127
  5314   001716  EC72  F00C         	call	i2_Lcd_Write_Char
  5315                           
  5316                           ;Lab4.c: 162: Lcd_Set_Cursor(2, 1);
  5317   00171A  0E01               	movlw	1
  5318   00171C  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  5319   00171E  0E02               	movlw	2
  5320   001720  EC96  F008         	call	i2_Lcd_Set_Cursor
  5321                           
  5322                           ;Lab4.c: 163: Lcd_Blink();
  5323   001724  ECBC  F00D         	call	i2_Lcd_Blink	;wreg free
  5324   001728  0012               	return		;funcret
  5325   00172A                     __end_ofi2_escenario1:
  5326                           	callstack 0
  5327                           
  5328 ;; *************** function i2_Lcd_Blink *****************
  5329 ;; Defined at:
  5330 ;;		line 124 in file "lcd.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;		None
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;		None
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  1    wreg      void 
  5337 ;; Registers used:
  5338 ;;		wreg, status,2, cstack
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5344 ;;      Params:         0       0       0       0       0       0       0       0       0
  5345 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5347 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5348 ;;Total ram usage:        0 bytes
  5349 ;; Hardware stack levels used: 1
  5350 ;; Hardware stack levels required when called: 2
  5351 ;; This function calls:
  5352 ;;		i2_Lcd_Cmd
  5353 ;; This function is called by:
  5354 ;;		i2_escenario1
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           	psect	text39
  5359   001B78                     __ptext39:
  5360                           	callstack 0
  5361   001B78                     i2_Lcd_Blink:
  5362                           	callstack 20
  5363                           
  5364                           ;lcd.c: 126: Lcd_Cmd(0x00);
  5365                           
  5366                           ;incstack = 0
  5367   001B78  0E00               	movlw	0
  5368   001B7A  EC8D  F00D         	call	i2_Lcd_Cmd
  5369                           
  5370                           ;lcd.c: 127: Lcd_Cmd(0x0F);
  5371   001B7E  0E0F               	movlw	15
  5372   001B80  EC8D  F00D         	call	i2_Lcd_Cmd
  5373   001B84  0012               	return		;funcret
  5374   001B86                     __end_ofi2_Lcd_Blink:
  5375                           	callstack 0
  5376                           
  5377 ;; *************** function _Reiniciar *****************
  5378 ;; Defined at:
  5379 ;;		line 279 in file "Lab4.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;		None
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;		None
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  1    wreg      void 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5393 ;;      Params:         0       0       0       0       0       0       0       0       0
  5394 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5396 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5397 ;;Total ram usage:        0 bytes
  5398 ;; Hardware stack levels used: 1
  5399 ;; Hardware stack levels required when called: 4
  5400 ;; This function calls:
  5401 ;;		i2_escenario2
  5402 ;; This function is called by:
  5403 ;;		_ISR
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text40
  5408   001988                     __ptext40:
  5409                           	callstack 0
  5410   001988                     _Reiniciar:
  5411                           	callstack 20
  5412                           
  5413                           ;Lab4.c: 281: cantidadRestaUnidad =0b00110000 + unidad;
  5414                           
  5415                           ;incstack = 0
  5416   001988  0E30               	movlw	48
  5417   00198A  2439               	addwf	_unidad^0,w,c
  5418   00198C  6E2F               	movwf	_cantidadRestaUnidad^0,c
  5419   00198E  0E00               	movlw	0
  5420   001990  203A               	addwfc	(_unidad+1)^0,w,c
  5421   001992  6E30               	movwf	(_cantidadRestaUnidad+1)^0,c
  5422                           
  5423                           ;Lab4.c: 282: cantidadRestaDecena =0b00110000 + decena;
  5424   001994  0E30               	movlw	48
  5425   001996  243B               	addwf	_decena^0,w,c
  5426   001998  6E2D               	movwf	_cantidadRestaDecena^0,c
  5427   00199A  0E00               	movlw	0
  5428   00199C  203C               	addwfc	(_decena+1)^0,w,c
  5429   00199E  6E2E               	movwf	(_cantidadRestaDecena+1)^0,c
  5430                           
  5431                           ;Lab4.c: 283: LATD = 0;
  5432   0019A0  0E00               	movlw	0
  5433   0019A2  6E8C               	movwf	140,c	;volatile
  5434                           
  5435                           ;Lab4.c: 284: LATE = color[0];
  5436   0019A4  C060  FF8D         	movff	_color,3981	;volatile
  5437                           
  5438                           ;Lab4.c: 285: contador =0;
  5439   0019A8  0E00               	movlw	0
  5440   0019AA  6E34               	movwf	(_contador+1)^0,c
  5441   0019AC  0E00               	movlw	0
  5442   0019AE  6E33               	movwf	_contador^0,c
  5443                           
  5444                           ;Lab4.c: 286: digito = 1;
  5445   0019B0  0E00               	movlw	0
  5446   0019B2  6E44               	movwf	(_digito+1)^0,c
  5447   0019B4  0E01               	movlw	1
  5448   0019B6  6E43               	movwf	_digito^0,c
  5449                           
  5450                           ;Lab4.c: 287: escenario2();
  5451   0019B8  EC2B  F009         	call	i2_escenario2	;wreg free
  5452   0019BC  0012               	return		;funcret
  5453   0019BE                     __end_of_Reiniciar:
  5454                           	callstack 0
  5455                           
  5456 ;; *************** function i2_escenario2 *****************
  5457 ;; Defined at:
  5458 ;;		line 166 in file "Lab4.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;		None
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;		None
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      void 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5472 ;;      Params:         0       0       0       0       0       0       0       0       0
  5473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5475 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5476 ;;Total ram usage:        0 bytes
  5477 ;; Hardware stack levels used: 1
  5478 ;; Hardware stack levels required when called: 3
  5479 ;; This function calls:
  5480 ;;		i2_Lcd_Clear
  5481 ;;		i2_Lcd_NoBlink
  5482 ;;		i2_Lcd_Set_Cursor
  5483 ;;		i2_Lcd_Write_Char
  5484 ;;		i2_Lcd_Write_String
  5485 ;; This function is called by:
  5486 ;;		_Reiniciar
  5487 ;;		i2_ContarReal
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text41
  5492   001256                     __ptext41:
  5493                           	callstack 0
  5494   001256                     i2_escenario2:
  5495                           	callstack 19
  5496                           
  5497                           ;Lab4.c: 167: menu=2;
  5498                           
  5499                           ;incstack = 0
  5500   001256  0E00               	movlw	0
  5501   001258  6E48               	movwf	(_menu+1)^0,c
  5502   00125A  0E02               	movlw	2
  5503   00125C  6E47               	movwf	_menu^0,c
  5504                           
  5505                           ;Lab4.c: 168: mostrar = 1;
  5506   00125E  0E00               	movlw	0
  5507   001260  6E38               	movwf	(_mostrar+1)^0,c
  5508   001262  0E01               	movlw	1
  5509   001264  6E37               	movwf	_mostrar^0,c
  5510                           
  5511                           ;Lab4.c: 169: Lcd_Clear();
  5512   001266  ECCA  F00D         	call	i2_Lcd_Clear	;wreg free
  5513                           
  5514                           ;Lab4.c: 170: Lcd_NoBlink();
  5515   00126A  ECC3  F00D         	call	i2_Lcd_NoBlink	;wreg free
  5516                           
  5517                           ;Lab4.c: 171: Lcd_Set_Cursor(1, 1);
  5518   00126E  0E01               	movlw	1
  5519   001270  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  5520   001272  0E01               	movlw	1
  5521   001274  EC96  F008         	call	i2_Lcd_Set_Cursor
  5522                           
  5523                           ;Lab4.c: 172: Lcd_Write_String("Faltante:");
  5524   001278  0E9A               	movlw	low STR_7
  5525   00127A  6E05               	movwf	i2Lcd_Write_String@a^0,c
  5526   00127C  EC37  F00C         	call	i2_Lcd_Write_String	;wreg free
  5527                           
  5528                           ;Lab4.c: 173: Lcd_Write_Char(cantidadRestaDecena);
  5529   001280  502D               	movf	_cantidadRestaDecena^0,w,c
  5530   001282  EC72  F00C         	call	i2_Lcd_Write_Char
  5531                           
  5532                           ;Lab4.c: 174: Lcd_Write_Char(cantidadRestaUnidad);
  5533   001286  502F               	movf	_cantidadRestaUnidad^0,w,c
  5534   001288  EC72  F00C         	call	i2_Lcd_Write_Char
  5535                           
  5536                           ;Lab4.c: 175: Lcd_Set_Cursor(1, 14);
  5537   00128C  0E0E               	movlw	14
  5538   00128E  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  5539   001290  0E01               	movlw	1
  5540   001292  EC96  F008         	call	i2_Lcd_Set_Cursor
  5541                           
  5542                           ;Lab4.c: 176: Lcd_Write_String("C=");
  5543   001296  0EC9               	movlw	low STR_8
  5544   001298  6E05               	movwf	i2Lcd_Write_String@a^0,c
  5545   00129A  EC37  F00C         	call	i2_Lcd_Write_String	;wreg free
  5546                           
  5547                           ;Lab4.c: 177: Lcd_Write_Char(4);
  5548   00129E  0E04               	movlw	4
  5549   0012A0  EC72  F00C         	call	i2_Lcd_Write_Char
  5550                           
  5551                           ;Lab4.c: 178: Lcd_Set_Cursor(2, 1);
  5552   0012A4  0E01               	movlw	1
  5553   0012A6  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  5554   0012A8  0E02               	movlw	2
  5555   0012AA  EC96  F008         	call	i2_Lcd_Set_Cursor
  5556                           
  5557                           ;Lab4.c: 179: Lcd_Write_String("Objetivo:");
  5558   0012AE  0EA4               	movlw	low STR_9
  5559   0012B0  6E05               	movwf	i2Lcd_Write_String@a^0,c
  5560   0012B2  EC37  F00C         	call	i2_Lcd_Write_String	;wreg free
  5561                           
  5562                           ;Lab4.c: 180: Lcd_Write_Char(0b00110000 + decena);
  5563   0012B6  503B               	movf	_decena^0,w,c
  5564   0012B8  0F30               	addlw	48
  5565   0012BA  EC72  F00C         	call	i2_Lcd_Write_Char
  5566                           
  5567                           ;Lab4.c: 181: Lcd_Write_Char(0b00110000 + unidad);
  5568   0012BE  5039               	movf	_unidad^0,w,c
  5569   0012C0  0F30               	addlw	48
  5570   0012C2  EC72  F00C         	call	i2_Lcd_Write_Char
  5571                           
  5572                           ;Lab4.c: 182: Lcd_Set_Cursor(2, 14);
  5573   0012C6  0E0E               	movlw	14
  5574   0012C8  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  5575   0012CA  0E02               	movlw	2
  5576   0012CC  EC96  F008         	call	i2_Lcd_Set_Cursor
  5577                           
  5578                           ;Lab4.c: 183: Lcd_Write_String("#=X");
  5579   0012D0  0EC5               	movlw	low STR_10
  5580   0012D2  6E05               	movwf	i2Lcd_Write_String@a^0,c
  5581   0012D4  EC37  F00C         	call	i2_Lcd_Write_String	;wreg free
  5582                           
  5583                           ;Lab4.c: 184: Lcd_Write_Char(3);
  5584   0012D8  0E03               	movlw	3
  5585   0012DA  EC72  F00C         	call	i2_Lcd_Write_Char
  5586   0012DE  0012               	return		;funcret
  5587   0012E0                     __end_ofi2_escenario2:
  5588                           	callstack 0
  5589                           
  5590 ;; *************** function i2_Lcd_Write_String *****************
  5591 ;; Defined at:
  5592 ;;		line 105 in file "lcd.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  a               1    4[COMRAM] PTR const unsigned char 
  5595 ;;		 -> STR_14(12), STR_13(10), STR_12(5), STR_11(18), 
  5596 ;;		 -> STR_10(4), STR_9(10), STR_8(3), STR_7(10), 
  5597 ;;		 -> STR_6(8), STR_5(17), STR_3(12), STR_2(11), 
  5598 ;;		 -> STR_1(15), 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  i               2    6[COMRAM] int 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  1    wreg      void 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5610 ;;      Params:         1       0       0       0       0       0       0       0       0
  5611 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5612 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5613 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5614 ;;Total ram usage:        4 bytes
  5615 ;; Hardware stack levels used: 1
  5616 ;; Hardware stack levels required when called: 2
  5617 ;; This function calls:
  5618 ;;		i2_Lcd_Write_Char
  5619 ;; This function is called by:
  5620 ;;		_escenario4
  5621 ;;		i2_escenario1
  5622 ;;		i2_escenario2
  5623 ;;		i2_escenario3
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           	psect	text42
  5628   00186E                     __ptext42:
  5629                           	callstack 0
  5630   00186E                     i2_Lcd_Write_String:
  5631                           	callstack 20
  5632                           
  5633                           ;lcd.c: 107: int i;;lcd.c: 108: for(i=0;a[i]!='\0';i++)
  5634                           
  5635                           ;incstack = 0
  5636   00186E  0E00               	movlw	0
  5637   001870  6E08               	movwf	(i2Lcd_Write_String@i+1)^0,c
  5638   001872  0E00               	movlw	0
  5639   001874  6E07               	movwf	i2Lcd_Write_String@i^0,c
  5640   001876  D00D               	goto	i2l2349
  5641   001878                     i2l2345:
  5642                           
  5643                           ;lcd.c: 109: Lcd_Write_Char(a[i]);
  5644   001878  5005               	movf	i2Lcd_Write_String@a^0,w,c
  5645   00187A  2407               	addwf	i2Lcd_Write_String@i^0,w,c
  5646   00187C  6E06               	movwf	??i2_Lcd_Write_String^0,c
  5647   00187E  C006  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  5648   001882                     	if	1	;There is more than 1 active tblptr byte
  5649   001882  0E08               	movlw	high __smallconst
  5650   001884  6EF7               	movwf	tblptrh,c
  5651   001886                     	endif
  5652   001886                     	if	0	;tblptru may be non-zero
  5653   001886                     	endif
  5654   001886                     	if	0	;tblptru may be non-zero
  5655   001886                     	endif
  5656   001886  0008               	tblrd		*
  5657   001888  50F5               	movf	tablat,w,c
  5658   00188A  EC72  F00C         	call	i2_Lcd_Write_Char
  5659   00188E  4A07               	infsnz	i2Lcd_Write_String@i^0,f,c
  5660   001890  2A08               	incf	(i2Lcd_Write_String@i+1)^0,f,c
  5661   001892                     i2l2349:
  5662   001892  5005               	movf	i2Lcd_Write_String@a^0,w,c
  5663   001894  2407               	addwf	i2Lcd_Write_String@i^0,w,c
  5664   001896  6E06               	movwf	??i2_Lcd_Write_String^0,c
  5665   001898  C006  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  5666   00189C                     	if	1	;There is more than 1 active tblptr byte
  5667   00189C  0E08               	movlw	high __smallconst
  5668   00189E  6EF7               	movwf	tblptrh,c
  5669   0018A0                     	endif
  5670   0018A0                     	if	0	;tblptru may be non-zero
  5671   0018A0                     	endif
  5672   0018A0                     	if	0	;tblptru may be non-zero
  5673   0018A0                     	endif
  5674   0018A0  0008               	tblrd		*
  5675   0018A2  50F5               	movf	tablat,w,c
  5676   0018A4  0900               	iorlw	0
  5677   0018A6  B4D8               	btfsc	status,2,c
  5678   0018A8  0012               	return	
  5679   0018AA  D7E6               	goto	i2l2345
  5680   0018AC                     __end_ofi2_Lcd_Write_String:
  5681                           	callstack 0
  5682                           
  5683 ;; *************** function i2_Lcd_Set_Cursor *****************
  5684 ;; Defined at:
  5685 ;;		line 27 in file "lcd.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  a               1    wreg     unsigned char 
  5688 ;;  b               1    2[COMRAM] unsigned char 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  a               1    3[COMRAM] unsigned char 
  5691 ;;  temp            1    6[COMRAM] unsigned char 
  5692 ;;  y               1    5[COMRAM] unsigned char 
  5693 ;;  z               1    4[COMRAM] unsigned char 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  1    wreg      void 
  5696 ;; Registers used:
  5697 ;;		wreg, status,2, status,0, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5703 ;;      Params:         1       0       0       0       0       0       0       0       0
  5704 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5705 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5706 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5707 ;;Total ram usage:        5 bytes
  5708 ;; Hardware stack levels used: 1
  5709 ;; Hardware stack levels required when called: 2
  5710 ;; This function calls:
  5711 ;;		i2_Lcd_Cmd
  5712 ;; This function is called by:
  5713 ;;		_escenario4
  5714 ;;		_borrarDigito
  5715 ;;		i2_escenario1
  5716 ;;		i2_escenario2
  5717 ;;		i2_escenario3
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text43
  5722   00112C                     __ptext43:
  5723                           	callstack 0
  5724   00112C                     i2_Lcd_Set_Cursor:
  5725                           	callstack 20
  5726                           
  5727                           ;incstack = 0
  5728                           ;i2Lcd_Set_Cursor@a stored from wreg
  5729   00112C  6E04               	movwf	i2Lcd_Set_Cursor@a^0,c
  5730                           
  5731                           ;lcd.c: 29: char temp,z,y;;lcd.c: 30: if(a == 1)
  5732   00112E  0404               	decf	i2Lcd_Set_Cursor@a^0,w,c
  5733   001130  A4D8               	btfss	status,2,c
  5734   001132  D010               	goto	i2l2319
  5735                           
  5736                           ;lcd.c: 31: {;lcd.c: 32: temp = 0x80 + b - 1;
  5737   001134  5003               	movf	i2Lcd_Set_Cursor@b^0,w,c
  5738   001136  0F7F               	addlw	127
  5739   001138  6E07               	movwf	i2Lcd_Set_Cursor@temp^0,c
  5740                           
  5741                           ;lcd.c: 33: z = temp>>4;
  5742   00113A  3807               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  5743   00113C  0B0F               	andlw	15
  5744   00113E  6E05               	movwf	i2Lcd_Set_Cursor@z^0,c
  5745                           
  5746                           ;lcd.c: 34: y = temp & 0x0F;
  5747   001140  5007               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  5748   001142  0B0F               	andlw	15
  5749   001144  6E06               	movwf	i2Lcd_Set_Cursor@y^0,c
  5750                           
  5751                           ;lcd.c: 35: Lcd_Cmd(z);
  5752   001146  5005               	movf	i2Lcd_Set_Cursor@z^0,w,c
  5753   001148  EC8D  F00D         	call	i2_Lcd_Cmd
  5754                           
  5755                           ;lcd.c: 36: Lcd_Cmd(y);
  5756   00114C  5006               	movf	i2Lcd_Set_Cursor@y^0,w,c
  5757   00114E  EC8D  F00D         	call	i2_Lcd_Cmd
  5758                           
  5759                           ;lcd.c: 37: }
  5760   001152  0012               	return	
  5761   001154                     i2l2319:
  5762                           
  5763                           ;lcd.c: 38: else if(a == 2)
  5764   001154  0E02               	movlw	2
  5765   001156  1804               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  5766   001158  A4D8               	btfss	status,2,c
  5767   00115A  D010               	goto	i2l2327
  5768                           
  5769                           ;lcd.c: 39: {;lcd.c: 40: temp = 0xC0 + b - 1;
  5770   00115C  5003               	movf	i2Lcd_Set_Cursor@b^0,w,c
  5771   00115E  0FBF               	addlw	191
  5772   001160  6E07               	movwf	i2Lcd_Set_Cursor@temp^0,c
  5773                           
  5774                           ;lcd.c: 41: z = temp>>4;
  5775   001162  3807               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  5776   001164  0B0F               	andlw	15
  5777   001166  6E05               	movwf	i2Lcd_Set_Cursor@z^0,c
  5778                           
  5779                           ;lcd.c: 42: y = temp & 0x0F;
  5780   001168  5007               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  5781   00116A  0B0F               	andlw	15
  5782   00116C  6E06               	movwf	i2Lcd_Set_Cursor@y^0,c
  5783                           
  5784                           ;lcd.c: 43: Lcd_Cmd(z);
  5785   00116E  5005               	movf	i2Lcd_Set_Cursor@z^0,w,c
  5786   001170  EC8D  F00D         	call	i2_Lcd_Cmd
  5787                           
  5788                           ;lcd.c: 44: Lcd_Cmd(y);
  5789   001174  5006               	movf	i2Lcd_Set_Cursor@y^0,w,c
  5790   001176  EC8D  F00D         	call	i2_Lcd_Cmd
  5791                           
  5792                           ;lcd.c: 45: }
  5793   00117A  0012               	return	
  5794   00117C                     i2l2327:
  5795                           
  5796                           ;lcd.c: 46: else if(a == 3)
  5797   00117C  0E03               	movlw	3
  5798   00117E  1804               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  5799   001180  A4D8               	btfss	status,2,c
  5800   001182  D010               	goto	i2l2335
  5801                           
  5802                           ;lcd.c: 47: {;lcd.c: 48: temp = 0x94 + b - 1;
  5803   001184  5003               	movf	i2Lcd_Set_Cursor@b^0,w,c
  5804   001186  0F93               	addlw	147
  5805   001188  6E07               	movwf	i2Lcd_Set_Cursor@temp^0,c
  5806                           
  5807                           ;lcd.c: 49: z = temp>>4;
  5808   00118A  3807               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  5809   00118C  0B0F               	andlw	15
  5810   00118E  6E05               	movwf	i2Lcd_Set_Cursor@z^0,c
  5811                           
  5812                           ;lcd.c: 50: y = temp & 0x0F;
  5813   001190  5007               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  5814   001192  0B0F               	andlw	15
  5815   001194  6E06               	movwf	i2Lcd_Set_Cursor@y^0,c
  5816                           
  5817                           ;lcd.c: 51: Lcd_Cmd(z);
  5818   001196  5005               	movf	i2Lcd_Set_Cursor@z^0,w,c
  5819   001198  EC8D  F00D         	call	i2_Lcd_Cmd
  5820                           
  5821                           ;lcd.c: 52: Lcd_Cmd(y);
  5822   00119C  5006               	movf	i2Lcd_Set_Cursor@y^0,w,c
  5823   00119E  EC8D  F00D         	call	i2_Lcd_Cmd
  5824                           
  5825                           ;lcd.c: 53: }
  5826   0011A2  0012               	return	
  5827   0011A4                     i2l2335:
  5828                           
  5829                           ;lcd.c: 54: else if(a == 4)
  5830   0011A4  0E04               	movlw	4
  5831   0011A6  1804               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  5832   0011A8  A4D8               	btfss	status,2,c
  5833   0011AA  0012               	return	
  5834                           
  5835                           ;lcd.c: 55: {;lcd.c: 56: temp = 0xD4 + b - 1;
  5836   0011AC  5003               	movf	i2Lcd_Set_Cursor@b^0,w,c
  5837   0011AE  0FD3               	addlw	211
  5838   0011B0  6E07               	movwf	i2Lcd_Set_Cursor@temp^0,c
  5839                           
  5840                           ;lcd.c: 57: z = temp>>4;
  5841   0011B2  3807               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  5842   0011B4  0B0F               	andlw	15
  5843   0011B6  6E05               	movwf	i2Lcd_Set_Cursor@z^0,c
  5844                           
  5845                           ;lcd.c: 58: y = temp & 0x0F;
  5846   0011B8  5007               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  5847   0011BA  0B0F               	andlw	15
  5848   0011BC  6E06               	movwf	i2Lcd_Set_Cursor@y^0,c
  5849                           
  5850                           ;lcd.c: 59: Lcd_Cmd(z);
  5851   0011BE  5005               	movf	i2Lcd_Set_Cursor@z^0,w,c
  5852   0011C0  EC8D  F00D         	call	i2_Lcd_Cmd
  5853                           
  5854                           ;lcd.c: 60: Lcd_Cmd(y);
  5855   0011C4  5006               	movf	i2Lcd_Set_Cursor@y^0,w,c
  5856   0011C6  EC8D  F00D         	call	i2_Lcd_Cmd
  5857   0011CA  0012               	return	
  5858   0011CC                     __end_ofi2_Lcd_Set_Cursor:
  5859                           	callstack 0
  5860                           
  5861 ;; *************** function i2_Lcd_NoBlink *****************
  5862 ;; Defined at:
  5863 ;;		line 130 in file "lcd.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;		None
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      void 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, cstack
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5877 ;;      Params:         0       0       0       0       0       0       0       0       0
  5878 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5880 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5881 ;;Total ram usage:        0 bytes
  5882 ;; Hardware stack levels used: 1
  5883 ;; Hardware stack levels required when called: 2
  5884 ;; This function calls:
  5885 ;;		i2_Lcd_Cmd
  5886 ;; This function is called by:
  5887 ;;		_escenario4
  5888 ;;		i2_escenario2
  5889 ;;		i2_escenario3
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text44
  5894   001B86                     __ptext44:
  5895                           	callstack 0
  5896   001B86                     i2_Lcd_NoBlink:
  5897                           	callstack 19
  5898                           
  5899                           ;lcd.c: 132: Lcd_Cmd(0x00);
  5900                           
  5901                           ;incstack = 0
  5902   001B86  0E00               	movlw	0
  5903   001B88  EC8D  F00D         	call	i2_Lcd_Cmd
  5904                           
  5905                           ;lcd.c: 133: Lcd_Cmd(0x0C);
  5906   001B8C  0E0C               	movlw	12
  5907   001B8E  EC8D  F00D         	call	i2_Lcd_Cmd
  5908   001B92  0012               	return		;funcret
  5909   001B94                     __end_ofi2_Lcd_NoBlink:
  5910                           	callstack 0
  5911                           
  5912 ;; *************** function i2_Lcd_Clear *****************
  5913 ;; Defined at:
  5914 ;;		line 21 in file "lcd.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;		None
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5928 ;;      Params:         0       0       0       0       0       0       0       0       0
  5929 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5931 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5932 ;;Total ram usage:        0 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; Hardware stack levels required when called: 2
  5935 ;; This function calls:
  5936 ;;		i2_Lcd_Cmd
  5937 ;; This function is called by:
  5938 ;;		_escenario4
  5939 ;;		i2_escenario1
  5940 ;;		i2_escenario2
  5941 ;;		i2_escenario3
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text45
  5946   001B94                     __ptext45:
  5947                           	callstack 0
  5948   001B94                     i2_Lcd_Clear:
  5949                           	callstack 20
  5950                           
  5951                           ;lcd.c: 23: Lcd_Cmd(0);
  5952                           
  5953                           ;incstack = 0
  5954   001B94  0E00               	movlw	0
  5955   001B96  EC8D  F00D         	call	i2_Lcd_Cmd
  5956                           
  5957                           ;lcd.c: 24: Lcd_Cmd(1);
  5958   001B9A  0E01               	movlw	1
  5959   001B9C  EC8D  F00D         	call	i2_Lcd_Cmd
  5960   001BA0  0012               	return		;funcret
  5961   001BA2                     __end_ofi2_Lcd_Clear:
  5962                           	callstack 0
  5963                           
  5964 ;; *************** function i2_Lcd_Cmd *****************
  5965 ;; Defined at:
  5966 ;;		line 12 in file "lcd.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  a               1    wreg     unsigned char 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;  a               1    1[COMRAM] unsigned char 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  1    wreg      void 
  5973 ;; Registers used:
  5974 ;;		wreg, status,2, cstack
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5980 ;;      Params:         0       0       0       0       0       0       0       0       0
  5981 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5983 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5984 ;;Total ram usage:        1 bytes
  5985 ;; Hardware stack levels used: 1
  5986 ;; Hardware stack levels required when called: 1
  5987 ;; This function calls:
  5988 ;;		i2_Lcd_Port
  5989 ;; This function is called by:
  5990 ;;		i2_Lcd_Clear
  5991 ;;		i2_Lcd_Set_Cursor
  5992 ;;		i2_Lcd_Blink
  5993 ;;		i2_Lcd_NoBlink
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text46
  5998   001B1A                     __ptext46:
  5999                           	callstack 0
  6000   001B1A                     i2_Lcd_Cmd:
  6001                           	callstack 20
  6002                           
  6003                           ;incstack = 0
  6004                           ;i2Lcd_Cmd@a stored from wreg
  6005   001B1A  6E02               	movwf	i2Lcd_Cmd@a^0,c
  6006                           
  6007                           ;lcd.c: 14: LATAbits.LA3 = 0;
  6008   001B1C  9689               	bcf	137,3,c	;volatile
  6009                           
  6010                           ;lcd.c: 15: Lcd_Port(a);
  6011   001B1E  5002               	movf	i2Lcd_Cmd@a^0,w,c
  6012   001B20  EC0E  F00D         	call	i2_Lcd_Port
  6013                           
  6014                           ;lcd.c: 16: LATAbits.LA4 = 1;
  6015   001B24  8889               	bsf	137,4,c	;volatile
  6016                           
  6017                           ;lcd.c: 17: _delay((unsigned long)((4)*(1000000/4000.0)));
  6018   001B26  0EC8               	movlw	200
  6019   001B28                     i2u274_47:
  6020   001B28  D000               	nop2	
  6021   001B2A  2EE8               	decfsz	wreg,f,c
  6022   001B2C  D7FD               	bra	i2u274_47
  6023                           
  6024                           ;lcd.c: 18: LATAbits.LA4 = 0;
  6025   001B2E  9889               	bcf	137,4,c	;volatile
  6026   001B30  0012               	return		;funcret
  6027   001B32                     __end_ofi2_Lcd_Cmd:
  6028                           	callstack 0
  6029                           
  6030 ;; *************** function _PiezaAContar *****************
  6031 ;; Defined at:
  6032 ;;		line 220 in file "Lab4.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  a               1    wreg     unsigned char 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  a               1    5[COMRAM] unsigned char 
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  1    wreg      void 
  6039 ;; Registers used:
  6040 ;;		wreg, status,2, status,0, cstack
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6046 ;;      Params:         0       0       0       0       0       0       0       0       0
  6047 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6048 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6049 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6050 ;;Total ram usage:        2 bytes
  6051 ;; Hardware stack levels used: 1
  6052 ;; Hardware stack levels required when called: 2
  6053 ;; This function calls:
  6054 ;;		i2_Lcd_Write_Char
  6055 ;; This function is called by:
  6056 ;;		_ISR
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           	psect	text47
  6061   001544                     __ptext47:
  6062                           	callstack 0
  6063   001544                     _PiezaAContar:
  6064                           	callstack 22
  6065                           
  6066                           ;incstack = 0
  6067                           ;PiezaAContar@a stored from wreg
  6068   001544  6E06               	movwf	PiezaAContar@a^0,c
  6069                           
  6070                           ;Lab4.c: 222: if (digito == 1) {
  6071   001546  0443               	decf	_digito^0,w,c
  6072   001548  1044               	iorwf	(_digito+1)^0,w,c
  6073   00154A  A4D8               	btfss	status,2,c
  6074   00154C  D01A               	goto	i2l3031
  6075                           
  6076                           ;Lab4.c: 223: decena = a & 0x0f;
  6077   00154E  C006  F005         	movff	PiezaAContar@a,??_PiezaAContar
  6078   001552  0E0F               	movlw	15
  6079   001554  1605               	andwf	??_PiezaAContar^0,f,c
  6080   001556  5005               	movf	??_PiezaAContar^0,w,c
  6081   001558  6E3B               	movwf	_decena^0,c
  6082   00155A  6A3C               	clrf	(_decena+1)^0,c
  6083                           
  6084                           ;Lab4.c: 224: if (decena >= 6) decena = 5;
  6085   00155C  BE3C               	btfsc	(_decena+1)^0,7,c
  6086   00155E  D00A               	goto	i2l3027
  6087   001560  503C               	movf	(_decena+1)^0,w,c
  6088   001562  E104               	bnz	i2u174_40
  6089   001564  0E06               	movlw	6
  6090   001566  5C3B               	subwf	_decena^0,w,c
  6091   001568  A0D8               	btfss	status,0,c
  6092   00156A  D004               	goto	i2l3027
  6093   00156C                     i2u174_40:
  6094   00156C  0E00               	movlw	0
  6095   00156E  6E3C               	movwf	(_decena+1)^0,c
  6096   001570  0E05               	movlw	5
  6097   001572  6E3B               	movwf	_decena^0,c
  6098   001574                     i2l3027:
  6099                           
  6100                           ;Lab4.c: 225: Lcd_Write_Char(0b00110000 + decena);
  6101   001574  503B               	movf	_decena^0,w,c
  6102   001576  0F30               	addlw	48
  6103   001578  EC72  F00C         	call	i2_Lcd_Write_Char
  6104   00157C                     i2l3029:
  6105                           
  6106                           ;Lab4.c: 226: digito++;
  6107   00157C  4A43               	infsnz	_digito^0,f,c
  6108   00157E  2A44               	incf	(_digito+1)^0,f,c
  6109                           
  6110                           ;Lab4.c: 227: }
  6111   001580  0012               	return	
  6112   001582                     i2l3031:
  6113                           
  6114                           ;Lab4.c: 228: else if (digito == 2) {
  6115   001582  0E02               	movlw	2
  6116   001584  1843               	xorwf	_digito^0,w,c
  6117   001586  1044               	iorwf	(_digito+1)^0,w,c
  6118   001588  A4D8               	btfss	status,2,c
  6119   00158A  0012               	return	
  6120                           
  6121                           ;Lab4.c: 229: unidad = a & 0x0f;
  6122   00158C  C006  F005         	movff	PiezaAContar@a,??_PiezaAContar
  6123   001590  0E0F               	movlw	15
  6124   001592  1605               	andwf	??_PiezaAContar^0,f,c
  6125   001594  5005               	movf	??_PiezaAContar^0,w,c
  6126   001596  6E39               	movwf	_unidad^0,c
  6127   001598  6A3A               	clrf	(_unidad+1)^0,c
  6128                           
  6129                           ;Lab4.c: 230: Lcd_Write_Char(0b00110000 + unidad);
  6130   00159A  5039               	movf	_unidad^0,w,c
  6131   00159C  0F30               	addlw	48
  6132   00159E  EC72  F00C         	call	i2_Lcd_Write_Char
  6133   0015A2  D7EC               	goto	i2l3029
  6134   0015A4                     __end_of_PiezaAContar:
  6135                           	callstack 0
  6136                           
  6137 ;; *************** function i2_Lcd_Write_Char *****************
  6138 ;; Defined at:
  6139 ;;		line 89 in file "lcd.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  a               1    wreg     unsigned char 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;  a               1    3[COMRAM] unsigned char 
  6144 ;;  y               1    2[COMRAM] unsigned char 
  6145 ;;  temp            1    1[COMRAM] unsigned char 
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  1    wreg      void 
  6148 ;; Registers used:
  6149 ;;		wreg, status,2, status,0, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6155 ;;      Params:         0       0       0       0       0       0       0       0       0
  6156 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6158 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6159 ;;Total ram usage:        3 bytes
  6160 ;; Hardware stack levels used: 1
  6161 ;; Hardware stack levels required when called: 1
  6162 ;; This function calls:
  6163 ;;		i2_Lcd_Port
  6164 ;; This function is called by:
  6165 ;;		_escenario4
  6166 ;;		_PiezaAContar
  6167 ;;		_borrarDigito
  6168 ;;		i2_Lcd_Write_String
  6169 ;;		i2_escenario1
  6170 ;;		i2_escenario2
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text48
  6175   0018E4                     __ptext48:
  6176                           	callstack 0
  6177   0018E4                     i2_Lcd_Write_Char:
  6178                           	callstack 20
  6179                           
  6180                           ;incstack = 0
  6181                           ;i2Lcd_Write_Char@a stored from wreg
  6182   0018E4  6E04               	movwf	i2Lcd_Write_Char@a^0,c
  6183                           
  6184                           ;lcd.c: 91: char temp,y;;lcd.c: 92: temp = a&0x0F;
  6185   0018E6  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  6186   0018E8  0B0F               	andlw	15
  6187   0018EA  6E02               	movwf	i2Lcd_Write_Char@temp^0,c
  6188                           
  6189                           ;lcd.c: 93: y = a&0xF0;
  6190   0018EC  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  6191   0018EE  0BF0               	andlw	240
  6192   0018F0  6E03               	movwf	i2Lcd_Write_Char@y^0,c
  6193                           
  6194                           ;lcd.c: 94: LATAbits.LA3 = 1;
  6195   0018F2  8689               	bsf	137,3,c	;volatile
  6196                           
  6197                           ;lcd.c: 95: Lcd_Port(y>>4);
  6198   0018F4  3803               	swapf	i2Lcd_Write_Char@y^0,w,c
  6199   0018F6  0B0F               	andlw	15
  6200   0018F8  EC0E  F00D         	call	i2_Lcd_Port
  6201                           
  6202                           ;lcd.c: 96: LATAbits.LA4 = 1;
  6203   0018FC  8889               	bsf	137,4,c	;volatile
  6204                           
  6205                           ;lcd.c: 97: _delay((unsigned long)((40)*(1000000/4000000.0)));
  6206   0018FE  0E03               	movlw	3
  6207   001900                     i2u275_47:
  6208   001900  2EE8               	decfsz	wreg,f,c
  6209   001902  D7FE               	bra	i2u275_47
  6210   001904  0000               	nop	
  6211                           
  6212                           ;lcd.c: 98: LATAbits.LA4 = 0;
  6213   001906  9889               	bcf	137,4,c	;volatile
  6214                           
  6215                           ;lcd.c: 99: Lcd_Port(temp);
  6216   001908  5002               	movf	i2Lcd_Write_Char@temp^0,w,c
  6217   00190A  EC0E  F00D         	call	i2_Lcd_Port
  6218                           
  6219                           ;lcd.c: 100: LATAbits.LA4 = 1;
  6220   00190E  8889               	bsf	137,4,c	;volatile
  6221                           
  6222                           ;lcd.c: 101: _delay((unsigned long)((40)*(1000000/4000000.0)));
  6223   001910  0E03               	movlw	3
  6224   001912                     i2u276_47:
  6225   001912  2EE8               	decfsz	wreg,f,c
  6226   001914  D7FE               	bra	i2u276_47
  6227   001916  0000               	nop	
  6228                           
  6229                           ;lcd.c: 102: LATAbits.LA4 = 0;
  6230   001918  9889               	bcf	137,4,c	;volatile
  6231   00191A  0012               	return		;funcret
  6232   00191C                     __end_ofi2_Lcd_Write_Char:
  6233                           	callstack 0
  6234                           
  6235 ;; *************** function i2_Lcd_Port *****************
  6236 ;; Defined at:
  6237 ;;		line 4 in file "lcd.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;  a               1    wreg     unsigned char 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  a               1    0[COMRAM] unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1    wreg      void 
  6244 ;; Registers used:
  6245 ;;		wreg
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6251 ;;      Params:         0       0       0       0       0       0       0       0       0
  6252 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6254 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6255 ;;Total ram usage:        1 bytes
  6256 ;; Hardware stack levels used: 1
  6257 ;; This function calls:
  6258 ;;		Nothing
  6259 ;; This function is called by:
  6260 ;;		i2_Lcd_Cmd
  6261 ;;		i2_Lcd_Write_Char
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text49
  6266   001A1C                     __ptext49:
  6267                           	callstack 0
  6268   001A1C                     i2_Lcd_Port:
  6269                           	callstack 20
  6270                           
  6271                           ;incstack = 0
  6272                           ;i2Lcd_Port@a stored from wreg
  6273   001A1C  6E01               	movwf	i2Lcd_Port@a^0,c
  6274                           
  6275                           ;lcd.c: 6: (a & 1) ? (LATDbits.LD4 = 1) : (LATDbits.LD4 = 0);
  6276   001A1E  A001               	btfss	i2Lcd_Port@a^0,0,c
  6277   001A20  D002               	goto	i2l14
  6278   001A22  888C               	bsf	140,4,c	;volatile
  6279   001A24  D001               	goto	i2l2221
  6280   001A26                     i2l14:
  6281   001A26  988C               	bcf	140,4,c	;volatile
  6282   001A28                     i2l2221:
  6283                           
  6284                           ;lcd.c: 7: (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  6285   001A28  A201               	btfss	i2Lcd_Port@a^0,1,c
  6286   001A2A  D002               	goto	i2l18
  6287   001A2C  8A8C               	bsf	140,5,c	;volatile
  6288   001A2E  D001               	goto	i2l2225
  6289   001A30                     i2l18:
  6290   001A30  9A8C               	bcf	140,5,c	;volatile
  6291   001A32                     i2l2225:
  6292                           
  6293                           ;lcd.c: 8: (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  6294   001A32  A401               	btfss	i2Lcd_Port@a^0,2,c
  6295   001A34  D002               	goto	i2l22
  6296   001A36  8C8C               	bsf	140,6,c	;volatile
  6297   001A38  D001               	goto	i2l2229
  6298   001A3A                     i2l22:
  6299   001A3A  9C8C               	bcf	140,6,c	;volatile
  6300   001A3C                     i2l2229:
  6301                           
  6302                           ;lcd.c: 9: (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  6303   001A3C  A601               	btfss	i2Lcd_Port@a^0,3,c
  6304   001A3E  D002               	goto	i2l26
  6305   001A40  8E8C               	bsf	140,7,c	;volatile
  6306   001A42  0012               	return	
  6307   001A44                     i2l26:
  6308   001A44  9E8C               	bcf	140,7,c	;volatile
  6309   001A46  0012               	return		;funcret
  6310   001A48                     __end_ofi2_Lcd_Port:
  6311                           	callstack 0
  6312                           
  6313                           	psect	rparam
  6314   000000                     
  6315                           	psect	temp
  6316   00004B                     btemp:
  6317                           	callstack 0
  6318   00004B                     	ds	1
  6319   000000                     int$flags	set	btemp
  6320   000000                     wtemp8	set	btemp+1
  6321   000000                     ttemp5	set	btemp+1
  6322   000000                     ttemp6	set	btemp+4
  6323   000000                     ttemp7	set	btemp+8
  6324                           
  6325                           	psect	idloc
  6326                           
  6327                           ;Config register IDLOC0 @ 0x200000
  6328                           ;	unspecified, using default values
  6329   200000                     	org	2097152
  6330   200000  FF                 	db	255
  6331                           
  6332                           ;Config register IDLOC1 @ 0x200001
  6333                           ;	unspecified, using default values
  6334   200001                     	org	2097153
  6335   200001  FF                 	db	255
  6336                           
  6337                           ;Config register IDLOC2 @ 0x200002
  6338                           ;	unspecified, using default values
  6339   200002                     	org	2097154
  6340   200002  FF                 	db	255
  6341                           
  6342                           ;Config register IDLOC3 @ 0x200003
  6343                           ;	unspecified, using default values
  6344   200003                     	org	2097155
  6345   200003  FF                 	db	255
  6346                           
  6347                           ;Config register IDLOC4 @ 0x200004
  6348                           ;	unspecified, using default values
  6349   200004                     	org	2097156
  6350   200004  FF                 	db	255
  6351                           
  6352                           ;Config register IDLOC5 @ 0x200005
  6353                           ;	unspecified, using default values
  6354   200005                     	org	2097157
  6355   200005  FF                 	db	255
  6356                           
  6357                           ;Config register IDLOC6 @ 0x200006
  6358                           ;	unspecified, using default values
  6359   200006                     	org	2097158
  6360   200006  FF                 	db	255
  6361                           
  6362                           ;Config register IDLOC7 @ 0x200007
  6363                           ;	unspecified, using default values
  6364   200007                     	org	2097159
  6365   200007  FF                 	db	255
  6366                           
  6367                           	psect	config
  6368                           
  6369                           ;Config register CONFIG1L @ 0x300000
  6370                           ;	unspecified, using default values
  6371                           ;	PLL Prescaler Selection bits
  6372                           ;	PLLDIV = 0x0, unprogrammed default
  6373                           ;	System Clock Postscaler Selection bits
  6374                           ;	CPUDIV = 0x0, unprogrammed default
  6375                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6376                           ;	USBDIV = 0x0, unprogrammed default
  6377   300000                     	org	3145728
  6378   300000  00                 	db	0
  6379                           
  6380                           ;Config register CONFIG1H @ 0x300001
  6381                           ;	Oscillator Selection bits
  6382                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  6383                           ;	Fail-Safe Clock Monitor Enable bit
  6384                           ;	FCMEN = 0x0, unprogrammed default
  6385                           ;	Internal/External Oscillator Switchover bit
  6386                           ;	IESO = 0x0, unprogrammed default
  6387   300001                     	org	3145729
  6388   300001  09                 	db	9
  6389                           
  6390                           ;Config register CONFIG2L @ 0x300002
  6391                           ;	unspecified, using default values
  6392                           ;	Power-up Timer Enable bit
  6393                           ;	PWRT = 0x1, unprogrammed default
  6394                           ;	Brown-out Reset Enable bits
  6395                           ;	BOR = 0x3, unprogrammed default
  6396                           ;	Brown-out Reset Voltage bits
  6397                           ;	BORV = 0x3, unprogrammed default
  6398                           ;	USB Voltage Regulator Enable bit
  6399                           ;	VREGEN = 0x0, unprogrammed default
  6400   300002                     	org	3145730
  6401   300002  1F                 	db	31
  6402                           
  6403                           ;Config register CONFIG2H @ 0x300003
  6404                           ;	Watchdog Timer Enable bit
  6405                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6406                           ;	Watchdog Timer Postscale Select bits
  6407                           ;	WDTPS = 0xF, unprogrammed default
  6408   300003                     	org	3145731
  6409   300003  1E                 	db	30
  6410                           
  6411                           ; Padding undefined space
  6412   300004                     	org	3145732
  6413   300004  FF                 	db	255
  6414                           
  6415                           ;Config register CONFIG3H @ 0x300005
  6416                           ;	CCP2 MUX bit
  6417                           ;	CCP2MX = 0x1, unprogrammed default
  6418                           ;	PORTB A/D Enable bit
  6419                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6420                           ;	Low-Power Timer 1 Oscillator Enable bit
  6421                           ;	LPT1OSC = 0x0, unprogrammed default
  6422                           ;	MCLR Pin Enable bit
  6423                           ;	MCLRE = 0x1, unprogrammed default
  6424   300005                     	org	3145733
  6425   300005  81                 	db	129
  6426                           
  6427                           ;Config register CONFIG4L @ 0x300006
  6428                           ;	Stack Full/Underflow Reset Enable bit
  6429                           ;	STVREN = 0x1, unprogrammed default
  6430                           ;	Single-Supply ICSP Enable bit
  6431                           ;	LVP = OFF, Single-Supply ICSP disabled
  6432                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6433                           ;	ICPRT = 0x0, unprogrammed default
  6434                           ;	Extended Instruction Set Enable bit
  6435                           ;	XINST = 0x0, unprogrammed default
  6436                           ;	Background Debugger Enable bit
  6437                           ;	DEBUG = 0x1, unprogrammed default
  6438   300006                     	org	3145734
  6439   300006  81                 	db	129
  6440                           
  6441                           ; Padding undefined space
  6442   300007                     	org	3145735
  6443   300007  FF                 	db	255
  6444                           
  6445                           ;Config register CONFIG5L @ 0x300008
  6446                           ;	unspecified, using default values
  6447                           ;	Code Protection bit
  6448                           ;	CP0 = 0x1, unprogrammed default
  6449                           ;	Code Protection bit
  6450                           ;	CP1 = 0x1, unprogrammed default
  6451                           ;	Code Protection bit
  6452                           ;	CP2 = 0x1, unprogrammed default
  6453                           ;	Code Protection bit
  6454                           ;	CP3 = 0x1, unprogrammed default
  6455   300008                     	org	3145736
  6456   300008  0F                 	db	15
  6457                           
  6458                           ;Config register CONFIG5H @ 0x300009
  6459                           ;	unspecified, using default values
  6460                           ;	Boot Block Code Protection bit
  6461                           ;	CPB = 0x1, unprogrammed default
  6462                           ;	Data EEPROM Code Protection bit
  6463                           ;	CPD = 0x1, unprogrammed default
  6464   300009                     	org	3145737
  6465   300009  C0                 	db	192
  6466                           
  6467                           ;Config register CONFIG6L @ 0x30000A
  6468                           ;	unspecified, using default values
  6469                           ;	Write Protection bit
  6470                           ;	WRT0 = 0x1, unprogrammed default
  6471                           ;	Write Protection bit
  6472                           ;	WRT1 = 0x1, unprogrammed default
  6473                           ;	Write Protection bit
  6474                           ;	WRT2 = 0x1, unprogrammed default
  6475                           ;	Write Protection bit
  6476                           ;	WRT3 = 0x1, unprogrammed default
  6477   30000A                     	org	3145738
  6478   30000A  0F                 	db	15
  6479                           
  6480                           ;Config register CONFIG6H @ 0x30000B
  6481                           ;	unspecified, using default values
  6482                           ;	Configuration Register Write Protection bit
  6483                           ;	WRTC = 0x1, unprogrammed default
  6484                           ;	Boot Block Write Protection bit
  6485                           ;	WRTB = 0x1, unprogrammed default
  6486                           ;	Data EEPROM Write Protection bit
  6487                           ;	WRTD = 0x1, unprogrammed default
  6488   30000B                     	org	3145739
  6489   30000B  E0                 	db	224
  6490                           
  6491                           ;Config register CONFIG7L @ 0x30000C
  6492                           ;	unspecified, using default values
  6493                           ;	Table Read Protection bit
  6494                           ;	EBTR0 = 0x1, unprogrammed default
  6495                           ;	Table Read Protection bit
  6496                           ;	EBTR1 = 0x1, unprogrammed default
  6497                           ;	Table Read Protection bit
  6498                           ;	EBTR2 = 0x1, unprogrammed default
  6499                           ;	Table Read Protection bit
  6500                           ;	EBTR3 = 0x1, unprogrammed default
  6501   30000C                     	org	3145740
  6502   30000C  0F                 	db	15
  6503                           
  6504                           ;Config register CONFIG7H @ 0x30000D
  6505                           ;	unspecified, using default values
  6506                           ;	Boot Block Table Read Protection bit
  6507                           ;	EBTRB = 0x1, unprogrammed default
  6508   30000D                     	org	3145741
  6509   30000D  40                 	db	64
  6510                           tosu	equ	0xFFF
  6511                           tosh	equ	0xFFE
  6512                           tosl	equ	0xFFD
  6513                           stkptr	equ	0xFFC
  6514                           pclatu	equ	0xFFB
  6515                           pclath	equ	0xFFA
  6516                           pcl	equ	0xFF9
  6517                           tblptru	equ	0xFF8
  6518                           tblptrh	equ	0xFF7
  6519                           tblptrl	equ	0xFF6
  6520                           tablat	equ	0xFF5
  6521                           prodh	equ	0xFF4
  6522                           prodl	equ	0xFF3
  6523                           indf0	equ	0xFEF
  6524                           postinc0	equ	0xFEE
  6525                           postdec0	equ	0xFED
  6526                           preinc0	equ	0xFEC
  6527                           plusw0	equ	0xFEB
  6528                           fsr0h	equ	0xFEA
  6529                           fsr0l	equ	0xFE9
  6530                           wreg	equ	0xFE8
  6531                           indf1	equ	0xFE7
  6532                           postinc1	equ	0xFE6
  6533                           postdec1	equ	0xFE5
  6534                           preinc1	equ	0xFE4
  6535                           plusw1	equ	0xFE3
  6536                           fsr1h	equ	0xFE2
  6537                           fsr1l	equ	0xFE1
  6538                           bsr	equ	0xFE0
  6539                           indf2	equ	0xFDF
  6540                           postinc2	equ	0xFDE
  6541                           postdec2	equ	0xFDD
  6542                           preinc2	equ	0xFDC
  6543                           plusw2	equ	0xFDB
  6544                           fsr2h	equ	0xFDA
  6545                           fsr2l	equ	0xFD9
  6546                           status	equ	0xFD8

Data Sizes:
    Strings     153
    Constant    50
    Data        45
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      74
    BANK0           160      9      41
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Lcd_CGRAM_CreateChar@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> figura_1(CODE[8]), figura_2(CODE[8]), figura_3(CODE[8]), figura_4(CODE[8]), 
		 -> figura_5(CODE[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[15]), STR_10(CODE[4]), STR_11(CODE[18]), STR_12(CODE[5]), 
		 -> STR_13(CODE[10]), STR_14(CODE[12]), STR_2(CODE[11]), STR_3(CODE[12]), 
		 -> STR_5(CODE[17]), STR_6(CODE[8]), STR_7(CODE[10]), STR_8(CODE[3]), 
		 -> STR_9(CODE[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_4(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _escenario1->_Lcd_Write_String
    _Lcd_Blink->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_CGRAM_Init->_Lcd_Cmd
    _Lcd_CGRAM_CreateChar->_Lcd_Write_Char
    _Lcd_CGRAM_Close->_Lcd_Cmd
    _ContarReal->___awdiv
    _escenario3->_Lcd_Write_String
    _escenario2->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMRAM

    _okmenu->i2_ContarReal
    i2_ContarReal->i2___awdiv
    i2_escenario3->i2_Lcd_Write_String
    _escenario4->i2_Lcd_Write_String
    _borrarDigito->i2_Lcd_Set_Cursor
    i2_escenario1->i2_Lcd_Write_String
    i2_Lcd_Blink->i2_Lcd_Cmd
    i2_escenario2->i2_Lcd_Write_String
    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_NoBlink->i2_Lcd_Cmd
    i2_Lcd_Clear->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port
    _PiezaAContar->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   25025
                                             36 COMRAM     2     2      0
                                              6 BANK0      3     3      0
                         _ContarReal
                         _Conversion
                          _Lcd_Blink
                    _Lcd_CGRAM_Close
               _Lcd_CGRAM_CreateChar
                     _Lcd_CGRAM_Init
                          _Lcd_Clear
                           _Lcd_Init
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                         _escenario1
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    16      4    1579
                                             31 COMRAM     5     1      4
                                              0 BANK0      6     6      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             26 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                             19 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _escenario1                                           0     0      0    4713
                          _Lcd_Blink
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Blink                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     434
                                             21 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Init                                       0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_CreateChar                                11    10      1    1775
                                             23 COMRAM    11    10      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Close                                      0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           4     2      2      31
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ContarReal                                           2     2      0   11182
                                             27 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                             ___wmul
                         _escenario2
                         _escenario3
                             _vaciar
 ---------------------------------------------------------------------------------
 (2) _vaciar                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _escenario3                                           0     0      0    4459
                          _Lcd_Clear
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _escenario2                                           0     0      0    4713
                          _Lcd_Clear
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     3      1    1484
                                             23 COMRAM     4     3      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     254
                                             20 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    2665
                                             21 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_NoBlink                                          0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              1     1      0     155
                                             20 COMRAM     1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  9     9      0   13755
                                             10 COMRAM     9     9      0
                       _PiezaAContar
                          _Reiniciar
                           _Terminar
                          _Trasmitir
                   _blacklighttoggle
                       _borrarDigito
                         _escenario4
                             _okmenu
 ---------------------------------------------------------------------------------
 (7) _okmenu                                               0     0      0    6579
                       i2_ContarReal
                       i2_escenario1
 ---------------------------------------------------------------------------------
 (8) i2_ContarReal                                         2     2      0    4665
                                              8 COMRAM     2     2      0
                          i2___awdiv
                          i2___awmod
                           i2___wmul
                       i2_escenario2
                       i2_escenario3
                           i2_vaciar
 ---------------------------------------------------------------------------------
 (9) i2_escenario3                                         0     0      0    1736
                        i2_Lcd_Clear
                      i2_Lcd_NoBlink
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awdiv                                            8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _escenario4                                           0     0      0    1914
                        i2_Lcd_Clear
                      i2_Lcd_NoBlink
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (7) _borrarDigito                                         0     0      0    1166
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) _blacklighttoggle                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Trasmitir                                            2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Terminar                                             0     0      0    1914
                       i2_escenario1
                           i2_vaciar
 ---------------------------------------------------------------------------------
 (9) i2_vaciar                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_escenario1                                         0     0      0    1914
                        i2_Lcd_Blink
                        i2_Lcd_Clear
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Blink                                          0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) _Reiniciar                                            0     0      0    1914
                       i2_escenario2
 ---------------------------------------------------------------------------------
 (9) i2_escenario2                                         0     0      0    1914
                        i2_Lcd_Clear
                      i2_Lcd_NoBlink
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Write_String                                   4     3      1     528
                                              4 COMRAM     4     3      1
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Set_Cursor                                     5     4      1     988
                                              2 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_NoBlink                                       0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Clear                                          0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Cmd                                           1     1      0     110
                                              1 COMRAM     1     1      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) _PiezaAContar                                         2     2      0     222
                                              4 COMRAM     2     2      0
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Write_Char                                    3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (11) i2_Lcd_Port                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ContarReal
     ___awdiv
     ___awmod
     ___wmul
     _escenario2
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_NoBlink
         _Lcd_Cmd
       _Lcd_Set_Cursor
         _Lcd_Cmd
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
     _escenario3
       _Lcd_Clear
       _Lcd_NoBlink
       _Lcd_Set_Cursor
       _Lcd_Write_String
     _vaciar
   _Conversion
   _Lcd_Blink
     _Lcd_Cmd
   _Lcd_CGRAM_Close
     _Lcd_Cmd
   _Lcd_CGRAM_CreateChar
     _Lcd_Write_Char
   _Lcd_CGRAM_Init
     _Lcd_Cmd
   _Lcd_Clear
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_NoBlink
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
   _escenario1
     _Lcd_Blink
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_Char
     _Lcd_Write_String
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)
   _PiezaAContar
     i2_Lcd_Write_Char
       i2_Lcd_Port
   _Reiniciar
     i2_escenario2
       i2_Lcd_Clear
         i2_Lcd_Cmd
           i2_Lcd_Port
       i2_Lcd_NoBlink
         i2_Lcd_Cmd
       i2_Lcd_Set_Cursor
         i2_Lcd_Cmd
       i2_Lcd_Write_Char
       i2_Lcd_Write_String
         i2_Lcd_Write_Char
   _Terminar
     i2_escenario1
       i2_Lcd_Blink
         i2_Lcd_Cmd
       i2_Lcd_Clear
       i2_Lcd_Set_Cursor
       i2_Lcd_Write_Char
       i2_Lcd_Write_String
     i2_vaciar
   _Trasmitir
   _blacklighttoggle
   _borrarDigito
     i2_Lcd_Set_Cursor
     i2_Lcd_Write_Char
   _escenario4
     i2_Lcd_Clear
     i2_Lcd_NoBlink
     i2_Lcd_Set_Cursor
     i2_Lcd_Write_Char
     i2_Lcd_Write_String
   _okmenu
     i2_ContarReal
       i2___awdiv
       i2___awmod
       i2___wmul
       i2_escenario2
       i2_escenario3
         i2_Lcd_Clear
         i2_Lcd_NoBlink
         i2_Lcd_Set_Cursor
         i2_Lcd_Write_String
       i2_vaciar
     i2_escenario1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      9      29       5       25.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      4A       1       78.7%
BITBIGSFRlll        20      0       0      29        0.0%
BITBIGSFRhhhhlh     19      0       0      21        0.0%
BITBIGSFRhhhlll     14      0       0      26        0.0%
BITBIGSFRhhhhll     10      0       0      22        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhhhllh      8      0       0      24        0.0%
BITBIGSFRllh         7      0       0      28        0.0%
BITBIGSFRhhhllh      7      0       0      23        0.0%
BITBIGSFRhl          4      0       0      27        0.0%
BITBIGSFRhhhllh      1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      73      30        0.0%
DATA                 0      0      73       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Sep 10 17:31:26 2024

                           _t 003E                             _v 0045                            l22 1A0E  
                          l14 19FA                            l26 1A18                            l18 1A04  
                          _GO 7E11                  ___awdiv@sign 0019           ___wmul@multiplicand 0016  
                         l330 1A88                           l268 0A6C                           l887 1646  
                         l897 1762                           _GIE 7F97                           _RB4 7C0C  
                         _RB5 7C0D                           _RB6 7C0E                           _RB7 7C0F  
                         _ISR 0008                 ?_borrarDigito 0001                  ___awmod@sign 0019  
              _contadorDecena 0029                           wreg 0FE8           __end_of_Lcd_NoBlink 1B6A  
                        ?_ISR 0001                _contadorUnidad 002B         Lcd_CGRAM_CreateChar@i 001B  
                        l3501 14B2                          l3351 1104                          l3343 10DC  
                        l3335 10B4                          l3441 12F4                          l3505 14BC  
                        l3361 183A                          l3521 161C                          l3291 1A10  
                        l3283 19FC                          l3603 0C3A                          l3531 163C  
                        l3453 131A                          l3509 14CA                          l3365 1854  
                        l3621 0C86                          l3541 1740                          l3455 1322  
                        l3447 1304                          l3287 1A06                          l3615 0C62  
                        l3519 1614                          l3473 135A                          l3465 1342  
                        l3633 0CAE                          l3609 0C5E                          l3721 0DA6  
                        l3713 0D8A                          l3651 0CDA                          l3627 0C8A  
                        l3547 1758                          l3539 1738                          l3469 134C  
                        l3493 1492                          l3485 1478                          l3645 0CD6  
                        l3725 0DAC                          l3495 149A                          l3663 0D02  
                        l3639 0CB2                          l3591 0C16                          l3751 0E68  
                        l3727 0DD0                          l3719 0DA0                          l3489 1484  
                        l3657 0CFE                          l3585 0C12                          l3745 0E18  
                        l3737 0DE6                          l3675 0D2A                          l3683 0D4E  
                        l3669 0D26                          l3597 0C36                          l3853 09C8  
                        l3881 0A3A                          l3889 0A6E                          STR_1 0868  
                        STR_2 088F                          STR_3 0883                          STR_4 0845  
                        STR_5 0857                          STR_6 08B8                          STR_7 089A  
                        STR_8 08C9                          STR_9 08A4               ?_Lcd_CGRAM_Init 0001  
                        _LATB 0F8A                          u2400 1744                          _LATD 0F8C  
                        _LATE 0F8D                          u2330 149E                          u2270 1326  
                        u2370 1620                          u2530 0E12                          u2540 0E70  
                        u2550 0E8A                          u2707 18DA                          u2627 0910  
                        u2717 1B10                          u2637 09B4                          u2590 0A78  
                        u2647 0A1C                          u2657 1400                          u2667 1412  
                        u2677 1424                          u2598 0A7A                          u2687 0F72  
                        _RBIE 7F93                          _RBIF 7F90                          u2697 18C8  
                        i2l22 1A3A                          i2l14 1A26                          i2l26 1A44  
                        i2l18 1A30                          _RBPU 7F8F                          _TMR0 0FD6  
                        _TRMT 7D61             ?_Lcd_Write_String 0018                          _main 08CE  
                        _menu 0047                          _rojo 0041                          fsr2h 0FDA  
                        indf2 0FDF                          fsr1l 0FE1                          fsr2l 0FD9  
                        btemp 004B                          prodh 0FF4                          prodl 0FF3  
                        start 000E            ??_Lcd_Write_String 0019               __end_of_Lcd_Cmd 1B1A  
                ___param_bank 0000                         ??_ISR 000B                         ?_main 0001  
             __end_of___awdiv 1364                         _ADRES 0FC3                         STR_10 08C5  
                       STR_11 0833                         STR_12 08C0                         STR_13 08AE  
                       STR_14 0877               __end_of___awmod 14D4              ?_Lcd_CGRAM_Close 0001  
              ??_borrarDigito 0008                         _T0CON 0FD5               ___awdiv@divisor 0016  
                       _LATA1 7C49                         _LATA5 7C4D                         _LATC2 7C5A  
             __end_of___lwdiv 1650               __end_of___lwmod 176C                         i2l323 19C8  
                       i2l350 0AEE                         i2l360 0B36                         i2l352 0AFA  
                       i2l380 0BEA                         i2l372 0B92                         i2l364 0B58  
                       i2l356 0B1E                         i2l348 0AE2                         i2l373 0BB8  
                       i2l374 0B9E                         i2l366 0B64                         i2l358 0B2A  
                       i2l376 0BB2                         i2l368 0B70               ___awdiv@counter 0018  
                       _RCSTA 0FAB                         _SPBRG 0FAF                         _PORTB 0F81  
                       _TRISA 0F92                         _TRISB 0F93                         _TRISC 0F94  
                       _TRISD 0F95                         _TRISE 0F96                         _TXREG 0FAD  
                       _TXSTA 0FAC                         _Tecla 003D                   ?i2_Lcd_Port 0001  
             __end_of_dpowers 080B                         _color 0060                    _ContarReal 0E94  
                       main@i 0088                         tablat 0FF5                    _Conversion 1A70  
            __end_ofi2___wmul 1AE2                         ttemp5 004C                         ttemp6 004F  
                       ttemp7 0053                         status 0FD8                         wtemp8 004C  
             __end_of_sprintf 0E94              __end_ofi2_vaciar 17F0              i2_Lcd_Set_Cursor 112C  
            __end_of_Lcd_Init 1464              __end_of_Lcd_Port 1A1C               __initialization 15A4  
                __end_of_main 0A98                   _Lcd_NoBlink 1B5C                        ??_main 0025  
               __activetblptr 0002              __end_of_Terminar 1BC6       Lcd_CGRAM_CreateChar@add 001A  
                      _ADCON0 0FC2                        _ADCON2 0FC0              ___awdiv@dividend 0014  
                      i2l2221 1A28                        i2l3031 1582                        i2l2225 1A32  
                      i2l3027 1574                        i2l2229 1A3C                        i2l3029 157C  
                      i2l2501 13DE                        i2l3221 0B0E                        i2l2335 11A4  
                      i2l2327 117C                        i2l2319 1154                  i2_escenario1 16E4  
                i2_escenario2 1256                        i2l2345 1878                        i2l3049 168A  
                      i2l2521 1502                        i2l2513 14E8                  i2_escenario3 1952  
                      i2l3075 19DC                        i2l2523 150A                        i2l3083 1A56  
                      i2l3235 0B48                        i2l2349 1892                        i2l2533 152C  
                      i2l2517 14F4                        i2l2481 139E                        i2l2537 153A  
                      i2l2529 1522                        i2l3249 0B84                        i2l3265 0BBC  
                      i2l2483 13A6                        i2l2475 1388                        i2l2493 13C6  
                      i2l2469 1378                        i2l3269 0BCE                        i2l2497 13D0  
                   ??_Lcd_Cmd 0015                        _TMR0IE 7F95                        _TMR0IF 7F92  
                      _TMR0ON 7EAF                 ?_PiezaAContar 0001              __end_of_figura_1 0833  
            __end_of_figura_2 082B              __end_of_figura_3 0823              __end_of_figura_4 081B  
            __end_of_figura_5 0813                  ?i2_Lcd_Clear 0001                  ?i2_Lcd_Blink 0001  
           __end_ofi2_Lcd_Cmd 1B32  Lcd_CGRAM_CreateChar@chardata 0018                        ___wmul 1A96  
                   ??___awdiv 0018                        _decena 003B                     ??___awmod 0018  
                      _digito 0043                     ??___lwdiv 0018                     ??___lwmod 001F  
                      _buffer 006C           i2Lcd_Write_String@a 0005           i2Lcd_Write_String@i 0007  
                      clear_0 15EA              ___awdiv@quotient 001A                        _vaciar 176C  
             ___awmod@divisor 0016                        _okmenu 1A48                        isa$std 0001  
             ___awmod@counter 0018                        _unidad 0039              i2_Lcd_Write_Char 18E4  
              i2___awdiv@sign 0006                  __pdataCOMRAM 003E             __end_ofi2___awdiv 13E8  
           __end_ofi2___awmod 1544                  __mediumconst 0000                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8                i2___awmod@sign 0006  
                 ?_ContarReal 0001                     ??_sprintf 0024               Lcd_Set_Cursor@a 0017  
             Lcd_Set_Cursor@b 0016               Lcd_Set_Cursor@y 0019               Lcd_Set_Cursor@z 0018  
   Lcd_CGRAM_CreateChar@i_243 001C     Lcd_CGRAM_CreateChar@i_244 001D     Lcd_CGRAM_CreateChar@i_245 001E  
   Lcd_CGRAM_CreateChar@i_246 001F     Lcd_CGRAM_CreateChar@i_247 0020     Lcd_CGRAM_CreateChar@i_248 0021  
   Lcd_CGRAM_CreateChar@i_249 0022                   ?_Conversion 0014                    __accesstop 0060  
     __end_of__initialization 15F0                ??_PiezaAContar 0005             __end_of_Lcd_Clear 1B78  
           __end_of_Lcd_Blink 1B40                 ___rparam_used 0001          __end_of_borrarDigito 169E  
              __pcstackCOMRAM 0001                    Trasmitir@i 0001                  __pidataBANK0 1AE2  
       __end_ofi2_Lcd_NoBlink 1B94             i2Lcd_Write_Char@a 0004             i2Lcd_Write_Char@y 0003  
                   ?i2___wmul 0001                _Lcd_Set_Cursor 108C              ??_Lcd_CGRAM_Init 0016  
                   ?i2_vaciar 0001                     ?_Lcd_Init 0001                     ?_Lcd_Port 0001  
        i2Lcd_Write_Char@temp 0002             __end_of_Reiniciar 19BE              _blacklighttoggle 1BB0  
                   ?_Terminar 0001                       ?___wmul 0014             __end_of_Trasmitir 19F0  
                     _BAUDCON 0FB8          i2Lcd_Set_Cursor@temp 0007                       ?_vaciar 0001  
                     ?_okmenu 0001        __end_of_Lcd_Set_Cursor 112C                    ??i2___wmul 0005  
    __end_ofi2_Lcd_Set_Cursor 11CC                    ??i2_vaciar 0001                       i2u65_40 1BB8  
                  ??_Lcd_Init 0016                  ??i2_Lcd_Port 0001                    ??_Lcd_Port 0014  
                  _escenario1 169E                    _escenario2 11CC                    _escenario3 191C  
                  _escenario4 17F0                _Lcd_Write_Char 18AC                       _Lcd_Cmd 1B02  
                     __Hparam 0000                       __Lparam 0000                    ??_Terminar 0009  
                     ___awdiv 12E0                       ___awmod 1464                       ___lwdiv 15FE  
                     ___lwmod 172A                  __psmallconst 0800            __end_ofi2_Lcd_Port 1A48  
                     __pcinit 15A4                       __ramtop 0800               ?_Lcd_Set_Cursor 0016  
                ?_Lcd_NoBlink 0001                       __ptext0 08CE                       __ptext1 0D82  
                     __ptext2 172A                       __ptext3 15FE                       __ptext4 169E  
                     __ptext5 1B32                       __ptext6 13E8                       __ptext7 1B40  
                     __ptext8 0C0E                       __ptext9 1B4E          __end_of_PiezaAContar 15A4  
                     _dpowers 0801              ___awmod@dividend 0014                       _mostrar 0037  
               ?i2_ContarReal 0001                       _sprintf 0D82        __end_of_Lcd_Write_Char 18E4  
              __pintcode_body 0A98          end_of_initialization 15F0               Conversion@canal 0017  
               __Lmediumconst 0000                       int_func 0A98           i2___wmul@multiplier 0001  
    __end_ofi2_Lcd_Write_Char 191C                       postdec1 0FE5                       postdec2 0FDD  
                     postinc0 0FEE                       postinc2 0FDE                     Lcd_Port@a 0014  
                   i2_Lcd_Cmd 1B1A                     _PORTAbits 0F80                  _borrarDigito 1650  
                   _TRISAbits 0F92                     _TRISDbits 0F95                ??i2_ContarReal 0009  
                ??_ContarReal 001C                     i2___awdiv 1364                     i2___awmod 14D4  
             ?_Lcd_Write_Char 0001                   ?_escenario1 0001                   ?_escenario2 0001  
                 ?_escenario3 0001                   ?_escenario4 0001             Lcd_Write_String@a 0018  
           Lcd_Write_String@i 001A                  ??_Conversion 0016            i2___awdiv@dividend 0001  
                   _Lcd_Clear 1B6A                     _Lcd_Blink 1B32                __end_of___wmul 1ABC  
          __end_of_ContarReal 0F90              _Lcd_Write_String 1830                 __pidataCOMRAM 1BA2  
                  ?i2_Lcd_Cmd 0001  __end_of_Lcd_CGRAM_CreateChar 0D82                __end_of_vaciar 17AE  
              __end_of_okmenu 1A70            __end_of_Conversion 1A96                 _cantidadResta 0031  
            i2___wmul@product 0005           start_initialization 15A4      __end_of_blacklighttoggle 1BBC  
          i2___awdiv@quotient 0007                   __end_of_ISR 0C0E                    ?i2___awdiv 0001  
                  ?i2___awmod 0001                     _Reiniciar 1988             ??_Lcd_CGRAM_Close 0016  
                  ?_Lcd_Clear 0001                    ?_Lcd_Blink 0001    __end_ofi2_Lcd_Write_String 18AC  
                    ??___wmul 0018                   __pdataBANK0 0060               Lcd_Write_Char@a 0017  
             Lcd_Write_Char@y 0016                      ??_vaciar 0014                      ??_okmenu 000B  
                   _Trasmitir 19BE                   __pbssCOMRAM 0027                 __pcstackBANK0 0080  
           ?i2_Lcd_Set_Cursor 0003            ??i2_Lcd_Set_Cursor 0004           _cantidadRestaDecena 002D  
                    ?_Lcd_Cmd 0001                   sprintf@flag 0080                   sprintf@prec 0084  
                  ?_Reiniciar 0001                  _PiezaAContar 1544           _cantidadRestaUnidad 002F  
            ___lwdiv@dividend 0014              ??_Lcd_Set_Cursor 0017                     _flagParar 0049  
                   __pintcode 0008          __end_ofi2_ContarReal 108C                      ?___awdiv 0014  
                    ?___awmod 0014                      ?___lwdiv 0014                      ?___lwmod 001B  
                 ??i2_Lcd_Cmd 0002                    ?_Trasmitir 0001                   __smallconst 0800  
            ___lwdiv@quotient 0019                   ??i2___awdiv 0005                   ??i2___awmod 0005  
                    ?_sprintf 0020                 ?i2_escenario1 0001                 ?i2_escenario2 0001  
               ?i2_escenario3 0001                ___wmul@product 0018                      _LATAbits 0F89  
                    _LATDbits 0F8C             ?i2_Lcd_Write_Char 0001          _Lcd_CGRAM_CreateChar 0C0E  
                    i2u130_40 13AA                      i2u213_40 0BE4                      i2u214_45 0BE6  
                    i2u136_40 150E                      Lcd_Cmd@a 0015                      i2u174_40 156C  
                    i2u272_47 0BC2                      i2u273_47 106E                      i2u274_47 1B28  
                    i2u275_47 1900                      i2u276_47 1912            ??i2_Lcd_Write_Char 0002  
               ??i2_Lcd_Clear 0003                 ??i2_Lcd_Blink 0003                   ??_Lcd_Clear 0016  
                 ??_Lcd_Blink 0016                    _ADCON1bits 0FC1             ___wmul@multiplier 0014  
                    i2___wmul 1ABC                 i2_Lcd_NoBlink 1B86              ??_Lcd_Write_Char 0015  
                   main@pina0 0086             i2___awdiv@divisor 0003                      i2_vaciar 17AE  
           i2___awdiv@counter 0005                      _Lcd_Init 13E8                      _Lcd_Port 19F0  
              ??i2_escenario1 0009                ??i2_escenario2 0009                ??i2_escenario3 0009  
                   copy_data0 15B8                     copy_data1 15D8                  ??_escenario1 001C  
                ??_escenario2 001C                  ??_escenario3 001C                  ??_escenario4 0009  
          i2___awmod@dividend 0001      __end_of_Lcd_Write_String 186E                   ??_Reiniciar 0009  
       ?_Lcd_CGRAM_CreateChar 0018                      __Hrparam 0000                      __Lrparam 0000  
                    _Terminar 1BBC         i2___wmul@multiplicand 0003            __end_of_escenario1 16E4  
          __end_of_escenario2 1256            __end_of_escenario3 1952            __end_of_escenario4 1830  
              ?i2_Lcd_NoBlink 0001           __end_ofi2_Lcd_Clear 1BA2           __end_ofi2_Lcd_Blink 1B86  
                 ??_Trasmitir 0001                    sprintf@val 0082                      _cantidad 0035  
             ___lwdiv@divisor 0016             ?_blacklighttoggle 0001               _Lcd_CGRAM_Close 1B4E  
             ___lwdiv@counter 0018                      __ptext10 1A70                      __ptext11 0E94  
                    __ptext20 1B02                      __ptext12 176C                      __ptext21 19F0  
                    __ptext13 191C                      __ptext30 14D4                      __ptext22 1A96  
                    __ptext14 11CC                      __ptext31 1364                      __ptext23 1464  
                    __ptext15 1830                      __ptext40 1988                      __ptext32 17F0  
                    __ptext24 12E0                      __ptext16 18AC                      __ptext41 1256  
                    __ptext33 1650                      __ptext17 108C                      __ptext42 186E  
                    __ptext34 1BB0                      __ptext26 1A48                      __ptext18 1B5C  
                    __ptext43 112C                      __ptext35 19BE                      __ptext27 0F90  
                    __ptext19 1B6A                      __ptext44 1B86                      __ptext36 1BBC  
                    __ptext28 1952                      __ptext45 1B94                      __ptext37 17AE  
                    __ptext29 1ABC                      __ptext46 1B1A                      __ptext38 16E4  
                    __ptext47 1544                      __ptext39 1B78                      __ptext48 18E4  
                    __ptext49 1A1C                      _figura_1 082B                      _figura_2 0823  
                    _figura_3 081B                      _figura_4 0813                      _figura_5 080B  
          ??_blacklighttoggle 0001                      _contador 0033                 _resultado_ADC 0027  
                    isa$xinst 0000                      int$flags 004B                   i2Lcd_Port@a 0001  
           i2___awmod@divisor 0003             i2___awmod@counter 0005                 PiezaAContar@a 0006  
          i2_Lcd_Write_String 186E                  i2_ContarReal 0F90            Lcd_Write_Char@temp 0015  
                    intlevel2 0000                     sprintf@ap 0081                     sprintf@sp 0020  
         ?i2_Lcd_Write_String 0005        ??_Lcd_CGRAM_CreateChar 0019             i2Lcd_Set_Cursor@a 0004  
           i2Lcd_Set_Cursor@b 0003             i2Lcd_Set_Cursor@y 0006             i2Lcd_Set_Cursor@z 0005  
              _Lcd_CGRAM_Init 1B40              ___lwmod@dividend 001B                    i2Lcd_Cmd@a 0002  
                 i2_Lcd_Clear 1B94                   i2_Lcd_Blink 1B78          __end_ofi2_escenario1 172A  
        __end_ofi2_escenario2 12E0          __end_ofi2_escenario3 1988               ??i2_Lcd_NoBlink 0003  
        ??i2_Lcd_Write_String 0006            Lcd_Set_Cursor@temp 001A                 ??_Lcd_NoBlink 0016  
     __end_of_Lcd_CGRAM_Close 1B5C                      sprintf@c 0085                      sprintf@f 0021  
             ___lwmod@divisor 001D               ___lwmod@counter 001F                    i2_Lcd_Port 1A1C  
      __end_of_Lcd_CGRAM_Init 1B4E  
