

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 12 00:27:33 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81   000000                     
    82                           ; Generated 05/01/2024 GMT
    83                           ; 
    84                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4550 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116   000000                     
   117                           	psect	idataCOMRAM
   118   0022EE                     __pidataCOMRAM:
   119                           	callstack 0
   120                           
   121                           ;initializer for _digito
   122   0022EE  0001               	dw	1
   123                           
   124                           ;initializer for _menu
   125   0022F0  0002               	dw	2
   126                           
   127                           	psect	idataBANK0
   128   00208E                     __pidataBANK0:
   129                           	callstack 0
   130                           
   131                           ;initializer for _color
   132   00208E  0002               	dw	2
   133   002090  0006               	dw	6
   134   002092  0004               	dw	4
   135   002094  0005               	dw	5
   136   002096  0001               	dw	1
   137   002098  0000               	dw	0
   138                           
   139                           ;initializer for _t
   140   00209A  8F                 	db	143
   141   00209B  C2                 	db	194
   142   00209C  41                 	db	65
   143                           
   144                           ;initializer for _rojo
   145   00209D  0003               	dw	3
   146                           
   147                           ;initializer for _v
   148   00209F  03FF               	dw	1023
   149                           
   150                           ;initializer for _flagParar
   151   0020A1  0001               	dw	1
   152                           
   153                           ;initializer for _buffer
   154   0020A3  49                 	db	73
   155   0020A4  6E                 	db	110
   156   0020A5  69                 	db	105
   157   0020A6  63                 	db	99
   158   0020A7  69                 	db	105
   159   0020A8  61                 	db	97
   160   0020A9  6E                 	db	110
   161   0020AA  64                 	db	100
   162   0020AB  6F                 	db	111
   163   0020AC  00                 	db	0
   164   0020AD  00                 	db	0
   165   0020AE  00                 	db	0
   166   0020AF  00                 	db	0
   167   0020B0  00                 	db	0
   168   0020B1  00                 	db	0
   169   0020B2  00                 	db	0
   170   0020B3  00                 	db	0
   171   0020B4  00                 	db	0
   172   0020B5  00                 	db	0
   173   0020B6  00                 	db	0
   174   0020B7  00                 	db	0
   175   0020B8  00                 	db	0
   176   0020B9  00                 	db	0
   177   0020BA  00                 	db	0
   178   0020BB  00                 	db	0
   179   0020BC  00                 	db	0
   180   0020BD  00                 	db	0
   181   0020BE  00                 	db	0
   182   0020BF  00                 	db	0
   183   0020C0  00                 	db	0
   184                           
   185                           	psect	smallconst
   186   000800                     __psmallconst:
   187                           	callstack 0
   188   000800  00                 	db	0
   189   000801                     _dpowers:
   190                           	callstack 0
   191   000801  0001               	dw	1
   192   000803  000A               	dw	10
   193   000805  0064               	dw	100
   194   000807  03E8               	dw	1000
   195   000809  2710               	dw	10000
   196   00080B                     __end_of_dpowers:
   197                           	callstack 0
   198   00080B                     _figura_5:
   199                           	callstack 0
   200   00080B  0F                 	db	15
   201   00080C  09                 	db	9
   202   00080D  1C                 	db	28
   203   00080E  08                 	db	8
   204   00080F  02                 	db	2
   205   000810  07                 	db	7
   206   000811  12                 	db	18
   207   000812  1E                 	db	30
   208   000813                     __end_of_figura_5:
   209                           	callstack 0
   210   000813                     _figura_4:
   211                           	callstack 0
   212   000813  04                 	db	4
   213   000814  0E                 	db	14
   214   000815  0A                 	db	10
   215   000816  0A                 	db	10
   216   000817  1F                 	db	31
   217   000818  1B                 	db	27
   218   000819  1F                 	db	31
   219   00081A  00                 	db	0
   220   00081B                     __end_of_figura_4:
   221                           	callstack 0
   222   00081B                     _figura_3:
   223                           	callstack 0
   224   00081B  03                 	db	3
   225   00081C  03                 	db	3
   226   00081D  02                 	db	2
   227   00081E  07                 	db	7
   228   00081F  06                 	db	6
   229   000820  0E                 	db	14
   230   000821  0A                 	db	10
   231   000822  13                 	db	19
   232   000823                     __end_of_figura_3:
   233                           	callstack 0
   234   000823                     _figura_2:
   235                           	callstack 0
   236   000823  04                 	db	4
   237   000824  11                 	db	17
   238   000825  0E                 	db	14
   239   000826  04                 	db	4
   240   000827  04                 	db	4
   241   000828  0A                 	db	10
   242   000829  11                 	db	17
   243   00082A  00                 	db	0
   244   00082B                     __end_of_figura_2:
   245                           	callstack 0
   246   00082B                     _figura_1:
   247                           	callstack 0
   248   00082B  0A                 	db	10
   249   00082C  0A                 	db	10
   250   00082D  0A                 	db	10
   251   00082E  00                 	db	0
   252   00082F  11                 	db	17
   253   000830  11                 	db	17
   254   000831  0E                 	db	14
   255   000832  00                 	db	0
   256   000833                     __end_of_figura_1:
   257                           	callstack 0
   258   000000                     _CCPR2	set	4027
   259   000000                     _TMR2	set	4044
   260   000000                     _T1CON	set	4045
   261   000000                     _ADCON1bits	set	4033
   262   000000                     _TRISB	set	3987
   263   000000                     _TRISC	set	3988
   264   000000                     _TRISDbits	set	3989
   265   000000                     _LATD	set	3980
   266   000000                     _TRISA	set	3986
   267   000000                     _TRISD	set	3989
   268   000000                     _TMR1ON	set	32360
   269   000000                     _RC1	set	31761
   270   000000                     _LATA1	set	31817
   271   000000                     _RB7	set	31759
   272   000000                     _RB6	set	31758
   273   000000                     _RB5	set	31757
   274   000000                     _RB4	set	31756
   275   000000                     _GO	set	32273
   276   000000                     _TRMT	set	32097
   277   000000                     _TMR2ON	set	32338
   278   000000                     _GIE	set	32663
   279   000000                     _RBIE	set	32659
   280   000000                     _RBIF	set	32656
   281   000000                     _TMR0ON	set	32431
   282   000000                     _TMR0IE	set	32661
   283   000000                     _LATA5	set	31821
   284   000000                     _PORTB	set	3969
   285   000000                     _LATAbits	set	3977
   286   000000                     _LATDbits	set	3980
   287   000000                     _LATE	set	3981
   288   000000                     _TRISAbits	set	3986
   289   000000                     _LATB	set	3978
   290   000000                     _RCSTA	set	4011
   291   000000                     _TXSTA	set	4012
   292   000000                     _TRISE	set	3990
   293   000000                     _ADCON2	set	4032
   294   000000                     _ADCON0	set	4034
   295   000000                     _OSCCON	set	4051
   296   000000                     _TMR1IF	set	31984
   297   000000                     _CCP2IF	set	32008
   298   000000                     _TMR0	set	4054
   299   000000                     _T0CON	set	4053
   300   000000                     _RBPU	set	32655
   301   000000                     _ADRES	set	4035
   302   000000                     _T2CON	set	4042
   303   000000                     _PR2	set	4043
   304   000000                     _TXREG	set	4013
   305   000000                     _SPBRG	set	4015
   306   000000                     _BAUDCON	set	4024
   307   000000                     _CCP2CON	set	4026
   308   000000                     _CCP1CON	set	4029
   309   000000                     _CCPR1L	set	4030
   310   000000                     _TMR0IF	set	32658
   311   000000                     _TMR1	set	4046
   312   000000                     _RC0	set	31760
   313   000833                     STR_4:
   314   000833  44                 	db	68	;'D'
   315   000834  69                 	db	105	;'i'
   316   000835  73                 	db	115	;'s'
   317   000836  74                 	db	116	;'t'
   318   000837  61                 	db	97	;'a'
   319   000838  6E                 	db	110	;'n'
   320   000839  63                 	db	99	;'c'
   321   00083A  69                 	db	105	;'i'
   322   00083B  61                 	db	97	;'a'
   323   00083C  20                 	db	32
   324   00083D  3D                 	db	61	;'='
   325   00083E  20                 	db	32
   326   00083F  25                 	db	37
   327   000840  64                 	db	100	;'d'
   328   000841  20                 	db	32
   329   000842  63                 	db	99	;'c'
   330   000843  6D                 	db	109	;'m'
   331   000844  20                 	db	32
   332   000845  0A                 	db	10
   333   000846  50                 	db	80	;'P'
   334   000847  57                 	db	87	;'W'
   335   000848  4D                 	db	77	;'M'
   336   000849  20                 	db	32
   337   00084A  3D                 	db	61	;'='
   338   00084B  20                 	db	32
   339   00084C  25                 	db	37
   340   00084D  75                 	db	117	;'u'
   341   00084E  20                 	db	32
   342   00084F  0A                 	db	10
   343   000850  00                 	db	0
   344   000851                     STR_11:
   345   000851  43                 	db	67	;'C'
   346   000852  75                 	db	117	;'u'
   347   000853  65                 	db	101	;'e'
   348   000854  6E                 	db	110	;'n'
   349   000855  74                 	db	116	;'t'
   350   000856  61                 	db	97	;'a'
   351   000857  20                 	db	32
   352   000858  66                 	db	102	;'f'
   353   000859  69                 	db	105	;'i'
   354   00085A  6E                 	db	110	;'n'
   355   00085B  61                 	db	97	;'a'
   356   00085C  6C                 	db	108	;'l'
   357   00085D  69                 	db	105	;'i'
   358   00085E  7A                 	db	122	;'z'
   359   00085F  61                 	db	97	;'a'
   360   000860  64                 	db	100	;'d'
   361   000861  61                 	db	97	;'a'
   362   000862  00                 	db	0
   363   000863                     STR_5:
   364   000863  50                 	db	80	;'P'
   365   000864  69                 	db	105	;'i'
   366   000865  65                 	db	101	;'e'
   367   000866  7A                 	db	122	;'z'
   368   000867  61                 	db	97	;'a'
   369   000868  73                 	db	115	;'s'
   370   000869  20                 	db	32
   371   00086A  61                 	db	97	;'a'
   372   00086B  20                 	db	32
   373   00086C  63                 	db	99	;'c'
   374   00086D  6F                 	db	111	;'o'
   375   00086E  6E                 	db	110	;'n'
   376   00086F  74                 	db	116	;'t'
   377   000870  61                 	db	97	;'a'
   378   000871  72                 	db	114	;'r'
   379   000872  3A                 	db	58	;':'
   380   000873  00                 	db	0
   381   000874                     STR_1:
   382   000874  4C                 	db	76	;'L'
   383   000875  61                 	db	97	;'a'
   384   000876  62                 	db	98	;'b'
   385   000877  6F                 	db	111	;'o'
   386   000878  72                 	db	114	;'r'
   387   000879  61                 	db	97	;'a'
   388   00087A  74                 	db	116	;'t'
   389   00087B  6F                 	db	111	;'o'
   390   00087C  72                 	db	114	;'r'
   391   00087D  69                 	db	105	;'i'
   392   00087E  6F                 	db	111	;'o'
   393   00087F  20                 	db	32
   394   000880  30                 	db	48	;'0'
   395   000881  34                 	db	52	;'4'
   396   000882  00                 	db	0
   397   000883                     STR_14:
   398   000883  45                 	db	69	;'E'
   399   000884  6D                 	db	109	;'m'
   400   000885  65                 	db	101	;'e'
   401   000886  72                 	db	114	;'r'
   402   000887  67                 	db	103	;'g'
   403   000888  65                 	db	101	;'e'
   404   000889  6E                 	db	110	;'n'
   405   00088A  63                 	db	99	;'c'
   406   00088B  69                 	db	105	;'i'
   407   00088C  61                 	db	97	;'a'
   408   00088D  20                 	db	32
   409   00088E  00                 	db	0
   410   00088F                     STR_3:
   411   00088F  4D                 	db	77	;'M'
   412   000890  69                 	db	105	;'i'
   413   000891  63                 	db	99	;'c'
   414   000892  72                 	db	114	;'r'
   415   000893  6F                 	db	111	;'o'
   416   000894  73                 	db	115	;'s'
   417   000895  20                 	db	32
   418   000896  55                 	db	85	;'U'
   419   000897  4E                 	db	78	;'N'
   420   000898  41                 	db	65	;'A'
   421   000899  4C                 	db	76	;'L'
   422   00089A  00                 	db	0
   423   00089B                     STR_2:
   424   00089B  50                 	db	80	;'P'
   425   00089C  49                 	db	73	;'I'
   426   00089D  43                 	db	67	;'C'
   427   00089E  31                 	db	49	;'1'
   428   00089F  38                 	db	56	;'8'
   429   0008A0  46                 	db	70	;'F'
   430   0008A1  34                 	db	52	;'4'
   431   0008A2  35                 	db	53	;'5'
   432   0008A3  35                 	db	53	;'5'
   433   0008A4  30                 	db	48	;'0'
   434   0008A5  00                 	db	0
   435   0008A6                     STR_7:
   436   0008A6  46                 	db	70	;'F'
   437   0008A7  61                 	db	97	;'a'
   438   0008A8  6C                 	db	108	;'l'
   439   0008A9  74                 	db	116	;'t'
   440   0008AA  61                 	db	97	;'a'
   441   0008AB  6E                 	db	110	;'n'
   442   0008AC  74                 	db	116	;'t'
   443   0008AD  65                 	db	101	;'e'
   444   0008AE  3A                 	db	58	;':'
   445   0008AF  00                 	db	0
   446   0008B0                     STR_9:
   447   0008B0  4F                 	db	79	;'O'
   448   0008B1  62                 	db	98	;'b'
   449   0008B2  6A                 	db	106	;'j'
   450   0008B3  65                 	db	101	;'e'
   451   0008B4  74                 	db	116	;'t'
   452   0008B5  69                 	db	105	;'i'
   453   0008B6  76                 	db	118	;'v'
   454   0008B7  6F                 	db	111	;'o'
   455   0008B8  3A                 	db	58	;':'
   456   0008B9  00                 	db	0
   457   0008BA                     STR_13:
   458   0008BA  50                 	db	80	;'P'
   459   0008BB  61                 	db	97	;'a'
   460   0008BC  72                 	db	114	;'r'
   461   0008BD  61                 	db	97	;'a'
   462   0008BE  64                 	db	100	;'d'
   463   0008BF  61                 	db	97	;'a'
   464   0008C0  20                 	db	32
   465   0008C1  64                 	db	100	;'d'
   466   0008C2  65                 	db	101	;'e'
   467   0008C3  00                 	db	0
   468   0008C4                     STR_6:
   469   0008C4  41                 	db	65	;'A'
   470   0008C5  3A                 	db	58	;':'
   471   0008C6  6F                 	db	111	;'o'
   472   0008C7  6B                 	db	107	;'k'
   473   0008C8  20                 	db	32
   474   0008C9  42                 	db	66	;'B'
   475   0008CA  3A                 	db	58	;':'
   476   0008CB  00                 	db	0
   477   0008CC                     STR_12:
   478   0008CC  41                 	db	65	;'A'
   479   0008CD  3A                 	db	58	;':'
   480   0008CE  4F                 	db	79	;'O'
   481   0008CF  4B                 	db	75	;'K'
   482   0008D0  00                 	db	0
   483   0008D1                     STR_10:
   484   0008D1  23                 	db	35
   485   0008D2  3D                 	db	61	;'='
   486   0008D3  58                 	db	88	;'X'
   487   0008D4  00                 	db	0
   488   0008D5                     STR_8:
   489   0008D5  43                 	db	67	;'C'
   490   0008D6  3D                 	db	61	;'='
   491   0008D7  00                 	db	0
   492   0008D8  00                 	db	0	; dummy byte at the end
   493   000000                     
   494                           ; #config settings
   495                           
   496                           	psect	cinit
   497   001C04                     __pcinit:
   498                           	callstack 0
   499   001C04                     start_initialization:
   500                           	callstack 0
   501   001C04                     __initialization:
   502                           	callstack 0
   503                           
   504                           ; Initialize objects allocated to BANK0 (51 bytes)
   505                           ; load TBLPTR registers with __pidataBANK0
   506   001C04  0E8E               	movlw	low __pidataBANK0
   507   001C06  6EF6               	movwf	tblptrl,c
   508   001C08  0E20               	movlw	high __pidataBANK0
   509   001C0A  6EF7               	movwf	tblptrh,c
   510   001C0C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   511   001C0E  6EF8               	movwf	tblptru,c
   512   001C10  EE00  F060         	lfsr	0,__pdataBANK0
   513   001C14  EE10 F033          	lfsr	1,51
   514   001C18                     copy_data0:
   515   001C18  0009               	tblrd		*+
   516   001C1A  CFF5 FFEE          	movff	tablat,postinc0
   517   001C1E  50E5               	movf	postdec1,w,c
   518   001C20  50E1               	movf	fsr1l,w,c
   519   001C22  E1FA               	bnz	copy_data0
   520                           
   521                           ; Initialize objects allocated to COMRAM (4 bytes)
   522                           ; load TBLPTR registers with __pidataCOMRAM
   523   001C24  0EEE               	movlw	low __pidataCOMRAM
   524   001C26  6EF6               	movwf	tblptrl,c
   525   001C28  0E22               	movlw	high __pidataCOMRAM
   526   001C2A  6EF7               	movwf	tblptrh,c
   527   001C2C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   528   001C2E  6EF8               	movwf	tblptru,c
   529   001C30  EE00  F045         	lfsr	0,__pdataCOMRAM
   530   001C34  EE10 F004          	lfsr	1,4
   531   001C38                     copy_data1:
   532   001C38  0009               	tblrd		*+
   533   001C3A  CFF5 FFEE          	movff	tablat,postinc0
   534   001C3E  50E5               	movf	postdec1,w,c
   535   001C40  50E1               	movf	fsr1l,w,c
   536   001C42  E1FA               	bnz	copy_data1
   537                           
   538                           ; Clear objects allocated to BANK0 (6 bytes)
   539   001C44  0100               	movlb	0
   540   001C46  6BAE               	clrf	(__pbssBANK0+5)& (0+255),b
   541   001C48  6BAD               	clrf	(__pbssBANK0+4)& (0+255),b
   542   001C4A  6BAC               	clrf	(__pbssBANK0+3)& (0+255),b
   543   001C4C  6BAB               	clrf	(__pbssBANK0+2)& (0+255),b
   544   001C4E  6BAA               	clrf	(__pbssBANK0+1)& (0+255),b
   545   001C50  6BA9               	clrf	__pbssBANK0& (0+255),b
   546                           
   547                           ; Clear objects allocated to COMRAM (19 bytes)
   548   001C52  EE00  F032         	lfsr	0,__pbssCOMRAM
   549   001C56  0E13               	movlw	19
   550   001C58                     clear_0:
   551   001C58  6AEE               	clrf	postinc0,c
   552   001C5A  06E8               	decf	wreg,f,c
   553   001C5C  E1FD               	bnz	clear_0
   554   001C5E                     end_of_initialization:
   555                           	callstack 0
   556   001C5E                     __end_of__initialization:
   557                           	callstack 0
   558   001C5E  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   559   001C60  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   560   001C62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   561   001C64  6EF8               	movwf	tblptru,c
   562   001C66  0100               	movlb	0
   563   001C68  EF6D  F004         	goto	_main	;jump to C main() function
   564                           
   565                           	psect	bssCOMRAM
   566   000032                     __pbssCOMRAM:
   567                           	callstack 0
   568   000032                     _contadorUnidad:
   569                           	callstack 0
   570   000032                     	ds	2
   571   000034                     _cantidadRestaDecena:
   572                           	callstack 0
   573   000034                     	ds	2
   574   000036                     _cantidadRestaUnidad:
   575                           	callstack 0
   576   000036                     	ds	2
   577   000038                     _cantidadResta:
   578                           	callstack 0
   579   000038                     	ds	2
   580   00003A                     _contador:
   581                           	callstack 0
   582   00003A                     	ds	2
   583   00003C                     _cantidad:
   584                           	callstack 0
   585   00003C                     	ds	2
   586   00003E                     _unidad:
   587                           	callstack 0
   588   00003E                     	ds	2
   589   000040                     _decena:
   590                           	callstack 0
   591   000040                     	ds	2
   592   000042                     _ctimeout:
   593                           	callstack 0
   594   000042                     	ds	1
   595   000043                     _etimeout:
   596                           	callstack 0
   597   000043                     	ds	1
   598   000044                     _Tecla:
   599                           	callstack 0
   600   000044                     	ds	1
   601                           
   602                           	psect	dataCOMRAM
   603   000045                     __pdataCOMRAM:
   604                           	callstack 0
   605   000045                     _digito:
   606                           	callstack 0
   607   000045                     	ds	2
   608   000047                     _menu:
   609                           	callstack 0
   610   000047                     	ds	2
   611                           
   612                           	psect	bssBANK0
   613   0000A9                     __pbssBANK0:
   614                           	callstack 0
   615   0000A9                     _resultado_ADC:
   616                           	callstack 0
   617   0000A9                     	ds	2
   618   0000AB                     _contadorDecena:
   619                           	callstack 0
   620   0000AB                     	ds	2
   621   0000AD                     _mostrar:
   622                           	callstack 0
   623   0000AD                     	ds	2
   624                           
   625                           	psect	dataBANK0
   626   000060                     __pdataBANK0:
   627                           	callstack 0
   628   000060                     _color:
   629                           	callstack 0
   630   000060                     	ds	12
   631   00006C                     _t:
   632                           	callstack 0
   633   00006C                     	ds	3
   634   00006F                     _rojo:
   635                           	callstack 0
   636   00006F                     	ds	2
   637   000071                     _v:
   638                           	callstack 0
   639   000071                     	ds	2
   640   000073                     _flagParar:
   641                           	callstack 0
   642   000073                     	ds	2
   643   000075                     _buffer:
   644                           	callstack 0
   645   000075                     	ds	30
   646                           
   647                           	psect	cstackBANK0
   648   000093                     __pcstackBANK0:
   649                           	callstack 0
   650   000093                     ??___ftmul:
   651                           
   652                           ; 1 bytes @ 0x0
   653   000093                     	ds	3
   654   000096                     ___ftmul@exp:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x3
   658   000096                     	ds	1
   659   000097                     ___ftmul@f3_as_product:
   660                           	callstack 0
   661                           
   662                           ; 3 bytes @ 0x4
   663   000097                     	ds	3
   664   00009A                     ___ftmul@cntr:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x7
   668   00009A                     	ds	1
   669   00009B                     ___ftmul@sign:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x8
   673   00009B                     	ds	1
   674   00009C                     Duty_motor@ADC:
   675                           	callstack 0
   676                           
   677                           ; 3 bytes @ 0x9
   678   00009C                     	ds	3
   679   00009F                     Duty_motor@escalarADC:
   680                           	callstack 0
   681                           
   682                           ; 3 bytes @ 0xC
   683   00009F                     	ds	3
   684   0000A2                     ??_main:
   685                           
   686                           ; 1 bytes @ 0xF
   687   0000A2                     	ds	3
   688   0000A5                     main@distanciaContar:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x12
   692   0000A5                     	ds	2
   693   0000A7                     main@d:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x14
   697   0000A7                     	ds	1
   698   0000A8                     main@i:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x15
   702   0000A8                     	ds	1
   703                           
   704                           	psect	cstackCOMRAM
   705   000001                     __pcstackCOMRAM:
   706                           	callstack 0
   707   000001                     ?i2___wmul:
   708                           	callstack 0
   709   000001                     ?i2___awdiv:
   710                           	callstack 0
   711   000001                     ?i2___awmod:
   712                           	callstack 0
   713   000001                     i2Lcd_Port@a:
   714                           	callstack 0
   715   000001                     Trasmitir@i:
   716                           	callstack 0
   717   000001                     i2___wmul@multiplier:
   718                           	callstack 0
   719   000001                     i2___awdiv@dividend:
   720                           	callstack 0
   721   000001                     i2___awmod@dividend:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x0
   725   000001                     	ds	1
   726   000002                     ??i2_Lcd_Cmd:
   727   000002                     i2Lcd_Write_Char@temp:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x1
   731   000002                     	ds	1
   732   000003                     i2Lcd_Cmd@a:
   733                           	callstack 0
   734   000003                     i2Lcd_Write_Char@y:
   735                           	callstack 0
   736   000003                     i2___wmul@multiplicand:
   737                           	callstack 0
   738   000003                     i2___awdiv@divisor:
   739                           	callstack 0
   740   000003                     i2___awmod@divisor:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x2
   744   000003                     	ds	1
   745   000004                     i2Lcd_Set_Cursor@b:
   746                           	callstack 0
   747   000004                     i2Lcd_Write_Char@a:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x3
   751   000004                     	ds	1
   752   000005                     ??_PiezaAContar:
   753   000005                     i2Lcd_Set_Cursor@a:
   754                           	callstack 0
   755   000005                     i2Lcd_Write_String@a:
   756                           	callstack 0
   757   000005                     i2___awdiv@counter:
   758                           	callstack 0
   759   000005                     i2___awmod@counter:
   760                           	callstack 0
   761   000005                     i2___wmul@product:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x4
   765   000005                     	ds	1
   766   000006                     ??i2_Lcd_Write_String:
   767   000006                     PiezaAContar@a:
   768                           	callstack 0
   769   000006                     i2Lcd_Set_Cursor@z:
   770                           	callstack 0
   771   000006                     i2___awdiv@sign:
   772                           	callstack 0
   773   000006                     i2___awmod@sign:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x5
   777   000006                     	ds	1
   778   000007                     i2Lcd_Set_Cursor@y:
   779                           	callstack 0
   780   000007                     i2Lcd_Write_String@i:
   781                           	callstack 0
   782   000007                     i2___awdiv@quotient:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x6
   786   000007                     	ds	1
   787   000008                     i2Lcd_Set_Cursor@temp:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x7
   791   000008                     	ds	1
   792   000009                     ??i2_ContarReal:
   793                           
   794                           ; 1 bytes @ 0x8
   795   000009                     	ds	2
   796   00000B                     ??_ISR:
   797                           
   798                           ; 1 bytes @ 0xA
   799   00000B                     	ds	10
   800   000015                     ??_isdigit:
   801   000015                     ?_Conversion:
   802                           	callstack 0
   803   000015                     ?___wmul:
   804                           	callstack 0
   805   000015                     ?___awdiv:
   806                           	callstack 0
   807   000015                     ?___awmod:
   808                           	callstack 0
   809   000015                     ?___lwdiv:
   810                           	callstack 0
   811   000015                     ?___ftpack:
   812                           	callstack 0
   813   000015                     ?___fttol:
   814                           	callstack 0
   815   000015                     Lcd_Port@a:
   816                           	callstack 0
   817   000015                     ___wmul@multiplier:
   818                           	callstack 0
   819   000015                     ___awdiv@dividend:
   820                           	callstack 0
   821   000015                     ___awmod@dividend:
   822                           	callstack 0
   823   000015                     ___lwdiv@dividend:
   824                           	callstack 0
   825   000015                     ___ftpack@arg:
   826                           	callstack 0
   827   000015                     ___ftge@ff1:
   828                           	callstack 0
   829   000015                     ___fttol@f1:
   830                           	callstack 0
   831                           
   832                           ; 3 bytes @ 0x14
   833   000015                     	ds	1
   834   000016                     ??_Lcd_Cmd:
   835   000016                     Lcd_Write_Char@temp:
   836                           	callstack 0
   837   000016                     _isdigit$960:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x15
   841   000016                     	ds	1
   842   000017                     ??_Conversion:
   843   000017                     Lcd_Cmd@a:
   844                           	callstack 0
   845   000017                     Lcd_Write_Char@y:
   846                           	callstack 0
   847   000017                     isdigit@c:
   848                           	callstack 0
   849   000017                     ___wmul@multiplicand:
   850                           	callstack 0
   851   000017                     ___awdiv@divisor:
   852                           	callstack 0
   853   000017                     ___awmod@divisor:
   854                           	callstack 0
   855   000017                     ___lwdiv@divisor:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x16
   859   000017                     	ds	1
   860   000018                     ??_Lcd_Init:
   861   000018                     Lcd_Set_Cursor@b:
   862                           	callstack 0
   863   000018                     Lcd_Write_Char@a:
   864                           	callstack 0
   865   000018                     Conversion@canal:
   866                           	callstack 0
   867   000018                     ___ftpack@exp:
   868                           	callstack 0
   869   000018                     ___ftge@ff2:
   870                           	callstack 0
   871                           
   872                           ; 3 bytes @ 0x17
   873   000018                     	ds	1
   874   000019                     ??___fttol:
   875   000019                     Lcd_Set_Cursor@a:
   876                           	callstack 0
   877   000019                     Lcd_Write_String@a:
   878                           	callstack 0
   879   000019                     Lcd_CGRAM_CreateChar@chardata:
   880                           	callstack 0
   881   000019                     ___awdiv@counter:
   882                           	callstack 0
   883   000019                     ___awmod@counter:
   884                           	callstack 0
   885   000019                     ___ftpack@sign:
   886                           	callstack 0
   887   000019                     ___lwdiv@counter:
   888                           	callstack 0
   889   000019                     ___wmul@product:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x18
   893   000019                     	ds	1
   894   00001A                     ??___ftpack:
   895   00001A                     ??_Lcd_Write_String:
   896   00001A                     ??_Lcd_CGRAM_CreateChar:
   897   00001A                     Lcd_Set_Cursor@z:
   898                           	callstack 0
   899   00001A                     ___awdiv@sign:
   900                           	callstack 0
   901   00001A                     ___awmod@sign:
   902                           	callstack 0
   903   00001A                     ___lwdiv@quotient:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x19
   907   00001A                     	ds	1
   908   00001B                     ??___ftge:
   909   00001B                     Lcd_Set_Cursor@y:
   910                           	callstack 0
   911   00001B                     Lcd_CGRAM_CreateChar@add:
   912                           	callstack 0
   913   00001B                     Lcd_Write_String@i:
   914                           	callstack 0
   915   00001B                     ___awdiv@quotient:
   916                           	callstack 0
   917   00001B                     atoi@s:
   918                           	callstack 0
   919                           
   920                           ; 3 bytes @ 0x1A
   921   00001B                     	ds	1
   922   00001C                     ?___lwmod:
   923                           	callstack 0
   924   00001C                     Lcd_Set_Cursor@temp:
   925                           	callstack 0
   926   00001C                     Lcd_CGRAM_CreateChar@i:
   927                           	callstack 0
   928   00001C                     MedirDistancia@aux:
   929                           	callstack 0
   930   00001C                     ___lwmod@dividend:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x1B
   934   00001C                     	ds	1
   935   00001D                     ??_ContarReal:
   936   00001D                     ?___ftdiv:
   937                           	callstack 0
   938   00001D                     ?___lwtoft:
   939                           	callstack 0
   940   00001D                     Lcd_CGRAM_CreateChar@i_243:
   941                           	callstack 0
   942   00001D                     ___lwtoft@c:
   943                           	callstack 0
   944   00001D                     ___ftdiv@f1:
   945                           	callstack 0
   946                           
   947                           ; 3 bytes @ 0x1C
   948   00001D                     	ds	1
   949   00001E                     Lcd_CGRAM_CreateChar@i_244:
   950                           	callstack 0
   951   00001E                     ___fttol@sign1:
   952                           	callstack 0
   953   00001E                     ___lwmod@divisor:
   954                           	callstack 0
   955   00001E                     atoi@a:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x1D
   959   00001E                     	ds	1
   960   00001F                     Lcd_CGRAM_CreateChar@i_245:
   961                           	callstack 0
   962   00001F                     ___fttol@lval:
   963                           	callstack 0
   964                           
   965                           ; 4 bytes @ 0x1E
   966   00001F                     	ds	1
   967   000020                     Lcd_CGRAM_CreateChar@i_246:
   968                           	callstack 0
   969   000020                     ___lwmod@counter:
   970                           	callstack 0
   971   000020                     atoi@sign:
   972                           	callstack 0
   973   000020                     ___ftdiv@f2:
   974                           	callstack 0
   975                           
   976                           ; 3 bytes @ 0x1F
   977   000020                     	ds	1
   978   000021                     ?_sprintf:
   979                           	callstack 0
   980   000021                     Lcd_CGRAM_CreateChar@i_247:
   981                           	callstack 0
   982   000021                     sprintf@sp:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x20
   986   000021                     	ds	1
   987   000022                     Lcd_CGRAM_CreateChar@i_248:
   988                           	callstack 0
   989   000022                     sprintf@f:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x21
   993   000022                     	ds	1
   994   000023                     ??___ftdiv:
   995   000023                     Lcd_CGRAM_CreateChar@i_249:
   996                           	callstack 0
   997   000023                     ___fttol@exp1:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x22
  1001   000023                     	ds	3
  1002   000026                     ___ftdiv@cntr:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x25
  1006   000026                     	ds	1
  1007   000027                     ??_sprintf:
  1008   000027                     ___ftdiv@f3:
  1009                           	callstack 0
  1010                           
  1011                           ; 3 bytes @ 0x26
  1012   000027                     	ds	1
  1013   000028                     sprintf@prec:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x27
  1017   000028                     	ds	1
  1018   000029                     sprintf@ap:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x28
  1022   000029                     	ds	1
  1023   00002A                     sprintf@flag:
  1024                           	callstack 0
  1025   00002A                     ___ftdiv@exp:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x29
  1029   00002A                     	ds	1
  1030   00002B                     ___ftdiv@sign:
  1031                           	callstack 0
  1032   00002B                     sprintf@val:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x2A
  1036   00002B                     	ds	1
  1037   00002C                     ?___ftmul:
  1038                           	callstack 0
  1039   00002C                     ___ftmul@f1:
  1040                           	callstack 0
  1041                           
  1042                           ; 3 bytes @ 0x2B
  1043   00002C                     	ds	1
  1044   00002D                     sprintf@c:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x2C
  1048   00002D                     	ds	2
  1049   00002F                     ___ftmul@f2:
  1050                           	callstack 0
  1051                           
  1052                           ; 3 bytes @ 0x2E
  1053   00002F                     	ds	3
  1054   000032                     
  1055                           ; 1 bytes @ 0x31
  1056 ;;
  1057 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1058 ;;
  1059 ;; *************** function _main *****************
  1060 ;; Defined at:
  1061 ;;		line 73 in file "Lab4.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  distanciaCon    2   18[BANK0 ] unsigned int 
  1066 ;;  pina0           2    0        int 
  1067 ;;  i               1   21[BANK0 ] unsigned char 
  1068 ;;  d               1   20[BANK0 ] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0
  1079 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1080 ;;      Temps:          0       3       0       0       0       0       0       0       0
  1081 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1082 ;;Total ram usage:        7 bytes
  1083 ;; Hardware stack levels required when called: 12
  1084 ;; This function calls:
  1085 ;;		_ContarReal
  1086 ;;		_Conversion
  1087 ;;		_Duty_motor
  1088 ;;		_Lcd_Blink
  1089 ;;		_Lcd_CGRAM_Close
  1090 ;;		_Lcd_CGRAM_CreateChar
  1091 ;;		_Lcd_CGRAM_Init
  1092 ;;		_Lcd_Clear
  1093 ;;		_Lcd_Init
  1094 ;;		_Lcd_NoBlink
  1095 ;;		_Lcd_Set_Cursor
  1096 ;;		_Lcd_Write_Char
  1097 ;;		_Lcd_Write_String
  1098 ;;		_MedirDistancia
  1099 ;;		___lwtoft
  1100 ;;		_atoi
  1101 ;;		_escenario1
  1102 ;;		_sprintf
  1103 ;; This function is called by:
  1104 ;;		Startup code after reset
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text0
  1109   0008DA                     __ptext0:
  1110                           	callstack 0
  1111   0008DA                     _main:
  1112                           	callstack 19
  1113                           
  1114                           ;Lab4.c: 74: unsigned char d;;Lab4.c: 75: unsigned int distanciaContar;;Lab4.c: 76: OSCC
      +                          ON = 0b01110000;
  1115                           
  1116                           ;incstack = 0
  1117   0008DA  0E70               	movlw	112
  1118   0008DC  6ED3               	movwf	211,c	;volatile
  1119                           
  1120                           ;Lab4.c: 77: _delay((unsigned long)((1)*(8000000/4000.0)));
  1121   0008DE  0E03               	movlw	3
  1122   0008E0  0100               	movlb	0	; () banked
  1123   0008E2  6FA2               	movwf	??_main& (0+255),b
  1124   0008E4  0E97               	movlw	151
  1125   0008E6                     u4097:
  1126   0008E6  2EE8               	decfsz	wreg,f,c
  1127   0008E8  D7FE               	bra	u4097
  1128   0008EA  2FA2               	decfsz	??_main& (0+255),f,b
  1129   0008EC  D7FC               	bra	u4097
  1130   0008EE  D000               	nop2	
  1131                           
  1132                           ;Lab4.c: 79: ADCON0 = 0b00000001;
  1133   0008F0  0E01               	movlw	1
  1134   0008F2  6EC2               	movwf	194,c	;volatile
  1135                           
  1136                           ;Lab4.c: 80: ADCON2 = 0b10001000;
  1137   0008F4  0E88               	movlw	136
  1138   0008F6  6EC0               	movwf	192,c	;volatile
  1139                           
  1140                           ;Lab4.c: 82: int pina0;;Lab4.c: 83: TRISE = 0;
  1141   0008F8  0E00               	movlw	0
  1142   0008FA  6E96               	movwf	150,c	;volatile
  1143                           
  1144                           ;Lab4.c: 84: TRISD = 0;
  1145   0008FC  0E00               	movlw	0
  1146   0008FE  6E95               	movwf	149,c	;volatile
  1147                           
  1148                           ;Lab4.c: 85: TRISA = 0b00000001;
  1149   000900  0E01               	movlw	1
  1150   000902  6E92               	movwf	146,c	;volatile
  1151                           
  1152                           ;Lab4.c: 86: TRISC = 0b00000010;
  1153   000904  0E02               	movlw	2
  1154   000906  6E94               	movwf	148,c	;volatile
  1155                           
  1156                           ;Lab4.c: 88: LATD = 0b00000000;
  1157   000908  0E00               	movlw	0
  1158   00090A  6E8C               	movwf	140,c	;volatile
  1159                           
  1160                           ;Lab4.c: 89: LATE = 0b00000111;
  1161   00090C  0E07               	movlw	7
  1162   00090E  6E8D               	movwf	141,c	;volatile
  1163                           
  1164                           ;Lab4.c: 91: LATA5 = 1;
  1165   000910  8A89               	bsf	3977,5,c	;volatile
  1166                           
  1167                           ;Lab4.c: 92: TXSTA = 0b00100100;
  1168   000912  0E24               	movlw	36
  1169   000914  6EAC               	movwf	172,c	;volatile
  1170                           
  1171                           ;Lab4.c: 93: RCSTA = 0b10000000;
  1172   000916  0E80               	movlw	128
  1173   000918  6EAB               	movwf	171,c	;volatile
  1174                           
  1175                           ;Lab4.c: 94: BAUDCON = 0b00001000;
  1176   00091A  0E08               	movlw	8
  1177   00091C  6EB8               	movwf	184,c	;volatile
  1178                           
  1179                           ;Lab4.c: 95: SPBRG = 207;
  1180   00091E  0ECF               	movlw	207
  1181   000920  6EAF               	movwf	175,c	;volatile
  1182                           
  1183                           ;Lab4.c: 96: unsigned char i;;Lab4.c: 97: TRISB = 0b11110000;
  1184   000922  0EF0               	movlw	240
  1185   000924  6E93               	movwf	147,c	;volatile
  1186                           
  1187                           ;Lab4.c: 98: LATB = 0b00000000;
  1188   000926  0E00               	movlw	0
  1189   000928  6E8A               	movwf	138,c	;volatile
  1190                           
  1191                           ;Lab4.c: 99: RBPU = 0;
  1192   00092A  9EF1               	bcf	4081,7,c	;volatile
  1193                           
  1194                           ;Lab4.c: 100: _delay((unsigned long)((100)*(8000000/4000.0)));
  1195   00092C  0E02               	movlw	2
  1196   00092E  0100               	movlb	0	; () banked
  1197   000930  6FA3               	movwf	(??_main+1)& (0+255),b
  1198   000932  0E04               	movlw	4
  1199   000934  6FA2               	movwf	??_main& (0+255),b
  1200   000936  0EBA               	movlw	186
  1201   000938                     u4107:
  1202   000938  2EE8               	decfsz	wreg,f,c
  1203   00093A  D7FE               	bra	u4107
  1204   00093C  2FA2               	decfsz	??_main& (0+255),f,b
  1205   00093E  D7FC               	bra	u4107
  1206   000940  2FA3               	decfsz	(??_main+1)& (0+255),f,b
  1207   000942  D7FA               	bra	u4107
  1208   000944  0000               	nop	
  1209                           
  1210                           ;Lab4.c: 102: TMR0 = 3036;
  1211   000946  0E0B               	movlw	11
  1212   000948  6ED7               	movwf	215,c	;volatile
  1213   00094A  0EDC               	movlw	220
  1214   00094C  6ED6               	movwf	214,c	;volatile
  1215                           
  1216                           ;Lab4.c: 103: T0CON = 0b00000100;
  1217   00094E  0E04               	movlw	4
  1218   000950  6ED5               	movwf	213,c	;volatile
  1219                           
  1220                           ;Lab4.c: 104: TMR0IF = 0;
  1221   000952  94F2               	bcf	4082,2,c	;volatile
  1222                           
  1223                           ;Lab4.c: 105: TMR0IE = 1;
  1224   000954  8AF2               	bsf	4082,5,c	;volatile
  1225                           
  1226                           ;Lab4.c: 106: TMR0ON = 1;
  1227   000956  8ED5               	bsf	4053,7,c	;volatile
  1228                           
  1229                           ;Lab4.c: 107: RBIF = 0;
  1230   000958  90F2               	bcf	4082,0,c	;volatile
  1231                           
  1232                           ;Lab4.c: 108: RBIE = 1;
  1233   00095A  86F2               	bsf	4082,3,c	;volatile
  1234                           
  1235                           ;Lab4.c: 109: GIE = 1;
  1236   00095C  8EF2               	bsf	4082,7,c	;volatile
  1237                           
  1238                           ;Lab4.c: 110: ADCON1bits.PCFG = 0x0E;
  1239   00095E  50C1               	movf	193,w,c	;volatile
  1240   000960  0BF0               	andlw	-16
  1241   000962  090E               	iorlw	14
  1242   000964  6EC1               	movwf	193,c	;volatile
  1243                           
  1244                           ;Lab4.c: 112: PR2 = 249;
  1245   000966  0EF9               	movlw	249
  1246   000968  6ECB               	movwf	203,c	;volatile
  1247                           
  1248                           ;Lab4.c: 113: CCPR1L = 125;
  1249   00096A  0E7D               	movlw	125
  1250   00096C  6EBE               	movwf	190,c	;volatile
  1251                           
  1252                           ;Lab4.c: 114: T2CON = 1;
  1253   00096E  0E01               	movlw	1
  1254   000970  6ECA               	movwf	202,c	;volatile
  1255                           
  1256                           ;Lab4.c: 115: CCP1CON = 12;
  1257   000972  0E0C               	movlw	12
  1258   000974  6EBD               	movwf	189,c	;volatile
  1259                           
  1260                           ;Lab4.c: 118: T1CON = 0b10010000;
  1261   000976  0E90               	movlw	144
  1262   000978  6ECD               	movwf	205,c	;volatile
  1263                           
  1264                           ;Lab4.c: 120: TMR2 = 0;
  1265   00097A  0E00               	movlw	0
  1266   00097C  6ECC               	movwf	204,c	;volatile
  1267                           
  1268                           ;Lab4.c: 121: TMR2ON = 1;
  1269   00097E  84CA               	bsf	4042,2,c	;volatile
  1270                           
  1271                           ;Lab4.c: 124: Lcd_Init();
  1272   000980  ECD9  F00C         	call	_Lcd_Init	;wreg free
  1273                           
  1274                           ;Lab4.c: 126: Lcd_CGRAM_Init();
  1275   000984  EC3B  F011         	call	_Lcd_CGRAM_Init	;wreg free
  1276                           
  1277                           ;Lab4.c: 127: Lcd_CGRAM_CreateChar(0, figura_1);
  1278   000988  0E2B               	movlw	low _figura_1
  1279   00098A  6E19               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1280   00098C  0E00               	movlw	0
  1281   00098E  EC60  F006         	call	_Lcd_CGRAM_CreateChar
  1282                           
  1283                           ;Lab4.c: 128: Lcd_CGRAM_CreateChar(1, figura_2);
  1284   000992  0E23               	movlw	low _figura_2
  1285   000994  6E19               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1286   000996  0E01               	movlw	1
  1287   000998  EC60  F006         	call	_Lcd_CGRAM_CreateChar
  1288                           
  1289                           ;Lab4.c: 129: Lcd_CGRAM_CreateChar(2, figura_3);
  1290   00099C  0E1B               	movlw	low _figura_3
  1291   00099E  6E19               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1292   0009A0  0E02               	movlw	2
  1293   0009A2  EC60  F006         	call	_Lcd_CGRAM_CreateChar
  1294                           
  1295                           ;Lab4.c: 130: Lcd_CGRAM_CreateChar(3, figura_4);
  1296   0009A6  0E13               	movlw	low _figura_4
  1297   0009A8  6E19               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1298   0009AA  0E03               	movlw	3
  1299   0009AC  EC60  F006         	call	_Lcd_CGRAM_CreateChar
  1300                           
  1301                           ;Lab4.c: 131: Lcd_CGRAM_CreateChar(4, figura_5);
  1302   0009B0  0E0B               	movlw	low _figura_5
  1303   0009B2  6E19               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1304   0009B4  0E04               	movlw	4
  1305   0009B6  EC60  F006         	call	_Lcd_CGRAM_CreateChar
  1306                           
  1307                           ;Lab4.c: 132: Lcd_CGRAM_Close();
  1308   0009BA  EC42  F011         	call	_Lcd_CGRAM_Close	;wreg free
  1309                           
  1310                           ;Lab4.c: 133: Lcd_Clear();
  1311   0009BE  EC50  F011         	call	_Lcd_Clear	;wreg free
  1312                           
  1313                           ;Lab4.c: 136: Lcd_Set_Cursor(1, 1);
  1314   0009C2  0E01               	movlw	1
  1315   0009C4  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  1316   0009C6  0E01               	movlw	1
  1317   0009C8  ECDE  F00A         	call	_Lcd_Set_Cursor
  1318                           
  1319                           ;Lab4.c: 137: Lcd_Write_String("Laboratorio 04");
  1320   0009CC  0E74               	movlw	low STR_1
  1321   0009CE  6E19               	movwf	Lcd_Write_String@a^0,c
  1322   0009D0  EC80  F00F         	call	_Lcd_Write_String	;wreg free
  1323                           
  1324                           ;Lab4.c: 138: Lcd_Set_Cursor(2, 1);
  1325   0009D4  0E01               	movlw	1
  1326   0009D6  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  1327   0009D8  0E02               	movlw	2
  1328   0009DA  ECDE  F00A         	call	_Lcd_Set_Cursor
  1329                           
  1330                           ;Lab4.c: 139: Lcd_Write_String("PIC18F4550");
  1331   0009DE  0E9B               	movlw	low STR_2
  1332   0009E0  6E19               	movwf	Lcd_Write_String@a^0,c
  1333   0009E2  EC80  F00F         	call	_Lcd_Write_String	;wreg free
  1334                           
  1335                           ;Lab4.c: 140: Lcd_Set_Cursor(2, 12);
  1336   0009E6  0E0C               	movlw	12
  1337   0009E8  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  1338   0009EA  0E02               	movlw	2
  1339   0009EC  ECDE  F00A         	call	_Lcd_Set_Cursor
  1340                           
  1341                           ;Lab4.c: 141: Lcd_Blink();
  1342   0009F0  EC34  F011         	call	_Lcd_Blink	;wreg free
  1343                           
  1344                           ;Lab4.c: 142: _delay((unsigned long)((200)*(8000000/4000.0)));
  1345   0009F4  0E03               	movlw	3
  1346   0009F6  0100               	movlb	0	; () banked
  1347   0009F8  6FA3               	movwf	(??_main+1)& (0+255),b
  1348   0009FA  0E08               	movlw	8
  1349   0009FC  6FA2               	movwf	??_main& (0+255),b
  1350   0009FE  0E77               	movlw	119
  1351   000A00                     u4117:
  1352   000A00  2EE8               	decfsz	wreg,f,c
  1353   000A02  D7FE               	bra	u4117
  1354   000A04  2FA2               	decfsz	??_main& (0+255),f,b
  1355   000A06  D7FC               	bra	u4117
  1356   000A08  2FA3               	decfsz	(??_main+1)& (0+255),f,b
  1357   000A0A  D7FA               	bra	u4117
  1358                           
  1359                           ;Lab4.c: 143: Lcd_NoBlink();
  1360   000A0C  EC49  F011         	call	_Lcd_NoBlink	;wreg free
  1361                           
  1362                           ;Lab4.c: 146: for (i = 1; i <= 5; i++) {
  1363   000A10  0E01               	movlw	1
  1364   000A12  0100               	movlb	0	; () banked
  1365   000A14  6FA8               	movwf	main@i& (0+255),b
  1366   000A16                     l4977:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;Lab4.c: 147: Lcd_Clear();
  1370   000A16  EC50  F011         	call	_Lcd_Clear	;wreg free
  1371                           
  1372                           ;Lab4.c: 148: Lcd_Set_Cursor(1, 1);
  1373   000A1A  0E01               	movlw	1
  1374   000A1C  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  1375   000A1E  0E01               	movlw	1
  1376   000A20  ECDE  F00A         	call	_Lcd_Set_Cursor
  1377                           
  1378                           ;Lab4.c: 149: Lcd_Write_String("Micros UNAL");
  1379   000A24  0E8F               	movlw	low STR_3
  1380   000A26  6E19               	movwf	Lcd_Write_String@a^0,c
  1381   000A28  EC80  F00F         	call	_Lcd_Write_String	;wreg free
  1382                           
  1383                           ;Lab4.c: 150: Lcd_Set_Cursor(2, 1);
  1384   000A2C  0E01               	movlw	1
  1385   000A2E  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  1386   000A30  0E02               	movlw	2
  1387   000A32  ECDE  F00A         	call	_Lcd_Set_Cursor
  1388                           
  1389                           ;Lab4.c: 151: Lcd_Write_Char(0);
  1390   000A36  0E00               	movlw	0
  1391   000A38  ECBE  F00F         	call	_Lcd_Write_Char
  1392                           
  1393                           ;Lab4.c: 152: Lcd_Set_Cursor(2, 7);
  1394   000A3C  0E07               	movlw	7
  1395   000A3E  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  1396   000A40  0E02               	movlw	2
  1397   000A42  ECDE  F00A         	call	_Lcd_Set_Cursor
  1398                           
  1399                           ;Lab4.c: 153: Lcd_Write_Char(1);
  1400   000A46  0E01               	movlw	1
  1401   000A48  ECBE  F00F         	call	_Lcd_Write_Char
  1402                           
  1403                           ;Lab4.c: 154: Lcd_Set_Cursor(2, 2 + i);
  1404   000A4C  0100               	movlb	0	; () banked
  1405   000A4E  51A8               	movf	main@i& (0+255),w,b
  1406   000A50  0F02               	addlw	2
  1407   000A52  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  1408   000A54  0E02               	movlw	2
  1409   000A56  ECDE  F00A         	call	_Lcd_Set_Cursor
  1410                           
  1411                           ;Lab4.c: 155: Lcd_Write_Char(2);
  1412   000A5A  0E02               	movlw	2
  1413   000A5C  ECBE  F00F         	call	_Lcd_Write_Char
  1414                           
  1415                           ;Lab4.c: 156: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1416   000A60  0E0B               	movlw	11
  1417   000A62  0100               	movlb	0	; () banked
  1418   000A64  6FA3               	movwf	(??_main+1)& (0+255),b
  1419   000A66  0E26               	movlw	38
  1420   000A68  6FA2               	movwf	??_main& (0+255),b
  1421   000A6A  0E5D               	movlw	93
  1422   000A6C                     u4127:
  1423   000A6C  2EE8               	decfsz	wreg,f,c
  1424   000A6E  D7FE               	bra	u4127
  1425   000A70  2FA2               	decfsz	??_main& (0+255),f,b
  1426   000A72  D7FC               	bra	u4127
  1427   000A74  2FA3               	decfsz	(??_main+1)& (0+255),f,b
  1428   000A76  D7FA               	bra	u4127
  1429   000A78  D000               	nop2	
  1430   000A7A  0100               	movlb	0	; () banked
  1431   000A7C  2BA8               	incf	main@i& (0+255),f,b
  1432                           
  1433                           ; BSR set to: 0
  1434   000A7E  0E05               	movlw	5
  1435   000A80  65A8               	cpfsgt	main@i& (0+255),b
  1436   000A82  D7C9               	goto	l4977
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;Lab4.c: 157: };Lab4.c: 158: Lcd_Clear();
  1440   000A84  EC50  F011         	call	_Lcd_Clear	;wreg free
  1441                           
  1442                           ;Lab4.c: 159: escenario1();
  1443   000A88  ECB6  F00E         	call	_escenario1	;wreg free
  1444   000A8C                     l5005:
  1445                           
  1446                           ;Lab4.c: 163: resultado_ADC = Conversion(0);
  1447   000A8C  0E00               	movlw	0
  1448   000A8E  ECBA  F010         	call	_Conversion
  1449   000A92  C015  F0A9         	movff	?_Conversion,_resultado_ADC
  1450   000A96  C016  F0AA         	movff	?_Conversion+1,_resultado_ADC+1
  1451                           
  1452                           ;Lab4.c: 164: Duty_motor(resultado_ADC);
  1453   000A9A  C0A9  F01D         	movff	_resultado_ADC,___lwtoft@c
  1454   000A9E  C0AA  F01E         	movff	_resultado_ADC+1,___lwtoft@c+1
  1455   000AA2  ECF3  F010         	call	___lwtoft	;wreg free
  1456   000AA6  C01D  F09C         	movff	?___lwtoft,Duty_motor@ADC
  1457   000AAA  C01E  F09D         	movff	?___lwtoft+1,Duty_motor@ADC+1
  1458   000AAE  C01F  F09E         	movff	?___lwtoft+2,Duty_motor@ADC+2
  1459   000AB2  EC7E  F00B         	call	_Duty_motor	;wreg free
  1460                           
  1461                           ;Lab4.c: 166: d=MedirDistancia();
  1462   000AB6  EC19  F00D         	call	_MedirDistancia	;wreg free
  1463   000ABA  0100               	movlb	0	; () banked
  1464   000ABC  6FA7               	movwf	main@d& (0+255),b
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;Lab4.c: 167: sprintf(buffer, "Distancia = %d cm \nPWM = %u \n", d,(int) resultado_ADC);
  1468   000ABE  0E75               	movlw	low _buffer
  1469   000AC0  6E21               	movwf	sprintf@sp^0,c
  1470   000AC2  0E33               	movlw	low STR_4
  1471   000AC4  6E22               	movwf	sprintf@f^0,c
  1472   000AC6  C0A7  F023         	movff	main@d,?_sprintf+2
  1473   000ACA  6A24               	clrf	(?_sprintf+3)^0,c
  1474   000ACC  C0A9  F025         	movff	_resultado_ADC,?_sprintf+4
  1475   000AD0  C0AA  F026         	movff	_resultado_ADC+1,?_sprintf+5
  1476   000AD4  EC1A  F007         	call	_sprintf	;wreg free
  1477   000AD8  0100               	movlb	0	; () banked
  1478   000ADA  51A7               	movf	main@d& (0+255),w,b
  1479   000ADC  6FA2               	movwf	??_main& (0+255),b
  1480   000ADE  6BA3               	clrf	(??_main+1)& (0+255),b
  1481   000AE0  6BA4               	clrf	(??_main+2)& (0+255),b
  1482   000AE2  C0A2  F01B         	movff	??_main,atoi@s
  1483   000AE6  C0A3  F01C         	movff	??_main+1,atoi@s+1
  1484   000AEA  C0A4  F01D         	movff	??_main+2,atoi@s+2
  1485   000AEE  ECB3  F009         	call	_atoi	;wreg free
  1486                           
  1487                           ;Lab4.c: 171: if(menu==2 && distanciaContar<9) ContarReal();
  1488   000AF2  0E02               	movlw	2
  1489   000AF4  1847               	xorwf	_menu^0,w,c
  1490   000AF6  1048               	iorwf	(_menu+1)^0,w,c
  1491   000AF8  A4D8               	btfss	status,2,c
  1492   000AFA  D008               	goto	l5021
  1493   000AFC  0100               	movlb	0	; () banked
  1494   000AFE  51A6               	movf	(main@distanciaContar+1)& (0+255),w,b
  1495   000B00  E105               	bnz	l5021
  1496   000B02  0E09               	movlw	9
  1497   000B04  5DA5               	subwf	main@distanciaContar& (0+255),w,b
  1498   000B06  A0D8               	btfss	status,0,c
  1499                           
  1500                           ; BSR set to: 0
  1501   000B08  ECC7  F007         	call	_ContarReal	;wreg free
  1502   000B0C                     l5021:
  1503                           
  1504                           ;Lab4.c: 172: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1505   000B0C  0E0B               	movlw	11
  1506   000B0E  0100               	movlb	0	; () banked
  1507   000B10  6FA3               	movwf	(??_main+1)& (0+255),b
  1508   000B12  0E26               	movlw	38
  1509   000B14  6FA2               	movwf	??_main& (0+255),b
  1510   000B16  0E5D               	movlw	93
  1511   000B18                     u4137:
  1512   000B18  2EE8               	decfsz	wreg,f,c
  1513   000B1A  D7FE               	bra	u4137
  1514   000B1C  2FA2               	decfsz	??_main& (0+255),f,b
  1515   000B1E  D7FC               	bra	u4137
  1516   000B20  2FA3               	decfsz	(??_main+1)& (0+255),f,b
  1517   000B22  D7FA               	bra	u4137
  1518   000B24  D000               	nop2	
  1519   000B26  D7B2               	goto	l5005
  1520   000B28                     __end_of_main:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _sprintf *****************
  1524 ;; Defined at:
  1525 ;;		line 505 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/doprnt.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  sp              1   32[COMRAM] PTR unsigned char 
  1528 ;;		 -> buffer(30), 
  1529 ;;  f               1   33[COMRAM] PTR const unsigned char 
  1530 ;;		 -> STR_4(30), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  tmpval          4    0        struct .
  1533 ;;  cp              3    0        PTR const unsigned char 
  1534 ;;  val             2   42[COMRAM] unsigned int 
  1535 ;;  len             2    0        unsigned int 
  1536 ;;  c               1   44[COMRAM] unsigned char 
  1537 ;;  flag            1   41[COMRAM] unsigned char 
  1538 ;;  ap              1   40[COMRAM] PTR void [1]
  1539 ;;		 -> ?_sprintf(2), 
  1540 ;;  prec            1   39[COMRAM] char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  2   32[COMRAM] int 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 3F/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1550 ;;      Params:         6       0       0       0       0       0       0       0       0
  1551 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1552 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1553 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1554 ;;Total ram usage:       13 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 8
  1557 ;; This function calls:
  1558 ;;		___lwdiv
  1559 ;;		___lwmod
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text1
  1566   000E34                     __ptext1:
  1567                           	callstack 0
  1568   000E34                     _sprintf:
  1569                           	callstack 22
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  1573                           
  1574                           ;incstack = 0
  1575   000E34  0E23               	movlw	low (?_sprintf+2)
  1576   000E36  6E29               	movwf	sprintf@ap^0,c
  1577                           
  1578                           ;doprnt.c: 553: while((c = *f++)) {
  1579   000E38  D098               	goto	u3980
  1580   000E3A                     l4759:
  1581                           
  1582                           ;doprnt.c: 555: if(c != '%')
  1583   000E3A  0E25               	movlw	37
  1584   000E3C  182D               	xorwf	sprintf@c^0,w,c
  1585   000E3E  B4D8               	btfsc	status,2,c
  1586   000E40  D007               	goto	l4765
  1587                           
  1588                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1589   000E42  5021               	movf	sprintf@sp^0,w,c
  1590   000E44  6ED9               	movwf	fsr2l,c
  1591   000E46  6ADA               	clrf	fsr2h,c
  1592   000E48  C02D  FFDF         	movff	sprintf@c,indf2
  1593   000E4C  2A21               	incf	sprintf@sp^0,f,c
  1594                           
  1595                           ;doprnt.c: 559: continue;
  1596   000E4E  D08D               	goto	u3980
  1597   000E50                     l4765:
  1598                           
  1599                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1600   000E50  0E00               	movlw	0
  1601   000E52  6E2A               	movwf	sprintf@flag^0,c
  1602                           
  1603                           ;doprnt.c: 661: switch(c = *f++) {
  1604   000E54  D002               	goto	l4771
  1605   000E56                     l4767:
  1606                           
  1607                           ;doprnt.c: 844: flag |= 0x40;
  1608   000E56  8C2A               	bsf	sprintf@flag^0,6,c
  1609                           
  1610                           ;doprnt.c: 845: break;
  1611   000E58  D018               	goto	l459
  1612   000E5A                     l4771:
  1613   000E5A  2A22               	incf	sprintf@f^0,f,c
  1614   000E5C  0422               	decf	sprintf@f^0,w,c
  1615   000E5E  6E27               	movwf	??_sprintf^0,c
  1616   000E60  C027  FFF6         	movff	??_sprintf,tblptrl
  1617   000E64                     	if	1	;There is more than 1 active tblptr byte
  1618   000E64  0E08               	movlw	high __smallconst
  1619   000E66  6EF7               	movwf	tblptrh,c
  1620   000E68                     	endif
  1621   000E68                     	if	0	;tblptru may be non-zero
  1622   000E68                     	endif
  1623   000E68                     	if	0	;tblptru may be non-zero
  1624   000E68                     	endif
  1625   000E68  0008               	tblrd		*
  1626   000E6A  CFF5 F02D          	movff	tablat,sprintf@c
  1627   000E6E  502D               	movf	sprintf@c^0,w,c
  1628                           
  1629                           ; Switch size 1, requested type "simple"
  1630                           ; Number of cases is 4, Range of values is 0 to 117
  1631                           ; switch strategies available:
  1632                           ; Name         Instructions Cycles
  1633                           ; simple_byte           13     7 (average)
  1634                           ;	Chosen strategy is simple_byte
  1635   000E70  0A00               	xorlw	0	; case 0
  1636   000E72  B4D8               	btfsc	status,2,c
  1637   000E74  D087               	goto	u3990
  1638   000E76  0A64               	xorlw	100	; case 100
  1639   000E78  B4D8               	btfsc	status,2,c
  1640   000E7A  D007               	goto	l459
  1641   000E7C  0A0D               	xorlw	13	; case 105
  1642   000E7E  B4D8               	btfsc	status,2,c
  1643   000E80  D004               	goto	l459
  1644   000E82  0A1C               	xorlw	28	; case 117
  1645   000E84  B4D8               	btfsc	status,2,c
  1646   000E86  D7E7               	goto	l4767
  1647   000E88  D070               	goto	u3980
  1648   000E8A                     l459:
  1649                           
  1650                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  1651   000E8A  BC2A               	btfsc	sprintf@flag^0,6,c
  1652   000E8C  D012               	goto	l4783
  1653                           
  1654                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  1655   000E8E  5029               	movf	sprintf@ap^0,w,c
  1656   000E90  6ED9               	movwf	fsr2l,c
  1657   000E92  6ADA               	clrf	fsr2h,c
  1658   000E94  CFDE F02B          	movff	postinc2,sprintf@val
  1659   000E98  CFDD F02C          	movff	postdec2,sprintf@val+1
  1660   000E9C  0E02               	movlw	2
  1661   000E9E  2629               	addwf	sprintf@ap^0,f,c
  1662                           
  1663                           ;doprnt.c: 1287: if((int)val < 0) {
  1664   000EA0  AE2C               	btfss	(sprintf@val+1)^0,7,c
  1665   000EA2  D010               	goto	l4787
  1666                           
  1667                           ;doprnt.c: 1288: flag |= 0x03;
  1668   000EA4  0E03               	movlw	3
  1669   000EA6  122A               	iorwf	sprintf@flag^0,f,c
  1670                           
  1671                           ;doprnt.c: 1289: val = -val;
  1672   000EA8  6C2B               	negf	sprintf@val^0,c
  1673   000EAA  1E2C               	comf	(sprintf@val+1)^0,f,c
  1674   000EAC  B0D8               	btfsc	status,0,c
  1675   000EAE  2A2C               	incf	(sprintf@val+1)^0,f,c
  1676   000EB0  D009               	goto	l4787
  1677   000EB2                     l4783:
  1678                           
  1679                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  1680   000EB2  5029               	movf	sprintf@ap^0,w,c
  1681   000EB4  6ED9               	movwf	fsr2l,c
  1682   000EB6  6ADA               	clrf	fsr2h,c
  1683   000EB8  CFDE F02B          	movff	postinc2,sprintf@val
  1684   000EBC  CFDD F02C          	movff	postdec2,sprintf@val+1
  1685   000EC0  0E02               	movlw	2
  1686   000EC2  2629               	addwf	sprintf@ap^0,f,c
  1687   000EC4                     l4787:
  1688                           
  1689                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  1690   000EC4  0E01               	movlw	1
  1691   000EC6  6E2D               	movwf	sprintf@c^0,c
  1692   000EC8                     l4793:
  1693                           
  1694                           ;doprnt.c: 1332: if(val < dpowers[c])
  1695   000EC8  502D               	movf	sprintf@c^0,w,c
  1696   000ECA  0D02               	mullw	2
  1697   000ECC  50F3               	movf	243,w,c
  1698   000ECE  0F01               	addlw	low _dpowers
  1699   000ED0  6E27               	movwf	??_sprintf^0,c
  1700   000ED2  C027  FFF6         	movff	??_sprintf,tblptrl
  1701   000ED6                     	if	1	;There is more than 1 active tblptr byte
  1702   000ED6  0E08               	movlw	high __smallconst
  1703   000ED8  6EF7               	movwf	tblptrh,c
  1704   000EDA                     	endif
  1705   000EDA                     	if	0	;tblptru may be non-zero
  1706   000EDA                     	endif
  1707   000EDA                     	if	0	;tblptru may be non-zero
  1708   000EDA                     	endif
  1709   000EDA  0009               	tblrd		*+
  1710   000EDC  50F5               	movf	tablat,w,c
  1711   000EDE  5C2B               	subwf	sprintf@val^0,w,c
  1712   000EE0  0009               	tblrd		*+
  1713   000EE2  50F5               	movf	tablat,w,c
  1714   000EE4  582C               	subwfb	(sprintf@val+1)^0,w,c
  1715   000EE6  A0D8               	btfss	status,0,c
  1716   000EE8  D005               	goto	u3960
  1717   000EEA  2A2D               	incf	sprintf@c^0,f,c
  1718   000EEC  0E05               	movlw	5
  1719   000EEE  182D               	xorwf	sprintf@c^0,w,c
  1720   000EF0  A4D8               	btfss	status,2,c
  1721   000EF2  D7EA               	goto	l4793
  1722   000EF4                     u3960:
  1723                           
  1724                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  1725   000EF4  C02A  F027         	movff	sprintf@flag,??_sprintf
  1726   000EF8  0E03               	movlw	3
  1727   000EFA  1627               	andwf	??_sprintf^0,f,c
  1728   000EFC  B4D8               	btfsc	status,2,c
  1729   000EFE  D006               	goto	l4807
  1730                           
  1731                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  1732   000F00  5021               	movf	sprintf@sp^0,w,c
  1733   000F02  6ED9               	movwf	fsr2l,c
  1734   000F04  6ADA               	clrf	fsr2h,c
  1735   000F06  0E2D               	movlw	45
  1736   000F08  6EDF               	movwf	indf2,c
  1737   000F0A  2A21               	incf	sprintf@sp^0,f,c
  1738   000F0C                     l4807:
  1739                           
  1740                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1741   000F0C  C02D  F028         	movff	sprintf@c,sprintf@prec
  1742                           
  1743                           ;doprnt.c: 1500: while(prec--) {
  1744   000F10  D028               	goto	l4815
  1745   000F12                     l4809:
  1746                           
  1747                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1748   000F12  5028               	movf	sprintf@prec^0,w,c
  1749   000F14  0D02               	mullw	2
  1750   000F16  50F3               	movf	243,w,c
  1751   000F18  0F01               	addlw	low _dpowers
  1752   000F1A  6E27               	movwf	??_sprintf^0,c
  1753   000F1C  C027  FFF6         	movff	??_sprintf,tblptrl
  1754   000F20                     	if	1	;There is more than 1 active tblptr byte
  1755   000F20  0E08               	movlw	high __smallconst
  1756   000F22  6EF7               	movwf	tblptrh,c
  1757   000F24                     	endif
  1758   000F24                     	if	0	;tblptru may be non-zero
  1759   000F24                     	endif
  1760   000F24                     	if	0	;tblptru may be non-zero
  1761   000F24                     	endif
  1762   000F24  0009               	tblrd		*+
  1763   000F26  CFF5 F017          	movff	tablat,___lwdiv@divisor
  1764   000F2A  000A               	tblrd		*-
  1765   000F2C  CFF5 F018          	movff	tablat,___lwdiv@divisor+1
  1766   000F30  C02B  F015         	movff	sprintf@val,___lwdiv@dividend
  1767   000F34  C02C  F016         	movff	sprintf@val+1,___lwdiv@dividend+1
  1768   000F38  EC66  F00E         	call	___lwdiv	;wreg free
  1769   000F3C  C015  F01C         	movff	?___lwdiv,___lwmod@dividend
  1770   000F40  C016  F01D         	movff	?___lwdiv+1,___lwmod@dividend+1
  1771   000F44  0E00               	movlw	0
  1772   000F46  6E1F               	movwf	(___lwmod@divisor+1)^0,c
  1773   000F48  0E0A               	movlw	10
  1774   000F4A  6E1E               	movwf	___lwmod@divisor^0,c
  1775   000F4C  ECFC  F00E         	call	___lwmod	;wreg free
  1776   000F50  501C               	movf	?___lwmod^0,w,c
  1777   000F52  0F30               	addlw	48
  1778   000F54  6E2D               	movwf	sprintf@c^0,c
  1779                           
  1780                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  1781   000F56  5021               	movf	sprintf@sp^0,w,c
  1782   000F58  6ED9               	movwf	fsr2l,c
  1783   000F5A  6ADA               	clrf	fsr2h,c
  1784   000F5C  C02D  FFDF         	movff	sprintf@c,indf2
  1785   000F60  2A21               	incf	sprintf@sp^0,f,c
  1786   000F62                     l4815:
  1787   000F62  0628               	decf	sprintf@prec^0,f,c
  1788   000F64  2828               	incf	sprintf@prec^0,w,c
  1789   000F66  A4D8               	btfss	status,2,c
  1790   000F68  D7D4               	goto	l4809
  1791   000F6A                     u3980:
  1792   000F6A  2A22               	incf	sprintf@f^0,f,c
  1793   000F6C  0422               	decf	sprintf@f^0,w,c
  1794   000F6E  6E27               	movwf	??_sprintf^0,c
  1795   000F70  C027  FFF6         	movff	??_sprintf,tblptrl
  1796   000F74                     	if	1	;There is more than 1 active tblptr byte
  1797   000F74  0E08               	movlw	high __smallconst
  1798   000F76  6EF7               	movwf	tblptrh,c
  1799   000F78                     	endif
  1800   000F78                     	if	0	;tblptru may be non-zero
  1801   000F78                     	endif
  1802   000F78                     	if	0	;tblptru may be non-zero
  1803   000F78                     	endif
  1804   000F78  0008               	tblrd		*
  1805   000F7A  CFF5 F02D          	movff	tablat,sprintf@c
  1806   000F7E  502D               	movf	sprintf@c^0,w,c
  1807   000F80  A4D8               	btfss	status,2,c
  1808   000F82  D75B               	goto	l4759
  1809   000F84                     u3990:
  1810                           
  1811                           ;doprnt.c: 1564: *sp = 0;
  1812   000F84  5021               	movf	sprintf@sp^0,w,c
  1813   000F86  6ED9               	movwf	fsr2l,c
  1814   000F88  6ADA               	clrf	fsr2h,c
  1815   000F8A  6ADF               	clrf	indf2,c
  1816   000F8C  0012               	return		;funcret
  1817   000F8E                     __end_of_sprintf:
  1818                           	callstack 0
  1819                           
  1820 ;; *************** function ___lwmod *****************
  1821 ;; Defined at:
  1822 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/lwmod.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  dividend        2   27[COMRAM] unsigned int 
  1825 ;;  divisor         2   29[COMRAM] unsigned int 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  counter         1   31[COMRAM] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  2   27[COMRAM] unsigned int 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1837 ;;      Params:         4       0       0       0       0       0       0       0       0
  1838 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1840 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1841 ;;Total ram usage:        5 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 7
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_sprintf
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text2
  1852   001DF8                     __ptext2:
  1853                           	callstack 0
  1854   001DF8                     ___lwmod:
  1855                           	callstack 22
  1856                           
  1857                           ;incstack = 0
  1858   001DF8  501E               	movf	___lwmod@divisor^0,w,c
  1859   001DFA  101F               	iorwf	(___lwmod@divisor+1)^0,w,c
  1860   001DFC  B4D8               	btfsc	status,2,c
  1861   001DFE  D018               	goto	l965
  1862   001E00  0E01               	movlw	1
  1863   001E02  6E20               	movwf	___lwmod@counter^0,c
  1864   001E04  D004               	goto	l4529
  1865   001E06                     l4527:
  1866   001E06  90D8               	bcf	status,0,c
  1867   001E08  361E               	rlcf	___lwmod@divisor^0,f,c
  1868   001E0A  361F               	rlcf	(___lwmod@divisor+1)^0,f,c
  1869   001E0C  2A20               	incf	___lwmod@counter^0,f,c
  1870   001E0E                     l4529:
  1871   001E0E  AE1F               	btfss	(___lwmod@divisor+1)^0,7,c
  1872   001E10  D7FA               	goto	l4527
  1873   001E12                     u3700:
  1874   001E12  501E               	movf	___lwmod@divisor^0,w,c
  1875   001E14  5C1C               	subwf	___lwmod@dividend^0,w,c
  1876   001E16  501F               	movf	(___lwmod@divisor+1)^0,w,c
  1877   001E18  581D               	subwfb	(___lwmod@dividend+1)^0,w,c
  1878   001E1A  A0D8               	btfss	status,0,c
  1879   001E1C  D004               	goto	l4535
  1880   001E1E  501E               	movf	___lwmod@divisor^0,w,c
  1881   001E20  5E1C               	subwf	___lwmod@dividend^0,f,c
  1882   001E22  501F               	movf	(___lwmod@divisor+1)^0,w,c
  1883   001E24  5A1D               	subwfb	(___lwmod@dividend+1)^0,f,c
  1884   001E26                     l4535:
  1885   001E26  90D8               	bcf	status,0,c
  1886   001E28  321F               	rrcf	(___lwmod@divisor+1)^0,f,c
  1887   001E2A  321E               	rrcf	___lwmod@divisor^0,f,c
  1888   001E2C  2E20               	decfsz	___lwmod@counter^0,f,c
  1889   001E2E  D7F1               	goto	u3700
  1890   001E30                     l965:
  1891   001E30  C01C  F01C         	movff	___lwmod@dividend,?___lwmod
  1892   001E34  C01D  F01D         	movff	___lwmod@dividend+1,?___lwmod+1
  1893   001E38  0012               	return		;funcret
  1894   001E3A                     __end_of___lwmod:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _escenario1 *****************
  1898 ;; Defined at:
  1899 ;;		line 181 in file "Lab4.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1913 ;;      Params:         0       0       0       0       0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1916 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1917 ;;Total ram usage:        0 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 10
  1920 ;; This function calls:
  1921 ;;		_Lcd_Blink
  1922 ;;		_Lcd_Clear
  1923 ;;		_Lcd_Set_Cursor
  1924 ;;		_Lcd_Write_Char
  1925 ;;		_Lcd_Write_String
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text3
  1932   001D6C                     __ptext3:
  1933                           	callstack 0
  1934   001D6C                     _escenario1:
  1935                           	callstack 20
  1936                           
  1937                           ;Lab4.c: 182: menu = 1;
  1938                           
  1939                           ;incstack = 0
  1940   001D6C  0E00               	movlw	0
  1941   001D6E  6E48               	movwf	(_menu+1)^0,c
  1942   001D70  0E01               	movlw	1
  1943   001D72  6E47               	movwf	_menu^0,c
  1944                           
  1945                           ;Lab4.c: 183: Lcd_Clear();
  1946   001D74  EC50  F011         	call	_Lcd_Clear	;wreg free
  1947                           
  1948                           ;Lab4.c: 184: Lcd_Set_Cursor(1, 1);
  1949   001D78  0E01               	movlw	1
  1950   001D7A  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  1951   001D7C  0E01               	movlw	1
  1952   001D7E  ECDE  F00A         	call	_Lcd_Set_Cursor
  1953                           
  1954                           ;Lab4.c: 185: Lcd_Write_String("Piezas a contar:");
  1955   001D82  0E63               	movlw	low STR_5
  1956   001D84  6E19               	movwf	Lcd_Write_String@a^0,c
  1957   001D86  EC80  F00F         	call	_Lcd_Write_String	;wreg free
  1958                           
  1959                           ;Lab4.c: 186: Lcd_Set_Cursor(2, 9);
  1960   001D8A  0E09               	movlw	9
  1961   001D8C  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  1962   001D8E  0E02               	movlw	2
  1963   001D90  ECDE  F00A         	call	_Lcd_Set_Cursor
  1964                           
  1965                           ;Lab4.c: 187: Lcd_Write_String("A:ok B:");
  1966   001D94  0EC4               	movlw	low STR_6
  1967   001D96  6E19               	movwf	Lcd_Write_String@a^0,c
  1968   001D98  EC80  F00F         	call	_Lcd_Write_String	;wreg free
  1969                           
  1970                           ;Lab4.c: 188: Lcd_Write_Char(0b01111111);
  1971   001D9C  0E7F               	movlw	127
  1972   001D9E  ECBE  F00F         	call	_Lcd_Write_Char
  1973                           
  1974                           ;Lab4.c: 189: Lcd_Set_Cursor(2, 1);
  1975   001DA2  0E01               	movlw	1
  1976   001DA4  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  1977   001DA6  0E02               	movlw	2
  1978   001DA8  ECDE  F00A         	call	_Lcd_Set_Cursor
  1979                           
  1980                           ;Lab4.c: 190: Lcd_Blink();
  1981   001DAC  EC34  F011         	call	_Lcd_Blink	;wreg free
  1982   001DB0  0012               	return		;funcret
  1983   001DB2                     __end_of_escenario1:
  1984                           	callstack 0
  1985                           
  1986 ;; *************** function _Lcd_Blink *****************
  1987 ;; Defined at:
  1988 ;;		line 124 in file "lcd.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2002 ;;      Params:         0       0       0       0       0       0       0       0       0
  2003 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2005 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2006 ;;Total ram usage:        0 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; Hardware stack levels required when called: 9
  2009 ;; This function calls:
  2010 ;;		_Lcd_Cmd
  2011 ;; This function is called by:
  2012 ;;		_main
  2013 ;;		_escenario1
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text4
  2018   002268                     __ptext4:
  2019                           	callstack 0
  2020   002268                     _Lcd_Blink:
  2021                           	callstack 20
  2022                           
  2023                           ;lcd.c: 126: Lcd_Cmd(0x00);
  2024                           
  2025                           ;incstack = 0
  2026   002268  0E00               	movlw	0
  2027   00226A  EC05  F011         	call	_Lcd_Cmd
  2028                           
  2029                           ;lcd.c: 127: Lcd_Cmd(0x0F);
  2030   00226E  0E0F               	movlw	15
  2031   002270  EC05  F011         	call	_Lcd_Cmd
  2032   002274  0012               	return		;funcret
  2033   002276                     __end_of_Lcd_Blink:
  2034                           	callstack 0
  2035                           
  2036 ;; *************** function _atoi *****************
  2037 ;; Defined at:
  2038 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/atoi.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  s               3   26[COMRAM] PTR const unsigned char 
  2041 ;;		 -> ROM(32767), 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  a               2   29[COMRAM] int 
  2044 ;;  sign            1   31[COMRAM] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2   26[COMRAM] int 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 3F/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2054 ;;      Params:         3       0       0       0       0       0       0       0       0
  2055 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2057 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2058 ;;Total ram usage:        6 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 8
  2061 ;; This function calls:
  2062 ;;		___wmul
  2063 ;;		_isdigit
  2064 ;; This function is called by:
  2065 ;;		_main
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text5
  2070   001366                     __ptext5:
  2071                           	callstack 0
  2072   001366                     _atoi:
  2073                           	callstack 22
  2074                           
  2075                           ; BSR set to: 0
  2076                           
  2077                           ;incstack = 0
  2078   001366  D006               	goto	l4827
  2079   001368                     l4825:
  2080                           
  2081                           ; BSR set to: 0
  2082   001368  0E01               	movlw	1
  2083   00136A  261B               	addwf	atoi@s^0,f,c
  2084   00136C  0E00               	movlw	0
  2085   00136E  221C               	addwfc	(atoi@s+1)^0,f,c
  2086   001370  0E00               	movlw	0
  2087   001372  221D               	addwfc	(atoi@s+2)^0,f,c
  2088   001374                     l4827:
  2089                           
  2090                           ; BSR set to: 0
  2091   001374  C01B  FFF6         	movff	atoi@s,tblptrl
  2092   001378  C01C  FFF7         	movff	atoi@s+1,tblptrh
  2093   00137C  C01D  FFF8         	movff	atoi@s+2,tblptru
  2094   001380  0008               	tblrd		*
  2095   001382  50F5               	movf	tablat,w,c
  2096   001384  0A20               	xorlw	32
  2097   001386  B4D8               	btfsc	status,2,c
  2098   001388  D7EF               	goto	l4825
  2099                           
  2100                           ; BSR set to: 0
  2101   00138A  C01B  FFF6         	movff	atoi@s,tblptrl
  2102   00138E  C01C  FFF7         	movff	atoi@s+1,tblptrh
  2103   001392  C01D  FFF8         	movff	atoi@s+2,tblptru
  2104   001396  0008               	tblrd		*
  2105   001398  50F5               	movf	tablat,w,c
  2106   00139A  0A09               	xorlw	9
  2107   00139C  B4D8               	btfsc	status,2,c
  2108   00139E  D7E4               	goto	l4825
  2109                           
  2110                           ; BSR set to: 0
  2111   0013A0  0E00               	movlw	0
  2112   0013A2  6E1F               	movwf	(atoi@a+1)^0,c
  2113   0013A4  0E00               	movlw	0
  2114   0013A6  6E1E               	movwf	atoi@a^0,c
  2115   0013A8  0E00               	movlw	0
  2116   0013AA  6E20               	movwf	atoi@sign^0,c
  2117                           
  2118                           ; BSR set to: 0
  2119   0013AC  C01B  FFF6         	movff	atoi@s,tblptrl
  2120   0013B0  C01C  FFF7         	movff	atoi@s+1,tblptrh
  2121   0013B4  C01D  FFF8         	movff	atoi@s+2,tblptru
  2122   0013B8  0008               	tblrd		*
  2123   0013BA  50F5               	movf	tablat,w,c
  2124   0013BC  0A2D               	xorlw	45
  2125   0013BE  A4D8               	btfss	status,2,c
  2126   0013C0  D008               	goto	l4839
  2127                           
  2128                           ; BSR set to: 0
  2129   0013C2  2A20               	incf	atoi@sign^0,f,c
  2130   0013C4                     l4837:
  2131   0013C4  0E01               	movlw	1
  2132   0013C6  261B               	addwf	atoi@s^0,f,c
  2133   0013C8  0E00               	movlw	0
  2134   0013CA  221C               	addwfc	(atoi@s+1)^0,f,c
  2135   0013CC  0E00               	movlw	0
  2136   0013CE  221D               	addwfc	(atoi@s+2)^0,f,c
  2137   0013D0  D028               	goto	l4847
  2138   0013D2                     l4839:
  2139                           
  2140                           ; BSR set to: 0
  2141   0013D2  C01B  FFF6         	movff	atoi@s,tblptrl
  2142   0013D6  C01C  FFF7         	movff	atoi@s+1,tblptrh
  2143   0013DA  C01D  FFF8         	movff	atoi@s+2,tblptru
  2144   0013DE  0008               	tblrd		*
  2145   0013E0  50F5               	movf	tablat,w,c
  2146   0013E2  0A2B               	xorlw	43
  2147   0013E4  B4D8               	btfsc	status,2,c
  2148   0013E6  D7EE               	goto	l4837
  2149   0013E8  D01C               	goto	l4847
  2150   0013EA                     l4843:
  2151   0013EA  C01E  F015         	movff	atoi@a,___wmul@multiplier
  2152   0013EE  C01F  F016         	movff	atoi@a+1,___wmul@multiplier+1
  2153   0013F2  0E00               	movlw	0
  2154   0013F4  6E18               	movwf	(___wmul@multiplicand+1)^0,c
  2155   0013F6  0E0A               	movlw	10
  2156   0013F8  6E17               	movwf	___wmul@multiplicand^0,c
  2157   0013FA  ECCD  F010         	call	___wmul	;wreg free
  2158   0013FE  C01B  FFF6         	movff	atoi@s,tblptrl
  2159   001402  C01C  FFF7         	movff	atoi@s+1,tblptrh
  2160   001406  C01D  FFF8         	movff	atoi@s+2,tblptru
  2161   00140A  0008               	tblrd		*
  2162   00140C  50F5               	movf	tablat,w,c
  2163   00140E  2615               	addwf	?___wmul^0,f,c
  2164   001410  0E00               	movlw	0
  2165   001412  2216               	addwfc	(?___wmul+1)^0,f,c
  2166   001414  0ED0               	movlw	208
  2167   001416  2415               	addwf	?___wmul^0,w,c
  2168   001418  6E1E               	movwf	atoi@a^0,c
  2169   00141A  0EFF               	movlw	255
  2170   00141C  2016               	addwfc	(?___wmul+1)^0,w,c
  2171   00141E  6E1F               	movwf	(atoi@a+1)^0,c
  2172   001420  D7D1               	goto	l4837
  2173   001422                     l4847:
  2174   001422  C01B  FFF6         	movff	atoi@s,tblptrl
  2175   001426  C01C  FFF7         	movff	atoi@s+1,tblptrh
  2176   00142A  C01D  FFF8         	movff	atoi@s+2,tblptru
  2177   00142E  0008               	tblrd		*
  2178   001430  50F5               	movf	tablat,w,c
  2179   001432  EC25  F011         	call	_isdigit
  2180   001436  A0D8               	btfss	status,0,c
  2181   001438  0012               	return	
  2182   00143A  D7D7               	goto	l4843
  2183   00143C                     __end_of_atoi:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _isdigit *****************
  2187 ;; Defined at:
  2188 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/isdigit.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  c               1    wreg     unsigned char 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  c               1   22[COMRAM] unsigned char 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;		None               void
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2202 ;;      Params:         0       0       0       0       0       0       0       0       0
  2203 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2204 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2205 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2206 ;;Total ram usage:        3 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 7
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_atoi
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text6
  2217   00224A                     __ptext6:
  2218                           	callstack 0
  2219   00224A                     _isdigit:
  2220                           	callstack 22
  2221                           
  2222                           ;incstack = 0
  2223                           ;isdigit@c stored from wreg
  2224   00224A  6E17               	movwf	isdigit@c^0,c
  2225   00224C  0E00               	movlw	0
  2226   00224E  6E16               	movwf	_isdigit$960^0,c
  2227   002250  0E3A               	movlw	58
  2228   002252  6017               	cpfslt	isdigit@c^0,c
  2229   002254  D005               	goto	l4547
  2230   002256  0E2F               	movlw	47
  2231   002258  6417               	cpfsgt	isdigit@c^0,c
  2232   00225A  D002               	goto	l4547
  2233   00225C  0E01               	movlw	1
  2234   00225E  6E16               	movwf	_isdigit$960^0,c
  2235   002260                     l4547:
  2236   002260  C016  F015         	movff	_isdigit$960,??_isdigit
  2237   002264  3015               	rrcf	??_isdigit^0,w,c
  2238   002266  0012               	return		;funcret
  2239   002268                     __end_of_isdigit:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function ___lwtoft *****************
  2243 ;; Defined at:
  2244 ;;		line 28 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/lwtoft.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  c               2   28[COMRAM] unsigned int 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  3   28[COMRAM] float 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2258 ;;      Params:         3       0       0       0       0       0       0       0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2261 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2262 ;;Total ram usage:        3 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; Hardware stack levels required when called: 8
  2265 ;; This function calls:
  2266 ;;		___ftpack
  2267 ;; This function is called by:
  2268 ;;		_main
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text7
  2273   0021E6                     __ptext7:
  2274                           	callstack 0
  2275   0021E6                     ___lwtoft:
  2276                           	callstack 22
  2277                           
  2278                           ;incstack = 0
  2279   0021E6  C01D  F015         	movff	___lwtoft@c,___ftpack@arg
  2280   0021EA  C01E  F016         	movff	___lwtoft@c+1,___ftpack@arg+1
  2281   0021EE  6A17               	clrf	(___ftpack@arg+2)^0,c
  2282   0021F0  0E8E               	movlw	142
  2283   0021F2  6E18               	movwf	___ftpack@exp^0,c
  2284   0021F4  0E00               	movlw	0
  2285   0021F6  6E19               	movwf	___ftpack@sign^0,c
  2286   0021F8  EC87  F00A         	call	___ftpack	;wreg free
  2287   0021FC  C015  F01D         	movff	?___ftpack,?___lwtoft
  2288   002200  C016  F01E         	movff	?___ftpack+1,?___lwtoft+1
  2289   002204  C017  F01F         	movff	?___ftpack+2,?___lwtoft+2
  2290   002208  0012               	return		;funcret
  2291   00220A                     __end_of___lwtoft:
  2292                           	callstack 0
  2293                           
  2294 ;; *************** function _MedirDistancia *****************
  2295 ;; Defined at:
  2296 ;;		line 406 in file "Lab4.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;		None
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  aux             1   27[COMRAM] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      unsigned char 
  2303 ;; Registers used:
  2304 ;;		wreg, status,2, status,0, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2310 ;;      Params:         0       0       0       0       0       0       0       0       0
  2311 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2313 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2314 ;;Total ram usage:        1 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; Hardware stack levels required when called: 8
  2317 ;; This function calls:
  2318 ;;		___lwdiv
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text8
  2325   001A32                     __ptext8:
  2326                           	callstack 0
  2327   001A32                     _MedirDistancia:
  2328                           	callstack 22
  2329                           
  2330                           ;Lab4.c: 408: CCP2CON = 0b00000100;
  2331                           
  2332                           ;incstack = 0
  2333   001A32  0E04               	movlw	4
  2334   001A34  6EBA               	movwf	186,c	;volatile
  2335                           
  2336                           ;Lab4.c: 409: CCP2IF = 0;
  2337   001A36  90A1               	bcf	4001,0,c	;volatile
  2338                           
  2339                           ;Lab4.c: 410: CCPR2 = 0;
  2340   001A38  0E00               	movlw	0
  2341   001A3A  6EBC               	movwf	188,c	;volatile
  2342   001A3C  0E00               	movlw	0
  2343   001A3E  6EBB               	movwf	187,c	;volatile
  2344                           
  2345                           ;Lab4.c: 411: RC0 = 1;
  2346   001A40  8082               	bsf	3970,0,c	;volatile
  2347                           
  2348                           ;Lab4.c: 412: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2349   001A42  0E06               	movlw	6
  2350   001A44                     u4147:
  2351   001A44  2EE8               	decfsz	wreg,f,c
  2352   001A46  D7FE               	bra	u4147
  2353   001A48  D000               	nop2	
  2354                           
  2355                           ;Lab4.c: 413: RC0 = 0;
  2356   001A4A  9082               	bcf	3970,0,c	;volatile
  2357                           
  2358                           ;Lab4.c: 414: TMR1 = 0;
  2359   001A4C  0E00               	movlw	0
  2360   001A4E  6ECF               	movwf	207,c	;volatile
  2361   001A50  0E00               	movlw	0
  2362   001A52  6ECE               	movwf	206,c	;volatile
  2363                           
  2364                           ;Lab4.c: 415: etimeout = 1;
  2365   001A54  0E01               	movlw	1
  2366   001A56  6E43               	movwf	_etimeout^0,c
  2367   001A58                     l428:
  2368   001A58  B282               	btfsc	3970,1,c	;volatile
  2369   001A5A  D003               	goto	u3860
  2370   001A5C  0443               	decf	_etimeout^0,w,c
  2371   001A5E  B4D8               	btfsc	status,2,c
  2372   001A60  D7FB               	goto	l428
  2373   001A62                     u3860:
  2374                           
  2375                           ;Lab4.c: 418: if (etimeout == 0) {
  2376   001A62  5043               	movf	_etimeout^0,w,c
  2377   001A64  A4D8               	btfss	status,2,c
  2378   001A66  D002               	goto	l433
  2379                           
  2380                           ;Lab4.c: 419: return 0;
  2381   001A68  0E00               	movlw	0
  2382   001A6A  0012               	return	
  2383   001A6C                     l433:
  2384                           
  2385                           ;Lab4.c: 420: };Lab4.c: 421: TMR1ON = 1;
  2386   001A6C  80CD               	bsf	4045,0,c	;volatile
  2387   001A6E                     l435:
  2388   001A6E  B0A1               	btfsc	4001,0,c	;volatile
  2389   001A70  D002               	goto	u3890
  2390   001A72  A09E               	btfss	3998,0,c	;volatile
  2391   001A74  D7FC               	goto	l435
  2392   001A76                     u3890:
  2393                           
  2394                           ;Lab4.c: 423: TMR1ON = 0;
  2395   001A76  90CD               	bcf	4045,0,c	;volatile
  2396                           
  2397                           ;Lab4.c: 424: if (TMR1IF == 1)
  2398   001A78  A09E               	btfss	3998,0,c	;volatile
  2399   001A7A  D002               	goto	l4747
  2400                           
  2401                           ;Lab4.c: 425: aux = 255;
  2402   001A7C  681C               	setf	MedirDistancia@aux^0,c
  2403   001A7E  D016               	goto	l4753
  2404   001A80                     l4747:
  2405                           
  2406                           ;Lab4.c: 426: else {;Lab4.c: 427: if (CCPR2 >= 14732)
  2407   001A80  0E8C               	movlw	140
  2408   001A82  5CBB               	subwf	187,w,c	;volatile
  2409   001A84  0E39               	movlw	57
  2410   001A86  58BC               	subwfb	188,w,c	;volatile
  2411   001A88  A0D8               	btfss	status,0,c
  2412   001A8A  D004               	goto	l4751
  2413                           
  2414                           ;Lab4.c: 428: CCPR2 = 14732;
  2415   001A8C  0E39               	movlw	57
  2416   001A8E  6EBC               	movwf	188,c	;volatile
  2417   001A90  0E8C               	movlw	140
  2418   001A92  6EBB               	movwf	187,c	;volatile
  2419   001A94                     l4751:
  2420                           
  2421                           ;Lab4.c: 429: aux = CCPR2 / 58 + 1;
  2422   001A94  CFBB F015          	movff	4027,___lwdiv@dividend	;volatile
  2423   001A98  CFBC F016          	movff	4028,___lwdiv@dividend+1	;volatile
  2424   001A9C  0E00               	movlw	0
  2425   001A9E  6E18               	movwf	(___lwdiv@divisor+1)^0,c
  2426   001AA0  0E3A               	movlw	58
  2427   001AA2  6E17               	movwf	___lwdiv@divisor^0,c
  2428   001AA4  EC66  F00E         	call	___lwdiv	;wreg free
  2429   001AA8  2815               	incf	?___lwdiv^0,w,c
  2430   001AAA  6E1C               	movwf	MedirDistancia@aux^0,c
  2431   001AAC                     l4753:
  2432                           
  2433                           ;Lab4.c: 430: };Lab4.c: 431: return aux;
  2434   001AAC  501C               	movf	MedirDistancia@aux^0,w,c
  2435   001AAE  0012               	return		;funcret
  2436   001AB0                     __end_of_MedirDistancia:
  2437                           	callstack 0
  2438                           
  2439 ;; *************** function ___lwdiv *****************
  2440 ;; Defined at:
  2441 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/lwdiv.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  dividend        2   20[COMRAM] unsigned int 
  2444 ;;  divisor         2   22[COMRAM] unsigned int 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  quotient        2   25[COMRAM] unsigned int 
  2447 ;;  counter         1   24[COMRAM] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  2   20[COMRAM] unsigned int 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2457 ;;      Params:         4       0       0       0       0       0       0       0       0
  2458 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2460 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2461 ;;Total ram usage:        7 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 7
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		_MedirDistancia
  2468 ;;		_sprintf
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text9
  2473   001CCC                     __ptext9:
  2474                           	callstack 0
  2475   001CCC                     ___lwdiv:
  2476                           	callstack 22
  2477                           
  2478                           ;incstack = 0
  2479   001CCC  0E00               	movlw	0
  2480   001CCE  6E1B               	movwf	(___lwdiv@quotient+1)^0,c
  2481   001CD0  0E00               	movlw	0
  2482   001CD2  6E1A               	movwf	___lwdiv@quotient^0,c
  2483   001CD4  5017               	movf	___lwdiv@divisor^0,w,c
  2484   001CD6  1018               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2485   001CD8  B4D8               	btfsc	status,2,c
  2486   001CDA  D01C               	goto	l955
  2487   001CDC  0E01               	movlw	1
  2488   001CDE  6E19               	movwf	___lwdiv@counter^0,c
  2489   001CE0  D004               	goto	l4509
  2490   001CE2                     l4507:
  2491   001CE2  90D8               	bcf	status,0,c
  2492   001CE4  3617               	rlcf	___lwdiv@divisor^0,f,c
  2493   001CE6  3618               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2494   001CE8  2A19               	incf	___lwdiv@counter^0,f,c
  2495   001CEA                     l4509:
  2496   001CEA  AE18               	btfss	(___lwdiv@divisor+1)^0,7,c
  2497   001CEC  D7FA               	goto	l4507
  2498   001CEE                     u3670:
  2499   001CEE  90D8               	bcf	status,0,c
  2500   001CF0  361A               	rlcf	___lwdiv@quotient^0,f,c
  2501   001CF2  361B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2502   001CF4  5017               	movf	___lwdiv@divisor^0,w,c
  2503   001CF6  5C15               	subwf	___lwdiv@dividend^0,w,c
  2504   001CF8  5018               	movf	(___lwdiv@divisor+1)^0,w,c
  2505   001CFA  5816               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2506   001CFC  A0D8               	btfss	status,0,c
  2507   001CFE  D005               	goto	l4519
  2508   001D00  5017               	movf	___lwdiv@divisor^0,w,c
  2509   001D02  5E15               	subwf	___lwdiv@dividend^0,f,c
  2510   001D04  5018               	movf	(___lwdiv@divisor+1)^0,w,c
  2511   001D06  5A16               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2512   001D08  801A               	bsf	___lwdiv@quotient^0,0,c
  2513   001D0A                     l4519:
  2514   001D0A  90D8               	bcf	status,0,c
  2515   001D0C  3218               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2516   001D0E  3217               	rrcf	___lwdiv@divisor^0,f,c
  2517   001D10  2E19               	decfsz	___lwdiv@counter^0,f,c
  2518   001D12  D7ED               	goto	u3670
  2519   001D14                     l955:
  2520   001D14  C01A  F015         	movff	___lwdiv@quotient,?___lwdiv
  2521   001D18  C01B  F016         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2522   001D1C  0012               	return		;funcret
  2523   001D1E                     __end_of___lwdiv:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function _Lcd_Init *****************
  2527 ;; Defined at:
  2528 ;;		line 64 in file "lcd.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2542 ;;      Params:         0       0       0       0       0       0       0       0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2544 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2545 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2546 ;;Total ram usage:        1 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; Hardware stack levels required when called: 10
  2549 ;; This function calls:
  2550 ;;		_Lcd_Clear
  2551 ;;		_Lcd_Cmd
  2552 ;;		_Lcd_Port
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text10
  2559   0019B2                     __ptext10:
  2560                           	callstack 0
  2561   0019B2                     _Lcd_Init:
  2562                           	callstack 20
  2563                           
  2564                           ;lcd.c: 66: TRISAbits.TRISA3 = 0;
  2565                           
  2566                           ;incstack = 0
  2567   0019B2  9692               	bcf	146,3,c	;volatile
  2568                           
  2569                           ;lcd.c: 67: TRISAbits.TRISA4 = 0;
  2570   0019B4  9892               	bcf	146,4,c	;volatile
  2571                           
  2572                           ;lcd.c: 68: TRISDbits.TRISD4 = 0;
  2573   0019B6  9895               	bcf	149,4,c	;volatile
  2574                           
  2575                           ;lcd.c: 69: TRISDbits.TRISD5 = 0;
  2576   0019B8  9A95               	bcf	149,5,c	;volatile
  2577                           
  2578                           ;lcd.c: 70: TRISDbits.TRISD6 = 0;
  2579   0019BA  9C95               	bcf	149,6,c	;volatile
  2580                           
  2581                           ;lcd.c: 71: TRISDbits.TRISD7 = 0;
  2582   0019BC  9E95               	bcf	149,7,c	;volatile
  2583                           
  2584                           ;lcd.c: 72: Lcd_Port(0x00);
  2585   0019BE  0E00               	movlw	0
  2586   0019C0  EC7A  F010         	call	_Lcd_Port
  2587                           
  2588                           ;lcd.c: 73: _delay((unsigned long)((20)*(8000000/4000.0)));
  2589   0019C4  0E34               	movlw	52
  2590   0019C6  6E18               	movwf	??_Lcd_Init^0,c
  2591   0019C8  0EF2               	movlw	242
  2592   0019CA                     u4157:
  2593   0019CA  2EE8               	decfsz	wreg,f,c
  2594   0019CC  D7FE               	bra	u4157
  2595   0019CE  2E18               	decfsz	??_Lcd_Init^0,f,c
  2596   0019D0  D7FC               	bra	u4157
  2597                           
  2598                           ;lcd.c: 74: Lcd_Cmd(0x03);
  2599   0019D2  0E03               	movlw	3
  2600   0019D4  EC05  F011         	call	_Lcd_Cmd
  2601                           
  2602                           ;lcd.c: 75: _delay((unsigned long)((5)*(8000000/4000.0)));
  2603   0019D8  0E0D               	movlw	13
  2604   0019DA  6E18               	movwf	??_Lcd_Init^0,c
  2605   0019DC  0EFC               	movlw	252
  2606   0019DE                     u4167:
  2607   0019DE  2EE8               	decfsz	wreg,f,c
  2608   0019E0  D7FE               	bra	u4167
  2609   0019E2  2E18               	decfsz	??_Lcd_Init^0,f,c
  2610   0019E4  D7FC               	bra	u4167
  2611                           
  2612                           ;lcd.c: 76: Lcd_Cmd(0x03);
  2613   0019E6  0E03               	movlw	3
  2614   0019E8  EC05  F011         	call	_Lcd_Cmd
  2615                           
  2616                           ;lcd.c: 77: _delay((unsigned long)((11)*(8000000/4000.0)));
  2617   0019EC  0E1D               	movlw	29
  2618   0019EE  6E18               	movwf	??_Lcd_Init^0,c
  2619   0019F0  0E91               	movlw	145
  2620   0019F2                     u4177:
  2621   0019F2  2EE8               	decfsz	wreg,f,c
  2622   0019F4  D7FE               	bra	u4177
  2623   0019F6  2E18               	decfsz	??_Lcd_Init^0,f,c
  2624   0019F8  D7FC               	bra	u4177
  2625   0019FA  0000               	nop	
  2626                           
  2627                           ;lcd.c: 78: Lcd_Cmd(0x03);
  2628   0019FC  0E03               	movlw	3
  2629   0019FE  EC05  F011         	call	_Lcd_Cmd
  2630                           
  2631                           ;lcd.c: 79: Lcd_Cmd(0x02);
  2632   001A02  0E02               	movlw	2
  2633   001A04  EC05  F011         	call	_Lcd_Cmd
  2634                           
  2635                           ;lcd.c: 80: Lcd_Cmd(0x02);
  2636   001A08  0E02               	movlw	2
  2637   001A0A  EC05  F011         	call	_Lcd_Cmd
  2638                           
  2639                           ;lcd.c: 81: Lcd_Cmd(0x08);
  2640   001A0E  0E08               	movlw	8
  2641   001A10  EC05  F011         	call	_Lcd_Cmd
  2642                           
  2643                           ;lcd.c: 82: Lcd_Cmd(0x00);
  2644   001A14  0E00               	movlw	0
  2645   001A16  EC05  F011         	call	_Lcd_Cmd
  2646                           
  2647                           ;lcd.c: 83: Lcd_Cmd(0x0C);
  2648   001A1A  0E0C               	movlw	12
  2649   001A1C  EC05  F011         	call	_Lcd_Cmd
  2650                           
  2651                           ;lcd.c: 84: Lcd_Cmd(0x00);
  2652   001A20  0E00               	movlw	0
  2653   001A22  EC05  F011         	call	_Lcd_Cmd
  2654                           
  2655                           ;lcd.c: 85: Lcd_Cmd(0x06);
  2656   001A26  0E06               	movlw	6
  2657   001A28  EC05  F011         	call	_Lcd_Cmd
  2658                           
  2659                           ;lcd.c: 86: Lcd_Clear();
  2660   001A2C  EC50  F011         	call	_Lcd_Clear	;wreg free
  2661   001A30  0012               	return		;funcret
  2662   001A32                     __end_of_Lcd_Init:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _Lcd_CGRAM_Init *****************
  2666 ;; Defined at:
  2667 ;;		line 186 in file "lcd.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2681 ;;      Params:         0       0       0       0       0       0       0       0       0
  2682 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2684 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2685 ;;Total ram usage:        0 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; Hardware stack levels required when called: 9
  2688 ;; This function calls:
  2689 ;;		_Lcd_Cmd
  2690 ;; This function is called by:
  2691 ;;		_main
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text11
  2696   002276                     __ptext11:
  2697                           	callstack 0
  2698   002276                     _Lcd_CGRAM_Init:
  2699                           	callstack 21
  2700                           
  2701                           ;lcd.c: 188: Lcd_Cmd(0x04);
  2702                           
  2703                           ;incstack = 0
  2704   002276  0E04               	movlw	4
  2705   002278  EC05  F011         	call	_Lcd_Cmd
  2706                           
  2707                           ;lcd.c: 189: Lcd_Cmd(0x00);
  2708   00227C  0E00               	movlw	0
  2709   00227E  EC05  F011         	call	_Lcd_Cmd
  2710   002282  0012               	return		;funcret
  2711   002284                     __end_of_Lcd_CGRAM_Init:
  2712                           	callstack 0
  2713                           
  2714 ;; *************** function _Lcd_CGRAM_CreateChar *****************
  2715 ;; Defined at:
  2716 ;;		line 147 in file "lcd.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  add             1    wreg     unsigned char 
  2719 ;;  chardata        1   24[COMRAM] PTR const unsigned char 
  2720 ;;		 -> figura_5(8), figura_4(8), figura_3(8), figura_2(8), 
  2721 ;;		 -> figura_1(8), 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  add             1   26[COMRAM] unsigned char 
  2724 ;;  i               1   34[COMRAM] unsigned char 
  2725 ;;  i               1   33[COMRAM] unsigned char 
  2726 ;;  i               1   32[COMRAM] unsigned char 
  2727 ;;  i               1   31[COMRAM] unsigned char 
  2728 ;;  i               1   30[COMRAM] unsigned char 
  2729 ;;  i               1   29[COMRAM] unsigned char 
  2730 ;;  i               1   28[COMRAM] unsigned char 
  2731 ;;  i               1   27[COMRAM] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2741 ;;      Params:         1       0       0       0       0       0       0       0       0
  2742 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2743 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2744 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2745 ;;Total ram usage:       11 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; Hardware stack levels required when called: 9
  2748 ;; This function calls:
  2749 ;;		_Lcd_Write_Char
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text12
  2756   000CC0                     __ptext12:
  2757                           	callstack 0
  2758   000CC0                     _Lcd_CGRAM_CreateChar:
  2759                           	callstack 21
  2760                           
  2761                           ;incstack = 0
  2762                           ;Lcd_CGRAM_CreateChar@add stored from wreg
  2763   000CC0  6E1B               	movwf	Lcd_CGRAM_CreateChar@add^0,c
  2764                           
  2765                           ;lcd.c: 149: switch(add)
  2766   000CC2  D09E               	goto	l4683
  2767   000CC4                     l4585:
  2768                           
  2769                           ;lcd.c: 152: for(char i=0; i<=7; i++)
  2770   000CC4  0E00               	movlw	0
  2771   000CC6  6E1C               	movwf	Lcd_CGRAM_CreateChar@i^0,c
  2772   000CC8                     l4591:
  2773                           
  2774                           ;lcd.c: 153: Lcd_Write_Char(chardata[i]);
  2775   000CC8  5019               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2776   000CCA  241C               	addwf	Lcd_CGRAM_CreateChar@i^0,w,c
  2777   000CCC  6E1A               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2778   000CCE  C01A  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2779   000CD2                     	if	1	;There is more than 1 active tblptr byte
  2780   000CD2  0E08               	movlw	high __smallconst
  2781   000CD4  6EF7               	movwf	tblptrh,c
  2782   000CD6                     	endif
  2783   000CD6                     	if	0	;tblptru may be non-zero
  2784   000CD6                     	endif
  2785   000CD6                     	if	0	;tblptru may be non-zero
  2786   000CD6                     	endif
  2787   000CD6  0008               	tblrd		*
  2788   000CD8  50F5               	movf	tablat,w,c
  2789   000CDA  ECBE  F00F         	call	_Lcd_Write_Char
  2790   000CDE  2A1C               	incf	Lcd_CGRAM_CreateChar@i^0,f,c
  2791   000CE0  0E07               	movlw	7
  2792   000CE2  641C               	cpfsgt	Lcd_CGRAM_CreateChar@i^0,c
  2793   000CE4  D7F1               	goto	l4591
  2794   000CE6  0012               	return	
  2795   000CE8                     l4597:
  2796                           
  2797                           ;lcd.c: 156: for(char i=8; i<=15; i++)
  2798   000CE8  0E08               	movlw	8
  2799   000CEA  6E1D               	movwf	Lcd_CGRAM_CreateChar@i_243^0,c
  2800   000CEC                     l4603:
  2801                           
  2802                           ;lcd.c: 157: Lcd_Write_Char(chardata[i-8]);
  2803   000CEC  5019               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2804   000CEE  241D               	addwf	Lcd_CGRAM_CreateChar@i_243^0,w,c
  2805   000CF0  6E1A               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2806   000CF2  0EF8               	movlw	-8
  2807   000CF4  261A               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2808   000CF6  C01A  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2809   000CFA                     	if	1	;There is more than 1 active tblptr byte
  2810   000CFA  0E08               	movlw	high __smallconst
  2811   000CFC  6EF7               	movwf	tblptrh,c
  2812   000CFE                     	endif
  2813   000CFE                     	if	0	;tblptru may be non-zero
  2814   000CFE                     	endif
  2815   000CFE                     	if	0	;tblptru may be non-zero
  2816   000CFE                     	endif
  2817   000CFE  0008               	tblrd		*
  2818   000D00  50F5               	movf	tablat,w,c
  2819   000D02  ECBE  F00F         	call	_Lcd_Write_Char
  2820   000D06  2A1D               	incf	Lcd_CGRAM_CreateChar@i_243^0,f,c
  2821   000D08  0E0F               	movlw	15
  2822   000D0A  641D               	cpfsgt	Lcd_CGRAM_CreateChar@i_243^0,c
  2823   000D0C  D7EF               	goto	l4603
  2824   000D0E  0012               	return	
  2825   000D10                     l4609:
  2826                           
  2827                           ;lcd.c: 160: for(char i=16; i<=23; i++)
  2828   000D10  0E10               	movlw	16
  2829   000D12  6E1E               	movwf	Lcd_CGRAM_CreateChar@i_244^0,c
  2830   000D14                     l4615:
  2831                           
  2832                           ;lcd.c: 161: Lcd_Write_Char(chardata[i-16]);
  2833   000D14  5019               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2834   000D16  241E               	addwf	Lcd_CGRAM_CreateChar@i_244^0,w,c
  2835   000D18  6E1A               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2836   000D1A  0EF0               	movlw	-16
  2837   000D1C  261A               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2838   000D1E  C01A  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2839   000D22                     	if	1	;There is more than 1 active tblptr byte
  2840   000D22  0E08               	movlw	high __smallconst
  2841   000D24  6EF7               	movwf	tblptrh,c
  2842   000D26                     	endif
  2843   000D26                     	if	0	;tblptru may be non-zero
  2844   000D26                     	endif
  2845   000D26                     	if	0	;tblptru may be non-zero
  2846   000D26                     	endif
  2847   000D26  0008               	tblrd		*
  2848   000D28  50F5               	movf	tablat,w,c
  2849   000D2A  ECBE  F00F         	call	_Lcd_Write_Char
  2850   000D2E  2A1E               	incf	Lcd_CGRAM_CreateChar@i_244^0,f,c
  2851   000D30  0E17               	movlw	23
  2852   000D32  641E               	cpfsgt	Lcd_CGRAM_CreateChar@i_244^0,c
  2853   000D34  D7EF               	goto	l4615
  2854   000D36  0012               	return	
  2855   000D38                     l4621:
  2856                           
  2857                           ;lcd.c: 164: for(char i=24; i<=31; i++)
  2858   000D38  0E18               	movlw	24
  2859   000D3A  6E1F               	movwf	Lcd_CGRAM_CreateChar@i_245^0,c
  2860   000D3C                     l4627:
  2861                           
  2862                           ;lcd.c: 165: Lcd_Write_Char(chardata[i-24]);
  2863   000D3C  5019               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2864   000D3E  241F               	addwf	Lcd_CGRAM_CreateChar@i_245^0,w,c
  2865   000D40  6E1A               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2866   000D42  0EE8               	movlw	-24
  2867   000D44  261A               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2868   000D46  C01A  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2869   000D4A                     	if	1	;There is more than 1 active tblptr byte
  2870   000D4A  0E08               	movlw	high __smallconst
  2871   000D4C  6EF7               	movwf	tblptrh,c
  2872   000D4E                     	endif
  2873   000D4E                     	if	0	;tblptru may be non-zero
  2874   000D4E                     	endif
  2875   000D4E                     	if	0	;tblptru may be non-zero
  2876   000D4E                     	endif
  2877   000D4E  0008               	tblrd		*
  2878   000D50  50F5               	movf	tablat,w,c
  2879   000D52  ECBE  F00F         	call	_Lcd_Write_Char
  2880   000D56  2A1F               	incf	Lcd_CGRAM_CreateChar@i_245^0,f,c
  2881   000D58  0E1F               	movlw	31
  2882   000D5A  641F               	cpfsgt	Lcd_CGRAM_CreateChar@i_245^0,c
  2883   000D5C  D7EF               	goto	l4627
  2884   000D5E  0012               	return	
  2885   000D60                     l4633:
  2886                           
  2887                           ;lcd.c: 168: for(char i=32; i<=39; i++)
  2888   000D60  0E20               	movlw	32
  2889   000D62  6E20               	movwf	Lcd_CGRAM_CreateChar@i_246^0,c
  2890   000D64                     l4639:
  2891                           
  2892                           ;lcd.c: 169: Lcd_Write_Char(chardata[i-32]);
  2893   000D64  5019               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2894   000D66  2420               	addwf	Lcd_CGRAM_CreateChar@i_246^0,w,c
  2895   000D68  6E1A               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2896   000D6A  0EE0               	movlw	-32
  2897   000D6C  261A               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2898   000D6E  C01A  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2899   000D72                     	if	1	;There is more than 1 active tblptr byte
  2900   000D72  0E08               	movlw	high __smallconst
  2901   000D74  6EF7               	movwf	tblptrh,c
  2902   000D76                     	endif
  2903   000D76                     	if	0	;tblptru may be non-zero
  2904   000D76                     	endif
  2905   000D76                     	if	0	;tblptru may be non-zero
  2906   000D76                     	endif
  2907   000D76  0008               	tblrd		*
  2908   000D78  50F5               	movf	tablat,w,c
  2909   000D7A  ECBE  F00F         	call	_Lcd_Write_Char
  2910   000D7E  2A20               	incf	Lcd_CGRAM_CreateChar@i_246^0,f,c
  2911   000D80  0E27               	movlw	39
  2912   000D82  6420               	cpfsgt	Lcd_CGRAM_CreateChar@i_246^0,c
  2913   000D84  D7EF               	goto	l4639
  2914   000D86  0012               	return	
  2915   000D88                     l4645:
  2916                           
  2917                           ;lcd.c: 172: for(char i=40; i<=47; i++)
  2918   000D88  0E28               	movlw	40
  2919   000D8A  6E21               	movwf	Lcd_CGRAM_CreateChar@i_247^0,c
  2920   000D8C                     l4651:
  2921                           
  2922                           ;lcd.c: 173: Lcd_Write_Char(chardata[i-40]);
  2923   000D8C  5019               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2924   000D8E  2421               	addwf	Lcd_CGRAM_CreateChar@i_247^0,w,c
  2925   000D90  6E1A               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2926   000D92  0ED8               	movlw	-40
  2927   000D94  261A               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2928   000D96  C01A  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2929   000D9A                     	if	1	;There is more than 1 active tblptr byte
  2930   000D9A  0E08               	movlw	high __smallconst
  2931   000D9C  6EF7               	movwf	tblptrh,c
  2932   000D9E                     	endif
  2933   000D9E                     	if	0	;tblptru may be non-zero
  2934   000D9E                     	endif
  2935   000D9E                     	if	0	;tblptru may be non-zero
  2936   000D9E                     	endif
  2937   000D9E  0008               	tblrd		*
  2938   000DA0  50F5               	movf	tablat,w,c
  2939   000DA2  ECBE  F00F         	call	_Lcd_Write_Char
  2940   000DA6  2A21               	incf	Lcd_CGRAM_CreateChar@i_247^0,f,c
  2941   000DA8  0E2F               	movlw	47
  2942   000DAA  6421               	cpfsgt	Lcd_CGRAM_CreateChar@i_247^0,c
  2943   000DAC  D7EF               	goto	l4651
  2944   000DAE  0012               	return	
  2945   000DB0                     l4657:
  2946                           
  2947                           ;lcd.c: 176: for(char i=48; i<=55; i++)
  2948   000DB0  0E30               	movlw	48
  2949   000DB2  6E22               	movwf	Lcd_CGRAM_CreateChar@i_248^0,c
  2950   000DB4                     l4663:
  2951                           
  2952                           ;lcd.c: 177: Lcd_Write_Char(chardata[i-48]);
  2953   000DB4  5019               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2954   000DB6  2422               	addwf	Lcd_CGRAM_CreateChar@i_248^0,w,c
  2955   000DB8  6E1A               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2956   000DBA  0ED0               	movlw	-48
  2957   000DBC  261A               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2958   000DBE  C01A  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2959   000DC2                     	if	1	;There is more than 1 active tblptr byte
  2960   000DC2  0E08               	movlw	high __smallconst
  2961   000DC4  6EF7               	movwf	tblptrh,c
  2962   000DC6                     	endif
  2963   000DC6                     	if	0	;tblptru may be non-zero
  2964   000DC6                     	endif
  2965   000DC6                     	if	0	;tblptru may be non-zero
  2966   000DC6                     	endif
  2967   000DC6  0008               	tblrd		*
  2968   000DC8  50F5               	movf	tablat,w,c
  2969   000DCA  ECBE  F00F         	call	_Lcd_Write_Char
  2970   000DCE  2A22               	incf	Lcd_CGRAM_CreateChar@i_248^0,f,c
  2971   000DD0  0E37               	movlw	55
  2972   000DD2  6422               	cpfsgt	Lcd_CGRAM_CreateChar@i_248^0,c
  2973   000DD4  D7EF               	goto	l4663
  2974   000DD6  0012               	return	
  2975   000DD8                     l4669:
  2976                           
  2977                           ;lcd.c: 180: for(char i=56; i<=63; i++)
  2978   000DD8  0E38               	movlw	56
  2979   000DDA  6E23               	movwf	Lcd_CGRAM_CreateChar@i_249^0,c
  2980   000DDC                     l4675:
  2981                           
  2982                           ;lcd.c: 181: Lcd_Write_Char(chardata[i-56]);
  2983   000DDC  5019               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2984   000DDE  2423               	addwf	Lcd_CGRAM_CreateChar@i_249^0,w,c
  2985   000DE0  6E1A               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2986   000DE2  0EC8               	movlw	-56
  2987   000DE4  261A               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2988   000DE6  C01A  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2989   000DEA                     	if	1	;There is more than 1 active tblptr byte
  2990   000DEA  0E08               	movlw	high __smallconst
  2991   000DEC  6EF7               	movwf	tblptrh,c
  2992   000DEE                     	endif
  2993   000DEE                     	if	0	;tblptru may be non-zero
  2994   000DEE                     	endif
  2995   000DEE                     	if	0	;tblptru may be non-zero
  2996   000DEE                     	endif
  2997   000DEE  0008               	tblrd		*
  2998   000DF0  50F5               	movf	tablat,w,c
  2999   000DF2  ECBE  F00F         	call	_Lcd_Write_Char
  3000   000DF6  2A23               	incf	Lcd_CGRAM_CreateChar@i_249^0,f,c
  3001   000DF8  0E3F               	movlw	63
  3002   000DFA  6423               	cpfsgt	Lcd_CGRAM_CreateChar@i_249^0,c
  3003   000DFC  D7EF               	goto	l4675
  3004   000DFE  0012               	return	
  3005   000E00                     l4683:
  3006   000E00  501B               	movf	Lcd_CGRAM_CreateChar@add^0,w,c
  3007                           
  3008                           ; Switch size 1, requested type "simple"
  3009                           ; Number of cases is 8, Range of values is 0 to 7
  3010                           ; switch strategies available:
  3011                           ; Name         Instructions Cycles
  3012                           ; simple_byte           25    13 (average)
  3013                           ;	Chosen strategy is simple_byte
  3014   000E02  0A00               	xorlw	0	; case 0
  3015   000E04  B4D8               	btfsc	status,2,c
  3016   000E06  D75E               	goto	l4585
  3017   000E08  0A01               	xorlw	1	; case 1
  3018   000E0A  B4D8               	btfsc	status,2,c
  3019   000E0C  D76D               	goto	l4597
  3020   000E0E  0A03               	xorlw	3	; case 2
  3021   000E10  B4D8               	btfsc	status,2,c
  3022   000E12  D77E               	goto	l4609
  3023   000E14  0A01               	xorlw	1	; case 3
  3024   000E16  B4D8               	btfsc	status,2,c
  3025   000E18  D78F               	goto	l4621
  3026   000E1A  0A07               	xorlw	7	; case 4
  3027   000E1C  B4D8               	btfsc	status,2,c
  3028   000E1E  D7A0               	goto	l4633
  3029   000E20  0A01               	xorlw	1	; case 5
  3030   000E22  B4D8               	btfsc	status,2,c
  3031   000E24  D7B1               	goto	l4645
  3032   000E26  0A03               	xorlw	3	; case 6
  3033   000E28  B4D8               	btfsc	status,2,c
  3034   000E2A  D7C2               	goto	l4657
  3035   000E2C  0A01               	xorlw	1	; case 7
  3036   000E2E  A4D8               	btfss	status,2,c
  3037   000E30  0012               	return	
  3038   000E32  D7D2               	goto	l4669
  3039   000E34                     __end_of_Lcd_CGRAM_CreateChar:
  3040                           	callstack 0
  3041                           
  3042 ;; *************** function _Lcd_CGRAM_Close *****************
  3043 ;; Defined at:
  3044 ;;		line 192 in file "lcd.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;		None
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, cstack
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3058 ;;      Params:         0       0       0       0       0       0       0       0       0
  3059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3061 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3062 ;;Total ram usage:        0 bytes
  3063 ;; Hardware stack levels used: 1
  3064 ;; Hardware stack levels required when called: 9
  3065 ;; This function calls:
  3066 ;;		_Lcd_Cmd
  3067 ;; This function is called by:
  3068 ;;		_main
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text13
  3073   002284                     __ptext13:
  3074                           	callstack 0
  3075   002284                     _Lcd_CGRAM_Close:
  3076                           	callstack 21
  3077                           
  3078                           ;lcd.c: 194: Lcd_Cmd(0x00);
  3079                           
  3080                           ;incstack = 0
  3081   002284  0E00               	movlw	0
  3082   002286  EC05  F011         	call	_Lcd_Cmd
  3083                           
  3084                           ;lcd.c: 195: Lcd_Cmd(0x02);
  3085   00228A  0E02               	movlw	2
  3086   00228C  EC05  F011         	call	_Lcd_Cmd
  3087   002290  0012               	return		;funcret
  3088   002292                     __end_of_Lcd_CGRAM_Close:
  3089                           	callstack 0
  3090                           
  3091 ;; *************** function _Duty_motor *****************
  3092 ;; Defined at:
  3093 ;;		line 398 in file "Lab4.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  ADC             3    9[BANK0 ] float 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  escalarADC      3   12[BANK0 ] float 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3107 ;;      Params:         0       3       0       0       0       0       0       0       0
  3108 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3110 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3111 ;;Total ram usage:        6 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; Hardware stack levels required when called: 9
  3114 ;; This function calls:
  3115 ;;		___ftdiv
  3116 ;;		___ftge
  3117 ;;		___ftmul
  3118 ;;		___fttol
  3119 ;; This function is called by:
  3120 ;;		_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text14
  3125   0016FC                     __ptext14:
  3126                           	callstack 0
  3127   0016FC                     _Duty_motor:
  3128                           	callstack 21
  3129                           
  3130                           ;Lab4.c: 399: float escalarADC = (ADC / 1024)*249;
  3131                           
  3132                           ;incstack = 0
  3133   0016FC  0E00               	movlw	0
  3134   0016FE  6E20               	movwf	___ftdiv@f2^0,c
  3135   001700  0E80               	movlw	128
  3136   001702  6E21               	movwf	(___ftdiv@f2+1)^0,c
  3137   001704  0E44               	movlw	68
  3138   001706  6E22               	movwf	(___ftdiv@f2+2)^0,c
  3139   001708  C09C  F01D         	movff	Duty_motor@ADC,___ftdiv@f1
  3140   00170C  C09D  F01E         	movff	Duty_motor@ADC+1,___ftdiv@f1+1
  3141   001710  C09E  F01F         	movff	Duty_motor@ADC+2,___ftdiv@f1+2
  3142   001714  EC40  F009         	call	___ftdiv	;wreg free
  3143   001718  C01D  F02C         	movff	?___ftdiv,___ftmul@f1
  3144   00171C  C01E  F02D         	movff	?___ftdiv+1,___ftmul@f1+1
  3145   001720  C01F  F02E         	movff	?___ftdiv+2,___ftmul@f1+2
  3146   001724  0E00               	movlw	0
  3147   001726  6E2F               	movwf	___ftmul@f2^0,c
  3148   001728  0E79               	movlw	121
  3149   00172A  6E30               	movwf	(___ftmul@f2+1)^0,c
  3150   00172C  0E43               	movlw	67
  3151   00172E  6E31               	movwf	(___ftmul@f2+2)^0,c
  3152   001730  ECC5  F008         	call	___ftmul	;wreg free
  3153   001734  C02C  F09F         	movff	?___ftmul,Duty_motor@escalarADC
  3154   001738  C02D  F0A0         	movff	?___ftmul+1,Duty_motor@escalarADC+1
  3155   00173C  C02E  F0A1         	movff	?___ftmul+2,Duty_motor@escalarADC+2
  3156                           
  3157                           ;Lab4.c: 401: if (escalarADC >= 249) escalarADC = 249;
  3158   001740  C09F  F015         	movff	Duty_motor@escalarADC,___ftge@ff1
  3159   001744  C0A0  F016         	movff	Duty_motor@escalarADC+1,___ftge@ff1+1
  3160   001748  C0A1  F017         	movff	Duty_motor@escalarADC+2,___ftge@ff1+2
  3161   00174C  0E00               	movlw	0
  3162   00174E  6E18               	movwf	___ftge@ff2^0,c
  3163   001750  0E79               	movlw	121
  3164   001752  6E19               	movwf	(___ftge@ff2+1)^0,c
  3165   001754  0E43               	movlw	67
  3166   001756  6E1A               	movwf	(___ftge@ff2+2)^0,c
  3167   001758  EC58  F00D         	call	___ftge	;wreg free
  3168   00175C  A0D8               	btfss	status,0,c
  3169   00175E  D007               	goto	l4715
  3170   001760  0E00               	movlw	0
  3171   001762  0100               	movlb	0	; () banked
  3172   001764  6F9F               	movwf	Duty_motor@escalarADC& (0+255),b
  3173   001766  0E79               	movlw	121
  3174   001768  6FA0               	movwf	(Duty_motor@escalarADC+1)& (0+255),b
  3175   00176A  0E43               	movlw	67
  3176   00176C  D008               	goto	L1
  3177   00176E                     l4715:
  3178                           
  3179                           ;Lab4.c: 402: else if (escalarADC < 0) escalarADC = 0;
  3180   00176E  0100               	movlb	0	; () banked
  3181   001770  AFA1               	btfss	(Duty_motor@escalarADC+2)& (0+255),7,b
  3182   001772  D006               	goto	l4719
  3183                           
  3184                           ; BSR set to: 0
  3185   001774  0E00               	movlw	0
  3186   001776  6F9F               	movwf	Duty_motor@escalarADC& (0+255),b
  3187   001778  0E00               	movlw	0
  3188   00177A  6FA0               	movwf	(Duty_motor@escalarADC+1)& (0+255),b
  3189   00177C  0E00               	movlw	0
  3190   00177E                     L1:
  3191   00177E  6FA1               	movwf	(Duty_motor@escalarADC+2)& (0+255),b
  3192   001780                     l4719:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;Lab4.c: 403: CCPR1L = (int) escalarADC;
  3196   001780  C09F  F015         	movff	Duty_motor@escalarADC,___fttol@f1
  3197   001784  C0A0  F016         	movff	Duty_motor@escalarADC+1,___fttol@f1+1
  3198   001788  C0A1  F017         	movff	Duty_motor@escalarADC+2,___fttol@f1+2
  3199   00178C  EC1E  F00A         	call	___fttol	;wreg free
  3200   001790  5015               	movf	?___fttol^0,w,c
  3201   001792  6EBE               	movwf	190,c	;volatile
  3202   001794  0012               	return		;funcret
  3203   001796                     __end_of_Duty_motor:
  3204                           	callstack 0
  3205                           
  3206 ;; *************** function ___fttol *****************
  3207 ;; Defined at:
  3208 ;;		line 44 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/fttol.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  f1              3   20[COMRAM] float 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  lval            4   30[COMRAM] unsigned long 
  3213 ;;  exp1            1   34[COMRAM] unsigned char 
  3214 ;;  sign1           1   29[COMRAM] unsigned char 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  4   20[COMRAM] long 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0
  3219 ;; Tracked objects:
  3220 ;;		On entry : 3F/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3224 ;;      Params:         4       0       0       0       0       0       0       0       0
  3225 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3226 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3227 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3228 ;;Total ram usage:       15 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 7
  3231 ;; This function calls:
  3232 ;;		Nothing
  3233 ;; This function is called by:
  3234 ;;		_Duty_motor
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text15
  3239   00143C                     __ptext15:
  3240                           	callstack 0
  3241   00143C                     ___fttol:
  3242                           	callstack 22
  3243                           
  3244                           ; BSR set to: 0
  3245                           
  3246                           ;incstack = 0
  3247   00143C  C017  F019         	movff	___fttol@f1+2,??___fttol
  3248   001440  6A1A               	clrf	(??___fttol+1)^0,c
  3249   001442  6A1B               	clrf	(??___fttol+2)^0,c
  3250   001444  3416               	rlcf	(___fttol@f1+1)^0,w,c
  3251   001446  3619               	rlcf	??___fttol^0,f,c
  3252   001448  E301               	bnc	u3581
  3253   00144A  801A               	bsf	(??___fttol+1)^0,0,c
  3254   00144C                     u3581:
  3255   00144C  5019               	movf	??___fttol^0,w,c
  3256   00144E  6E23               	movwf	___fttol@exp1^0,c
  3257   001450  5023               	movf	___fttol@exp1^0,w,c
  3258   001452  A4D8               	btfss	status,2,c
  3259   001454  D009               	goto	l4461
  3260   001456                     u3590:
  3261   001456  0E00               	movlw	0
  3262   001458  6E15               	movwf	?___fttol^0,c
  3263   00145A  0E00               	movlw	0
  3264   00145C  6E16               	movwf	(?___fttol+1)^0,c
  3265   00145E  0E00               	movlw	0
  3266   001460  6E17               	movwf	(?___fttol+2)^0,c
  3267   001462  0E00               	movlw	0
  3268   001464  6E18               	movwf	(?___fttol+3)^0,c
  3269   001466  0012               	return	
  3270   001468                     l4461:
  3271                           
  3272                           ; BSR set to: 0
  3273   001468  0E17               	movlw	23
  3274   00146A  6E19               	movwf	??___fttol^0,c
  3275   00146C  C015  F01A         	movff	___fttol@f1,??___fttol+1
  3276   001470  C016  F01B         	movff	___fttol@f1+1,??___fttol+2
  3277   001474  C017  F01C         	movff	___fttol@f1+2,??___fttol+3
  3278   001478  2819               	incf	??___fttol^0,w,c
  3279   00147A  6E1D               	movwf	(??___fttol+4)^0,c
  3280   00147C  D004               	goto	u3600
  3281   00147E                     u3605:
  3282   00147E  90D8               	bcf	status,0,c
  3283   001480  321C               	rrcf	(??___fttol+3)^0,f,c
  3284   001482  321B               	rrcf	(??___fttol+2)^0,f,c
  3285   001484  321A               	rrcf	(??___fttol+1)^0,f,c
  3286   001486                     u3600:
  3287   001486  2E1D               	decfsz	(??___fttol+4)^0,f,c
  3288   001488  D7FA               	goto	u3605
  3289   00148A  501A               	movf	(??___fttol+1)^0,w,c
  3290   00148C  6E1E               	movwf	___fttol@sign1^0,c
  3291   00148E  8E16               	bsf	(___fttol@f1+1)^0,7,c
  3292   001490  0EFF               	movlw	255
  3293   001492  1615               	andwf	___fttol@f1^0,f,c
  3294   001494  0EFF               	movlw	255
  3295   001496  1616               	andwf	(___fttol@f1+1)^0,f,c
  3296   001498  0E00               	movlw	0
  3297   00149A  1617               	andwf	(___fttol@f1+2)^0,f,c
  3298   00149C  5015               	movf	___fttol@f1^0,w,c
  3299   00149E  6E1F               	movwf	___fttol@lval^0,c
  3300   0014A0  5016               	movf	(___fttol@f1+1)^0,w,c
  3301   0014A2  6E20               	movwf	(___fttol@lval+1)^0,c
  3302   0014A4  5017               	movf	(___fttol@f1+2)^0,w,c
  3303   0014A6  6E21               	movwf	(___fttol@lval+2)^0,c
  3304   0014A8  6A22               	clrf	(___fttol@lval+3)^0,c
  3305   0014AA  0E8E               	movlw	142
  3306   0014AC  5E23               	subwf	___fttol@exp1^0,f,c
  3307   0014AE  AE23               	btfss	___fttol@exp1^0,7,c
  3308   0014B0  D00D               	goto	l4483
  3309   0014B2  5023               	movf	___fttol@exp1^0,w,c
  3310   0014B4  0A80               	xorlw	128
  3311   0014B6  0F8F               	addlw	143
  3312   0014B8  A0D8               	btfss	status,0,c
  3313   0014BA  D7CD               	goto	u3590
  3314   0014BC                     l4479:
  3315   0014BC  90D8               	bcf	status,0,c
  3316   0014BE  3222               	rrcf	(___fttol@lval+3)^0,f,c
  3317   0014C0  3221               	rrcf	(___fttol@lval+2)^0,f,c
  3318   0014C2  3220               	rrcf	(___fttol@lval+1)^0,f,c
  3319   0014C4  321F               	rrcf	___fttol@lval^0,f,c
  3320   0014C6  3E23               	incfsz	___fttol@exp1^0,f,c
  3321   0014C8  D7F9               	goto	l4479
  3322   0014CA  D00D               	goto	u3640
  3323   0014CC                     l4483:
  3324   0014CC  0E17               	movlw	23
  3325   0014CE  6423               	cpfsgt	___fttol@exp1^0,c
  3326   0014D0  D007               	goto	l4491
  3327   0014D2  D7C1               	goto	u3590
  3328   0014D4                     l4489:
  3329   0014D4  90D8               	bcf	status,0,c
  3330   0014D6  361F               	rlcf	___fttol@lval^0,f,c
  3331   0014D8  3620               	rlcf	(___fttol@lval+1)^0,f,c
  3332   0014DA  3621               	rlcf	(___fttol@lval+2)^0,f,c
  3333   0014DC  3622               	rlcf	(___fttol@lval+3)^0,f,c
  3334   0014DE  0623               	decf	___fttol@exp1^0,f,c
  3335   0014E0                     l4491:
  3336   0014E0  5023               	movf	___fttol@exp1^0,w,c
  3337   0014E2  A4D8               	btfss	status,2,c
  3338   0014E4  D7F7               	goto	l4489
  3339   0014E6                     u3640:
  3340   0014E6  501E               	movf	___fttol@sign1^0,w,c
  3341   0014E8  B4D8               	btfsc	status,2,c
  3342   0014EA  D008               	goto	l4497
  3343   0014EC  1E22               	comf	(___fttol@lval+3)^0,f,c
  3344   0014EE  1E21               	comf	(___fttol@lval+2)^0,f,c
  3345   0014F0  1E20               	comf	(___fttol@lval+1)^0,f,c
  3346   0014F2  6C1F               	negf	___fttol@lval^0,c
  3347   0014F4  0E00               	movlw	0
  3348   0014F6  2220               	addwfc	(___fttol@lval+1)^0,f,c
  3349   0014F8  2221               	addwfc	(___fttol@lval+2)^0,f,c
  3350   0014FA  2222               	addwfc	(___fttol@lval+3)^0,f,c
  3351   0014FC                     l4497:
  3352   0014FC  C01F  F015         	movff	___fttol@lval,?___fttol
  3353   001500  C020  F016         	movff	___fttol@lval+1,?___fttol+1
  3354   001504  C021  F017         	movff	___fttol@lval+2,?___fttol+2
  3355   001508  C022  F018         	movff	___fttol@lval+3,?___fttol+3
  3356   00150C  0012               	return		;funcret
  3357   00150E                     __end_of___fttol:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function ___ftmul *****************
  3361 ;; Defined at:
  3362 ;;		line 62 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/ftmul.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  f1              3   43[COMRAM] float 
  3365 ;;  f2              3   46[COMRAM] float 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  3368 ;;  sign            1    8[BANK0 ] unsigned char 
  3369 ;;  cntr            1    7[BANK0 ] unsigned char 
  3370 ;;  exp             1    3[BANK0 ] unsigned char 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  3   43[COMRAM] float 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3380 ;;      Params:         6       0       0       0       0       0       0       0       0
  3381 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3382 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3383 ;;      Totals:         6       9       0       0       0       0       0       0       0
  3384 ;;Total ram usage:       15 bytes
  3385 ;; Hardware stack levels used: 1
  3386 ;; Hardware stack levels required when called: 8
  3387 ;; This function calls:
  3388 ;;		___ftpack
  3389 ;; This function is called by:
  3390 ;;		_Duty_motor
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text16
  3395   00118A                     __ptext16:
  3396                           	callstack 0
  3397   00118A                     ___ftmul:
  3398                           	callstack 21
  3399                           
  3400                           ;incstack = 0
  3401   00118A  C02E  F093         	movff	___ftmul@f1+2,??___ftmul
  3402   00118E  0100               	movlb	0	; () banked
  3403   001190  6B94               	clrf	(??___ftmul+1)& (0+255),b
  3404   001192  6B95               	clrf	(??___ftmul+2)& (0+255),b
  3405   001194  342D               	rlcf	(___ftmul@f1+1)^0,w,c
  3406   001196  3793               	rlcf	??___ftmul& (0+255),f,b
  3407   001198  E301               	bnc	u3371
  3408   00119A  8194               	bsf	(??___ftmul+1)& (0+255),0,b
  3409   00119C                     u3371:
  3410   00119C  5193               	movf	??___ftmul& (0+255),w,b
  3411   00119E  6F96               	movwf	___ftmul@exp& (0+255),b
  3412   0011A0  5196               	movf	___ftmul@exp& (0+255),w,b
  3413   0011A2  A4D8               	btfss	status,2,c
  3414   0011A4  D007               	goto	l4315
  3415                           
  3416                           ; BSR set to: 0
  3417   0011A6  0E00               	movlw	0
  3418   0011A8  6E2C               	movwf	?___ftmul^0,c
  3419   0011AA  0E00               	movlw	0
  3420   0011AC  6E2D               	movwf	(?___ftmul+1)^0,c
  3421   0011AE  0E00               	movlw	0
  3422   0011B0  6E2E               	movwf	(?___ftmul+2)^0,c
  3423   0011B2  0012               	return	
  3424   0011B4                     l4315:
  3425                           
  3426                           ; BSR set to: 0
  3427   0011B4  C031  F093         	movff	___ftmul@f2+2,??___ftmul
  3428   0011B8  6B94               	clrf	(??___ftmul+1)& (0+255),b
  3429   0011BA  6B95               	clrf	(??___ftmul+2)& (0+255),b
  3430   0011BC  3430               	rlcf	(___ftmul@f2+1)^0,w,c
  3431   0011BE  3793               	rlcf	??___ftmul& (0+255),f,b
  3432   0011C0  E301               	bnc	u3391
  3433   0011C2  8194               	bsf	(??___ftmul+1)& (0+255),0,b
  3434   0011C4                     u3391:
  3435   0011C4  5193               	movf	??___ftmul& (0+255),w,b
  3436   0011C6  6F9B               	movwf	___ftmul@sign& (0+255),b
  3437   0011C8  519B               	movf	___ftmul@sign& (0+255),w,b
  3438   0011CA  A4D8               	btfss	status,2,c
  3439   0011CC  D007               	goto	l4321
  3440                           
  3441                           ; BSR set to: 0
  3442   0011CE  0E00               	movlw	0
  3443   0011D0  6E2C               	movwf	?___ftmul^0,c
  3444   0011D2  0E00               	movlw	0
  3445   0011D4  6E2D               	movwf	(?___ftmul+1)^0,c
  3446   0011D6  0E00               	movlw	0
  3447   0011D8  6E2E               	movwf	(?___ftmul+2)^0,c
  3448   0011DA  0012               	return	
  3449   0011DC                     l4321:
  3450                           
  3451                           ; BSR set to: 0
  3452   0011DC  519B               	movf	___ftmul@sign& (0+255),w,b
  3453   0011DE  0F7B               	addlw	123
  3454   0011E0  2796               	addwf	___ftmul@exp& (0+255),f,b
  3455                           
  3456                           ; BSR set to: 0
  3457   0011E2  C02E  F09B         	movff	___ftmul@f1+2,___ftmul@sign
  3458   0011E6  5031               	movf	(___ftmul@f2+2)^0,w,c
  3459   0011E8  1B9B               	xorwf	___ftmul@sign& (0+255),f,b
  3460   0011EA  0E80               	movlw	128
  3461   0011EC  179B               	andwf	___ftmul@sign& (0+255),f,b
  3462                           
  3463                           ; BSR set to: 0
  3464   0011EE  8E2D               	bsf	(___ftmul@f1+1)^0,7,c
  3465                           
  3466                           ; BSR set to: 0
  3467   0011F0  8E30               	bsf	(___ftmul@f2+1)^0,7,c
  3468                           
  3469                           ; BSR set to: 0
  3470   0011F2  0EFF               	movlw	255
  3471   0011F4  162F               	andwf	___ftmul@f2^0,f,c
  3472   0011F6  0EFF               	movlw	255
  3473   0011F8  1630               	andwf	(___ftmul@f2+1)^0,f,c
  3474   0011FA  0E00               	movlw	0
  3475   0011FC  1631               	andwf	(___ftmul@f2+2)^0,f,c
  3476                           
  3477                           ; BSR set to: 0
  3478   0011FE  0E00               	movlw	0
  3479   001200  6F97               	movwf	___ftmul@f3_as_product& (0+255),b
  3480   001202  0E00               	movlw	0
  3481   001204  6F98               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  3482   001206  0E00               	movlw	0
  3483   001208  6F99               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  3484                           
  3485                           ; BSR set to: 0
  3486   00120A  0E07               	movlw	7
  3487   00120C  6F9A               	movwf	___ftmul@cntr& (0+255),b
  3488   00120E                     l4335:
  3489                           
  3490                           ; BSR set to: 0
  3491   00120E  A02C               	btfss	___ftmul@f1^0,0,c
  3492   001210  D006               	goto	l4339
  3493                           
  3494                           ; BSR set to: 0
  3495   001212  502F               	movf	___ftmul@f2^0,w,c
  3496   001214  2797               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3497   001216  5030               	movf	(___ftmul@f2+1)^0,w,c
  3498   001218  2398               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3499   00121A  5031               	movf	(___ftmul@f2+2)^0,w,c
  3500   00121C  2399               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3501   00121E                     l4339:
  3502                           
  3503                           ; BSR set to: 0
  3504   00121E  90D8               	bcf	status,0,c
  3505   001220  322E               	rrcf	(___ftmul@f1+2)^0,f,c
  3506   001222  322D               	rrcf	(___ftmul@f1+1)^0,f,c
  3507   001224  322C               	rrcf	___ftmul@f1^0,f,c
  3508   001226  90D8               	bcf	status,0,c
  3509   001228  362F               	rlcf	___ftmul@f2^0,f,c
  3510   00122A  3630               	rlcf	(___ftmul@f2+1)^0,f,c
  3511   00122C  3631               	rlcf	(___ftmul@f2+2)^0,f,c
  3512                           
  3513                           ; BSR set to: 0
  3514   00122E  2F9A               	decfsz	___ftmul@cntr& (0+255),f,b
  3515   001230  D7EE               	goto	l4335
  3516                           
  3517                           ; BSR set to: 0
  3518   001232  0E09               	movlw	9
  3519   001234  6F9A               	movwf	___ftmul@cntr& (0+255),b
  3520   001236                     l4345:
  3521                           
  3522                           ; BSR set to: 0
  3523   001236  A02C               	btfss	___ftmul@f1^0,0,c
  3524   001238  D006               	goto	l4349
  3525                           
  3526                           ; BSR set to: 0
  3527   00123A  502F               	movf	___ftmul@f2^0,w,c
  3528   00123C  2797               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3529   00123E  5030               	movf	(___ftmul@f2+1)^0,w,c
  3530   001240  2398               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3531   001242  5031               	movf	(___ftmul@f2+2)^0,w,c
  3532   001244  2399               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3533   001246                     l4349:
  3534                           
  3535                           ; BSR set to: 0
  3536   001246  90D8               	bcf	status,0,c
  3537   001248  322E               	rrcf	(___ftmul@f1+2)^0,f,c
  3538   00124A  322D               	rrcf	(___ftmul@f1+1)^0,f,c
  3539   00124C  322C               	rrcf	___ftmul@f1^0,f,c
  3540   00124E  90D8               	bcf	status,0,c
  3541   001250  3399               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  3542   001252  3398               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  3543   001254  3397               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  3544                           
  3545                           ; BSR set to: 0
  3546   001256  2F9A               	decfsz	___ftmul@cntr& (0+255),f,b
  3547   001258  D7EE               	goto	l4345
  3548                           
  3549                           ; BSR set to: 0
  3550   00125A  C097  F015         	movff	___ftmul@f3_as_product,___ftpack@arg
  3551   00125E  C098  F016         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3552   001262  C099  F017         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3553   001266  C096  F018         	movff	___ftmul@exp,___ftpack@exp
  3554   00126A  C09B  F019         	movff	___ftmul@sign,___ftpack@sign
  3555   00126E  EC87  F00A         	call	___ftpack	;wreg free
  3556   001272  C015  F02C         	movff	?___ftpack,?___ftmul
  3557   001276  C016  F02D         	movff	?___ftpack+1,?___ftmul+1
  3558   00127A  C017  F02E         	movff	?___ftpack+2,?___ftmul+2
  3559   00127E  0012               	return		;funcret
  3560   001280                     __end_of___ftmul:
  3561                           	callstack 0
  3562                           
  3563 ;; *************** function ___ftge *****************
  3564 ;; Defined at:
  3565 ;;		line 4 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/ftge.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  ff1             3   20[COMRAM] float 
  3568 ;;  ff2             3   23[COMRAM] float 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;		None               void
  3573 ;; Registers used:
  3574 ;;		wreg, status,2, status,0
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3580 ;;      Params:         6       0       0       0       0       0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3582 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3583 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3584 ;;Total ram usage:        9 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; Hardware stack levels required when called: 7
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_Duty_motor
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text17
  3595   001AB0                     __ptext17:
  3596                           	callstack 0
  3597   001AB0                     ___ftge:
  3598                           	callstack 22
  3599                           
  3600                           ;incstack = 0
  3601   001AB0  AE17               	btfss	(___ftge@ff1+2)^0,7,c
  3602   001AB2  D00F               	goto	l4441
  3603   001AB4  0E00               	movlw	0
  3604   001AB6  6E1B               	movwf	??___ftge^0,c
  3605   001AB8  0E00               	movlw	0
  3606   001ABA  6E1C               	movwf	(??___ftge+1)^0,c
  3607   001ABC  0E80               	movlw	128
  3608   001ABE  6E1D               	movwf	(??___ftge+2)^0,c
  3609   001AC0  5015               	movf	___ftge@ff1^0,w,c
  3610   001AC2  5C1B               	subwf	??___ftge^0,w,c
  3611   001AC4  6E15               	movwf	___ftge@ff1^0,c
  3612   001AC6  5016               	movf	(___ftge@ff1+1)^0,w,c
  3613   001AC8  581C               	subwfb	(??___ftge+1)^0,w,c
  3614   001ACA  6E16               	movwf	(___ftge@ff1+1)^0,c
  3615   001ACC  5017               	movf	(___ftge@ff1+2)^0,w,c
  3616   001ACE  581D               	subwfb	(??___ftge+2)^0,w,c
  3617   001AD0  6E17               	movwf	(___ftge@ff1+2)^0,c
  3618   001AD2                     l4441:
  3619   001AD2  AE1A               	btfss	(___ftge@ff2+2)^0,7,c
  3620   001AD4  D00F               	goto	l4445
  3621   001AD6  0E00               	movlw	0
  3622   001AD8  6E1B               	movwf	??___ftge^0,c
  3623   001ADA  0E00               	movlw	0
  3624   001ADC  6E1C               	movwf	(??___ftge+1)^0,c
  3625   001ADE  0E80               	movlw	128
  3626   001AE0  6E1D               	movwf	(??___ftge+2)^0,c
  3627   001AE2  5018               	movf	___ftge@ff2^0,w,c
  3628   001AE4  5C1B               	subwf	??___ftge^0,w,c
  3629   001AE6  6E18               	movwf	___ftge@ff2^0,c
  3630   001AE8  5019               	movf	(___ftge@ff2+1)^0,w,c
  3631   001AEA  581C               	subwfb	(??___ftge+1)^0,w,c
  3632   001AEC  6E19               	movwf	(___ftge@ff2+1)^0,c
  3633   001AEE  501A               	movf	(___ftge@ff2+2)^0,w,c
  3634   001AF0  581D               	subwfb	(??___ftge+2)^0,w,c
  3635   001AF2  6E1A               	movwf	(___ftge@ff2+2)^0,c
  3636   001AF4                     l4445:
  3637   001AF4  0E00               	movlw	0
  3638   001AF6  1A15               	xorwf	___ftge@ff1^0,f,c
  3639   001AF8  0E00               	movlw	0
  3640   001AFA  1A16               	xorwf	(___ftge@ff1+1)^0,f,c
  3641   001AFC  0E80               	movlw	128
  3642   001AFE  1A17               	xorwf	(___ftge@ff1+2)^0,f,c
  3643   001B00  0E00               	movlw	0
  3644   001B02  1A18               	xorwf	___ftge@ff2^0,f,c
  3645   001B04  0E00               	movlw	0
  3646   001B06  1A19               	xorwf	(___ftge@ff2+1)^0,f,c
  3647   001B08  0E80               	movlw	128
  3648   001B0A  1A1A               	xorwf	(___ftge@ff2+2)^0,f,c
  3649   001B0C  5018               	movf	___ftge@ff2^0,w,c
  3650   001B0E  5C15               	subwf	___ftge@ff1^0,w,c
  3651   001B10  5019               	movf	(___ftge@ff2+1)^0,w,c
  3652   001B12  5816               	subwfb	(___ftge@ff1+1)^0,w,c
  3653   001B14  501A               	movf	(___ftge@ff2+2)^0,w,c
  3654   001B16  5817               	subwfb	(___ftge@ff1+2)^0,w,c
  3655   001B18  B0D8               	btfsc	status,0,c
  3656   001B1A  D002               	goto	l4451
  3657   001B1C  90D8               	bcf	status,0,c
  3658   001B1E  0012               	return	
  3659   001B20                     l4451:
  3660   001B20  80D8               	bsf	status,0,c
  3661   001B22  0012               	return		;funcret
  3662   001B24                     __end_of___ftge:
  3663                           	callstack 0
  3664                           
  3665 ;; *************** function ___ftdiv *****************
  3666 ;; Defined at:
  3667 ;;		line 54 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/ftdiv.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  f1              3   28[COMRAM] float 
  3670 ;;  f2              3   31[COMRAM] float 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;  f3              3   38[COMRAM] float 
  3673 ;;  sign            1   42[COMRAM] unsigned char 
  3674 ;;  exp             1   41[COMRAM] unsigned char 
  3675 ;;  cntr            1   37[COMRAM] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  3   28[COMRAM] float 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3685 ;;      Params:         6       0       0       0       0       0       0       0       0
  3686 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3687 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3688 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3689 ;;Total ram usage:       15 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 8
  3692 ;; This function calls:
  3693 ;;		___ftpack
  3694 ;; This function is called by:
  3695 ;;		_Duty_motor
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text18
  3700   001280                     __ptext18:
  3701                           	callstack 0
  3702   001280                     ___ftdiv:
  3703                           	callstack 21
  3704                           
  3705                           ;incstack = 0
  3706   001280  C01F  F023         	movff	___ftdiv@f1+2,??___ftdiv
  3707   001284  6A24               	clrf	(??___ftdiv+1)^0,c
  3708   001286  6A25               	clrf	(??___ftdiv+2)^0,c
  3709   001288  341E               	rlcf	(___ftdiv@f1+1)^0,w,c
  3710   00128A  3623               	rlcf	??___ftdiv^0,f,c
  3711   00128C  E301               	bnc	u3321
  3712   00128E  8024               	bsf	(??___ftdiv+1)^0,0,c
  3713   001290                     u3321:
  3714   001290  5023               	movf	??___ftdiv^0,w,c
  3715   001292  6E2A               	movwf	___ftdiv@exp^0,c
  3716   001294  502A               	movf	___ftdiv@exp^0,w,c
  3717   001296  A4D8               	btfss	status,2,c
  3718   001298  D007               	goto	l4269
  3719   00129A  0E00               	movlw	0
  3720   00129C  6E1D               	movwf	?___ftdiv^0,c
  3721   00129E  0E00               	movlw	0
  3722   0012A0  6E1E               	movwf	(?___ftdiv+1)^0,c
  3723   0012A2  0E00               	movlw	0
  3724   0012A4  6E1F               	movwf	(?___ftdiv+2)^0,c
  3725   0012A6  0012               	return	
  3726   0012A8                     l4269:
  3727   0012A8  C022  F023         	movff	___ftdiv@f2+2,??___ftdiv
  3728   0012AC  6A24               	clrf	(??___ftdiv+1)^0,c
  3729   0012AE  6A25               	clrf	(??___ftdiv+2)^0,c
  3730   0012B0  3421               	rlcf	(___ftdiv@f2+1)^0,w,c
  3731   0012B2  3623               	rlcf	??___ftdiv^0,f,c
  3732   0012B4  E301               	bnc	u3341
  3733   0012B6  8024               	bsf	(??___ftdiv+1)^0,0,c
  3734   0012B8                     u3341:
  3735   0012B8  5023               	movf	??___ftdiv^0,w,c
  3736   0012BA  6E2B               	movwf	___ftdiv@sign^0,c
  3737   0012BC  502B               	movf	___ftdiv@sign^0,w,c
  3738   0012BE  A4D8               	btfss	status,2,c
  3739   0012C0  D007               	goto	l4275
  3740   0012C2  0E00               	movlw	0
  3741   0012C4  6E1D               	movwf	?___ftdiv^0,c
  3742   0012C6  0E00               	movlw	0
  3743   0012C8  6E1E               	movwf	(?___ftdiv+1)^0,c
  3744   0012CA  0E00               	movlw	0
  3745   0012CC  6E1F               	movwf	(?___ftdiv+2)^0,c
  3746   0012CE  0012               	return	
  3747   0012D0                     l4275:
  3748   0012D0  0E00               	movlw	0
  3749   0012D2  6E27               	movwf	___ftdiv@f3^0,c
  3750   0012D4  0E00               	movlw	0
  3751   0012D6  6E28               	movwf	(___ftdiv@f3+1)^0,c
  3752   0012D8  0E00               	movlw	0
  3753   0012DA  6E29               	movwf	(___ftdiv@f3+2)^0,c
  3754   0012DC  502B               	movf	___ftdiv@sign^0,w,c
  3755   0012DE  0F89               	addlw	137
  3756   0012E0  5E2A               	subwf	___ftdiv@exp^0,f,c
  3757   0012E2  C01F  F02B         	movff	___ftdiv@f1+2,___ftdiv@sign
  3758   0012E6  5022               	movf	(___ftdiv@f2+2)^0,w,c
  3759   0012E8  1A2B               	xorwf	___ftdiv@sign^0,f,c
  3760   0012EA  0E80               	movlw	128
  3761   0012EC  162B               	andwf	___ftdiv@sign^0,f,c
  3762   0012EE  8E1E               	bsf	(___ftdiv@f1+1)^0,7,c
  3763   0012F0  0EFF               	movlw	255
  3764   0012F2  161D               	andwf	___ftdiv@f1^0,f,c
  3765   0012F4  0EFF               	movlw	255
  3766   0012F6  161E               	andwf	(___ftdiv@f1+1)^0,f,c
  3767   0012F8  0E00               	movlw	0
  3768   0012FA  161F               	andwf	(___ftdiv@f1+2)^0,f,c
  3769   0012FC  8E21               	bsf	(___ftdiv@f2+1)^0,7,c
  3770   0012FE  0EFF               	movlw	255
  3771   001300  1620               	andwf	___ftdiv@f2^0,f,c
  3772   001302  0EFF               	movlw	255
  3773   001304  1621               	andwf	(___ftdiv@f2+1)^0,f,c
  3774   001306  0E00               	movlw	0
  3775   001308  1622               	andwf	(___ftdiv@f2+2)^0,f,c
  3776   00130A  0E18               	movlw	24
  3777   00130C  6E26               	movwf	___ftdiv@cntr^0,c
  3778   00130E                     l4295:
  3779   00130E  90D8               	bcf	status,0,c
  3780   001310  3627               	rlcf	___ftdiv@f3^0,f,c
  3781   001312  3628               	rlcf	(___ftdiv@f3+1)^0,f,c
  3782   001314  3629               	rlcf	(___ftdiv@f3+2)^0,f,c
  3783   001316  5020               	movf	___ftdiv@f2^0,w,c
  3784   001318  5C1D               	subwf	___ftdiv@f1^0,w,c
  3785   00131A  5021               	movf	(___ftdiv@f2+1)^0,w,c
  3786   00131C  581E               	subwfb	(___ftdiv@f1+1)^0,w,c
  3787   00131E  5022               	movf	(___ftdiv@f2+2)^0,w,c
  3788   001320  581F               	subwfb	(___ftdiv@f1+2)^0,w,c
  3789   001322  A0D8               	btfss	status,0,c
  3790   001324  D007               	goto	l817
  3791   001326  5020               	movf	___ftdiv@f2^0,w,c
  3792   001328  5E1D               	subwf	___ftdiv@f1^0,f,c
  3793   00132A  5021               	movf	(___ftdiv@f2+1)^0,w,c
  3794   00132C  5A1E               	subwfb	(___ftdiv@f1+1)^0,f,c
  3795   00132E  5022               	movf	(___ftdiv@f2+2)^0,w,c
  3796   001330  5A1F               	subwfb	(___ftdiv@f1+2)^0,f,c
  3797   001332  8027               	bsf	___ftdiv@f3^0,0,c
  3798   001334                     l817:
  3799   001334  90D8               	bcf	status,0,c
  3800   001336  361D               	rlcf	___ftdiv@f1^0,f,c
  3801   001338  361E               	rlcf	(___ftdiv@f1+1)^0,f,c
  3802   00133A  361F               	rlcf	(___ftdiv@f1+2)^0,f,c
  3803   00133C  2E26               	decfsz	___ftdiv@cntr^0,f,c
  3804   00133E  D7E7               	goto	l4295
  3805   001340  C027  F015         	movff	___ftdiv@f3,___ftpack@arg
  3806   001344  C028  F016         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3807   001348  C029  F017         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3808   00134C  C02A  F018         	movff	___ftdiv@exp,___ftpack@exp
  3809   001350  C02B  F019         	movff	___ftdiv@sign,___ftpack@sign
  3810   001354  EC87  F00A         	call	___ftpack	;wreg free
  3811   001358  C015  F01D         	movff	?___ftpack,?___ftdiv
  3812   00135C  C016  F01E         	movff	?___ftpack+1,?___ftdiv+1
  3813   001360  C017  F01F         	movff	?___ftpack+2,?___ftdiv+2
  3814   001364  0012               	return		;funcret
  3815   001366                     __end_of___ftdiv:
  3816                           	callstack 0
  3817                           
  3818 ;; *************** function ___ftpack *****************
  3819 ;; Defined at:
  3820 ;;		line 62 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/float.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  arg             3   20[COMRAM] unsigned um
  3823 ;;  exp             1   23[COMRAM] unsigned char 
  3824 ;;  sign            1   24[COMRAM] unsigned char 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  3   20[COMRAM] float 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3836 ;;      Params:         5       0       0       0       0       0       0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3838 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3839 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3840 ;;Total ram usage:        8 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 7
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		___ftdiv
  3847 ;;		___ftmul
  3848 ;;		___lwtoft
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text19
  3853   00150E                     __ptext19:
  3854                           	callstack 0
  3855   00150E                     ___ftpack:
  3856                           	callstack 22
  3857                           
  3858                           ;incstack = 0
  3859   00150E  5018               	movf	___ftpack@exp^0,w,c
  3860   001510  B4D8               	btfsc	status,2,c
  3861   001512  D005               	goto	u3250
  3862   001514  5015               	movf	___ftpack@arg^0,w,c
  3863   001516  1016               	iorwf	(___ftpack@arg+1)^0,w,c
  3864   001518  1017               	iorwf	(___ftpack@arg+2)^0,w,c
  3865   00151A  A4D8               	btfss	status,2,c
  3866   00151C  D00C               	goto	l4173
  3867   00151E                     u3250:
  3868   00151E  0E00               	movlw	0
  3869   001520  6E15               	movwf	?___ftpack^0,c
  3870   001522  0E00               	movlw	0
  3871   001524  6E16               	movwf	(?___ftpack+1)^0,c
  3872   001526  0E00               	movlw	0
  3873   001528  6E17               	movwf	(?___ftpack+2)^0,c
  3874   00152A  0012               	return	
  3875   00152C                     l4171:
  3876   00152C  2A18               	incf	___ftpack@exp^0,f,c
  3877   00152E  90D8               	bcf	status,0,c
  3878   001530  3217               	rrcf	(___ftpack@arg+2)^0,f,c
  3879   001532  3216               	rrcf	(___ftpack@arg+1)^0,f,c
  3880   001534  3215               	rrcf	___ftpack@arg^0,f,c
  3881   001536                     l4173:
  3882   001536  0E00               	movlw	0
  3883   001538  1415               	andwf	___ftpack@arg^0,w,c
  3884   00153A  6E1A               	movwf	??___ftpack^0,c
  3885   00153C  0E00               	movlw	0
  3886   00153E  1416               	andwf	(___ftpack@arg+1)^0,w,c
  3887   001540  6E1B               	movwf	(??___ftpack+1)^0,c
  3888   001542  0EFE               	movlw	254
  3889   001544  1417               	andwf	(___ftpack@arg+2)^0,w,c
  3890   001546  6E1C               	movwf	(??___ftpack+2)^0,c
  3891   001548  501A               	movf	??___ftpack^0,w,c
  3892   00154A  101B               	iorwf	(??___ftpack+1)^0,w,c
  3893   00154C  101C               	iorwf	(??___ftpack+2)^0,w,c
  3894   00154E  B4D8               	btfsc	status,2,c
  3895   001550  D00C               	goto	l4179
  3896   001552  D7EC               	goto	l4171
  3897   001554                     l4175:
  3898   001554  2A18               	incf	___ftpack@exp^0,f,c
  3899   001556  0E01               	movlw	1
  3900   001558  2615               	addwf	___ftpack@arg^0,f,c
  3901   00155A  0E00               	movlw	0
  3902   00155C  2216               	addwfc	(___ftpack@arg+1)^0,f,c
  3903   00155E  0E00               	movlw	0
  3904   001560  2217               	addwfc	(___ftpack@arg+2)^0,f,c
  3905   001562  90D8               	bcf	status,0,c
  3906   001564  3217               	rrcf	(___ftpack@arg+2)^0,f,c
  3907   001566  3216               	rrcf	(___ftpack@arg+1)^0,f,c
  3908   001568  3215               	rrcf	___ftpack@arg^0,f,c
  3909   00156A                     l4179:
  3910   00156A  0E00               	movlw	0
  3911   00156C  1415               	andwf	___ftpack@arg^0,w,c
  3912   00156E  6E1A               	movwf	??___ftpack^0,c
  3913   001570  0E00               	movlw	0
  3914   001572  1416               	andwf	(___ftpack@arg+1)^0,w,c
  3915   001574  6E1B               	movwf	(??___ftpack+1)^0,c
  3916   001576  0EFF               	movlw	255
  3917   001578  1417               	andwf	(___ftpack@arg+2)^0,w,c
  3918   00157A  6E1C               	movwf	(??___ftpack+2)^0,c
  3919   00157C  501A               	movf	??___ftpack^0,w,c
  3920   00157E  101B               	iorwf	(??___ftpack+1)^0,w,c
  3921   001580  101C               	iorwf	(??___ftpack+2)^0,w,c
  3922   001582  B4D8               	btfsc	status,2,c
  3923   001584  D006               	goto	l4183
  3924   001586  D7E6               	goto	l4175
  3925   001588                     l4181:
  3926   001588  0618               	decf	___ftpack@exp^0,f,c
  3927   00158A  90D8               	bcf	status,0,c
  3928   00158C  3615               	rlcf	___ftpack@arg^0,f,c
  3929   00158E  3616               	rlcf	(___ftpack@arg+1)^0,f,c
  3930   001590  3617               	rlcf	(___ftpack@arg+2)^0,f,c
  3931   001592                     l4183:
  3932   001592  BE16               	btfsc	(___ftpack@arg+1)^0,7,c
  3933   001594  D003               	goto	u3290
  3934   001596  0E02               	movlw	2
  3935   001598  6018               	cpfslt	___ftpack@exp^0,c
  3936   00159A  D7F6               	goto	l4181
  3937   00159C                     u3290:
  3938   00159C  A018               	btfss	___ftpack@exp^0,0,c
  3939   00159E  9E16               	bcf	(___ftpack@arg+1)^0,7,c
  3940   0015A0  90D8               	bcf	status,0,c
  3941   0015A2  3218               	rrcf	___ftpack@exp^0,f,c
  3942   0015A4  5018               	movf	___ftpack@exp^0,w,c
  3943   0015A6  1217               	iorwf	(___ftpack@arg+2)^0,f,c
  3944   0015A8  5019               	movf	___ftpack@sign^0,w,c
  3945   0015AA  A4D8               	btfss	status,2,c
  3946   0015AC  8E17               	bsf	(___ftpack@arg+2)^0,7,c
  3947   0015AE  C015  F015         	movff	___ftpack@arg,?___ftpack
  3948   0015B2  C016  F016         	movff	___ftpack@arg+1,?___ftpack+1
  3949   0015B6  C017  F017         	movff	___ftpack@arg+2,?___ftpack+2
  3950   0015BA  0012               	return		;funcret
  3951   0015BC                     __end_of___ftpack:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function _Conversion *****************
  3955 ;; Defined at:
  3956 ;;		line 330 in file "Lab4.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  canal           1    wreg     unsigned char 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  canal           1   23[COMRAM] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  2   20[COMRAM] unsigned int 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3970 ;;      Params:         2       0       0       0       0       0       0       0       0
  3971 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3972 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3973 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3974 ;;Total ram usage:        4 bytes
  3975 ;; Hardware stack levels used: 1
  3976 ;; Hardware stack levels required when called: 7
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_main
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text20
  3985   002174                     __ptext20:
  3986                           	callstack 0
  3987   002174                     _Conversion:
  3988                           	callstack 23
  3989                           
  3990                           ;incstack = 0
  3991                           ;Conversion@canal stored from wreg
  3992   002174  6E18               	movwf	Conversion@canal^0,c
  3993                           
  3994                           ;Lab4.c: 331: ADCON0 = (ADCON0 & 0b00000011) | (canal << 2);
  3995   002176  C018  F017         	movff	Conversion@canal,??_Conversion
  3996   00217A  90D8               	bcf	status,0,c
  3997   00217C  3617               	rlcf	??_Conversion^0,f,c
  3998   00217E  90D8               	bcf	status,0,c
  3999   002180  3617               	rlcf	??_Conversion^0,f,c
  4000   002182  50C2               	movf	194,w,c	;volatile
  4001   002184  0B03               	andlw	3
  4002   002186  1017               	iorwf	??_Conversion^0,w,c
  4003   002188  6EC2               	movwf	194,c	;volatile
  4004                           
  4005                           ;Lab4.c: 332: GO = 1;
  4006   00218A  82C2               	bsf	4034,1,c	;volatile
  4007   00218C                     l366:
  4008   00218C  B2C2               	btfsc	4034,1,c	;volatile
  4009   00218E  D7FE               	goto	l366
  4010                           
  4011                           ;Lab4.c: 334: return ADRES;
  4012   002190  CFC3 F015          	movff	4035,?_Conversion	;volatile
  4013   002194  CFC4 F016          	movff	4036,?_Conversion+1	;volatile
  4014   002198  0012               	return		;funcret
  4015   00219A                     __end_of_Conversion:
  4016                           	callstack 0
  4017                           
  4018 ;; *************** function _ContarReal *****************
  4019 ;; Defined at:
  4020 ;;		line 274 in file "Lab4.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 3F/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4036 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4037 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4038 ;;Total ram usage:        2 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 11
  4041 ;; This function calls:
  4042 ;;		___awdiv
  4043 ;;		___awmod
  4044 ;;		___wmul
  4045 ;;		_escenario2
  4046 ;;		_escenario3
  4047 ;;		_vaciar
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text21
  4054   000F8E                     __ptext21:
  4055                           	callstack 0
  4056   000F8E                     _ContarReal:
  4057                           	callstack 19
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;Lab4.c: 275: cantidad = (decena * 10) + unidad;
  4061                           
  4062                           ;incstack = 0
  4063   000F8E  C040  F015         	movff	_decena,___wmul@multiplier
  4064   000F92  C041  F016         	movff	_decena+1,___wmul@multiplier+1
  4065   000F96  0E00               	movlw	0
  4066   000F98  6E18               	movwf	(___wmul@multiplicand+1)^0,c
  4067   000F9A  0E0A               	movlw	10
  4068   000F9C  6E17               	movwf	___wmul@multiplicand^0,c
  4069   000F9E  ECCD  F010         	call	___wmul	;wreg free
  4070   000FA2  503E               	movf	_unidad^0,w,c
  4071   000FA4  2415               	addwf	?___wmul^0,w,c
  4072   000FA6  6E3C               	movwf	_cantidad^0,c
  4073   000FA8  503F               	movf	(_unidad+1)^0,w,c
  4074   000FAA  2016               	addwfc	(?___wmul+1)^0,w,c
  4075   000FAC  6E3D               	movwf	(_cantidad+1)^0,c
  4076                           
  4077                           ;Lab4.c: 276: contador++;
  4078   000FAE  4A3A               	infsnz	_contador^0,f,c
  4079   000FB0  2A3B               	incf	(_contador+1)^0,f,c
  4080                           
  4081                           ;Lab4.c: 277: cantidadResta = cantidad - contador + 1;
  4082   000FB2  503A               	movf	_contador^0,w,c
  4083   000FB4  5C3C               	subwf	_cantidad^0,w,c
  4084   000FB6  6E1D               	movwf	??_ContarReal^0,c
  4085   000FB8  503B               	movf	(_contador+1)^0,w,c
  4086   000FBA  583D               	subwfb	(_cantidad+1)^0,w,c
  4087   000FBC  6E1E               	movwf	(??_ContarReal+1)^0,c
  4088   000FBE  0E01               	movlw	1
  4089   000FC0  241D               	addwf	??_ContarReal^0,w,c
  4090   000FC2  6E38               	movwf	_cantidadResta^0,c
  4091   000FC4  0E00               	movlw	0
  4092   000FC6  201E               	addwfc	(??_ContarReal+1)^0,w,c
  4093   000FC8  6E39               	movwf	(_cantidadResta+1)^0,c
  4094                           
  4095                           ;Lab4.c: 278: cantidadRestaUnidad = 0b00110000 + cantidadResta % 10;
  4096   000FCA  C038  F015         	movff	_cantidadResta,___awmod@dividend
  4097   000FCE  C039  F016         	movff	_cantidadResta+1,___awmod@dividend+1
  4098   000FD2  0E00               	movlw	0
  4099   000FD4  6E18               	movwf	(___awmod@divisor+1)^0,c
  4100   000FD6  0E0A               	movlw	10
  4101   000FD8  6E17               	movwf	___awmod@divisor^0,c
  4102   000FDA  EC92  F00D         	call	___awmod	;wreg free
  4103   000FDE  0E30               	movlw	48
  4104   000FE0  2415               	addwf	?___awmod^0,w,c
  4105   000FE2  6E36               	movwf	_cantidadRestaUnidad^0,c
  4106   000FE4  0E00               	movlw	0
  4107   000FE6  2016               	addwfc	(?___awmod+1)^0,w,c
  4108   000FE8  6E37               	movwf	(_cantidadRestaUnidad+1)^0,c
  4109                           
  4110                           ;Lab4.c: 279: cantidadRestaDecena = 0b00110000 + cantidadResta / 10;
  4111   000FEA  C038  F015         	movff	_cantidadResta,___awdiv@dividend
  4112   000FEE  C039  F016         	movff	_cantidadResta+1,___awdiv@dividend+1
  4113   000FF2  0E00               	movlw	0
  4114   000FF4  6E18               	movwf	(___awdiv@divisor+1)^0,c
  4115   000FF6  0E0A               	movlw	10
  4116   000FF8  6E17               	movwf	___awdiv@divisor^0,c
  4117   000FFA  EC55  F00C         	call	___awdiv	;wreg free
  4118   000FFE  0E30               	movlw	48
  4119   001000  2415               	addwf	?___awdiv^0,w,c
  4120   001002  6E34               	movwf	_cantidadRestaDecena^0,c
  4121   001004  0E00               	movlw	0
  4122   001006  2016               	addwfc	(?___awdiv+1)^0,w,c
  4123   001008  6E35               	movwf	(_cantidadRestaDecena+1)^0,c
  4124                           
  4125                           ;Lab4.c: 280: contadorUnidad = (contador - 1) % 10;
  4126   00100A  0EFF               	movlw	255
  4127   00100C  243A               	addwf	_contador^0,w,c
  4128   00100E  6E15               	movwf	___awmod@dividend^0,c
  4129   001010  0EFF               	movlw	255
  4130   001012  203B               	addwfc	(_contador+1)^0,w,c
  4131   001014  6E16               	movwf	(___awmod@dividend+1)^0,c
  4132   001016  0E00               	movlw	0
  4133   001018  6E18               	movwf	(___awmod@divisor+1)^0,c
  4134   00101A  0E0A               	movlw	10
  4135   00101C  6E17               	movwf	___awmod@divisor^0,c
  4136   00101E  EC92  F00D         	call	___awmod	;wreg free
  4137   001022  C015  F032         	movff	?___awmod,_contadorUnidad
  4138   001026  C016  F033         	movff	?___awmod+1,_contadorUnidad+1
  4139                           
  4140                           ;Lab4.c: 281: contadorDecena = (contador - 1) / 10;
  4141   00102A  0EFF               	movlw	255
  4142   00102C  243A               	addwf	_contador^0,w,c
  4143   00102E  6E15               	movwf	___awdiv@dividend^0,c
  4144   001030  0EFF               	movlw	255
  4145   001032  203B               	addwfc	(_contador+1)^0,w,c
  4146   001034  6E16               	movwf	(___awdiv@dividend+1)^0,c
  4147   001036  0E00               	movlw	0
  4148   001038  6E18               	movwf	(___awdiv@divisor+1)^0,c
  4149   00103A  0E0A               	movlw	10
  4150   00103C  6E17               	movwf	___awdiv@divisor^0,c
  4151   00103E  EC55  F00C         	call	___awdiv	;wreg free
  4152   001042  C015  F0AB         	movff	?___awdiv,_contadorDecena
  4153   001046  C016  F0AC         	movff	?___awdiv+1,_contadorDecena+1
  4154                           
  4155                           ;Lab4.c: 283: LATD = contadorUnidad;
  4156   00104A  C032  FF8C         	movff	_contadorUnidad,3980	;volatile
  4157                           
  4158                           ;Lab4.c: 284: LATE = color[contadorDecena];
  4159   00104E  0100               	movlb	0	; () banked
  4160   001050  51AB               	movf	_contadorDecena& (0+255),w,b
  4161   001052  0D02               	mullw	2
  4162   001054  50F3               	movf	243,w,c
  4163   001056  0F60               	addlw	low _color
  4164   001058  6ED9               	movwf	fsr2l,c
  4165   00105A  6ADA               	clrf	fsr2h,c
  4166   00105C  50DF               	movf	indf2,w,c
  4167   00105E  6E8D               	movwf	141,c	;volatile
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;Lab4.c: 285: escenario2();
  4171   001060  ECCB  F00B         	call	_escenario2	;wreg free
  4172                           
  4173                           ;Lab4.c: 286: _delay((unsigned long)((1000)*(8000000/4000.0)));
  4174   001064  0E0B               	movlw	11
  4175   001066  6E1E               	movwf	(??_ContarReal+1)^0,c
  4176   001068  0E26               	movlw	38
  4177   00106A  6E1D               	movwf	??_ContarReal^0,c
  4178   00106C  0E5E               	movlw	94
  4179   00106E                     u4187:
  4180   00106E  2EE8               	decfsz	wreg,f,c
  4181   001070  D7FE               	bra	u4187
  4182   001072  2E1D               	decfsz	??_ContarReal^0,f,c
  4183   001074  D7FC               	bra	u4187
  4184   001076  2E1E               	decfsz	(??_ContarReal+1)^0,f,c
  4185   001078  D7FA               	bra	u4187
  4186                           
  4187                           ;Lab4.c: 287: if (!cantidadResta) {
  4188   00107A  5038               	movf	_cantidadResta^0,w,c
  4189   00107C  1039               	iorwf	(_cantidadResta+1)^0,w,c
  4190   00107E  A4D8               	btfss	status,2,c
  4191   001080  0012               	return	
  4192                           
  4193                           ;Lab4.c: 288: vaciar();
  4194   001082  EC1D  F00F         	call	_vaciar	;wreg free
  4195                           
  4196                           ;Lab4.c: 289: escenario3();
  4197   001086  ECF6  F00F         	call	_escenario3	;wreg free
  4198   00108A  0012               	return		;funcret
  4199   00108C                     __end_of_ContarReal:
  4200                           	callstack 0
  4201                           
  4202 ;; *************** function _vaciar *****************
  4203 ;; Defined at:
  4204 ;;		line 294 in file "Lab4.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;		None
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;		None
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      void 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4218 ;;      Params:         0       0       0       0       0       0       0       0       0
  4219 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4221 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4222 ;;Total ram usage:        0 bytes
  4223 ;; Hardware stack levels used: 1
  4224 ;; Hardware stack levels required when called: 7
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_ContarReal
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text22
  4233   001E3A                     __ptext22:
  4234                           	callstack 0
  4235   001E3A                     _vaciar:
  4236                           	callstack 22
  4237                           
  4238                           ;Lab4.c: 295: unidad = 0;
  4239                           
  4240                           ;incstack = 0
  4241   001E3A  0E00               	movlw	0
  4242   001E3C  6E3F               	movwf	(_unidad+1)^0,c
  4243   001E3E  0E00               	movlw	0
  4244   001E40  6E3E               	movwf	_unidad^0,c
  4245                           
  4246                           ;Lab4.c: 296: unidad = 0;
  4247   001E42  0E00               	movlw	0
  4248   001E44  6E3F               	movwf	(_unidad+1)^0,c
  4249   001E46  0E00               	movlw	0
  4250   001E48  6E3E               	movwf	_unidad^0,c
  4251                           
  4252                           ;Lab4.c: 297: cantidadRestaUnidad = 0b00110000 + unidad;
  4253   001E4A  0E30               	movlw	48
  4254   001E4C  243E               	addwf	_unidad^0,w,c
  4255   001E4E  6E36               	movwf	_cantidadRestaUnidad^0,c
  4256   001E50  0E00               	movlw	0
  4257   001E52  203F               	addwfc	(_unidad+1)^0,w,c
  4258   001E54  6E37               	movwf	(_cantidadRestaUnidad+1)^0,c
  4259                           
  4260                           ;Lab4.c: 298: cantidadRestaDecena = 0b00110000 + unidad;
  4261   001E56  0E30               	movlw	48
  4262   001E58  243E               	addwf	_unidad^0,w,c
  4263   001E5A  6E34               	movwf	_cantidadRestaDecena^0,c
  4264   001E5C  0E00               	movlw	0
  4265   001E5E  203F               	addwfc	(_unidad+1)^0,w,c
  4266   001E60  6E35               	movwf	(_cantidadRestaDecena+1)^0,c
  4267                           
  4268                           ;Lab4.c: 299: LATD = 0;
  4269   001E62  0E00               	movlw	0
  4270   001E64  6E8C               	movwf	140,c	;volatile
  4271                           
  4272                           ;Lab4.c: 300: LATE = color[0];
  4273   001E66  C060  FF8D         	movff	_color,3981	;volatile
  4274                           
  4275                           ;Lab4.c: 301: contador = 0;
  4276   001E6A  0E00               	movlw	0
  4277   001E6C  6E3B               	movwf	(_contador+1)^0,c
  4278   001E6E  0E00               	movlw	0
  4279   001E70  6E3A               	movwf	_contador^0,c
  4280                           
  4281                           ;Lab4.c: 302: digito = 1;
  4282   001E72  0E00               	movlw	0
  4283   001E74  6E46               	movwf	(_digito+1)^0,c
  4284   001E76  0E01               	movlw	1
  4285   001E78  6E45               	movwf	_digito^0,c
  4286   001E7A  0012               	return		;funcret
  4287   001E7C                     __end_of_vaciar:
  4288                           	callstack 0
  4289                           
  4290 ;; *************** function _escenario3 *****************
  4291 ;; Defined at:
  4292 ;;		line 215 in file "Lab4.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4306 ;;      Params:         0       0       0       0       0       0       0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4309 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4310 ;;Total ram usage:        0 bytes
  4311 ;; Hardware stack levels used: 1
  4312 ;; Hardware stack levels required when called: 10
  4313 ;; This function calls:
  4314 ;;		_Lcd_Clear
  4315 ;;		_Lcd_NoBlink
  4316 ;;		_Lcd_Set_Cursor
  4317 ;;		_Lcd_Write_String
  4318 ;; This function is called by:
  4319 ;;		_ContarReal
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text23
  4324   001FEC                     __ptext23:
  4325                           	callstack 0
  4326   001FEC                     _escenario3:
  4327                           	callstack 19
  4328                           
  4329                           ;Lab4.c: 216: menu = 3;
  4330                           
  4331                           ;incstack = 0
  4332   001FEC  0E00               	movlw	0
  4333   001FEE  6E48               	movwf	(_menu+1)^0,c
  4334   001FF0  0E03               	movlw	3
  4335   001FF2  6E47               	movwf	_menu^0,c
  4336                           
  4337                           ;Lab4.c: 217: Lcd_Clear();
  4338   001FF4  EC50  F011         	call	_Lcd_Clear	;wreg free
  4339                           
  4340                           ;Lab4.c: 218: Lcd_NoBlink();
  4341   001FF8  EC49  F011         	call	_Lcd_NoBlink	;wreg free
  4342                           
  4343                           ;Lab4.c: 219: Lcd_Set_Cursor(1, 1);
  4344   001FFC  0E01               	movlw	1
  4345   001FFE  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  4346   002000  0E01               	movlw	1
  4347   002002  ECDE  F00A         	call	_Lcd_Set_Cursor
  4348                           
  4349                           ;Lab4.c: 220: Lcd_Write_String("Cuenta finalizada");
  4350   002006  0E51               	movlw	low STR_11
  4351   002008  6E19               	movwf	Lcd_Write_String@a^0,c
  4352   00200A  EC80  F00F         	call	_Lcd_Write_String	;wreg free
  4353                           
  4354                           ;Lab4.c: 221: Lcd_Set_Cursor(2, 13);
  4355   00200E  0E0D               	movlw	13
  4356   002010  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  4357   002012  0E02               	movlw	2
  4358   002014  ECDE  F00A         	call	_Lcd_Set_Cursor
  4359                           
  4360                           ;Lab4.c: 222: Lcd_Write_String("A:OK");
  4361   002018  0ECC               	movlw	low STR_12
  4362   00201A  6E19               	movwf	Lcd_Write_String@a^0,c
  4363   00201C  EC80  F00F         	call	_Lcd_Write_String	;wreg free
  4364   002020  0012               	return		;funcret
  4365   002022                     __end_of_escenario3:
  4366                           	callstack 0
  4367                           
  4368 ;; *************** function _escenario2 *****************
  4369 ;; Defined at:
  4370 ;;		line 193 in file "Lab4.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;		None
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 3F/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4384 ;;      Params:         0       0       0       0       0       0       0       0       0
  4385 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4387 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4388 ;;Total ram usage:        0 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; Hardware stack levels required when called: 10
  4391 ;; This function calls:
  4392 ;;		_Lcd_Clear
  4393 ;;		_Lcd_NoBlink
  4394 ;;		_Lcd_Set_Cursor
  4395 ;;		_Lcd_Write_Char
  4396 ;;		_Lcd_Write_String
  4397 ;; This function is called by:
  4398 ;;		_ContarReal
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text24
  4403   001796                     __ptext24:
  4404                           	callstack 0
  4405   001796                     _escenario2:
  4406                           	callstack 19
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;Lab4.c: 194: menu = 2;
  4410                           
  4411                           ;incstack = 0
  4412   001796  0E00               	movlw	0
  4413   001798  6E48               	movwf	(_menu+1)^0,c
  4414   00179A  0E02               	movlw	2
  4415   00179C  6E47               	movwf	_menu^0,c
  4416                           
  4417                           ;Lab4.c: 195: mostrar = 1;
  4418   00179E  0E00               	movlw	0
  4419   0017A0  6FAE               	movwf	(_mostrar+1)& (0+255),b
  4420   0017A2  0E01               	movlw	1
  4421   0017A4  6FAD               	movwf	_mostrar& (0+255),b
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;Lab4.c: 196: Lcd_Clear();
  4425   0017A6  EC50  F011         	call	_Lcd_Clear	;wreg free
  4426                           
  4427                           ;Lab4.c: 197: Lcd_NoBlink();
  4428   0017AA  EC49  F011         	call	_Lcd_NoBlink	;wreg free
  4429                           
  4430                           ;Lab4.c: 198: Lcd_Set_Cursor(1, 1);
  4431   0017AE  0E01               	movlw	1
  4432   0017B0  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  4433   0017B2  0E01               	movlw	1
  4434   0017B4  ECDE  F00A         	call	_Lcd_Set_Cursor
  4435                           
  4436                           ;Lab4.c: 199: Lcd_Write_String("Faltante:");
  4437   0017B8  0EA6               	movlw	low STR_7
  4438   0017BA  6E19               	movwf	Lcd_Write_String@a^0,c
  4439   0017BC  EC80  F00F         	call	_Lcd_Write_String	;wreg free
  4440                           
  4441                           ;Lab4.c: 200: Lcd_Write_Char(cantidadRestaDecena);
  4442   0017C0  5034               	movf	_cantidadRestaDecena^0,w,c
  4443   0017C2  ECBE  F00F         	call	_Lcd_Write_Char
  4444                           
  4445                           ;Lab4.c: 201: Lcd_Write_Char(cantidadRestaUnidad);
  4446   0017C6  5036               	movf	_cantidadRestaUnidad^0,w,c
  4447   0017C8  ECBE  F00F         	call	_Lcd_Write_Char
  4448                           
  4449                           ;Lab4.c: 202: Lcd_Set_Cursor(1, 14);
  4450   0017CC  0E0E               	movlw	14
  4451   0017CE  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  4452   0017D0  0E01               	movlw	1
  4453   0017D2  ECDE  F00A         	call	_Lcd_Set_Cursor
  4454                           
  4455                           ;Lab4.c: 203: Lcd_Write_String("C=");
  4456   0017D6  0ED5               	movlw	low STR_8
  4457   0017D8  6E19               	movwf	Lcd_Write_String@a^0,c
  4458   0017DA  EC80  F00F         	call	_Lcd_Write_String	;wreg free
  4459                           
  4460                           ;Lab4.c: 204: Lcd_Write_Char(4);
  4461   0017DE  0E04               	movlw	4
  4462   0017E0  ECBE  F00F         	call	_Lcd_Write_Char
  4463                           
  4464                           ;Lab4.c: 205: Lcd_Set_Cursor(2, 1);
  4465   0017E4  0E01               	movlw	1
  4466   0017E6  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  4467   0017E8  0E02               	movlw	2
  4468   0017EA  ECDE  F00A         	call	_Lcd_Set_Cursor
  4469                           
  4470                           ;Lab4.c: 206: Lcd_Write_String("Objetivo:");
  4471   0017EE  0EB0               	movlw	low STR_9
  4472   0017F0  6E19               	movwf	Lcd_Write_String@a^0,c
  4473   0017F2  EC80  F00F         	call	_Lcd_Write_String	;wreg free
  4474                           
  4475                           ;Lab4.c: 207: Lcd_Write_Char(0b00110000 + decena);
  4476   0017F6  5040               	movf	_decena^0,w,c
  4477   0017F8  0F30               	addlw	48
  4478   0017FA  ECBE  F00F         	call	_Lcd_Write_Char
  4479                           
  4480                           ;Lab4.c: 208: Lcd_Write_Char(0b00110000 + unidad);
  4481   0017FE  503E               	movf	_unidad^0,w,c
  4482   001800  0F30               	addlw	48
  4483   001802  ECBE  F00F         	call	_Lcd_Write_Char
  4484                           
  4485                           ;Lab4.c: 209: Lcd_Set_Cursor(2, 14);
  4486   001806  0E0E               	movlw	14
  4487   001808  6E18               	movwf	Lcd_Set_Cursor@b^0,c
  4488   00180A  0E02               	movlw	2
  4489   00180C  ECDE  F00A         	call	_Lcd_Set_Cursor
  4490                           
  4491                           ;Lab4.c: 210: Lcd_Write_String("#=X");
  4492   001810  0ED1               	movlw	low STR_10
  4493   001812  6E19               	movwf	Lcd_Write_String@a^0,c
  4494   001814  EC80  F00F         	call	_Lcd_Write_String	;wreg free
  4495                           
  4496                           ;Lab4.c: 211: Lcd_Write_Char(3);
  4497   001818  0E03               	movlw	3
  4498   00181A  ECBE  F00F         	call	_Lcd_Write_Char
  4499   00181E  0012               	return		;funcret
  4500   001820                     __end_of_escenario2:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function _Lcd_Write_String *****************
  4504 ;; Defined at:
  4505 ;;		line 105 in file "lcd.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  a               1   24[COMRAM] PTR const unsigned char 
  4508 ;;		 -> STR_14(12), STR_13(10), STR_12(5), STR_11(18), 
  4509 ;;		 -> STR_10(4), STR_9(10), STR_8(3), STR_7(10), 
  4510 ;;		 -> STR_6(8), STR_5(17), STR_3(12), STR_2(11), 
  4511 ;;		 -> STR_1(15), 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  i               2   26[COMRAM] int 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4523 ;;      Params:         1       0       0       0       0       0       0       0       0
  4524 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4525 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4526 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4527 ;;Total ram usage:        4 bytes
  4528 ;; Hardware stack levels used: 1
  4529 ;; Hardware stack levels required when called: 9
  4530 ;; This function calls:
  4531 ;;		_Lcd_Write_Char
  4532 ;; This function is called by:
  4533 ;;		_main
  4534 ;;		_escenario1
  4535 ;;		_escenario2
  4536 ;;		_escenario3
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text25
  4541   001F00                     __ptext25:
  4542                           	callstack 0
  4543   001F00                     _Lcd_Write_String:
  4544                           	callstack 20
  4545                           
  4546                           ;lcd.c: 107: int i;;lcd.c: 108: for(i=0;a[i]!='\0';i++)
  4547                           
  4548                           ;incstack = 0
  4549   001F00  0E00               	movlw	0
  4550   001F02  6E1C               	movwf	(Lcd_Write_String@i+1)^0,c
  4551   001F04  0E00               	movlw	0
  4552   001F06  6E1B               	movwf	Lcd_Write_String@i^0,c
  4553   001F08  D00D               	goto	l4159
  4554   001F0A                     l4155:
  4555                           
  4556                           ;lcd.c: 109: Lcd_Write_Char(a[i]);
  4557   001F0A  5019               	movf	Lcd_Write_String@a^0,w,c
  4558   001F0C  241B               	addwf	Lcd_Write_String@i^0,w,c
  4559   001F0E  6E1A               	movwf	??_Lcd_Write_String^0,c
  4560   001F10  C01A  FFF6         	movff	??_Lcd_Write_String,tblptrl
  4561   001F14                     	if	1	;There is more than 1 active tblptr byte
  4562   001F14  0E08               	movlw	high __smallconst
  4563   001F16  6EF7               	movwf	tblptrh,c
  4564   001F18                     	endif
  4565   001F18                     	if	0	;tblptru may be non-zero
  4566   001F18                     	endif
  4567   001F18                     	if	0	;tblptru may be non-zero
  4568   001F18                     	endif
  4569   001F18  0008               	tblrd		*
  4570   001F1A  50F5               	movf	tablat,w,c
  4571   001F1C  ECBE  F00F         	call	_Lcd_Write_Char
  4572   001F20  4A1B               	infsnz	Lcd_Write_String@i^0,f,c
  4573   001F22  2A1C               	incf	(Lcd_Write_String@i+1)^0,f,c
  4574   001F24                     l4159:
  4575   001F24  5019               	movf	Lcd_Write_String@a^0,w,c
  4576   001F26  241B               	addwf	Lcd_Write_String@i^0,w,c
  4577   001F28  6E1A               	movwf	??_Lcd_Write_String^0,c
  4578   001F2A  C01A  FFF6         	movff	??_Lcd_Write_String,tblptrl
  4579   001F2E                     	if	1	;There is more than 1 active tblptr byte
  4580   001F2E  0E08               	movlw	high __smallconst
  4581   001F30  6EF7               	movwf	tblptrh,c
  4582   001F32                     	endif
  4583   001F32                     	if	0	;tblptru may be non-zero
  4584   001F32                     	endif
  4585   001F32                     	if	0	;tblptru may be non-zero
  4586   001F32                     	endif
  4587   001F32  0008               	tblrd		*
  4588   001F34  50F5               	movf	tablat,w,c
  4589   001F36  0900               	iorlw	0
  4590   001F38  B4D8               	btfsc	status,2,c
  4591   001F3A  0012               	return	
  4592   001F3C  D7E6               	goto	l4155
  4593   001F3E                     __end_of_Lcd_Write_String:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function _Lcd_Write_Char *****************
  4597 ;; Defined at:
  4598 ;;		line 89 in file "lcd.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  a               1    wreg     unsigned char 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  a               1   23[COMRAM] unsigned char 
  4603 ;;  y               1   22[COMRAM] unsigned char 
  4604 ;;  temp            1   21[COMRAM] unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4614 ;;      Params:         0       0       0       0       0       0       0       0       0
  4615 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4617 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4618 ;;Total ram usage:        3 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; Hardware stack levels required when called: 8
  4621 ;; This function calls:
  4622 ;;		_Lcd_Port
  4623 ;; This function is called by:
  4624 ;;		_Lcd_Write_String
  4625 ;;		_Lcd_CGRAM_CreateChar
  4626 ;;		_main
  4627 ;;		_escenario1
  4628 ;;		_escenario2
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text26
  4633   001F7C                     __ptext26:
  4634                           	callstack 0
  4635   001F7C                     _Lcd_Write_Char:
  4636                           	callstack 20
  4637                           
  4638                           ;incstack = 0
  4639                           ;Lcd_Write_Char@a stored from wreg
  4640   001F7C  6E18               	movwf	Lcd_Write_Char@a^0,c
  4641                           
  4642                           ;lcd.c: 91: char temp,y;;lcd.c: 92: temp = a&0x0F;
  4643   001F7E  5018               	movf	Lcd_Write_Char@a^0,w,c
  4644   001F80  0B0F               	andlw	15
  4645   001F82  6E16               	movwf	Lcd_Write_Char@temp^0,c
  4646                           
  4647                           ;lcd.c: 93: y = a&0xF0;
  4648   001F84  5018               	movf	Lcd_Write_Char@a^0,w,c
  4649   001F86  0BF0               	andlw	240
  4650   001F88  6E17               	movwf	Lcd_Write_Char@y^0,c
  4651                           
  4652                           ;lcd.c: 94: LATAbits.LA3 = 1;
  4653   001F8A  8689               	bsf	137,3,c	;volatile
  4654                           
  4655                           ;lcd.c: 95: Lcd_Port(y>>4);
  4656   001F8C  3817               	swapf	Lcd_Write_Char@y^0,w,c
  4657   001F8E  0B0F               	andlw	15
  4658   001F90  EC7A  F010         	call	_Lcd_Port
  4659                           
  4660                           ;lcd.c: 96: LATAbits.LA4 = 1;
  4661   001F94  8889               	bsf	137,4,c	;volatile
  4662                           
  4663                           ;lcd.c: 97: _delay((unsigned long)((40)*(8000000/4000000.0)));
  4664   001F96  0E1A               	movlw	26
  4665   001F98                     u4197:
  4666   001F98  2EE8               	decfsz	wreg,f,c
  4667   001F9A  D7FE               	bra	u4197
  4668   001F9C  D000               	nop2	
  4669                           
  4670                           ;lcd.c: 98: LATAbits.LA4 = 0;
  4671   001F9E  9889               	bcf	137,4,c	;volatile
  4672                           
  4673                           ;lcd.c: 99: Lcd_Port(temp);
  4674   001FA0  5016               	movf	Lcd_Write_Char@temp^0,w,c
  4675   001FA2  EC7A  F010         	call	_Lcd_Port
  4676                           
  4677                           ;lcd.c: 100: LATAbits.LA4 = 1;
  4678   001FA6  8889               	bsf	137,4,c	;volatile
  4679                           
  4680                           ;lcd.c: 101: _delay((unsigned long)((40)*(8000000/4000000.0)));
  4681   001FA8  0E1A               	movlw	26
  4682   001FAA                     u4207:
  4683   001FAA  2EE8               	decfsz	wreg,f,c
  4684   001FAC  D7FE               	bra	u4207
  4685   001FAE  D000               	nop2	
  4686                           
  4687                           ;lcd.c: 102: LATAbits.LA4 = 0;
  4688   001FB0  9889               	bcf	137,4,c	;volatile
  4689   001FB2  0012               	return		;funcret
  4690   001FB4                     __end_of_Lcd_Write_Char:
  4691                           	callstack 0
  4692                           
  4693 ;; *************** function _Lcd_Set_Cursor *****************
  4694 ;; Defined at:
  4695 ;;		line 27 in file "lcd.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  a               1    wreg     unsigned char 
  4698 ;;  b               1   23[COMRAM] unsigned char 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  a               1   24[COMRAM] unsigned char 
  4701 ;;  temp            1   27[COMRAM] unsigned char 
  4702 ;;  y               1   26[COMRAM] unsigned char 
  4703 ;;  z               1   25[COMRAM] unsigned char 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg, status,2, status,0, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4713 ;;      Params:         1       0       0       0       0       0       0       0       0
  4714 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4716 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4717 ;;Total ram usage:        5 bytes
  4718 ;; Hardware stack levels used: 1
  4719 ;; Hardware stack levels required when called: 9
  4720 ;; This function calls:
  4721 ;;		_Lcd_Cmd
  4722 ;; This function is called by:
  4723 ;;		_main
  4724 ;;		_escenario1
  4725 ;;		_escenario2
  4726 ;;		_escenario3
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text27
  4731   0015BC                     __ptext27:
  4732                           	callstack 0
  4733   0015BC                     _Lcd_Set_Cursor:
  4734                           	callstack 20
  4735                           
  4736                           ;incstack = 0
  4737                           ;Lcd_Set_Cursor@a stored from wreg
  4738   0015BC  6E19               	movwf	Lcd_Set_Cursor@a^0,c
  4739                           
  4740                           ;lcd.c: 29: char temp,z,y;;lcd.c: 30: if(a == 1)
  4741   0015BE  0419               	decf	Lcd_Set_Cursor@a^0,w,c
  4742   0015C0  A4D8               	btfss	status,2,c
  4743   0015C2  D010               	goto	l4129
  4744                           
  4745                           ;lcd.c: 31: {;lcd.c: 32: temp = 0x80 + b - 1;
  4746   0015C4  5018               	movf	Lcd_Set_Cursor@b^0,w,c
  4747   0015C6  0F7F               	addlw	127
  4748   0015C8  6E1C               	movwf	Lcd_Set_Cursor@temp^0,c
  4749                           
  4750                           ;lcd.c: 33: z = temp>>4;
  4751   0015CA  381C               	swapf	Lcd_Set_Cursor@temp^0,w,c
  4752   0015CC  0B0F               	andlw	15
  4753   0015CE  6E1A               	movwf	Lcd_Set_Cursor@z^0,c
  4754                           
  4755                           ;lcd.c: 34: y = temp & 0x0F;
  4756   0015D0  501C               	movf	Lcd_Set_Cursor@temp^0,w,c
  4757   0015D2  0B0F               	andlw	15
  4758   0015D4  6E1B               	movwf	Lcd_Set_Cursor@y^0,c
  4759                           
  4760                           ;lcd.c: 35: Lcd_Cmd(z);
  4761   0015D6  501A               	movf	Lcd_Set_Cursor@z^0,w,c
  4762   0015D8  EC05  F011         	call	_Lcd_Cmd
  4763                           
  4764                           ;lcd.c: 36: Lcd_Cmd(y);
  4765   0015DC  501B               	movf	Lcd_Set_Cursor@y^0,w,c
  4766   0015DE  EC05  F011         	call	_Lcd_Cmd
  4767                           
  4768                           ;lcd.c: 37: }
  4769   0015E2  0012               	return	
  4770   0015E4                     l4129:
  4771                           
  4772                           ;lcd.c: 38: else if(a == 2)
  4773   0015E4  0E02               	movlw	2
  4774   0015E6  1819               	xorwf	Lcd_Set_Cursor@a^0,w,c
  4775   0015E8  A4D8               	btfss	status,2,c
  4776   0015EA  D010               	goto	l4137
  4777                           
  4778                           ;lcd.c: 39: {;lcd.c: 40: temp = 0xC0 + b - 1;
  4779   0015EC  5018               	movf	Lcd_Set_Cursor@b^0,w,c
  4780   0015EE  0FBF               	addlw	191
  4781   0015F0  6E1C               	movwf	Lcd_Set_Cursor@temp^0,c
  4782                           
  4783                           ;lcd.c: 41: z = temp>>4;
  4784   0015F2  381C               	swapf	Lcd_Set_Cursor@temp^0,w,c
  4785   0015F4  0B0F               	andlw	15
  4786   0015F6  6E1A               	movwf	Lcd_Set_Cursor@z^0,c
  4787                           
  4788                           ;lcd.c: 42: y = temp & 0x0F;
  4789   0015F8  501C               	movf	Lcd_Set_Cursor@temp^0,w,c
  4790   0015FA  0B0F               	andlw	15
  4791   0015FC  6E1B               	movwf	Lcd_Set_Cursor@y^0,c
  4792                           
  4793                           ;lcd.c: 43: Lcd_Cmd(z);
  4794   0015FE  501A               	movf	Lcd_Set_Cursor@z^0,w,c
  4795   001600  EC05  F011         	call	_Lcd_Cmd
  4796                           
  4797                           ;lcd.c: 44: Lcd_Cmd(y);
  4798   001604  501B               	movf	Lcd_Set_Cursor@y^0,w,c
  4799   001606  EC05  F011         	call	_Lcd_Cmd
  4800                           
  4801                           ;lcd.c: 45: }
  4802   00160A  0012               	return	
  4803   00160C                     l4137:
  4804                           
  4805                           ;lcd.c: 46: else if(a == 3)
  4806   00160C  0E03               	movlw	3
  4807   00160E  1819               	xorwf	Lcd_Set_Cursor@a^0,w,c
  4808   001610  A4D8               	btfss	status,2,c
  4809   001612  D010               	goto	l4145
  4810                           
  4811                           ;lcd.c: 47: {;lcd.c: 48: temp = 0x94 + b - 1;
  4812   001614  5018               	movf	Lcd_Set_Cursor@b^0,w,c
  4813   001616  0F93               	addlw	147
  4814   001618  6E1C               	movwf	Lcd_Set_Cursor@temp^0,c
  4815                           
  4816                           ;lcd.c: 49: z = temp>>4;
  4817   00161A  381C               	swapf	Lcd_Set_Cursor@temp^0,w,c
  4818   00161C  0B0F               	andlw	15
  4819   00161E  6E1A               	movwf	Lcd_Set_Cursor@z^0,c
  4820                           
  4821                           ;lcd.c: 50: y = temp & 0x0F;
  4822   001620  501C               	movf	Lcd_Set_Cursor@temp^0,w,c
  4823   001622  0B0F               	andlw	15
  4824   001624  6E1B               	movwf	Lcd_Set_Cursor@y^0,c
  4825                           
  4826                           ;lcd.c: 51: Lcd_Cmd(z);
  4827   001626  501A               	movf	Lcd_Set_Cursor@z^0,w,c
  4828   001628  EC05  F011         	call	_Lcd_Cmd
  4829                           
  4830                           ;lcd.c: 52: Lcd_Cmd(y);
  4831   00162C  501B               	movf	Lcd_Set_Cursor@y^0,w,c
  4832   00162E  EC05  F011         	call	_Lcd_Cmd
  4833                           
  4834                           ;lcd.c: 53: }
  4835   001632  0012               	return	
  4836   001634                     l4145:
  4837                           
  4838                           ;lcd.c: 54: else if(a == 4)
  4839   001634  0E04               	movlw	4
  4840   001636  1819               	xorwf	Lcd_Set_Cursor@a^0,w,c
  4841   001638  A4D8               	btfss	status,2,c
  4842   00163A  0012               	return	
  4843                           
  4844                           ;lcd.c: 55: {;lcd.c: 56: temp = 0xD4 + b - 1;
  4845   00163C  5018               	movf	Lcd_Set_Cursor@b^0,w,c
  4846   00163E  0FD3               	addlw	211
  4847   001640  6E1C               	movwf	Lcd_Set_Cursor@temp^0,c
  4848                           
  4849                           ;lcd.c: 57: z = temp>>4;
  4850   001642  381C               	swapf	Lcd_Set_Cursor@temp^0,w,c
  4851   001644  0B0F               	andlw	15
  4852   001646  6E1A               	movwf	Lcd_Set_Cursor@z^0,c
  4853                           
  4854                           ;lcd.c: 58: y = temp & 0x0F;
  4855   001648  501C               	movf	Lcd_Set_Cursor@temp^0,w,c
  4856   00164A  0B0F               	andlw	15
  4857   00164C  6E1B               	movwf	Lcd_Set_Cursor@y^0,c
  4858                           
  4859                           ;lcd.c: 59: Lcd_Cmd(z);
  4860   00164E  501A               	movf	Lcd_Set_Cursor@z^0,w,c
  4861   001650  EC05  F011         	call	_Lcd_Cmd
  4862                           
  4863                           ;lcd.c: 60: Lcd_Cmd(y);
  4864   001654  501B               	movf	Lcd_Set_Cursor@y^0,w,c
  4865   001656  EC05  F011         	call	_Lcd_Cmd
  4866   00165A  0012               	return	
  4867   00165C                     __end_of_Lcd_Set_Cursor:
  4868                           	callstack 0
  4869                           
  4870 ;; *************** function _Lcd_NoBlink *****************
  4871 ;; Defined at:
  4872 ;;		line 130 in file "lcd.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;		None
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;		None
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		wreg, status,2, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4886 ;;      Params:         0       0       0       0       0       0       0       0       0
  4887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4889 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4890 ;;Total ram usage:        0 bytes
  4891 ;; Hardware stack levels used: 1
  4892 ;; Hardware stack levels required when called: 9
  4893 ;; This function calls:
  4894 ;;		_Lcd_Cmd
  4895 ;; This function is called by:
  4896 ;;		_main
  4897 ;;		_escenario2
  4898 ;;		_escenario3
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text28
  4903   002292                     __ptext28:
  4904                           	callstack 0
  4905   002292                     _Lcd_NoBlink:
  4906                           	callstack 21
  4907                           
  4908                           ;lcd.c: 132: Lcd_Cmd(0x00);
  4909                           
  4910                           ;incstack = 0
  4911   002292  0E00               	movlw	0
  4912   002294  EC05  F011         	call	_Lcd_Cmd
  4913                           
  4914                           ;lcd.c: 133: Lcd_Cmd(0x0C);
  4915   002298  0E0C               	movlw	12
  4916   00229A  EC05  F011         	call	_Lcd_Cmd
  4917   00229E  0012               	return		;funcret
  4918   0022A0                     __end_of_Lcd_NoBlink:
  4919                           	callstack 0
  4920                           
  4921 ;; *************** function _Lcd_Clear *****************
  4922 ;; Defined at:
  4923 ;;		line 21 in file "lcd.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;		None
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;		None
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		wreg, status,2, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4937 ;;      Params:         0       0       0       0       0       0       0       0       0
  4938 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4940 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4941 ;;Total ram usage:        0 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; Hardware stack levels required when called: 9
  4944 ;; This function calls:
  4945 ;;		_Lcd_Cmd
  4946 ;; This function is called by:
  4947 ;;		_Lcd_Init
  4948 ;;		_main
  4949 ;;		_escenario1
  4950 ;;		_escenario2
  4951 ;;		_escenario3
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text29
  4956   0022A0                     __ptext29:
  4957                           	callstack 0
  4958   0022A0                     _Lcd_Clear:
  4959                           	callstack 20
  4960                           
  4961                           ;lcd.c: 23: Lcd_Cmd(0);
  4962                           
  4963                           ;incstack = 0
  4964   0022A0  0E00               	movlw	0
  4965   0022A2  EC05  F011         	call	_Lcd_Cmd
  4966                           
  4967                           ;lcd.c: 24: Lcd_Cmd(1);
  4968   0022A6  0E01               	movlw	1
  4969   0022A8  EC05  F011         	call	_Lcd_Cmd
  4970   0022AC  0012               	return		;funcret
  4971   0022AE                     __end_of_Lcd_Clear:
  4972                           	callstack 0
  4973                           
  4974 ;; *************** function _Lcd_Cmd *****************
  4975 ;; Defined at:
  4976 ;;		line 12 in file "lcd.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;  a               1    wreg     unsigned char 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  a               1   22[COMRAM] unsigned char 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4990 ;;      Params:         0       0       0       0       0       0       0       0       0
  4991 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4992 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4993 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4994 ;;Total ram usage:        2 bytes
  4995 ;; Hardware stack levels used: 1
  4996 ;; Hardware stack levels required when called: 8
  4997 ;; This function calls:
  4998 ;;		_Lcd_Port
  4999 ;; This function is called by:
  5000 ;;		_Lcd_Clear
  5001 ;;		_Lcd_Set_Cursor
  5002 ;;		_Lcd_Init
  5003 ;;		_Lcd_Blink
  5004 ;;		_Lcd_NoBlink
  5005 ;;		_Lcd_CGRAM_Init
  5006 ;;		_Lcd_CGRAM_Close
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text30
  5011   00220A                     __ptext30:
  5012                           	callstack 0
  5013   00220A                     _Lcd_Cmd:
  5014                           	callstack 20
  5015                           
  5016                           ;incstack = 0
  5017                           ;Lcd_Cmd@a stored from wreg
  5018   00220A  6E17               	movwf	Lcd_Cmd@a^0,c
  5019                           
  5020                           ;lcd.c: 14: LATAbits.LA3 = 0;
  5021   00220C  9689               	bcf	137,3,c	;volatile
  5022                           
  5023                           ;lcd.c: 15: Lcd_Port(a);
  5024   00220E  5017               	movf	Lcd_Cmd@a^0,w,c
  5025   002210  EC7A  F010         	call	_Lcd_Port
  5026                           
  5027                           ;lcd.c: 16: LATAbits.LA4 = 1;
  5028   002214  8889               	bsf	137,4,c	;volatile
  5029                           
  5030                           ;lcd.c: 17: _delay((unsigned long)((4)*(8000000/4000.0)));
  5031   002216  0E0B               	movlw	11
  5032   002218  6E16               	movwf	??_Lcd_Cmd^0,c
  5033   00221A  0E62               	movlw	98
  5034   00221C                     u4217:
  5035   00221C  2EE8               	decfsz	wreg,f,c
  5036   00221E  D7FE               	bra	u4217
  5037   002220  2E16               	decfsz	??_Lcd_Cmd^0,f,c
  5038   002222  D7FC               	bra	u4217
  5039   002224  D000               	nop2	
  5040                           
  5041                           ;lcd.c: 18: LATAbits.LA4 = 0;
  5042   002226  9889               	bcf	137,4,c	;volatile
  5043   002228  0012               	return		;funcret
  5044   00222A                     __end_of_Lcd_Cmd:
  5045                           	callstack 0
  5046                           
  5047 ;; *************** function _Lcd_Port *****************
  5048 ;; Defined at:
  5049 ;;		line 4 in file "lcd.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  a               1    wreg     unsigned char 
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;  a               1   20[COMRAM] unsigned char 
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  1    wreg      void 
  5056 ;; Registers used:
  5057 ;;		wreg
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5063 ;;      Params:         0       0       0       0       0       0       0       0       0
  5064 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5066 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5067 ;;Total ram usage:        1 bytes
  5068 ;; Hardware stack levels used: 1
  5069 ;; Hardware stack levels required when called: 7
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_Lcd_Cmd
  5074 ;;		_Lcd_Init
  5075 ;;		_Lcd_Write_Char
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text31
  5080   0020F4                     __ptext31:
  5081                           	callstack 0
  5082   0020F4                     _Lcd_Port:
  5083                           	callstack 20
  5084                           
  5085                           ;incstack = 0
  5086                           ;Lcd_Port@a stored from wreg
  5087   0020F4  6E15               	movwf	Lcd_Port@a^0,c
  5088                           
  5089                           ;lcd.c: 6: (a & 1) ? (LATDbits.LD4 = 1) : (LATDbits.LD4 = 0);
  5090   0020F6  A015               	btfss	Lcd_Port@a^0,0,c
  5091   0020F8  D002               	goto	l14
  5092   0020FA  888C               	bsf	140,4,c	;volatile
  5093   0020FC  D001               	goto	l4077
  5094   0020FE                     l14:
  5095   0020FE  988C               	bcf	140,4,c	;volatile
  5096   002100                     l4077:
  5097                           
  5098                           ;lcd.c: 7: (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  5099   002100  A215               	btfss	Lcd_Port@a^0,1,c
  5100   002102  D002               	goto	l18
  5101   002104  8A8C               	bsf	140,5,c	;volatile
  5102   002106  D001               	goto	l4081
  5103   002108                     l18:
  5104   002108  9A8C               	bcf	140,5,c	;volatile
  5105   00210A                     l4081:
  5106                           
  5107                           ;lcd.c: 8: (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  5108   00210A  A415               	btfss	Lcd_Port@a^0,2,c
  5109   00210C  D002               	goto	l22
  5110   00210E  8C8C               	bsf	140,6,c	;volatile
  5111   002110  D001               	goto	l4085
  5112   002112                     l22:
  5113   002112  9C8C               	bcf	140,6,c	;volatile
  5114   002114                     l4085:
  5115                           
  5116                           ;lcd.c: 9: (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  5117   002114  A615               	btfss	Lcd_Port@a^0,3,c
  5118   002116  D002               	goto	l26
  5119   002118  8E8C               	bsf	140,7,c	;volatile
  5120   00211A  0012               	return	
  5121   00211C                     l26:
  5122   00211C  9E8C               	bcf	140,7,c	;volatile
  5123   00211E  0012               	return		;funcret
  5124   002120                     __end_of_Lcd_Port:
  5125                           	callstack 0
  5126                           
  5127 ;; *************** function ___wmul *****************
  5128 ;; Defined at:
  5129 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/Umul16.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  multiplier      2   20[COMRAM] unsigned int 
  5132 ;;  multiplicand    2   22[COMRAM] unsigned int 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  product         2   24[COMRAM] unsigned int 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  2   20[COMRAM] unsigned int 
  5137 ;; Registers used:
  5138 ;;		wreg, status,2, status,0, prodl, prodh
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5144 ;;      Params:         4       0       0       0       0       0       0       0       0
  5145 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5147 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5148 ;;Total ram usage:        6 bytes
  5149 ;; Hardware stack levels used: 1
  5150 ;; Hardware stack levels required when called: 7
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_ContarReal
  5155 ;;		_atoi
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text32
  5160   00219A                     __ptext32:
  5161                           	callstack 0
  5162   00219A                     ___wmul:
  5163                           	callstack 22
  5164                           
  5165                           ;incstack = 0
  5166   00219A  5015               	movf	___wmul@multiplier^0,w,c
  5167   00219C  0217               	mulwf	___wmul@multiplicand^0,c
  5168   00219E  CFF3 F019          	movff	prodl,___wmul@product
  5169   0021A2  CFF4 F01A          	movff	prodh,___wmul@product+1
  5170   0021A6  5015               	movf	___wmul@multiplier^0,w,c
  5171   0021A8  0218               	mulwf	(___wmul@multiplicand+1)^0,c
  5172   0021AA  50F3               	movf	243,w,c
  5173   0021AC  261A               	addwf	(___wmul@product+1)^0,f,c
  5174   0021AE  5016               	movf	(___wmul@multiplier+1)^0,w,c
  5175   0021B0  0217               	mulwf	___wmul@multiplicand^0,c
  5176   0021B2  50F3               	movf	243,w,c
  5177   0021B4  261A               	addwf	(___wmul@product+1)^0,f,c
  5178   0021B6  C019  F015         	movff	___wmul@product,?___wmul
  5179   0021BA  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  5180   0021BE  0012               	return		;funcret
  5181   0021C0                     __end_of___wmul:
  5182                           	callstack 0
  5183                           
  5184 ;; *************** function ___awmod *****************
  5185 ;; Defined at:
  5186 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awmod.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  dividend        2   20[COMRAM] int 
  5189 ;;  divisor         2   22[COMRAM] int 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;  sign            1   25[COMRAM] unsigned char 
  5192 ;;  counter         1   24[COMRAM] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  2   20[COMRAM] int 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5202 ;;      Params:         4       0       0       0       0       0       0       0       0
  5203 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5205 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5206 ;;Total ram usage:        6 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; Hardware stack levels required when called: 7
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_ContarReal
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text33
  5217   001B24                     __ptext33:
  5218                           	callstack 0
  5219   001B24                     ___awmod:
  5220                           	callstack 22
  5221                           
  5222                           ;incstack = 0
  5223   001B24  0E00               	movlw	0
  5224   001B26  6E1A               	movwf	___awmod@sign^0,c
  5225   001B28  AE16               	btfss	(___awmod@dividend+1)^0,7,c
  5226   001B2A  D006               	goto	l4409
  5227   001B2C  6C15               	negf	___awmod@dividend^0,c
  5228   001B2E  1E16               	comf	(___awmod@dividend+1)^0,f,c
  5229   001B30  B0D8               	btfsc	status,0,c
  5230   001B32  2A16               	incf	(___awmod@dividend+1)^0,f,c
  5231   001B34  0E01               	movlw	1
  5232   001B36  6E1A               	movwf	___awmod@sign^0,c
  5233   001B38                     l4409:
  5234   001B38  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  5235   001B3A  D004               	goto	l4413
  5236   001B3C  6C17               	negf	___awmod@divisor^0,c
  5237   001B3E  1E18               	comf	(___awmod@divisor+1)^0,f,c
  5238   001B40  B0D8               	btfsc	status,0,c
  5239   001B42  2A18               	incf	(___awmod@divisor+1)^0,f,c
  5240   001B44                     l4413:
  5241   001B44  5017               	movf	___awmod@divisor^0,w,c
  5242   001B46  1018               	iorwf	(___awmod@divisor+1)^0,w,c
  5243   001B48  B4D8               	btfsc	status,2,c
  5244   001B4A  D018               	goto	l4429
  5245   001B4C  0E01               	movlw	1
  5246   001B4E  6E19               	movwf	___awmod@counter^0,c
  5247   001B50  D004               	goto	l4419
  5248   001B52                     l4417:
  5249   001B52  90D8               	bcf	status,0,c
  5250   001B54  3617               	rlcf	___awmod@divisor^0,f,c
  5251   001B56  3618               	rlcf	(___awmod@divisor+1)^0,f,c
  5252   001B58  2A19               	incf	___awmod@counter^0,f,c
  5253   001B5A                     l4419:
  5254   001B5A  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  5255   001B5C  D7FA               	goto	l4417
  5256   001B5E                     u3520:
  5257   001B5E  5017               	movf	___awmod@divisor^0,w,c
  5258   001B60  5C15               	subwf	___awmod@dividend^0,w,c
  5259   001B62  5018               	movf	(___awmod@divisor+1)^0,w,c
  5260   001B64  5816               	subwfb	(___awmod@dividend+1)^0,w,c
  5261   001B66  A0D8               	btfss	status,0,c
  5262   001B68  D004               	goto	l4425
  5263   001B6A  5017               	movf	___awmod@divisor^0,w,c
  5264   001B6C  5E15               	subwf	___awmod@dividend^0,f,c
  5265   001B6E  5018               	movf	(___awmod@divisor+1)^0,w,c
  5266   001B70  5A16               	subwfb	(___awmod@dividend+1)^0,f,c
  5267   001B72                     l4425:
  5268   001B72  90D8               	bcf	status,0,c
  5269   001B74  3218               	rrcf	(___awmod@divisor+1)^0,f,c
  5270   001B76  3217               	rrcf	___awmod@divisor^0,f,c
  5271   001B78  2E19               	decfsz	___awmod@counter^0,f,c
  5272   001B7A  D7F1               	goto	u3520
  5273   001B7C                     l4429:
  5274   001B7C  501A               	movf	___awmod@sign^0,w,c
  5275   001B7E  B4D8               	btfsc	status,2,c
  5276   001B80  D004               	goto	l4433
  5277   001B82  6C15               	negf	___awmod@dividend^0,c
  5278   001B84  1E16               	comf	(___awmod@dividend+1)^0,f,c
  5279   001B86  B0D8               	btfsc	status,0,c
  5280   001B88  2A16               	incf	(___awmod@dividend+1)^0,f,c
  5281   001B8A                     l4433:
  5282   001B8A  C015  F015         	movff	___awmod@dividend,?___awmod
  5283   001B8E  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  5284   001B92  0012               	return		;funcret
  5285   001B94                     __end_of___awmod:
  5286                           	callstack 0
  5287                           
  5288 ;; *************** function ___awdiv *****************
  5289 ;; Defined at:
  5290 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awdiv.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  dividend        2   20[COMRAM] int 
  5293 ;;  divisor         2   22[COMRAM] int 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  quotient        2   26[COMRAM] int 
  5296 ;;  sign            1   25[COMRAM] unsigned char 
  5297 ;;  counter         1   24[COMRAM] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  2   20[COMRAM] int 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5307 ;;      Params:         4       0       0       0       0       0       0       0       0
  5308 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5310 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5311 ;;Total ram usage:        8 bytes
  5312 ;; Hardware stack levels used: 1
  5313 ;; Hardware stack levels required when called: 7
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_ContarReal
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text34
  5322   0018AA                     __ptext34:
  5323                           	callstack 0
  5324   0018AA                     ___awdiv:
  5325                           	callstack 22
  5326                           
  5327                           ;incstack = 0
  5328   0018AA  0E00               	movlw	0
  5329   0018AC  6E1A               	movwf	___awdiv@sign^0,c
  5330   0018AE  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  5331   0018B0  D006               	goto	l4365
  5332   0018B2  6C17               	negf	___awdiv@divisor^0,c
  5333   0018B4  1E18               	comf	(___awdiv@divisor+1)^0,f,c
  5334   0018B6  B0D8               	btfsc	status,0,c
  5335   0018B8  2A18               	incf	(___awdiv@divisor+1)^0,f,c
  5336   0018BA  0E01               	movlw	1
  5337   0018BC  6E1A               	movwf	___awdiv@sign^0,c
  5338   0018BE                     l4365:
  5339   0018BE  AE16               	btfss	(___awdiv@dividend+1)^0,7,c
  5340   0018C0  D006               	goto	l4371
  5341   0018C2  6C15               	negf	___awdiv@dividend^0,c
  5342   0018C4  1E16               	comf	(___awdiv@dividend+1)^0,f,c
  5343   0018C6  B0D8               	btfsc	status,0,c
  5344   0018C8  2A16               	incf	(___awdiv@dividend+1)^0,f,c
  5345   0018CA  0E01               	movlw	1
  5346   0018CC  1A1A               	xorwf	___awdiv@sign^0,f,c
  5347   0018CE                     l4371:
  5348   0018CE  0E00               	movlw	0
  5349   0018D0  6E1C               	movwf	(___awdiv@quotient+1)^0,c
  5350   0018D2  0E00               	movlw	0
  5351   0018D4  6E1B               	movwf	___awdiv@quotient^0,c
  5352   0018D6  5017               	movf	___awdiv@divisor^0,w,c
  5353   0018D8  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
  5354   0018DA  B4D8               	btfsc	status,2,c
  5355   0018DC  D01C               	goto	l4393
  5356   0018DE  0E01               	movlw	1
  5357   0018E0  6E19               	movwf	___awdiv@counter^0,c
  5358   0018E2  D004               	goto	l4379
  5359   0018E4                     l4377:
  5360   0018E4  90D8               	bcf	status,0,c
  5361   0018E6  3617               	rlcf	___awdiv@divisor^0,f,c
  5362   0018E8  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
  5363   0018EA  2A19               	incf	___awdiv@counter^0,f,c
  5364   0018EC                     l4379:
  5365   0018EC  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  5366   0018EE  D7FA               	goto	l4377
  5367   0018F0                     u3460:
  5368   0018F0  90D8               	bcf	status,0,c
  5369   0018F2  361B               	rlcf	___awdiv@quotient^0,f,c
  5370   0018F4  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
  5371   0018F6  5017               	movf	___awdiv@divisor^0,w,c
  5372   0018F8  5C15               	subwf	___awdiv@dividend^0,w,c
  5373   0018FA  5018               	movf	(___awdiv@divisor+1)^0,w,c
  5374   0018FC  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
  5375   0018FE  A0D8               	btfss	status,0,c
  5376   001900  D005               	goto	l4389
  5377   001902  5017               	movf	___awdiv@divisor^0,w,c
  5378   001904  5E15               	subwf	___awdiv@dividend^0,f,c
  5379   001906  5018               	movf	(___awdiv@divisor+1)^0,w,c
  5380   001908  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
  5381   00190A  801B               	bsf	___awdiv@quotient^0,0,c
  5382   00190C                     l4389:
  5383   00190C  90D8               	bcf	status,0,c
  5384   00190E  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
  5385   001910  3217               	rrcf	___awdiv@divisor^0,f,c
  5386   001912  2E19               	decfsz	___awdiv@counter^0,f,c
  5387   001914  D7ED               	goto	u3460
  5388   001916                     l4393:
  5389   001916  501A               	movf	___awdiv@sign^0,w,c
  5390   001918  B4D8               	btfsc	status,2,c
  5391   00191A  D004               	goto	l4397
  5392   00191C  6C1B               	negf	___awdiv@quotient^0,c
  5393   00191E  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
  5394   001920  B0D8               	btfsc	status,0,c
  5395   001922  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
  5396   001924                     l4397:
  5397   001924  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  5398   001928  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  5399   00192C  0012               	return		;funcret
  5400   00192E                     __end_of___awdiv:
  5401                           	callstack 0
  5402                           
  5403 ;; *************** function _ISR *****************
  5404 ;; Defined at:
  5405 ;;		line 343 in file "Lab4.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;		None
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5419 ;;      Params:         0       0       0       0       0       0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5421 ;;      Temps:         10       0       0       0       0       0       0       0       0
  5422 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5423 ;;Total ram usage:       10 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 6
  5426 ;; This function calls:
  5427 ;;		_PiezaAContar
  5428 ;;		_Reiniciar
  5429 ;;		_Terminar
  5430 ;;		_Trasmitir
  5431 ;;		_blacklighttoggle
  5432 ;;		_borrarDigito
  5433 ;;		_escenario4
  5434 ;;		_okmenu
  5435 ;; This function is called by:
  5436 ;;		Interrupt level 2
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	intcode
  5441   000008                     __pintcode:
  5442                           	callstack 0
  5443   000008                     _ISR:
  5444                           	callstack 19
  5445                           
  5446                           ;incstack = 0
  5447   000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5448   00000A  ED94  F005         	call	int_func,f	;refresh shadow registers
  5449                           
  5450                           	psect	intcode_body
  5451   000B28                     __pintcode_body:
  5452                           	callstack 19
  5453   000B28                     int_func:
  5454                           	callstack 19
  5455   000B28  0006               	pop		; remove dummy address from shadow register refresh
  5456   000B2A  CFD9 F00D          	movff	fsr2l,??_ISR+2
  5457   000B2E  CFDA F00E          	movff	fsr2h,??_ISR+3
  5458   000B32  CFF3 F00F          	movff	prodl,??_ISR+4
  5459   000B36  CFF4 F010          	movff	prodh,??_ISR+5
  5460   000B3A  CFF6 F011          	movff	tblptrl,??_ISR+6
  5461   000B3E  CFF7 F012          	movff	tblptrh,??_ISR+7
  5462   000B42  CFF8 F013          	movff	tblptru,??_ISR+8
  5463   000B46  CFF5 F014          	movff	tablat,??_ISR+9
  5464                           
  5465                           ;Lab4.c: 344: if (RBIF == 1 && flagParar) {
  5466   000B4A  A0F2               	btfss	4082,0,c	;volatile
  5467   000B4C  D08D               	goto	i2l4049
  5468   000B4E  0100               	movlb	0	; () banked
  5469   000B50  5173               	movf	_flagParar& (0+255),w,b
  5470   000B52  1174               	iorwf	(_flagParar+1)& (0+255),w,b
  5471   000B54  B4D8               	btfsc	status,2,c
  5472   000B56  D088               	goto	i2l4049
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;Lab4.c: 346: if (PORTB != 0b11110000) {
  5476   000B58  0EF0               	movlw	240
  5477   000B5A  1881               	xorwf	129,w,c	;volatile
  5478   000B5C  B4D8               	btfsc	status,2,c
  5479   000B5E  D077               	goto	i2l4045
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;Lab4.c: 347: Tecla = 0;
  5483   000B60  0E00               	movlw	0
  5484   000B62  6E44               	movwf	_Tecla^0,c
  5485                           
  5486                           ;Lab4.c: 348: LATB = 0b11111110;
  5487   000B64  0EFE               	movlw	254
  5488   000B66  6E8A               	movwf	138,c	;volatile
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;Lab4.c: 350: if (RB4 == 0) PiezaAContar('1');
  5492   000B68  B881               	btfsc	3969,4,c	;volatile
  5493   000B6A  D004               	goto	i2l384
  5494                           
  5495                           ; BSR set to: 0
  5496   000B6C  0E31               	movlw	49
  5497   000B6E  EC36  F00E         	call	_PiezaAContar
  5498   000B72  D06B               	goto	i2l409
  5499   000B74                     i2l384:
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;Lab4.c: 351: else if (RB5 == 0) PiezaAContar('2');
  5503   000B74  BA81               	btfsc	3969,5,c	;volatile
  5504   000B76  D004               	goto	i2l386
  5505                           
  5506                           ; BSR set to: 0
  5507   000B78  0E32               	movlw	50
  5508   000B7A  EC36  F00E         	call	_PiezaAContar
  5509   000B7E  D065               	goto	i2l409
  5510   000B80                     i2l386:
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;Lab4.c: 352: else if (RB6 == 0) PiezaAContar('3');
  5514   000B80  BC81               	btfsc	3969,6,c	;volatile
  5515   000B82  D004               	goto	i2l388
  5516                           
  5517                           ; BSR set to: 0
  5518   000B84  0E33               	movlw	51
  5519   000B86  EC36  F00E         	call	_PiezaAContar
  5520   000B8A  D05F               	goto	i2l409
  5521   000B8C                     i2l388:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;Lab4.c: 353: else if (RB7 == 0 && menu != 2) okmenu();
  5525   000B8C  BE81               	btfsc	3969,7,c	;volatile
  5526   000B8E  D008               	goto	i2l4001
  5527                           
  5528                           ; BSR set to: 0
  5529   000B90  0E02               	movlw	2
  5530   000B92  1847               	xorwf	_menu^0,w,c
  5531   000B94  1048               	iorwf	(_menu+1)^0,w,c
  5532   000B96  B4D8               	btfsc	status,2,c
  5533   000B98  D003               	goto	i2l4001
  5534                           
  5535                           ; BSR set to: 0
  5536   000B9A  ECA6  F010         	call	_okmenu	;wreg free
  5537   000B9E  D055               	goto	i2l409
  5538   000BA0                     i2l4001:
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;Lab4.c: 354: else {;Lab4.c: 355: LATB = 0b11111101;
  5542   000BA0  0EFD               	movlw	253
  5543   000BA2  6E8A               	movwf	138,c	;volatile
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;Lab4.c: 356: if (RB4 == 0) PiezaAContar('4');
  5547   000BA4  B881               	btfsc	3969,4,c	;volatile
  5548   000BA6  D004               	goto	i2l392
  5549                           
  5550                           ; BSR set to: 0
  5551   000BA8  0E34               	movlw	52
  5552   000BAA  EC36  F00E         	call	_PiezaAContar
  5553   000BAE  D04D               	goto	i2l409
  5554   000BB0                     i2l392:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;Lab4.c: 357: else if (RB5 == 0) PiezaAContar('5');
  5558   000BB0  BA81               	btfsc	3969,5,c	;volatile
  5559   000BB2  D004               	goto	i2l394
  5560                           
  5561                           ; BSR set to: 0
  5562   000BB4  0E35               	movlw	53
  5563   000BB6  EC36  F00E         	call	_PiezaAContar
  5564   000BBA  D047               	goto	i2l409
  5565   000BBC                     i2l394:
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;Lab4.c: 358: else if (RB6 == 0) PiezaAContar('6');
  5569   000BBC  BC81               	btfsc	3969,6,c	;volatile
  5570   000BBE  D004               	goto	i2l396
  5571                           
  5572                           ; BSR set to: 0
  5573   000BC0  0E36               	movlw	54
  5574   000BC2  EC36  F00E         	call	_PiezaAContar
  5575   000BC6  D041               	goto	i2l409
  5576   000BC8                     i2l396:
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;Lab4.c: 359: else if (RB7 == 0 && menu == 1) borrarDigito();
  5580   000BC8  BE81               	btfsc	3969,7,c	;volatile
  5581   000BCA  D007               	goto	i2l4015
  5582                           
  5583                           ; BSR set to: 0
  5584   000BCC  0447               	decf	_menu^0,w,c
  5585   000BCE  1048               	iorwf	(_menu+1)^0,w,c
  5586   000BD0  A4D8               	btfss	status,2,c
  5587   000BD2  D003               	goto	i2l4015
  5588                           
  5589                           ; BSR set to: 0
  5590   000BD4  EC8F  F00E         	call	_borrarDigito	;wreg free
  5591   000BD8  D038               	goto	i2l409
  5592   000BDA                     i2l4015:
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;Lab4.c: 360: else {;Lab4.c: 361: LATB = 0b11111011;
  5596   000BDA  0EFB               	movlw	251
  5597   000BDC  6E8A               	movwf	138,c	;volatile
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;Lab4.c: 362: if (RB4 == 0) PiezaAContar('7');
  5601   000BDE  B881               	btfsc	3969,4,c	;volatile
  5602   000BE0  D004               	goto	i2l400
  5603                           
  5604                           ; BSR set to: 0
  5605   000BE2  0E37               	movlw	55
  5606   000BE4  EC36  F00E         	call	_PiezaAContar
  5607   000BE8  D030               	goto	i2l409
  5608   000BEA                     i2l400:
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;Lab4.c: 363: else if (RB5 == 0) PiezaAContar('8');
  5612   000BEA  BA81               	btfsc	3969,5,c	;volatile
  5613   000BEC  D004               	goto	i2l402
  5614                           
  5615                           ; BSR set to: 0
  5616   000BEE  0E38               	movlw	56
  5617   000BF0  EC36  F00E         	call	_PiezaAContar
  5618   000BF4  D02A               	goto	i2l409
  5619   000BF6                     i2l402:
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;Lab4.c: 364: else if (RB6 == 0) PiezaAContar('9');
  5623   000BF6  BC81               	btfsc	3969,6,c	;volatile
  5624   000BF8  D004               	goto	i2l404
  5625                           
  5626                           ; BSR set to: 0
  5627   000BFA  0E39               	movlw	57
  5628   000BFC  EC36  F00E         	call	_PiezaAContar
  5629   000C00  D024               	goto	i2l409
  5630   000C02                     i2l404:
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;Lab4.c: 365: else if (RB7 == 0 && menu == 2) Reiniciar();
  5634   000C02  BE81               	btfsc	3969,7,c	;volatile
  5635   000C04  D008               	goto	i2l4029
  5636                           
  5637                           ; BSR set to: 0
  5638   000C06  0E02               	movlw	2
  5639   000C08  1847               	xorwf	_menu^0,w,c
  5640   000C0A  1048               	iorwf	(_menu+1)^0,w,c
  5641   000C0C  A4D8               	btfss	status,2,c
  5642   000C0E  D003               	goto	i2l4029
  5643                           
  5644                           ; BSR set to: 0
  5645   000C10  EC2C  F010         	call	_Reiniciar	;wreg free
  5646   000C14  D01A               	goto	i2l409
  5647   000C16                     i2l4029:
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;Lab4.c: 366: else {;Lab4.c: 367: LATB = 0b11110111;
  5651   000C16  0EF7               	movlw	247
  5652   000C18  6E8A               	movwf	138,c	;volatile
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;Lab4.c: 368: if (RB4 == 0) blacklighttoggle();
  5656   000C1A  B881               	btfsc	3969,4,c	;volatile
  5657   000C1C  D003               	goto	i2l408
  5658                           
  5659                           ; BSR set to: 0
  5660   000C1E  EC6C  F011         	call	_blacklighttoggle	;wreg free
  5661   000C22  D013               	goto	i2l409
  5662   000C24                     i2l408:
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;Lab4.c: 369: else if (RB5 == 0) PiezaAContar('0');
  5666   000C24  BA81               	btfsc	3969,5,c	;volatile
  5667   000C26  D004               	goto	i2l410
  5668                           
  5669                           ; BSR set to: 0
  5670   000C28  0E30               	movlw	48
  5671   000C2A  EC36  F00E         	call	_PiezaAContar
  5672   000C2E  D00D               	goto	i2l409
  5673   000C30                     i2l410:
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;Lab4.c: 370: else if (RB6 == 0 && menu == 2) Terminar();
  5677   000C30  BC81               	btfsc	3969,6,c	;volatile
  5678   000C32  D008               	goto	i2l412
  5679                           
  5680                           ; BSR set to: 0
  5681   000C34  0E02               	movlw	2
  5682   000C36  1847               	xorwf	_menu^0,w,c
  5683   000C38  1048               	iorwf	(_menu+1)^0,w,c
  5684   000C3A  A4D8               	btfss	status,2,c
  5685   000C3C  D003               	goto	i2l412
  5686                           
  5687                           ; BSR set to: 0
  5688   000C3E  EC72  F011         	call	_Terminar	;wreg free
  5689   000C42  D003               	goto	i2l409
  5690   000C44                     i2l412:
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;Lab4.c: 371: else if (RB7 == 0) escenario4();
  5694   000C44  AE81               	btfss	3969,7,c	;volatile
  5695                           
  5696                           ; BSR set to: 0
  5697   000C46  EC3E  F00F         	call	_escenario4	;wreg free
  5698   000C4A                     i2l409:
  5699                           
  5700                           ;Lab4.c: 372: };Lab4.c: 373: };Lab4.c: 374: };Lab4.c: 375: LATB = 0b11110000;
  5701                           
  5702                           ; BSR set to: 0
  5703   000C4A  0EF0               	movlw	240
  5704   000C4C  6E8A               	movwf	138,c	;volatile
  5705   000C4E                     i2l4045:
  5706                           
  5707                           ;Lab4.c: 376: };Lab4.c: 377: _delay((unsigned long)((200)*(8000000/4000.0)));
  5708   000C4E  0E03               	movlw	3
  5709   000C50  6E0C               	movwf	(??_ISR+1)^0,c
  5710   000C52  0E08               	movlw	8
  5711   000C54  6E0B               	movwf	??_ISR^0,c
  5712   000C56  0E77               	movlw	119
  5713   000C58                     i2u422_47:
  5714   000C58  2EE8               	decfsz	wreg,f,c
  5715   000C5A  D7FE               	bra	i2u422_47
  5716   000C5C  2E0B               	decfsz	??_ISR^0,f,c
  5717   000C5E  D7FC               	bra	i2u422_47
  5718   000C60  2E0C               	decfsz	(??_ISR+1)^0,f,c
  5719   000C62  D7FA               	bra	i2u422_47
  5720   000C64  0000               	nop	
  5721                           
  5722                           ;Lab4.c: 379: RBIF = 0;
  5723   000C66  90F2               	bcf	4082,0,c	;volatile
  5724   000C68                     i2l4049:
  5725                           
  5726                           ;Lab4.c: 381: };Lab4.c: 382: if (TMR0IF == 1) {
  5727   000C68  A4F2               	btfss	4082,2,c	;volatile
  5728   000C6A  D018               	goto	i2l419
  5729                           
  5730                           ;Lab4.c: 383: TMR0IF = 0;
  5731   000C6C  94F2               	bcf	4082,2,c	;volatile
  5732                           
  5733                           ;Lab4.c: 384: TMR0 = 3036;
  5734   000C6E  0E0B               	movlw	11
  5735   000C70  6ED7               	movwf	215,c	;volatile
  5736   000C72  0EDC               	movlw	220
  5737   000C74  6ED6               	movwf	214,c	;volatile
  5738                           
  5739                           ;Lab4.c: 385: LATA1 = !LATA1;
  5740   000C76  B289               	btfsc	3977,1,c	;volatile
  5741   000C78  D002               	goto	i2u311_40
  5742   000C7A  8289               	bsf	3977,1,c	;volatile
  5743   000C7C  D001               	goto	i2u312_45
  5744   000C7E                     i2u311_40:
  5745   000C7E  9289               	bcf	3977,1,c	;volatile
  5746   000C80                     i2u312_45:
  5747                           
  5748                           ;Lab4.c: 386: Trasmitir();
  5749   000C80  EC61  F010         	call	_Trasmitir	;wreg free
  5750                           
  5751                           ;Lab4.c: 387: if (etimeout == 1)
  5752   000C84  0443               	decf	_etimeout^0,w,c
  5753   000C86  A4D8               	btfss	status,2,c
  5754   000C88  D002               	goto	i2l4063
  5755                           
  5756                           ;Lab4.c: 388: ctimeout++;
  5757   000C8A  2A42               	incf	_ctimeout^0,f,c
  5758   000C8C  D002               	goto	i2l4065
  5759   000C8E                     i2l4063:
  5760                           
  5761                           ;Lab4.c: 389: else;Lab4.c: 390: ctimeout = 0;
  5762   000C8E  0E00               	movlw	0
  5763   000C90  6E42               	movwf	_ctimeout^0,c
  5764   000C92                     i2l4065:
  5765                           
  5766                           ;Lab4.c: 391: if (ctimeout >= 2)
  5767   000C92  0E01               	movlw	1
  5768   000C94  6442               	cpfsgt	_ctimeout^0,c
  5769   000C96  D002               	goto	i2l419
  5770                           
  5771                           ;Lab4.c: 392: etimeout = 0;
  5772   000C98  0E00               	movlw	0
  5773   000C9A  6E43               	movwf	_etimeout^0,c
  5774   000C9C                     i2l419:
  5775   000C9C  C014  FFF5         	movff	??_ISR+9,tablat
  5776   000CA0  C013  FFF8         	movff	??_ISR+8,tblptru
  5777   000CA4  C012  FFF7         	movff	??_ISR+7,tblptrh
  5778   000CA8  C011  FFF6         	movff	??_ISR+6,tblptrl
  5779   000CAC  C010  FFF4         	movff	??_ISR+5,prodh
  5780   000CB0  C00F  FFF3         	movff	??_ISR+4,prodl
  5781   000CB4  C00E  FFDA         	movff	??_ISR+3,fsr2h
  5782   000CB8  C00D  FFD9         	movff	??_ISR+2,fsr2l
  5783   000CBC  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5784   000CBE  0011               	retfie		f
  5785   000CC0                     __end_of_ISR:
  5786                           	callstack 0
  5787                           
  5788 ;; *************** function _okmenu *****************
  5789 ;; Defined at:
  5790 ;;		line 337 in file "Lab4.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;		None
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;		None
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  1    wreg      void 
  5797 ;; Registers used:
  5798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5799 ;; Tracked objects:
  5800 ;;		On entry : 3F/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5804 ;;      Params:         0       0       0       0       0       0       0       0       0
  5805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5807 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5808 ;;Total ram usage:        0 bytes
  5809 ;; Hardware stack levels used: 1
  5810 ;; Hardware stack levels required when called: 5
  5811 ;; This function calls:
  5812 ;;		i2_ContarReal
  5813 ;;		i2_escenario1
  5814 ;; This function is called by:
  5815 ;;		_ISR
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           	psect	text36
  5820   00214C                     __ptext36:
  5821                           	callstack 0
  5822   00214C                     _okmenu:
  5823                           	callstack 19
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;Lab4.c: 338: if (menu == 1) ContarReal();
  5827                           
  5828                           ;incstack = 0
  5829   00214C  0447               	decf	_menu^0,w,c
  5830   00214E  1048               	iorwf	(_menu+1)^0,w,c
  5831   002150  A4D8               	btfss	status,2,c
  5832   002152  D003               	goto	i2l3831
  5833                           
  5834                           ; BSR set to: 0
  5835   002154  EC46  F008         	call	i2_ContarReal	;wreg free
  5836   002158  0012               	return	
  5837   00215A                     i2l3831:
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;Lab4.c: 339: else if (menu == 2);
  5841   00215A  0E02               	movlw	2
  5842   00215C  1847               	xorwf	_menu^0,w,c
  5843   00215E  1048               	iorwf	(_menu+1)^0,w,c
  5844   002160  B4D8               	btfsc	status,2,c
  5845   002162  0012               	return	
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;Lab4.c: 340: else if (menu == 3) escenario1();
  5849   002164  0E03               	movlw	3
  5850   002166  1847               	xorwf	_menu^0,w,c
  5851   002168  1048               	iorwf	(_menu+1)^0,w,c
  5852   00216A  A4D8               	btfss	status,2,c
  5853   00216C  0012               	return	
  5854                           
  5855                           ; BSR set to: 0
  5856   00216E  ECD9  F00E         	call	i2_escenario1	;wreg free
  5857   002172  0012               	return		;funcret
  5858   002174                     __end_of_okmenu:
  5859                           	callstack 0
  5860                           
  5861 ;; *************** function i2_ContarReal *****************
  5862 ;; Defined at:
  5863 ;;		line 274 in file "Lab4.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;		None
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      void 
  5870 ;; Registers used:
  5871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5872 ;; Tracked objects:
  5873 ;;		On entry : 3F/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5877 ;;      Params:         0       0       0       0       0       0       0       0       0
  5878 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5879 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5880 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5881 ;;Total ram usage:        2 bytes
  5882 ;; Hardware stack levels used: 1
  5883 ;; Hardware stack levels required when called: 4
  5884 ;; This function calls:
  5885 ;;		i2___awdiv
  5886 ;;		i2___awmod
  5887 ;;		i2___wmul
  5888 ;;		i2_escenario2
  5889 ;;		i2_escenario3
  5890 ;;		i2_vaciar
  5891 ;; This function is called by:
  5892 ;;		_okmenu
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	text37
  5897   00108C                     __ptext37:
  5898                           	callstack 0
  5899   00108C                     i2_ContarReal:
  5900                           	callstack 19
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;Lab4.c: 275: cantidad = (decena * 10) + unidad;
  5904                           
  5905                           ;incstack = 0
  5906   00108C  C040  F001         	movff	_decena,i2___wmul@multiplier
  5907   001090  C041  F002         	movff	_decena+1,i2___wmul@multiplier+1
  5908   001094  0E00               	movlw	0
  5909   001096  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5910   001098  0E0A               	movlw	10
  5911   00109A  6E03               	movwf	i2___wmul@multiplicand^0,c
  5912   00109C  ECE0  F010         	call	i2___wmul	;wreg free
  5913   0010A0  503E               	movf	_unidad^0,w,c
  5914   0010A2  2401               	addwf	?i2___wmul^0,w,c
  5915   0010A4  6E3C               	movwf	_cantidad^0,c
  5916   0010A6  503F               	movf	(_unidad+1)^0,w,c
  5917   0010A8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5918   0010AA  6E3D               	movwf	(_cantidad+1)^0,c
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;Lab4.c: 276: contador++;
  5922   0010AC  4A3A               	infsnz	_contador^0,f,c
  5923   0010AE  2A3B               	incf	(_contador+1)^0,f,c
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;Lab4.c: 277: cantidadResta = cantidad - contador + 1;
  5927   0010B0  503A               	movf	_contador^0,w,c
  5928   0010B2  5C3C               	subwf	_cantidad^0,w,c
  5929   0010B4  6E09               	movwf	??i2_ContarReal^0,c
  5930   0010B6  503B               	movf	(_contador+1)^0,w,c
  5931   0010B8  583D               	subwfb	(_cantidad+1)^0,w,c
  5932   0010BA  6E0A               	movwf	(??i2_ContarReal+1)^0,c
  5933   0010BC  0E01               	movlw	1
  5934   0010BE  2409               	addwf	??i2_ContarReal^0,w,c
  5935   0010C0  6E38               	movwf	_cantidadResta^0,c
  5936   0010C2  0E00               	movlw	0
  5937   0010C4  200A               	addwfc	(??i2_ContarReal+1)^0,w,c
  5938   0010C6  6E39               	movwf	(_cantidadResta+1)^0,c
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;Lab4.c: 278: cantidadRestaUnidad = 0b00110000 + cantidadResta % 10;
  5942   0010C8  C038  F001         	movff	_cantidadResta,i2___awmod@dividend
  5943   0010CC  C039  F002         	movff	_cantidadResta+1,i2___awmod@dividend+1
  5944   0010D0  0E00               	movlw	0
  5945   0010D2  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5946   0010D4  0E0A               	movlw	10
  5947   0010D6  6E03               	movwf	i2___awmod@divisor^0,c
  5948   0010D8  ECCA  F00D         	call	i2___awmod	;wreg free
  5949   0010DC  0E30               	movlw	48
  5950   0010DE  2401               	addwf	?i2___awmod^0,w,c
  5951   0010E0  6E36               	movwf	_cantidadRestaUnidad^0,c
  5952   0010E2  0E00               	movlw	0
  5953   0010E4  2002               	addwfc	(?i2___awmod+1)^0,w,c
  5954   0010E6  6E37               	movwf	(_cantidadRestaUnidad+1)^0,c
  5955                           
  5956                           ;Lab4.c: 279: cantidadRestaDecena = 0b00110000 + cantidadResta / 10;
  5957   0010E8  C038  F001         	movff	_cantidadResta,i2___awdiv@dividend
  5958   0010EC  C039  F002         	movff	_cantidadResta+1,i2___awdiv@dividend+1
  5959   0010F0  0E00               	movlw	0
  5960   0010F2  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  5961   0010F4  0E0A               	movlw	10
  5962   0010F6  6E03               	movwf	i2___awdiv@divisor^0,c
  5963   0010F8  EC97  F00C         	call	i2___awdiv	;wreg free
  5964   0010FC  0E30               	movlw	48
  5965   0010FE  2401               	addwf	?i2___awdiv^0,w,c
  5966   001100  6E34               	movwf	_cantidadRestaDecena^0,c
  5967   001102  0E00               	movlw	0
  5968   001104  2002               	addwfc	(?i2___awdiv+1)^0,w,c
  5969   001106  6E35               	movwf	(_cantidadRestaDecena+1)^0,c
  5970                           
  5971                           ;Lab4.c: 280: contadorUnidad = (contador - 1) % 10;
  5972   001108  0EFF               	movlw	255
  5973   00110A  243A               	addwf	_contador^0,w,c
  5974   00110C  6E01               	movwf	i2___awmod@dividend^0,c
  5975   00110E  0EFF               	movlw	255
  5976   001110  203B               	addwfc	(_contador+1)^0,w,c
  5977   001112  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  5978   001114  0E00               	movlw	0
  5979   001116  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5980   001118  0E0A               	movlw	10
  5981   00111A  6E03               	movwf	i2___awmod@divisor^0,c
  5982   00111C  ECCA  F00D         	call	i2___awmod	;wreg free
  5983   001120  C001  F032         	movff	?i2___awmod,_contadorUnidad
  5984   001124  C002  F033         	movff	?i2___awmod+1,_contadorUnidad+1
  5985                           
  5986                           ;Lab4.c: 281: contadorDecena = (contador - 1) / 10;
  5987   001128  0EFF               	movlw	255
  5988   00112A  243A               	addwf	_contador^0,w,c
  5989   00112C  6E01               	movwf	i2___awdiv@dividend^0,c
  5990   00112E  0EFF               	movlw	255
  5991   001130  203B               	addwfc	(_contador+1)^0,w,c
  5992   001132  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
  5993   001134  0E00               	movlw	0
  5994   001136  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  5995   001138  0E0A               	movlw	10
  5996   00113A  6E03               	movwf	i2___awdiv@divisor^0,c
  5997   00113C  EC97  F00C         	call	i2___awdiv	;wreg free
  5998   001140  C001  F0AB         	movff	?i2___awdiv,_contadorDecena
  5999   001144  C002  F0AC         	movff	?i2___awdiv+1,_contadorDecena+1
  6000                           
  6001                           ;Lab4.c: 283: LATD = contadorUnidad;
  6002   001148  C032  FF8C         	movff	_contadorUnidad,3980	;volatile
  6003                           
  6004                           ;Lab4.c: 284: LATE = color[contadorDecena];
  6005   00114C  0100               	movlb	0	; () banked
  6006   00114E  51AB               	movf	_contadorDecena& (0+255),w,b
  6007   001150  0D02               	mullw	2
  6008   001152  50F3               	movf	243,w,c
  6009   001154  0F60               	addlw	low _color
  6010   001156  6ED9               	movwf	fsr2l,c
  6011   001158  6ADA               	clrf	fsr2h,c
  6012   00115A  50DF               	movf	indf2,w,c
  6013   00115C  6E8D               	movwf	141,c	;volatile
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;Lab4.c: 285: escenario2();
  6017   00115E  EC10  F00C         	call	i2_escenario2	;wreg free
  6018                           
  6019                           ;Lab4.c: 286: _delay((unsigned long)((1000)*(8000000/4000.0)));
  6020   001162  0E0B               	movlw	11
  6021   001164  6E0A               	movwf	(??i2_ContarReal+1)^0,c
  6022   001166  0E26               	movlw	38
  6023   001168  6E09               	movwf	??i2_ContarReal^0,c
  6024   00116A  0E5E               	movlw	94
  6025   00116C                     i2u423_47:
  6026   00116C  2EE8               	decfsz	wreg,f,c
  6027   00116E  D7FE               	bra	i2u423_47
  6028   001170  2E09               	decfsz	??i2_ContarReal^0,f,c
  6029   001172  D7FC               	bra	i2u423_47
  6030   001174  2E0A               	decfsz	(??i2_ContarReal+1)^0,f,c
  6031   001176  D7FA               	bra	i2u423_47
  6032                           
  6033                           ;Lab4.c: 287: if (!cantidadResta) {
  6034   001178  5038               	movf	_cantidadResta^0,w,c
  6035   00117A  1039               	iorwf	(_cantidadResta+1)^0,w,c
  6036   00117C  A4D8               	btfss	status,2,c
  6037   00117E  0012               	return	
  6038                           
  6039                           ;Lab4.c: 288: vaciar();
  6040   001180  EC5F  F00F         	call	i2_vaciar	;wreg free
  6041                           
  6042                           ;Lab4.c: 289: escenario3();
  6043   001184  EC11  F010         	call	i2_escenario3	;wreg free
  6044   001188  0012               	return		;funcret
  6045   00118A                     __end_ofi2_ContarReal:
  6046                           	callstack 0
  6047                           
  6048 ;; *************** function i2_escenario3 *****************
  6049 ;; Defined at:
  6050 ;;		line 215 in file "Lab4.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;		None
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;		None
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6064 ;;      Params:         0       0       0       0       0       0       0       0       0
  6065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6067 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6068 ;;Total ram usage:        0 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 3
  6071 ;; This function calls:
  6072 ;;		i2_Lcd_Clear
  6073 ;;		i2_Lcd_NoBlink
  6074 ;;		i2_Lcd_Set_Cursor
  6075 ;;		i2_Lcd_Write_String
  6076 ;; This function is called by:
  6077 ;;		i2_ContarReal
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text38
  6082   002022                     __ptext38:
  6083                           	callstack 0
  6084   002022                     i2_escenario3:
  6085                           	callstack 19
  6086                           
  6087                           ;Lab4.c: 216: menu = 3;
  6088                           
  6089                           ;incstack = 0
  6090   002022  0E00               	movlw	0
  6091   002024  6E48               	movwf	(_menu+1)^0,c
  6092   002026  0E03               	movlw	3
  6093   002028  6E47               	movwf	_menu^0,c
  6094                           
  6095                           ;Lab4.c: 217: Lcd_Clear();
  6096   00202A  EC65  F011         	call	i2_Lcd_Clear	;wreg free
  6097                           
  6098                           ;Lab4.c: 218: Lcd_NoBlink();
  6099   00202E  EC5E  F011         	call	i2_Lcd_NoBlink	;wreg free
  6100                           
  6101                           ;Lab4.c: 219: Lcd_Set_Cursor(1, 1);
  6102   002032  0E01               	movlw	1
  6103   002034  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6104   002036  0E01               	movlw	1
  6105   002038  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  6106                           
  6107                           ;Lab4.c: 220: Lcd_Write_String("Cuenta finalizada");
  6108   00203C  0E51               	movlw	low STR_11
  6109   00203E  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6110   002040  EC9F  F00F         	call	i2_Lcd_Write_String	;wreg free
  6111                           
  6112                           ;Lab4.c: 221: Lcd_Set_Cursor(2, 13);
  6113   002044  0E0D               	movlw	13
  6114   002046  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6115   002048  0E02               	movlw	2
  6116   00204A  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  6117                           
  6118                           ;Lab4.c: 222: Lcd_Write_String("A:OK");
  6119   00204E  0ECC               	movlw	low STR_12
  6120   002050  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6121   002052  EC9F  F00F         	call	i2_Lcd_Write_String	;wreg free
  6122   002056  0012               	return		;funcret
  6123   002058                     __end_ofi2_escenario3:
  6124                           	callstack 0
  6125                           
  6126 ;; *************** function i2___wmul *****************
  6127 ;; Defined at:
  6128 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/Umul16.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;  multiplier      2    0[COMRAM] unsigned int 
  6131 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  product         2    4[COMRAM] unsigned int 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  2    0[COMRAM] unsigned int 
  6136 ;; Registers used:
  6137 ;;		wreg, status,2, status,0, prodl, prodh
  6138 ;; Tracked objects:
  6139 ;;		On entry : 3F/0
  6140 ;;		On exit  : 3F/0
  6141 ;;		Unchanged: 3F/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6143 ;;      Params:         4       0       0       0       0       0       0       0       0
  6144 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6146 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6147 ;;Total ram usage:        6 bytes
  6148 ;; Hardware stack levels used: 1
  6149 ;; This function calls:
  6150 ;;		Nothing
  6151 ;; This function is called by:
  6152 ;;		i2_ContarReal
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           	psect	text39
  6157   0021C0                     __ptext39:
  6158                           	callstack 0
  6159   0021C0                     i2___wmul:
  6160                           	callstack 22
  6161                           
  6162                           ; BSR set to: 0
  6163                           
  6164                           ;incstack = 0
  6165   0021C0  5001               	movf	i2___wmul@multiplier^0,w,c
  6166   0021C2  0203               	mulwf	i2___wmul@multiplicand^0,c
  6167   0021C4  CFF3 F005          	movff	prodl,i2___wmul@product
  6168   0021C8  CFF4 F006          	movff	prodh,i2___wmul@product+1
  6169   0021CC  5001               	movf	i2___wmul@multiplier^0,w,c
  6170   0021CE  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  6171   0021D0  50F3               	movf	243,w,c
  6172   0021D2  2606               	addwf	(i2___wmul@product+1)^0,f,c
  6173   0021D4  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  6174   0021D6  0203               	mulwf	i2___wmul@multiplicand^0,c
  6175   0021D8  50F3               	movf	243,w,c
  6176   0021DA  2606               	addwf	(i2___wmul@product+1)^0,f,c
  6177                           
  6178                           ; BSR set to: 0
  6179   0021DC  C005  F001         	movff	i2___wmul@product,?i2___wmul
  6180   0021E0  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  6181                           
  6182                           ; BSR set to: 0
  6183   0021E4  0012               	return		;funcret
  6184   0021E6                     __end_ofi2___wmul:
  6185                           	callstack 0
  6186                           
  6187 ;; *************** function i2___awmod *****************
  6188 ;; Defined at:
  6189 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awmod.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  dividend        2    0[COMRAM] int 
  6192 ;;  divisor         2    2[COMRAM] int 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  sign            1    5[COMRAM] unsigned char 
  6195 ;;  counter         1    4[COMRAM] unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  2    0[COMRAM] int 
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6205 ;;      Params:         4       0       0       0       0       0       0       0       0
  6206 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6208 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6209 ;;Total ram usage:        6 bytes
  6210 ;; Hardware stack levels used: 1
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		i2_ContarReal
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text40
  6219   001B94                     __ptext40:
  6220                           	callstack 0
  6221   001B94                     i2___awmod:
  6222                           	callstack 22
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;incstack = 0
  6226   001B94  0E00               	movlw	0
  6227   001B96  6E06               	movwf	i2___awmod@sign^0,c
  6228   001B98  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  6229   001B9A  D006               	goto	i2l2995
  6230   001B9C  6C01               	negf	i2___awmod@dividend^0,c
  6231   001B9E  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  6232   001BA0  B0D8               	btfsc	status,0,c
  6233   001BA2  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  6234   001BA4  0E01               	movlw	1
  6235   001BA6  6E06               	movwf	i2___awmod@sign^0,c
  6236   001BA8                     i2l2995:
  6237   001BA8  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  6238   001BAA  D004               	goto	i2l2999
  6239   001BAC  6C03               	negf	i2___awmod@divisor^0,c
  6240   001BAE  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  6241   001BB0  B0D8               	btfsc	status,0,c
  6242   001BB2  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  6243   001BB4                     i2l2999:
  6244   001BB4  5003               	movf	i2___awmod@divisor^0,w,c
  6245   001BB6  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  6246   001BB8  B4D8               	btfsc	status,2,c
  6247   001BBA  D018               	goto	i2l3015
  6248   001BBC  0E01               	movlw	1
  6249   001BBE  6E05               	movwf	i2___awmod@counter^0,c
  6250   001BC0  D004               	goto	i2l3005
  6251   001BC2                     i2l3003:
  6252   001BC2  90D8               	bcf	status,0,c
  6253   001BC4  3603               	rlcf	i2___awmod@divisor^0,f,c
  6254   001BC6  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  6255   001BC8  2A05               	incf	i2___awmod@counter^0,f,c
  6256   001BCA                     i2l3005:
  6257   001BCA  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  6258   001BCC  D7FA               	goto	i2l3003
  6259   001BCE                     i2u193_40:
  6260   001BCE  5003               	movf	i2___awmod@divisor^0,w,c
  6261   001BD0  5C01               	subwf	i2___awmod@dividend^0,w,c
  6262   001BD2  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  6263   001BD4  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  6264   001BD6  A0D8               	btfss	status,0,c
  6265   001BD8  D004               	goto	i2l3011
  6266   001BDA  5003               	movf	i2___awmod@divisor^0,w,c
  6267   001BDC  5E01               	subwf	i2___awmod@dividend^0,f,c
  6268   001BDE  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  6269   001BE0  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  6270   001BE2                     i2l3011:
  6271   001BE2  90D8               	bcf	status,0,c
  6272   001BE4  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  6273   001BE6  3203               	rrcf	i2___awmod@divisor^0,f,c
  6274   001BE8  2E05               	decfsz	i2___awmod@counter^0,f,c
  6275   001BEA  D7F1               	goto	i2u193_40
  6276   001BEC                     i2l3015:
  6277   001BEC  5006               	movf	i2___awmod@sign^0,w,c
  6278   001BEE  B4D8               	btfsc	status,2,c
  6279   001BF0  D004               	goto	i2l3019
  6280   001BF2  6C01               	negf	i2___awmod@dividend^0,c
  6281   001BF4  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  6282   001BF6  B0D8               	btfsc	status,0,c
  6283   001BF8  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  6284   001BFA                     i2l3019:
  6285   001BFA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  6286   001BFE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  6287   001C02  0012               	return		;funcret
  6288   001C04                     __end_ofi2___awmod:
  6289                           	callstack 0
  6290                           
  6291 ;; *************** function i2___awdiv *****************
  6292 ;; Defined at:
  6293 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awdiv.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;  dividend        2    0[COMRAM] int 
  6296 ;;  divisor         2    2[COMRAM] int 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  quotient        2    6[COMRAM] int 
  6299 ;;  sign            1    5[COMRAM] unsigned char 
  6300 ;;  counter         1    4[COMRAM] unsigned char 
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  2    0[COMRAM] int 
  6303 ;; Registers used:
  6304 ;;		wreg, status,2, status,0
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6310 ;;      Params:         4       0       0       0       0       0       0       0       0
  6311 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6313 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6314 ;;Total ram usage:        8 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		i2_ContarReal
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           	psect	text41
  6324   00192E                     __ptext41:
  6325                           	callstack 0
  6326   00192E                     i2___awdiv:
  6327                           	callstack 22
  6328                           
  6329                           ;incstack = 0
  6330   00192E  0E00               	movlw	0
  6331   001930  6E06               	movwf	i2___awdiv@sign^0,c
  6332   001932  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  6333   001934  D006               	goto	i2l2951
  6334   001936  6C03               	negf	i2___awdiv@divisor^0,c
  6335   001938  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  6336   00193A  B0D8               	btfsc	status,0,c
  6337   00193C  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  6338   00193E  0E01               	movlw	1
  6339   001940  6E06               	movwf	i2___awdiv@sign^0,c
  6340   001942                     i2l2951:
  6341   001942  AE02               	btfss	(i2___awdiv@dividend+1)^0,7,c
  6342   001944  D006               	goto	i2l2957
  6343   001946  6C01               	negf	i2___awdiv@dividend^0,c
  6344   001948  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  6345   00194A  B0D8               	btfsc	status,0,c
  6346   00194C  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  6347   00194E  0E01               	movlw	1
  6348   001950  1A06               	xorwf	i2___awdiv@sign^0,f,c
  6349   001952                     i2l2957:
  6350   001952  0E00               	movlw	0
  6351   001954  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  6352   001956  0E00               	movlw	0
  6353   001958  6E07               	movwf	i2___awdiv@quotient^0,c
  6354   00195A  5003               	movf	i2___awdiv@divisor^0,w,c
  6355   00195C  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  6356   00195E  B4D8               	btfsc	status,2,c
  6357   001960  D01C               	goto	i2l2979
  6358   001962  0E01               	movlw	1
  6359   001964  6E05               	movwf	i2___awdiv@counter^0,c
  6360   001966  D004               	goto	i2l2965
  6361   001968                     i2l2963:
  6362   001968  90D8               	bcf	status,0,c
  6363   00196A  3603               	rlcf	i2___awdiv@divisor^0,f,c
  6364   00196C  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  6365   00196E  2A05               	incf	i2___awdiv@counter^0,f,c
  6366   001970                     i2l2965:
  6367   001970  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  6368   001972  D7FA               	goto	i2l2963
  6369   001974                     i2u187_40:
  6370   001974  90D8               	bcf	status,0,c
  6371   001976  3607               	rlcf	i2___awdiv@quotient^0,f,c
  6372   001978  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  6373   00197A  5003               	movf	i2___awdiv@divisor^0,w,c
  6374   00197C  5C01               	subwf	i2___awdiv@dividend^0,w,c
  6375   00197E  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  6376   001980  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  6377   001982  A0D8               	btfss	status,0,c
  6378   001984  D005               	goto	i2l2975
  6379   001986  5003               	movf	i2___awdiv@divisor^0,w,c
  6380   001988  5E01               	subwf	i2___awdiv@dividend^0,f,c
  6381   00198A  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  6382   00198C  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  6383   00198E  8007               	bsf	i2___awdiv@quotient^0,0,c
  6384   001990                     i2l2975:
  6385   001990  90D8               	bcf	status,0,c
  6386   001992  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  6387   001994  3203               	rrcf	i2___awdiv@divisor^0,f,c
  6388   001996  2E05               	decfsz	i2___awdiv@counter^0,f,c
  6389   001998  D7ED               	goto	i2u187_40
  6390   00199A                     i2l2979:
  6391   00199A  5006               	movf	i2___awdiv@sign^0,w,c
  6392   00199C  B4D8               	btfsc	status,2,c
  6393   00199E  D004               	goto	i2l2983
  6394   0019A0  6C07               	negf	i2___awdiv@quotient^0,c
  6395   0019A2  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  6396   0019A4  B0D8               	btfsc	status,0,c
  6397   0019A6  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  6398   0019A8                     i2l2983:
  6399   0019A8  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  6400   0019AC  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  6401   0019B0  0012               	return		;funcret
  6402   0019B2                     __end_ofi2___awdiv:
  6403                           	callstack 0
  6404                           
  6405 ;; *************** function _escenario4 *****************
  6406 ;; Defined at:
  6407 ;;		line 226 in file "Lab4.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;		None
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;		None
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1    wreg      void 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 3F/0
  6418 ;;		On exit  : 3F/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6421 ;;      Params:         0       0       0       0       0       0       0       0       0
  6422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6424 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6425 ;;Total ram usage:        0 bytes
  6426 ;; Hardware stack levels used: 1
  6427 ;; Hardware stack levels required when called: 3
  6428 ;; This function calls:
  6429 ;;		i2_Lcd_Clear
  6430 ;;		i2_Lcd_NoBlink
  6431 ;;		i2_Lcd_Set_Cursor
  6432 ;;		i2_Lcd_Write_Char
  6433 ;;		i2_Lcd_Write_String
  6434 ;; This function is called by:
  6435 ;;		_ISR
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text42
  6440   001E7C                     __ptext42:
  6441                           	callstack 0
  6442   001E7C                     _escenario4:
  6443                           	callstack 21
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;Lab4.c: 227: Lcd_Clear();
  6447                           
  6448                           ;incstack = 0
  6449   001E7C  EC65  F011         	call	i2_Lcd_Clear	;wreg free
  6450                           
  6451                           ;Lab4.c: 228: Lcd_NoBlink();
  6452   001E80  EC5E  F011         	call	i2_Lcd_NoBlink	;wreg free
  6453                           
  6454                           ;Lab4.c: 229: Lcd_Set_Cursor(1, 1);
  6455   001E84  0E01               	movlw	1
  6456   001E86  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6457   001E88  0E01               	movlw	1
  6458   001E8A  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  6459                           
  6460                           ;Lab4.c: 230: Lcd_Write_String("Parada de");
  6461   001E8E  0EBA               	movlw	low STR_13
  6462   001E90  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6463   001E92  EC9F  F00F         	call	i2_Lcd_Write_String	;wreg free
  6464                           
  6465                           ;Lab4.c: 231: Lcd_Set_Cursor(2, 1);
  6466   001E96  0E01               	movlw	1
  6467   001E98  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6468   001E9A  0E02               	movlw	2
  6469   001E9C  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  6470                           
  6471                           ;Lab4.c: 232: Lcd_Write_String("Emergencia ");
  6472   001EA0  0E83               	movlw	low STR_14
  6473   001EA2  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6474   001EA4  EC9F  F00F         	call	i2_Lcd_Write_String	;wreg free
  6475                           
  6476                           ;Lab4.c: 233: Lcd_Write_Char(3);
  6477   001EA8  0E03               	movlw	3
  6478   001EAA  ECDA  F00F         	call	i2_Lcd_Write_Char
  6479                           
  6480                           ;Lab4.c: 234: flagParar = 0;
  6481   001EAE  0E00               	movlw	0
  6482   001EB0  0100               	movlb	0	; () banked
  6483   001EB2  6F74               	movwf	(_flagParar+1)& (0+255),b
  6484   001EB4  0E00               	movlw	0
  6485   001EB6  6F73               	movwf	_flagParar& (0+255),b
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;Lab4.c: 235: LATE = rojo;
  6489   001EB8  C06F  FF8D         	movff	_rojo,3981	;volatile
  6490                           
  6491                           ; BSR set to: 0
  6492   001EBC  0012               	return		;funcret
  6493   001EBE                     __end_of_escenario4:
  6494                           	callstack 0
  6495                           
  6496 ;; *************** function _borrarDigito *****************
  6497 ;; Defined at:
  6498 ;;		line 263 in file "Lab4.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;		None
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;		None
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1    wreg      void 
  6505 ;; Registers used:
  6506 ;;		wreg, status,2, status,0, cstack
  6507 ;; Tracked objects:
  6508 ;;		On entry : 3F/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6512 ;;      Params:         0       0       0       0       0       0       0       0       0
  6513 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6515 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6516 ;;Total ram usage:        0 bytes
  6517 ;; Hardware stack levels used: 1
  6518 ;; Hardware stack levels required when called: 3
  6519 ;; This function calls:
  6520 ;;		i2_Lcd_Set_Cursor
  6521 ;;		i2_Lcd_Write_Char
  6522 ;; This function is called by:
  6523 ;;		_ISR
  6524 ;; This function uses a non-reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text43
  6528   001D1E                     __ptext43:
  6529                           	callstack 0
  6530   001D1E                     _borrarDigito:
  6531                           	callstack 21
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;Lab4.c: 264: if (digito != 1) {
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;incstack = 0
  6538   001D1E  0445               	decf	_digito^0,w,c
  6539   001D20  1046               	iorwf	(_digito+1)^0,w,c
  6540   001D22  B4D8               	btfsc	status,2,c
  6541   001D24  0012               	return	
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;Lab4.c: 265: Lcd_Set_Cursor(2, digito - 1);
  6545   001D26  0445               	decf	_digito^0,w,c
  6546   001D28  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6547   001D2A  0E02               	movlw	2
  6548   001D2C  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  6549                           
  6550                           ;Lab4.c: 266: Lcd_Write_Char(' ');
  6551   001D30  0E20               	movlw	32
  6552   001D32  ECDA  F00F         	call	i2_Lcd_Write_Char
  6553                           
  6554                           ;Lab4.c: 267: Lcd_Set_Cursor(2, digito - 1);
  6555   001D36  0445               	decf	_digito^0,w,c
  6556   001D38  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6557   001D3A  0E02               	movlw	2
  6558   001D3C  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  6559                           
  6560                           ;Lab4.c: 268: digito--;
  6561   001D40  0645               	decf	_digito^0,f,c
  6562   001D42  A0D8               	btfss	status,0,c
  6563   001D44  0646               	decf	(_digito+1)^0,f,c
  6564                           
  6565                           ;Lab4.c: 269: if (digito == 1) decena = 0;
  6566   001D46  0445               	decf	_digito^0,w,c
  6567   001D48  1046               	iorwf	(_digito+1)^0,w,c
  6568   001D4A  A4D8               	btfss	status,2,c
  6569   001D4C  D005               	goto	i2l3797
  6570   001D4E  0E00               	movlw	0
  6571   001D50  6E41               	movwf	(_decena+1)^0,c
  6572   001D52  0E00               	movlw	0
  6573   001D54  6E40               	movwf	_decena^0,c
  6574   001D56  0012               	return	
  6575   001D58                     i2l3797:
  6576                           
  6577                           ;Lab4.c: 270: else if (digito == 2) unidad = 0;
  6578   001D58  0E02               	movlw	2
  6579   001D5A  1845               	xorwf	_digito^0,w,c
  6580   001D5C  1046               	iorwf	(_digito+1)^0,w,c
  6581   001D5E  A4D8               	btfss	status,2,c
  6582   001D60  0012               	return	
  6583   001D62  0E00               	movlw	0
  6584   001D64  6E3F               	movwf	(_unidad+1)^0,c
  6585   001D66  0E00               	movlw	0
  6586   001D68  6E3E               	movwf	_unidad^0,c
  6587   001D6A  0012               	return		;funcret
  6588   001D6C                     __end_of_borrarDigito:
  6589                           	callstack 0
  6590                           
  6591 ;; *************** function _blacklighttoggle *****************
  6592 ;; Defined at:
  6593 ;;		line 177 in file "Lab4.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;		None
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      void 
  6600 ;; Registers used:
  6601 ;;		None
  6602 ;; Tracked objects:
  6603 ;;		On entry : 3F/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6607 ;;      Params:         0       0       0       0       0       0       0       0       0
  6608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6610 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6611 ;;Total ram usage:        0 bytes
  6612 ;; Hardware stack levels used: 1
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		_ISR
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	text44
  6621   0022D8                     __ptext44:
  6622                           	callstack 0
  6623   0022D8                     _blacklighttoggle:
  6624                           	callstack 24
  6625                           
  6626                           ; BSR set to: 0
  6627                           ;Lab4.c: 178: LATA5 = !LATA5;
  6628                           
  6629                           ;incstack = 0
  6630   0022D8  BA89               	btfsc	3977,5,c	;volatile
  6631   0022DA  D002               	goto	i2u271_40
  6632   0022DC  8A89               	bsf	3977,5,c	;volatile
  6633   0022DE  0012               	return	
  6634   0022E0                     i2u271_40:
  6635   0022E0  9A89               	bcf	3977,5,c	;volatile
  6636   0022E2  0012               	return		;funcret
  6637   0022E4                     __end_of_blacklighttoggle:
  6638                           	callstack 0
  6639                           
  6640 ;; *************** function _Trasmitir *****************
  6641 ;; Defined at:
  6642 ;;		line 321 in file "Lab4.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;		None
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  i               2    0[COMRAM] int 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6656 ;;      Params:         0       0       0       0       0       0       0       0       0
  6657 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6659 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6660 ;;Total ram usage:        2 bytes
  6661 ;; Hardware stack levels used: 1
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_ISR
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text45
  6670   0020C2                     __ptext45:
  6671                           	callstack 0
  6672   0020C2                     _Trasmitir:
  6673                           	callstack 24
  6674                           
  6675                           ;Lab4.c: 322: int i;;Lab4.c: 323: for (i = 0; buffer[i] != '\0'; i++) {
  6676                           
  6677                           ;incstack = 0
  6678   0020C2  0E00               	movlw	0
  6679   0020C4  6E02               	movwf	(Trasmitir@i+1)^0,c
  6680   0020C6  0E00               	movlw	0
  6681   0020C8  6E01               	movwf	Trasmitir@i^0,c
  6682   0020CA  D00A               	goto	i2l3823
  6683   0020CC                     i2l359:
  6684   0020CC  A2AC               	btfss	4012,1,c	;volatile
  6685   0020CE  D7FE               	goto	i2l359
  6686                           
  6687                           ;Lab4.c: 325: TXREG = buffer[i];
  6688   0020D0  5001               	movf	Trasmitir@i^0,w,c
  6689   0020D2  0F75               	addlw	low _buffer
  6690   0020D4  6ED9               	movwf	fsr2l,c
  6691   0020D6  6ADA               	clrf	fsr2h,c
  6692   0020D8  50DF               	movf	indf2,w,c
  6693   0020DA  6EAD               	movwf	173,c	;volatile
  6694   0020DC  4A01               	infsnz	Trasmitir@i^0,f,c
  6695   0020DE  2A02               	incf	(Trasmitir@i+1)^0,f,c
  6696   0020E0                     i2l3823:
  6697   0020E0  5001               	movf	Trasmitir@i^0,w,c
  6698   0020E2  0F75               	addlw	low _buffer
  6699   0020E4  6ED9               	movwf	fsr2l,c
  6700   0020E6  6ADA               	clrf	fsr2h,c
  6701   0020E8  50DF               	movf	indf2,w,c
  6702   0020EA  A4D8               	btfss	status,2,c
  6703   0020EC  D7EF               	goto	i2l359
  6704                           
  6705                           ;Lab4.c: 326: };Lab4.c: 327: TXREG = '\n';
  6706   0020EE  0E0A               	movlw	10
  6707   0020F0  6EAD               	movwf	173,c	;volatile
  6708   0020F2  0012               	return		;funcret
  6709   0020F4                     __end_of_Trasmitir:
  6710                           	callstack 0
  6711                           
  6712 ;; *************** function _Terminar *****************
  6713 ;; Defined at:
  6714 ;;		line 316 in file "Lab4.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6723 ;; Tracked objects:
  6724 ;;		On entry : 3F/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6731 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6732 ;;Total ram usage:        0 bytes
  6733 ;; Hardware stack levels used: 1
  6734 ;; Hardware stack levels required when called: 4
  6735 ;; This function calls:
  6736 ;;		i2_escenario1
  6737 ;;		i2_vaciar
  6738 ;; This function is called by:
  6739 ;;		_ISR
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text46
  6744   0022E4                     __ptext46:
  6745                           	callstack 0
  6746   0022E4                     _Terminar:
  6747                           	callstack 20
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;Lab4.c: 317: vaciar();
  6751                           
  6752                           ;incstack = 0
  6753   0022E4  EC5F  F00F         	call	i2_vaciar	;wreg free
  6754                           
  6755                           ;Lab4.c: 318: escenario1();
  6756   0022E8  ECD9  F00E         	call	i2_escenario1	;wreg free
  6757   0022EC  0012               	return		;funcret
  6758   0022EE                     __end_of_Terminar:
  6759                           	callstack 0
  6760                           
  6761 ;; *************** function i2_vaciar *****************
  6762 ;; Defined at:
  6763 ;;		line 294 in file "Lab4.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;		None
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;		None
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  1    wreg      void 
  6770 ;; Registers used:
  6771 ;;		wreg, status,2, status,0
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6777 ;;      Params:         0       0       0       0       0       0       0       0       0
  6778 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6780 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6781 ;;Total ram usage:        0 bytes
  6782 ;; Hardware stack levels used: 1
  6783 ;; This function calls:
  6784 ;;		Nothing
  6785 ;; This function is called by:
  6786 ;;		_Terminar
  6787 ;;		i2_ContarReal
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           	psect	text47
  6792   001EBE                     __ptext47:
  6793                           	callstack 0
  6794   001EBE                     i2_vaciar:
  6795                           	callstack 22
  6796                           
  6797                           ;Lab4.c: 295: unidad = 0;
  6798                           
  6799                           ;incstack = 0
  6800   001EBE  0E00               	movlw	0
  6801   001EC0  6E3F               	movwf	(_unidad+1)^0,c
  6802   001EC2  0E00               	movlw	0
  6803   001EC4  6E3E               	movwf	_unidad^0,c
  6804                           
  6805                           ;Lab4.c: 296: unidad = 0;
  6806   001EC6  0E00               	movlw	0
  6807   001EC8  6E3F               	movwf	(_unidad+1)^0,c
  6808   001ECA  0E00               	movlw	0
  6809   001ECC  6E3E               	movwf	_unidad^0,c
  6810                           
  6811                           ;Lab4.c: 297: cantidadRestaUnidad = 0b00110000 + unidad;
  6812   001ECE  0E30               	movlw	48
  6813   001ED0  243E               	addwf	_unidad^0,w,c
  6814   001ED2  6E36               	movwf	_cantidadRestaUnidad^0,c
  6815   001ED4  0E00               	movlw	0
  6816   001ED6  203F               	addwfc	(_unidad+1)^0,w,c
  6817   001ED8  6E37               	movwf	(_cantidadRestaUnidad+1)^0,c
  6818                           
  6819                           ;Lab4.c: 298: cantidadRestaDecena = 0b00110000 + unidad;
  6820   001EDA  0E30               	movlw	48
  6821   001EDC  243E               	addwf	_unidad^0,w,c
  6822   001EDE  6E34               	movwf	_cantidadRestaDecena^0,c
  6823   001EE0  0E00               	movlw	0
  6824   001EE2  203F               	addwfc	(_unidad+1)^0,w,c
  6825   001EE4  6E35               	movwf	(_cantidadRestaDecena+1)^0,c
  6826                           
  6827                           ;Lab4.c: 299: LATD = 0;
  6828   001EE6  0E00               	movlw	0
  6829   001EE8  6E8C               	movwf	140,c	;volatile
  6830                           
  6831                           ;Lab4.c: 300: LATE = color[0];
  6832   001EEA  C060  FF8D         	movff	_color,3981	;volatile
  6833                           
  6834                           ;Lab4.c: 301: contador = 0;
  6835   001EEE  0E00               	movlw	0
  6836   001EF0  6E3B               	movwf	(_contador+1)^0,c
  6837   001EF2  0E00               	movlw	0
  6838   001EF4  6E3A               	movwf	_contador^0,c
  6839                           
  6840                           ;Lab4.c: 302: digito = 1;
  6841   001EF6  0E00               	movlw	0
  6842   001EF8  6E46               	movwf	(_digito+1)^0,c
  6843   001EFA  0E01               	movlw	1
  6844   001EFC  6E45               	movwf	_digito^0,c
  6845   001EFE  0012               	return		;funcret
  6846   001F00                     __end_ofi2_vaciar:
  6847                           	callstack 0
  6848                           
  6849 ;; *************** function i2_escenario1 *****************
  6850 ;; Defined at:
  6851 ;;		line 181 in file "Lab4.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;		None
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;		None
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  1    wreg      void 
  6858 ;; Registers used:
  6859 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6865 ;;      Params:         0       0       0       0       0       0       0       0       0
  6866 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6868 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6869 ;;Total ram usage:        0 bytes
  6870 ;; Hardware stack levels used: 1
  6871 ;; Hardware stack levels required when called: 3
  6872 ;; This function calls:
  6873 ;;		i2_Lcd_Blink
  6874 ;;		i2_Lcd_Clear
  6875 ;;		i2_Lcd_Set_Cursor
  6876 ;;		i2_Lcd_Write_Char
  6877 ;;		i2_Lcd_Write_String
  6878 ;; This function is called by:
  6879 ;;		_Terminar
  6880 ;;		_okmenu
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884                           	psect	text48
  6885   001DB2                     __ptext48:
  6886                           	callstack 0
  6887   001DB2                     i2_escenario1:
  6888                           	callstack 20
  6889                           
  6890                           ;Lab4.c: 182: menu = 1;
  6891                           
  6892                           ;incstack = 0
  6893   001DB2  0E00               	movlw	0
  6894   001DB4  6E48               	movwf	(_menu+1)^0,c
  6895   001DB6  0E01               	movlw	1
  6896   001DB8  6E47               	movwf	_menu^0,c
  6897                           
  6898                           ;Lab4.c: 183: Lcd_Clear();
  6899   001DBA  EC65  F011         	call	i2_Lcd_Clear	;wreg free
  6900                           
  6901                           ;Lab4.c: 184: Lcd_Set_Cursor(1, 1);
  6902   001DBE  0E01               	movlw	1
  6903   001DC0  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6904   001DC2  0E01               	movlw	1
  6905   001DC4  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  6906                           
  6907                           ;Lab4.c: 185: Lcd_Write_String("Piezas a contar:");
  6908   001DC8  0E63               	movlw	low STR_5
  6909   001DCA  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6910   001DCC  EC9F  F00F         	call	i2_Lcd_Write_String	;wreg free
  6911                           
  6912                           ;Lab4.c: 186: Lcd_Set_Cursor(2, 9);
  6913   001DD0  0E09               	movlw	9
  6914   001DD2  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6915   001DD4  0E02               	movlw	2
  6916   001DD6  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  6917                           
  6918                           ;Lab4.c: 187: Lcd_Write_String("A:ok B:");
  6919   001DDA  0EC4               	movlw	low STR_6
  6920   001DDC  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6921   001DDE  EC9F  F00F         	call	i2_Lcd_Write_String	;wreg free
  6922                           
  6923                           ;Lab4.c: 188: Lcd_Write_Char(0b01111111);
  6924   001DE2  0E7F               	movlw	127
  6925   001DE4  ECDA  F00F         	call	i2_Lcd_Write_Char
  6926                           
  6927                           ;Lab4.c: 189: Lcd_Set_Cursor(2, 1);
  6928   001DE8  0E01               	movlw	1
  6929   001DEA  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  6930   001DEC  0E02               	movlw	2
  6931   001DEE  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  6932                           
  6933                           ;Lab4.c: 190: Lcd_Blink();
  6934   001DF2  EC57  F011         	call	i2_Lcd_Blink	;wreg free
  6935   001DF6  0012               	return		;funcret
  6936   001DF8                     __end_ofi2_escenario1:
  6937                           	callstack 0
  6938                           
  6939 ;; *************** function i2_Lcd_Blink *****************
  6940 ;; Defined at:
  6941 ;;		line 124 in file "lcd.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;		None
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;		None
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  1    wreg      void 
  6948 ;; Registers used:
  6949 ;;		wreg, status,2, cstack
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6955 ;;      Params:         0       0       0       0       0       0       0       0       0
  6956 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6958 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6959 ;;Total ram usage:        0 bytes
  6960 ;; Hardware stack levels used: 1
  6961 ;; Hardware stack levels required when called: 2
  6962 ;; This function calls:
  6963 ;;		i2_Lcd_Cmd
  6964 ;; This function is called by:
  6965 ;;		i2_escenario1
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text49
  6970   0022AE                     __ptext49:
  6971                           	callstack 0
  6972   0022AE                     i2_Lcd_Blink:
  6973                           	callstack 20
  6974                           
  6975                           ;lcd.c: 126: Lcd_Cmd(0x00);
  6976                           
  6977                           ;incstack = 0
  6978   0022AE  0E00               	movlw	0
  6979   0022B0  EC15  F011         	call	i2_Lcd_Cmd
  6980                           
  6981                           ;lcd.c: 127: Lcd_Cmd(0x0F);
  6982   0022B4  0E0F               	movlw	15
  6983   0022B6  EC15  F011         	call	i2_Lcd_Cmd
  6984   0022BA  0012               	return		;funcret
  6985   0022BC                     __end_ofi2_Lcd_Blink:
  6986                           	callstack 0
  6987                           
  6988 ;; *************** function _Reiniciar *****************
  6989 ;; Defined at:
  6990 ;;		line 305 in file "Lab4.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;		None
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;		None
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  1    wreg      void 
  6997 ;; Registers used:
  6998 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6999 ;; Tracked objects:
  7000 ;;		On entry : 3F/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7004 ;;      Params:         0       0       0       0       0       0       0       0       0
  7005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7007 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7008 ;;Total ram usage:        0 bytes
  7009 ;; Hardware stack levels used: 1
  7010 ;; Hardware stack levels required when called: 4
  7011 ;; This function calls:
  7012 ;;		i2_escenario2
  7013 ;; This function is called by:
  7014 ;;		_ISR
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text50
  7019   002058                     __ptext50:
  7020                           	callstack 0
  7021   002058                     _Reiniciar:
  7022                           	callstack 20
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;Lab4.c: 307: cantidadRestaUnidad = 0b00110000 + unidad;
  7026                           
  7027                           ;incstack = 0
  7028   002058  0E30               	movlw	48
  7029   00205A  243E               	addwf	_unidad^0,w,c
  7030   00205C  6E36               	movwf	_cantidadRestaUnidad^0,c
  7031   00205E  0E00               	movlw	0
  7032   002060  203F               	addwfc	(_unidad+1)^0,w,c
  7033   002062  6E37               	movwf	(_cantidadRestaUnidad+1)^0,c
  7034                           
  7035                           ;Lab4.c: 308: cantidadRestaDecena = 0b00110000 + decena;
  7036   002064  0E30               	movlw	48
  7037   002066  2440               	addwf	_decena^0,w,c
  7038   002068  6E34               	movwf	_cantidadRestaDecena^0,c
  7039   00206A  0E00               	movlw	0
  7040   00206C  2041               	addwfc	(_decena+1)^0,w,c
  7041   00206E  6E35               	movwf	(_cantidadRestaDecena+1)^0,c
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;Lab4.c: 309: LATD = 0;
  7045   002070  0E00               	movlw	0
  7046   002072  6E8C               	movwf	140,c	;volatile
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;Lab4.c: 310: LATE = color[0];
  7050   002074  C060  FF8D         	movff	_color,3981	;volatile
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;Lab4.c: 311: contador = 0;
  7054   002078  0E00               	movlw	0
  7055   00207A  6E3B               	movwf	(_contador+1)^0,c
  7056   00207C  0E00               	movlw	0
  7057   00207E  6E3A               	movwf	_contador^0,c
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;Lab4.c: 312: digito = 1;
  7061   002080  0E00               	movlw	0
  7062   002082  6E46               	movwf	(_digito+1)^0,c
  7063   002084  0E01               	movlw	1
  7064   002086  6E45               	movwf	_digito^0,c
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;Lab4.c: 313: escenario2();
  7068   002088  EC10  F00C         	call	i2_escenario2	;wreg free
  7069   00208C  0012               	return		;funcret
  7070   00208E                     __end_of_Reiniciar:
  7071                           	callstack 0
  7072                           
  7073 ;; *************** function i2_escenario2 *****************
  7074 ;; Defined at:
  7075 ;;		line 193 in file "Lab4.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;		None
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;		None
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  1    wreg      void 
  7082 ;; Registers used:
  7083 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7084 ;; Tracked objects:
  7085 ;;		On entry : 3F/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7089 ;;      Params:         0       0       0       0       0       0       0       0       0
  7090 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7092 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7093 ;;Total ram usage:        0 bytes
  7094 ;; Hardware stack levels used: 1
  7095 ;; Hardware stack levels required when called: 3
  7096 ;; This function calls:
  7097 ;;		i2_Lcd_Clear
  7098 ;;		i2_Lcd_NoBlink
  7099 ;;		i2_Lcd_Set_Cursor
  7100 ;;		i2_Lcd_Write_Char
  7101 ;;		i2_Lcd_Write_String
  7102 ;; This function is called by:
  7103 ;;		_Reiniciar
  7104 ;;		i2_ContarReal
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text51
  7109   001820                     __ptext51:
  7110                           	callstack 0
  7111   001820                     i2_escenario2:
  7112                           	callstack 19
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;Lab4.c: 194: menu = 2;
  7116                           
  7117                           ;incstack = 0
  7118   001820  0E00               	movlw	0
  7119   001822  6E48               	movwf	(_menu+1)^0,c
  7120   001824  0E02               	movlw	2
  7121   001826  6E47               	movwf	_menu^0,c
  7122                           
  7123                           ;Lab4.c: 195: mostrar = 1;
  7124   001828  0E00               	movlw	0
  7125   00182A  6FAE               	movwf	(_mostrar+1)& (0+255),b
  7126   00182C  0E01               	movlw	1
  7127   00182E  6FAD               	movwf	_mostrar& (0+255),b
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;Lab4.c: 196: Lcd_Clear();
  7131   001830  EC65  F011         	call	i2_Lcd_Clear	;wreg free
  7132                           
  7133                           ;Lab4.c: 197: Lcd_NoBlink();
  7134   001834  EC5E  F011         	call	i2_Lcd_NoBlink	;wreg free
  7135                           
  7136                           ;Lab4.c: 198: Lcd_Set_Cursor(1, 1);
  7137   001838  0E01               	movlw	1
  7138   00183A  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  7139   00183C  0E01               	movlw	1
  7140   00183E  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  7141                           
  7142                           ;Lab4.c: 199: Lcd_Write_String("Faltante:");
  7143   001842  0EA6               	movlw	low STR_7
  7144   001844  6E05               	movwf	i2Lcd_Write_String@a^0,c
  7145   001846  EC9F  F00F         	call	i2_Lcd_Write_String	;wreg free
  7146                           
  7147                           ;Lab4.c: 200: Lcd_Write_Char(cantidadRestaDecena);
  7148   00184A  5034               	movf	_cantidadRestaDecena^0,w,c
  7149   00184C  ECDA  F00F         	call	i2_Lcd_Write_Char
  7150                           
  7151                           ;Lab4.c: 201: Lcd_Write_Char(cantidadRestaUnidad);
  7152   001850  5036               	movf	_cantidadRestaUnidad^0,w,c
  7153   001852  ECDA  F00F         	call	i2_Lcd_Write_Char
  7154                           
  7155                           ;Lab4.c: 202: Lcd_Set_Cursor(1, 14);
  7156   001856  0E0E               	movlw	14
  7157   001858  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  7158   00185A  0E01               	movlw	1
  7159   00185C  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  7160                           
  7161                           ;Lab4.c: 203: Lcd_Write_String("C=");
  7162   001860  0ED5               	movlw	low STR_8
  7163   001862  6E05               	movwf	i2Lcd_Write_String@a^0,c
  7164   001864  EC9F  F00F         	call	i2_Lcd_Write_String	;wreg free
  7165                           
  7166                           ;Lab4.c: 204: Lcd_Write_Char(4);
  7167   001868  0E04               	movlw	4
  7168   00186A  ECDA  F00F         	call	i2_Lcd_Write_Char
  7169                           
  7170                           ;Lab4.c: 205: Lcd_Set_Cursor(2, 1);
  7171   00186E  0E01               	movlw	1
  7172   001870  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  7173   001872  0E02               	movlw	2
  7174   001874  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  7175                           
  7176                           ;Lab4.c: 206: Lcd_Write_String("Objetivo:");
  7177   001878  0EB0               	movlw	low STR_9
  7178   00187A  6E05               	movwf	i2Lcd_Write_String@a^0,c
  7179   00187C  EC9F  F00F         	call	i2_Lcd_Write_String	;wreg free
  7180                           
  7181                           ;Lab4.c: 207: Lcd_Write_Char(0b00110000 + decena);
  7182   001880  5040               	movf	_decena^0,w,c
  7183   001882  0F30               	addlw	48
  7184   001884  ECDA  F00F         	call	i2_Lcd_Write_Char
  7185                           
  7186                           ;Lab4.c: 208: Lcd_Write_Char(0b00110000 + unidad);
  7187   001888  503E               	movf	_unidad^0,w,c
  7188   00188A  0F30               	addlw	48
  7189   00188C  ECDA  F00F         	call	i2_Lcd_Write_Char
  7190                           
  7191                           ;Lab4.c: 209: Lcd_Set_Cursor(2, 14);
  7192   001890  0E0E               	movlw	14
  7193   001892  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  7194   001894  0E02               	movlw	2
  7195   001896  EC2E  F00B         	call	i2_Lcd_Set_Cursor
  7196                           
  7197                           ;Lab4.c: 210: Lcd_Write_String("#=X");
  7198   00189A  0ED1               	movlw	low STR_10
  7199   00189C  6E05               	movwf	i2Lcd_Write_String@a^0,c
  7200   00189E  EC9F  F00F         	call	i2_Lcd_Write_String	;wreg free
  7201                           
  7202                           ;Lab4.c: 211: Lcd_Write_Char(3);
  7203   0018A2  0E03               	movlw	3
  7204   0018A4  ECDA  F00F         	call	i2_Lcd_Write_Char
  7205   0018A8  0012               	return		;funcret
  7206   0018AA                     __end_ofi2_escenario2:
  7207                           	callstack 0
  7208                           
  7209 ;; *************** function i2_Lcd_Write_String *****************
  7210 ;; Defined at:
  7211 ;;		line 105 in file "lcd.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  a               1    4[COMRAM] PTR const unsigned char 
  7214 ;;		 -> STR_14(12), STR_13(10), STR_12(5), STR_11(18), 
  7215 ;;		 -> STR_10(4), STR_9(10), STR_8(3), STR_7(10), 
  7216 ;;		 -> STR_6(8), STR_5(17), STR_3(12), STR_2(11), 
  7217 ;;		 -> STR_1(15), 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  i               2    6[COMRAM] int 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  1    wreg      void 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7229 ;;      Params:         1       0       0       0       0       0       0       0       0
  7230 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7231 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7232 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7233 ;;Total ram usage:        4 bytes
  7234 ;; Hardware stack levels used: 1
  7235 ;; Hardware stack levels required when called: 2
  7236 ;; This function calls:
  7237 ;;		i2_Lcd_Write_Char
  7238 ;; This function is called by:
  7239 ;;		_escenario4
  7240 ;;		i2_escenario1
  7241 ;;		i2_escenario2
  7242 ;;		i2_escenario3
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text52
  7247   001F3E                     __ptext52:
  7248                           	callstack 0
  7249   001F3E                     i2_Lcd_Write_String:
  7250                           	callstack 20
  7251                           
  7252                           ;lcd.c: 107: int i;;lcd.c: 108: for(i=0;a[i]!='\0';i++)
  7253                           
  7254                           ;incstack = 0
  7255   001F3E  0E00               	movlw	0
  7256   001F40  6E08               	movwf	(i2Lcd_Write_String@i+1)^0,c
  7257   001F42  0E00               	movlw	0
  7258   001F44  6E07               	movwf	i2Lcd_Write_String@i^0,c
  7259   001F46  D00D               	goto	i2l2795
  7260   001F48                     i2l2791:
  7261                           
  7262                           ;lcd.c: 109: Lcd_Write_Char(a[i]);
  7263   001F48  5005               	movf	i2Lcd_Write_String@a^0,w,c
  7264   001F4A  2407               	addwf	i2Lcd_Write_String@i^0,w,c
  7265   001F4C  6E06               	movwf	??i2_Lcd_Write_String^0,c
  7266   001F4E  C006  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  7267   001F52                     	if	1	;There is more than 1 active tblptr byte
  7268   001F52  0E08               	movlw	high __smallconst
  7269   001F54  6EF7               	movwf	tblptrh,c
  7270   001F56                     	endif
  7271   001F56                     	if	0	;tblptru may be non-zero
  7272   001F56                     	endif
  7273   001F56                     	if	0	;tblptru may be non-zero
  7274   001F56                     	endif
  7275   001F56  0008               	tblrd		*
  7276   001F58  50F5               	movf	tablat,w,c
  7277   001F5A  ECDA  F00F         	call	i2_Lcd_Write_Char
  7278   001F5E  4A07               	infsnz	i2Lcd_Write_String@i^0,f,c
  7279   001F60  2A08               	incf	(i2Lcd_Write_String@i+1)^0,f,c
  7280   001F62                     i2l2795:
  7281   001F62  5005               	movf	i2Lcd_Write_String@a^0,w,c
  7282   001F64  2407               	addwf	i2Lcd_Write_String@i^0,w,c
  7283   001F66  6E06               	movwf	??i2_Lcd_Write_String^0,c
  7284   001F68  C006  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  7285   001F6C                     	if	1	;There is more than 1 active tblptr byte
  7286   001F6C  0E08               	movlw	high __smallconst
  7287   001F6E  6EF7               	movwf	tblptrh,c
  7288   001F70                     	endif
  7289   001F70                     	if	0	;tblptru may be non-zero
  7290   001F70                     	endif
  7291   001F70                     	if	0	;tblptru may be non-zero
  7292   001F70                     	endif
  7293   001F70  0008               	tblrd		*
  7294   001F72  50F5               	movf	tablat,w,c
  7295   001F74  0900               	iorlw	0
  7296   001F76  B4D8               	btfsc	status,2,c
  7297   001F78  0012               	return	
  7298   001F7A  D7E6               	goto	i2l2791
  7299   001F7C                     __end_ofi2_Lcd_Write_String:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function i2_Lcd_Set_Cursor *****************
  7303 ;; Defined at:
  7304 ;;		line 27 in file "lcd.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  a               1    wreg     unsigned char 
  7307 ;;  b               1    3[COMRAM] unsigned char 
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;  a               1    4[COMRAM] unsigned char 
  7310 ;;  temp            1    7[COMRAM] unsigned char 
  7311 ;;  y               1    6[COMRAM] unsigned char 
  7312 ;;  z               1    5[COMRAM] unsigned char 
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  1    wreg      void 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0, cstack
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7322 ;;      Params:         1       0       0       0       0       0       0       0       0
  7323 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7325 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7326 ;;Total ram usage:        5 bytes
  7327 ;; Hardware stack levels used: 1
  7328 ;; Hardware stack levels required when called: 2
  7329 ;; This function calls:
  7330 ;;		i2_Lcd_Cmd
  7331 ;; This function is called by:
  7332 ;;		_escenario4
  7333 ;;		_borrarDigito
  7334 ;;		i2_escenario1
  7335 ;;		i2_escenario2
  7336 ;;		i2_escenario3
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           	psect	text53
  7341   00165C                     __ptext53:
  7342                           	callstack 0
  7343   00165C                     i2_Lcd_Set_Cursor:
  7344                           	callstack 20
  7345                           
  7346                           ;incstack = 0
  7347                           ;i2Lcd_Set_Cursor@a stored from wreg
  7348   00165C  6E05               	movwf	i2Lcd_Set_Cursor@a^0,c
  7349                           
  7350                           ;lcd.c: 29: char temp,z,y;;lcd.c: 30: if(a == 1)
  7351   00165E  0405               	decf	i2Lcd_Set_Cursor@a^0,w,c
  7352   001660  A4D8               	btfss	status,2,c
  7353   001662  D010               	goto	i2l2765
  7354                           
  7355                           ;lcd.c: 31: {;lcd.c: 32: temp = 0x80 + b - 1;
  7356   001664  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  7357   001666  0F7F               	addlw	127
  7358   001668  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  7359                           
  7360                           ;lcd.c: 33: z = temp>>4;
  7361   00166A  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  7362   00166C  0B0F               	andlw	15
  7363   00166E  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  7364                           
  7365                           ;lcd.c: 34: y = temp & 0x0F;
  7366   001670  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  7367   001672  0B0F               	andlw	15
  7368   001674  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  7369                           
  7370                           ;lcd.c: 35: Lcd_Cmd(z);
  7371   001676  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  7372   001678  EC15  F011         	call	i2_Lcd_Cmd
  7373                           
  7374                           ;lcd.c: 36: Lcd_Cmd(y);
  7375   00167C  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  7376   00167E  EC15  F011         	call	i2_Lcd_Cmd
  7377                           
  7378                           ;lcd.c: 37: }
  7379   001682  0012               	return	
  7380   001684                     i2l2765:
  7381                           
  7382                           ;lcd.c: 38: else if(a == 2)
  7383   001684  0E02               	movlw	2
  7384   001686  1805               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  7385   001688  A4D8               	btfss	status,2,c
  7386   00168A  D010               	goto	i2l2773
  7387                           
  7388                           ;lcd.c: 39: {;lcd.c: 40: temp = 0xC0 + b - 1;
  7389   00168C  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  7390   00168E  0FBF               	addlw	191
  7391   001690  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  7392                           
  7393                           ;lcd.c: 41: z = temp>>4;
  7394   001692  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  7395   001694  0B0F               	andlw	15
  7396   001696  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  7397                           
  7398                           ;lcd.c: 42: y = temp & 0x0F;
  7399   001698  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  7400   00169A  0B0F               	andlw	15
  7401   00169C  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  7402                           
  7403                           ;lcd.c: 43: Lcd_Cmd(z);
  7404   00169E  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  7405   0016A0  EC15  F011         	call	i2_Lcd_Cmd
  7406                           
  7407                           ;lcd.c: 44: Lcd_Cmd(y);
  7408   0016A4  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  7409   0016A6  EC15  F011         	call	i2_Lcd_Cmd
  7410                           
  7411                           ;lcd.c: 45: }
  7412   0016AA  0012               	return	
  7413   0016AC                     i2l2773:
  7414                           
  7415                           ;lcd.c: 46: else if(a == 3)
  7416   0016AC  0E03               	movlw	3
  7417   0016AE  1805               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  7418   0016B0  A4D8               	btfss	status,2,c
  7419   0016B2  D010               	goto	i2l2781
  7420                           
  7421                           ;lcd.c: 47: {;lcd.c: 48: temp = 0x94 + b - 1;
  7422   0016B4  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  7423   0016B6  0F93               	addlw	147
  7424   0016B8  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  7425                           
  7426                           ;lcd.c: 49: z = temp>>4;
  7427   0016BA  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  7428   0016BC  0B0F               	andlw	15
  7429   0016BE  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  7430                           
  7431                           ;lcd.c: 50: y = temp & 0x0F;
  7432   0016C0  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  7433   0016C2  0B0F               	andlw	15
  7434   0016C4  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  7435                           
  7436                           ;lcd.c: 51: Lcd_Cmd(z);
  7437   0016C6  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  7438   0016C8  EC15  F011         	call	i2_Lcd_Cmd
  7439                           
  7440                           ;lcd.c: 52: Lcd_Cmd(y);
  7441   0016CC  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  7442   0016CE  EC15  F011         	call	i2_Lcd_Cmd
  7443                           
  7444                           ;lcd.c: 53: }
  7445   0016D2  0012               	return	
  7446   0016D4                     i2l2781:
  7447                           
  7448                           ;lcd.c: 54: else if(a == 4)
  7449   0016D4  0E04               	movlw	4
  7450   0016D6  1805               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  7451   0016D8  A4D8               	btfss	status,2,c
  7452   0016DA  0012               	return	
  7453                           
  7454                           ;lcd.c: 55: {;lcd.c: 56: temp = 0xD4 + b - 1;
  7455   0016DC  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  7456   0016DE  0FD3               	addlw	211
  7457   0016E0  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  7458                           
  7459                           ;lcd.c: 57: z = temp>>4;
  7460   0016E2  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  7461   0016E4  0B0F               	andlw	15
  7462   0016E6  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  7463                           
  7464                           ;lcd.c: 58: y = temp & 0x0F;
  7465   0016E8  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  7466   0016EA  0B0F               	andlw	15
  7467   0016EC  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  7468                           
  7469                           ;lcd.c: 59: Lcd_Cmd(z);
  7470   0016EE  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  7471   0016F0  EC15  F011         	call	i2_Lcd_Cmd
  7472                           
  7473                           ;lcd.c: 60: Lcd_Cmd(y);
  7474   0016F4  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  7475   0016F6  EC15  F011         	call	i2_Lcd_Cmd
  7476   0016FA  0012               	return	
  7477   0016FC                     __end_ofi2_Lcd_Set_Cursor:
  7478                           	callstack 0
  7479                           
  7480 ;; *************** function i2_Lcd_NoBlink *****************
  7481 ;; Defined at:
  7482 ;;		line 130 in file "lcd.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;		None
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;		None
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  1    wreg      void 
  7489 ;; Registers used:
  7490 ;;		wreg, status,2, cstack
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7496 ;;      Params:         0       0       0       0       0       0       0       0       0
  7497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7499 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7500 ;;Total ram usage:        0 bytes
  7501 ;; Hardware stack levels used: 1
  7502 ;; Hardware stack levels required when called: 2
  7503 ;; This function calls:
  7504 ;;		i2_Lcd_Cmd
  7505 ;; This function is called by:
  7506 ;;		_escenario4
  7507 ;;		i2_escenario2
  7508 ;;		i2_escenario3
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           	psect	text54
  7513   0022BC                     __ptext54:
  7514                           	callstack 0
  7515   0022BC                     i2_Lcd_NoBlink:
  7516                           	callstack 19
  7517                           
  7518                           ;lcd.c: 132: Lcd_Cmd(0x00);
  7519                           
  7520                           ;incstack = 0
  7521   0022BC  0E00               	movlw	0
  7522   0022BE  EC15  F011         	call	i2_Lcd_Cmd
  7523                           
  7524                           ;lcd.c: 133: Lcd_Cmd(0x0C);
  7525   0022C2  0E0C               	movlw	12
  7526   0022C4  EC15  F011         	call	i2_Lcd_Cmd
  7527   0022C8  0012               	return		;funcret
  7528   0022CA                     __end_ofi2_Lcd_NoBlink:
  7529                           	callstack 0
  7530                           
  7531 ;; *************** function i2_Lcd_Clear *****************
  7532 ;; Defined at:
  7533 ;;		line 21 in file "lcd.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;		None
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;		None
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  1    wreg      void 
  7540 ;; Registers used:
  7541 ;;		wreg, status,2, cstack
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7547 ;;      Params:         0       0       0       0       0       0       0       0       0
  7548 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7550 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7551 ;;Total ram usage:        0 bytes
  7552 ;; Hardware stack levels used: 1
  7553 ;; Hardware stack levels required when called: 2
  7554 ;; This function calls:
  7555 ;;		i2_Lcd_Cmd
  7556 ;; This function is called by:
  7557 ;;		_escenario4
  7558 ;;		i2_escenario1
  7559 ;;		i2_escenario2
  7560 ;;		i2_escenario3
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           	psect	text55
  7565   0022CA                     __ptext55:
  7566                           	callstack 0
  7567   0022CA                     i2_Lcd_Clear:
  7568                           	callstack 20
  7569                           
  7570                           ;lcd.c: 23: Lcd_Cmd(0);
  7571                           
  7572                           ;incstack = 0
  7573   0022CA  0E00               	movlw	0
  7574   0022CC  EC15  F011         	call	i2_Lcd_Cmd
  7575                           
  7576                           ;lcd.c: 24: Lcd_Cmd(1);
  7577   0022D0  0E01               	movlw	1
  7578   0022D2  EC15  F011         	call	i2_Lcd_Cmd
  7579   0022D6  0012               	return		;funcret
  7580   0022D8                     __end_ofi2_Lcd_Clear:
  7581                           	callstack 0
  7582                           
  7583 ;; *************** function i2_Lcd_Cmd *****************
  7584 ;; Defined at:
  7585 ;;		line 12 in file "lcd.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;  a               1    wreg     unsigned char 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  a               1    2[COMRAM] unsigned char 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  1    wreg      void 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, cstack
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7599 ;;      Params:         0       0       0       0       0       0       0       0       0
  7600 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7601 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7602 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7603 ;;Total ram usage:        2 bytes
  7604 ;; Hardware stack levels used: 1
  7605 ;; Hardware stack levels required when called: 1
  7606 ;; This function calls:
  7607 ;;		i2_Lcd_Port
  7608 ;; This function is called by:
  7609 ;;		i2_Lcd_Clear
  7610 ;;		i2_Lcd_Set_Cursor
  7611 ;;		i2_Lcd_Blink
  7612 ;;		i2_Lcd_NoBlink
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text56
  7617   00222A                     __ptext56:
  7618                           	callstack 0
  7619   00222A                     i2_Lcd_Cmd:
  7620                           	callstack 20
  7621                           
  7622                           ;incstack = 0
  7623                           ;i2Lcd_Cmd@a stored from wreg
  7624   00222A  6E03               	movwf	i2Lcd_Cmd@a^0,c
  7625                           
  7626                           ;lcd.c: 14: LATAbits.LA3 = 0;
  7627   00222C  9689               	bcf	137,3,c	;volatile
  7628                           
  7629                           ;lcd.c: 15: Lcd_Port(a);
  7630   00222E  5003               	movf	i2Lcd_Cmd@a^0,w,c
  7631   002230  EC90  F010         	call	i2_Lcd_Port
  7632                           
  7633                           ;lcd.c: 16: LATAbits.LA4 = 1;
  7634   002234  8889               	bsf	137,4,c	;volatile
  7635                           
  7636                           ;lcd.c: 17: _delay((unsigned long)((4)*(8000000/4000.0)));
  7637   002236  0E0B               	movlw	11
  7638   002238  6E02               	movwf	??i2_Lcd_Cmd^0,c
  7639   00223A  0E62               	movlw	98
  7640   00223C                     i2u424_47:
  7641   00223C  2EE8               	decfsz	wreg,f,c
  7642   00223E  D7FE               	bra	i2u424_47
  7643   002240  2E02               	decfsz	??i2_Lcd_Cmd^0,f,c
  7644   002242  D7FC               	bra	i2u424_47
  7645   002244  D000               	nop2	
  7646                           
  7647                           ;lcd.c: 18: LATAbits.LA4 = 0;
  7648   002246  9889               	bcf	137,4,c	;volatile
  7649   002248  0012               	return		;funcret
  7650   00224A                     __end_ofi2_Lcd_Cmd:
  7651                           	callstack 0
  7652                           
  7653 ;; *************** function _PiezaAContar *****************
  7654 ;; Defined at:
  7655 ;;		line 247 in file "Lab4.c"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;  a               1    wreg     unsigned char 
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;  a               1    5[COMRAM] unsigned char 
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  1    wreg      void 
  7662 ;; Registers used:
  7663 ;;		wreg, status,2, status,0, cstack
  7664 ;; Tracked objects:
  7665 ;;		On entry : 3F/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7669 ;;      Params:         0       0       0       0       0       0       0       0       0
  7670 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7671 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7672 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7673 ;;Total ram usage:        2 bytes
  7674 ;; Hardware stack levels used: 1
  7675 ;; Hardware stack levels required when called: 2
  7676 ;; This function calls:
  7677 ;;		i2_Lcd_Write_Char
  7678 ;; This function is called by:
  7679 ;;		_ISR
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text57
  7684   001C6C                     __ptext57:
  7685                           	callstack 0
  7686   001C6C                     _PiezaAContar:
  7687                           	callstack 22
  7688                           
  7689                           ;incstack = 0
  7690                           ;PiezaAContar@a stored from wreg
  7691   001C6C  6E06               	movwf	PiezaAContar@a^0,c
  7692                           
  7693                           ;Lab4.c: 249: if (digito == 1) {
  7694   001C6E  0445               	decf	_digito^0,w,c
  7695   001C70  1046               	iorwf	(_digito+1)^0,w,c
  7696   001C72  A4D8               	btfss	status,2,c
  7697   001C74  D01A               	goto	i2l3779
  7698                           
  7699                           ;Lab4.c: 250: decena = a & 0x0f;
  7700   001C76  C006  F005         	movff	PiezaAContar@a,??_PiezaAContar
  7701   001C7A  0E0F               	movlw	15
  7702   001C7C  1605               	andwf	??_PiezaAContar^0,f,c
  7703   001C7E  5005               	movf	??_PiezaAContar^0,w,c
  7704   001C80  6E40               	movwf	_decena^0,c
  7705   001C82  6A41               	clrf	(_decena+1)^0,c
  7706                           
  7707                           ;Lab4.c: 251: if (decena >= 6) decena = 5;
  7708   001C84  BE41               	btfsc	(_decena+1)^0,7,c
  7709   001C86  D00A               	goto	i2l3775
  7710   001C88  5041               	movf	(_decena+1)^0,w,c
  7711   001C8A  E104               	bnz	i2u274_40
  7712   001C8C  0E06               	movlw	6
  7713   001C8E  5C40               	subwf	_decena^0,w,c
  7714   001C90  A0D8               	btfss	status,0,c
  7715   001C92  D004               	goto	i2l3775
  7716   001C94                     i2u274_40:
  7717   001C94  0E00               	movlw	0
  7718   001C96  6E41               	movwf	(_decena+1)^0,c
  7719   001C98  0E05               	movlw	5
  7720   001C9A  6E40               	movwf	_decena^0,c
  7721   001C9C                     i2l3775:
  7722                           
  7723                           ;Lab4.c: 252: Lcd_Write_Char(0b00110000 + decena);
  7724   001C9C  5040               	movf	_decena^0,w,c
  7725   001C9E  0F30               	addlw	48
  7726   001CA0  ECDA  F00F         	call	i2_Lcd_Write_Char
  7727   001CA4                     i2l3777:
  7728                           
  7729                           ;Lab4.c: 253: digito++;
  7730   001CA4  4A45               	infsnz	_digito^0,f,c
  7731   001CA6  2A46               	incf	(_digito+1)^0,f,c
  7732                           
  7733                           ;Lab4.c: 254: } else if (digito == 2) {
  7734   001CA8  0012               	return	
  7735   001CAA                     i2l3779:
  7736   001CAA  0E02               	movlw	2
  7737   001CAC  1845               	xorwf	_digito^0,w,c
  7738   001CAE  1046               	iorwf	(_digito+1)^0,w,c
  7739   001CB0  A4D8               	btfss	status,2,c
  7740   001CB2  0012               	return	
  7741                           
  7742                           ;Lab4.c: 255: unidad = a & 0x0f;
  7743   001CB4  C006  F005         	movff	PiezaAContar@a,??_PiezaAContar
  7744   001CB8  0E0F               	movlw	15
  7745   001CBA  1605               	andwf	??_PiezaAContar^0,f,c
  7746   001CBC  5005               	movf	??_PiezaAContar^0,w,c
  7747   001CBE  6E3E               	movwf	_unidad^0,c
  7748   001CC0  6A3F               	clrf	(_unidad+1)^0,c
  7749                           
  7750                           ;Lab4.c: 256: Lcd_Write_Char(0b00110000 + unidad);
  7751   001CC2  503E               	movf	_unidad^0,w,c
  7752   001CC4  0F30               	addlw	48
  7753   001CC6  ECDA  F00F         	call	i2_Lcd_Write_Char
  7754   001CCA  D7EC               	goto	i2l3777
  7755   001CCC                     __end_of_PiezaAContar:
  7756                           	callstack 0
  7757                           
  7758 ;; *************** function i2_Lcd_Write_Char *****************
  7759 ;; Defined at:
  7760 ;;		line 89 in file "lcd.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  a               1    wreg     unsigned char 
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;  a               1    3[COMRAM] unsigned char 
  7765 ;;  y               1    2[COMRAM] unsigned char 
  7766 ;;  temp            1    1[COMRAM] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      void 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7776 ;;      Params:         0       0       0       0       0       0       0       0       0
  7777 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7779 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7780 ;;Total ram usage:        3 bytes
  7781 ;; Hardware stack levels used: 1
  7782 ;; Hardware stack levels required when called: 1
  7783 ;; This function calls:
  7784 ;;		i2_Lcd_Port
  7785 ;; This function is called by:
  7786 ;;		_escenario4
  7787 ;;		_PiezaAContar
  7788 ;;		_borrarDigito
  7789 ;;		i2_Lcd_Write_String
  7790 ;;		i2_escenario1
  7791 ;;		i2_escenario2
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text58
  7796   001FB4                     __ptext58:
  7797                           	callstack 0
  7798   001FB4                     i2_Lcd_Write_Char:
  7799                           	callstack 20
  7800                           
  7801                           ;incstack = 0
  7802                           ;i2Lcd_Write_Char@a stored from wreg
  7803   001FB4  6E04               	movwf	i2Lcd_Write_Char@a^0,c
  7804                           
  7805                           ;lcd.c: 91: char temp,y;;lcd.c: 92: temp = a&0x0F;
  7806   001FB6  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  7807   001FB8  0B0F               	andlw	15
  7808   001FBA  6E02               	movwf	i2Lcd_Write_Char@temp^0,c
  7809                           
  7810                           ;lcd.c: 93: y = a&0xF0;
  7811   001FBC  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  7812   001FBE  0BF0               	andlw	240
  7813   001FC0  6E03               	movwf	i2Lcd_Write_Char@y^0,c
  7814                           
  7815                           ;lcd.c: 94: LATAbits.LA3 = 1;
  7816   001FC2  8689               	bsf	137,3,c	;volatile
  7817                           
  7818                           ;lcd.c: 95: Lcd_Port(y>>4);
  7819   001FC4  3803               	swapf	i2Lcd_Write_Char@y^0,w,c
  7820   001FC6  0B0F               	andlw	15
  7821   001FC8  EC90  F010         	call	i2_Lcd_Port
  7822                           
  7823                           ;lcd.c: 96: LATAbits.LA4 = 1;
  7824   001FCC  8889               	bsf	137,4,c	;volatile
  7825                           
  7826                           ;lcd.c: 97: _delay((unsigned long)((40)*(8000000/4000000.0)));
  7827   001FCE  0E1A               	movlw	26
  7828   001FD0                     i2u425_47:
  7829   001FD0  2EE8               	decfsz	wreg,f,c
  7830   001FD2  D7FE               	bra	i2u425_47
  7831   001FD4  D000               	nop2	
  7832                           
  7833                           ;lcd.c: 98: LATAbits.LA4 = 0;
  7834   001FD6  9889               	bcf	137,4,c	;volatile
  7835                           
  7836                           ;lcd.c: 99: Lcd_Port(temp);
  7837   001FD8  5002               	movf	i2Lcd_Write_Char@temp^0,w,c
  7838   001FDA  EC90  F010         	call	i2_Lcd_Port
  7839                           
  7840                           ;lcd.c: 100: LATAbits.LA4 = 1;
  7841   001FDE  8889               	bsf	137,4,c	;volatile
  7842                           
  7843                           ;lcd.c: 101: _delay((unsigned long)((40)*(8000000/4000000.0)));
  7844   001FE0  0E1A               	movlw	26
  7845   001FE2                     i2u426_47:
  7846   001FE2  2EE8               	decfsz	wreg,f,c
  7847   001FE4  D7FE               	bra	i2u426_47
  7848   001FE6  D000               	nop2	
  7849                           
  7850                           ;lcd.c: 102: LATAbits.LA4 = 0;
  7851   001FE8  9889               	bcf	137,4,c	;volatile
  7852   001FEA  0012               	return		;funcret
  7853   001FEC                     __end_ofi2_Lcd_Write_Char:
  7854                           	callstack 0
  7855                           
  7856 ;; *************** function i2_Lcd_Port *****************
  7857 ;; Defined at:
  7858 ;;		line 4 in file "lcd.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;  a               1    wreg     unsigned char 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;  a               1    0[COMRAM] unsigned char 
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      void 
  7865 ;; Registers used:
  7866 ;;		wreg
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7872 ;;      Params:         0       0       0       0       0       0       0       0       0
  7873 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7875 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7876 ;;Total ram usage:        1 bytes
  7877 ;; Hardware stack levels used: 1
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		i2_Lcd_Cmd
  7882 ;;		i2_Lcd_Write_Char
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           	psect	text59
  7887   002120                     __ptext59:
  7888                           	callstack 0
  7889   002120                     i2_Lcd_Port:
  7890                           	callstack 20
  7891                           
  7892                           ;incstack = 0
  7893                           ;i2Lcd_Port@a stored from wreg
  7894   002120  6E01               	movwf	i2Lcd_Port@a^0,c
  7895                           
  7896                           ;lcd.c: 6: (a & 1) ? (LATDbits.LD4 = 1) : (LATDbits.LD4 = 0);
  7897   002122  A001               	btfss	i2Lcd_Port@a^0,0,c
  7898   002124  D002               	goto	i2l14
  7899   002126  888C               	bsf	140,4,c	;volatile
  7900   002128  D001               	goto	i2l2667
  7901   00212A                     i2l14:
  7902   00212A  988C               	bcf	140,4,c	;volatile
  7903   00212C                     i2l2667:
  7904                           
  7905                           ;lcd.c: 7: (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  7906   00212C  A201               	btfss	i2Lcd_Port@a^0,1,c
  7907   00212E  D002               	goto	i2l18
  7908   002130  8A8C               	bsf	140,5,c	;volatile
  7909   002132  D001               	goto	i2l2671
  7910   002134                     i2l18:
  7911   002134  9A8C               	bcf	140,5,c	;volatile
  7912   002136                     i2l2671:
  7913                           
  7914                           ;lcd.c: 8: (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  7915   002136  A401               	btfss	i2Lcd_Port@a^0,2,c
  7916   002138  D002               	goto	i2l22
  7917   00213A  8C8C               	bsf	140,6,c	;volatile
  7918   00213C  D001               	goto	i2l2675
  7919   00213E                     i2l22:
  7920   00213E  9C8C               	bcf	140,6,c	;volatile
  7921   002140                     i2l2675:
  7922                           
  7923                           ;lcd.c: 9: (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  7924   002140  A601               	btfss	i2Lcd_Port@a^0,3,c
  7925   002142  D002               	goto	i2l26
  7926   002144  8E8C               	bsf	140,7,c	;volatile
  7927   002146  0012               	return	
  7928   002148                     i2l26:
  7929   002148  9E8C               	bcf	140,7,c	;volatile
  7930   00214A  0012               	return		;funcret
  7931   00214C                     __end_ofi2_Lcd_Port:
  7932                           	callstack 0
  7933                           
  7934                           	psect	rparam
  7935   000000                     
  7936                           	psect	temp
  7937   000049                     btemp:
  7938                           	callstack 0
  7939   000049                     	ds	1
  7940   000000                     int$flags	set	btemp
  7941   000000                     wtemp8	set	btemp+1
  7942   000000                     ttemp5	set	btemp+1
  7943   000000                     ttemp6	set	btemp+4
  7944   000000                     ttemp7	set	btemp+8
  7945                           
  7946                           	psect	idloc
  7947                           
  7948                           ;Config register IDLOC0 @ 0x200000
  7949                           ;	unspecified, using default values
  7950   200000                     	org	2097152
  7951   200000  FF                 	db	255
  7952                           
  7953                           ;Config register IDLOC1 @ 0x200001
  7954                           ;	unspecified, using default values
  7955   200001                     	org	2097153
  7956   200001  FF                 	db	255
  7957                           
  7958                           ;Config register IDLOC2 @ 0x200002
  7959                           ;	unspecified, using default values
  7960   200002                     	org	2097154
  7961   200002  FF                 	db	255
  7962                           
  7963                           ;Config register IDLOC3 @ 0x200003
  7964                           ;	unspecified, using default values
  7965   200003                     	org	2097155
  7966   200003  FF                 	db	255
  7967                           
  7968                           ;Config register IDLOC4 @ 0x200004
  7969                           ;	unspecified, using default values
  7970   200004                     	org	2097156
  7971   200004  FF                 	db	255
  7972                           
  7973                           ;Config register IDLOC5 @ 0x200005
  7974                           ;	unspecified, using default values
  7975   200005                     	org	2097157
  7976   200005  FF                 	db	255
  7977                           
  7978                           ;Config register IDLOC6 @ 0x200006
  7979                           ;	unspecified, using default values
  7980   200006                     	org	2097158
  7981   200006  FF                 	db	255
  7982                           
  7983                           ;Config register IDLOC7 @ 0x200007
  7984                           ;	unspecified, using default values
  7985   200007                     	org	2097159
  7986   200007  FF                 	db	255
  7987                           
  7988                           	psect	config
  7989                           
  7990                           ;Config register CONFIG1L @ 0x300000
  7991                           ;	unspecified, using default values
  7992                           ;	PLL Prescaler Selection bits
  7993                           ;	PLLDIV = 0x0, unprogrammed default
  7994                           ;	System Clock Postscaler Selection bits
  7995                           ;	CPUDIV = 0x0, unprogrammed default
  7996                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7997                           ;	USBDIV = 0x0, unprogrammed default
  7998   300000                     	org	3145728
  7999   300000  00                 	db	0
  8000                           
  8001                           ;Config register CONFIG1H @ 0x300001
  8002                           ;	Oscillator Selection bits
  8003                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  8004                           ;	Fail-Safe Clock Monitor Enable bit
  8005                           ;	FCMEN = 0x0, unprogrammed default
  8006                           ;	Internal/External Oscillator Switchover bit
  8007                           ;	IESO = 0x0, unprogrammed default
  8008   300001                     	org	3145729
  8009   300001  09                 	db	9
  8010                           
  8011                           ;Config register CONFIG2L @ 0x300002
  8012                           ;	unspecified, using default values
  8013                           ;	Power-up Timer Enable bit
  8014                           ;	PWRT = 0x1, unprogrammed default
  8015                           ;	Brown-out Reset Enable bits
  8016                           ;	BOR = 0x3, unprogrammed default
  8017                           ;	Brown-out Reset Voltage bits
  8018                           ;	BORV = 0x3, unprogrammed default
  8019                           ;	USB Voltage Regulator Enable bit
  8020                           ;	VREGEN = 0x0, unprogrammed default
  8021   300002                     	org	3145730
  8022   300002  1F                 	db	31
  8023                           
  8024                           ;Config register CONFIG2H @ 0x300003
  8025                           ;	Watchdog Timer Enable bit
  8026                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8027                           ;	Watchdog Timer Postscale Select bits
  8028                           ;	WDTPS = 0xF, unprogrammed default
  8029   300003                     	org	3145731
  8030   300003  1E                 	db	30
  8031                           
  8032                           ; Padding undefined space
  8033   300004                     	org	3145732
  8034   300004  FF                 	db	255
  8035                           
  8036                           ;Config register CONFIG3H @ 0x300005
  8037                           ;	CCP2 MUX bit
  8038                           ;	CCP2MX = 0x1, unprogrammed default
  8039                           ;	PORTB A/D Enable bit
  8040                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8041                           ;	Low-Power Timer 1 Oscillator Enable bit
  8042                           ;	LPT1OSC = 0x0, unprogrammed default
  8043                           ;	MCLR Pin Enable bit
  8044                           ;	MCLRE = 0x1, unprogrammed default
  8045   300005                     	org	3145733
  8046   300005  81                 	db	129
  8047                           
  8048                           ;Config register CONFIG4L @ 0x300006
  8049                           ;	Stack Full/Underflow Reset Enable bit
  8050                           ;	STVREN = 0x1, unprogrammed default
  8051                           ;	Single-Supply ICSP Enable bit
  8052                           ;	LVP = OFF, Single-Supply ICSP disabled
  8053                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8054                           ;	ICPRT = 0x0, unprogrammed default
  8055                           ;	Extended Instruction Set Enable bit
  8056                           ;	XINST = 0x0, unprogrammed default
  8057                           ;	Background Debugger Enable bit
  8058                           ;	DEBUG = 0x1, unprogrammed default
  8059   300006                     	org	3145734
  8060   300006  81                 	db	129
  8061                           
  8062                           ; Padding undefined space
  8063   300007                     	org	3145735
  8064   300007  FF                 	db	255
  8065                           
  8066                           ;Config register CONFIG5L @ 0x300008
  8067                           ;	unspecified, using default values
  8068                           ;	Code Protection bit
  8069                           ;	CP0 = 0x1, unprogrammed default
  8070                           ;	Code Protection bit
  8071                           ;	CP1 = 0x1, unprogrammed default
  8072                           ;	Code Protection bit
  8073                           ;	CP2 = 0x1, unprogrammed default
  8074                           ;	Code Protection bit
  8075                           ;	CP3 = 0x1, unprogrammed default
  8076   300008                     	org	3145736
  8077   300008  0F                 	db	15
  8078                           
  8079                           ;Config register CONFIG5H @ 0x300009
  8080                           ;	unspecified, using default values
  8081                           ;	Boot Block Code Protection bit
  8082                           ;	CPB = 0x1, unprogrammed default
  8083                           ;	Data EEPROM Code Protection bit
  8084                           ;	CPD = 0x1, unprogrammed default
  8085   300009                     	org	3145737
  8086   300009  C0                 	db	192
  8087                           
  8088                           ;Config register CONFIG6L @ 0x30000A
  8089                           ;	unspecified, using default values
  8090                           ;	Write Protection bit
  8091                           ;	WRT0 = 0x1, unprogrammed default
  8092                           ;	Write Protection bit
  8093                           ;	WRT1 = 0x1, unprogrammed default
  8094                           ;	Write Protection bit
  8095                           ;	WRT2 = 0x1, unprogrammed default
  8096                           ;	Write Protection bit
  8097                           ;	WRT3 = 0x1, unprogrammed default
  8098   30000A                     	org	3145738
  8099   30000A  0F                 	db	15
  8100                           
  8101                           ;Config register CONFIG6H @ 0x30000B
  8102                           ;	unspecified, using default values
  8103                           ;	Configuration Register Write Protection bit
  8104                           ;	WRTC = 0x1, unprogrammed default
  8105                           ;	Boot Block Write Protection bit
  8106                           ;	WRTB = 0x1, unprogrammed default
  8107                           ;	Data EEPROM Write Protection bit
  8108                           ;	WRTD = 0x1, unprogrammed default
  8109   30000B                     	org	3145739
  8110   30000B  E0                 	db	224
  8111                           
  8112                           ;Config register CONFIG7L @ 0x30000C
  8113                           ;	unspecified, using default values
  8114                           ;	Table Read Protection bit
  8115                           ;	EBTR0 = 0x1, unprogrammed default
  8116                           ;	Table Read Protection bit
  8117                           ;	EBTR1 = 0x1, unprogrammed default
  8118                           ;	Table Read Protection bit
  8119                           ;	EBTR2 = 0x1, unprogrammed default
  8120                           ;	Table Read Protection bit
  8121                           ;	EBTR3 = 0x1, unprogrammed default
  8122   30000C                     	org	3145740
  8123   30000C  0F                 	db	15
  8124                           
  8125                           ;Config register CONFIG7H @ 0x30000D
  8126                           ;	unspecified, using default values
  8127                           ;	Boot Block Table Read Protection bit
  8128                           ;	EBTRB = 0x1, unprogrammed default
  8129   30000D                     	org	3145741
  8130   30000D  40                 	db	64
  8131                           tosu	equ	0xFFF
  8132                           tosh	equ	0xFFE
  8133                           tosl	equ	0xFFD
  8134                           stkptr	equ	0xFFC
  8135                           pclatu	equ	0xFFB
  8136                           pclath	equ	0xFFA
  8137                           pcl	equ	0xFF9
  8138                           tblptru	equ	0xFF8
  8139                           tblptrh	equ	0xFF7
  8140                           tblptrl	equ	0xFF6
  8141                           tablat	equ	0xFF5
  8142                           prodh	equ	0xFF4
  8143                           prodl	equ	0xFF3
  8144                           indf0	equ	0xFEF
  8145                           postinc0	equ	0xFEE
  8146                           postdec0	equ	0xFED
  8147                           preinc0	equ	0xFEC
  8148                           plusw0	equ	0xFEB
  8149                           fsr0h	equ	0xFEA
  8150                           fsr0l	equ	0xFE9
  8151                           wreg	equ	0xFE8
  8152                           indf1	equ	0xFE7
  8153                           postinc1	equ	0xFE6
  8154                           postdec1	equ	0xFE5
  8155                           preinc1	equ	0xFE4
  8156                           plusw1	equ	0xFE3
  8157                           fsr1h	equ	0xFE2
  8158                           fsr1l	equ	0xFE1
  8159                           bsr	equ	0xFE0
  8160                           indf2	equ	0xFDF
  8161                           postinc2	equ	0xFDE
  8162                           postdec2	equ	0xFDD
  8163                           preinc2	equ	0xFDC
  8164                           plusw2	equ	0xFDB
  8165                           fsr2h	equ	0xFDA
  8166                           fsr2l	equ	0xFD9
  8167                           status	equ	0xFD8

Data Sizes:
    Strings     165
    Constant    50
    Data        55
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      72
    BANK0           160     22      79
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), 

    Lcd_CGRAM_CreateChar@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> figura_1(CODE[8]), figura_2(CODE[8]), figura_3(CODE[8]), figura_4(CODE[8]), 
		 -> figura_5(CODE[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[15]), STR_10(CODE[4]), STR_11(CODE[18]), STR_12(CODE[5]), 
		 -> STR_13(CODE[10]), STR_14(CODE[12]), STR_2(CODE[11]), STR_3(CODE[12]), 
		 -> STR_5(CODE[17]), STR_6(CODE[8]), STR_7(CODE[10]), STR_8(CODE[3]), 
		 -> STR_9(CODE[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 30
		 -> STR_4(CODE[30]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> buffer(BANK0[30]), 


Critical Paths under _main in COMRAM

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _escenario1->_Lcd_Set_Cursor
    _escenario1->_Lcd_Write_String
    _Lcd_Blink->_Lcd_Cmd
    _atoi->___wmul
    ___lwtoft->___ftpack
    _MedirDistancia->___lwdiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_CGRAM_Init->_Lcd_Cmd
    _Lcd_CGRAM_CreateChar->_Lcd_Write_Char
    _Lcd_CGRAM_Close->_Lcd_Cmd
    _Duty_motor->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___ftpack
    _ContarReal->___awdiv
    _escenario3->_Lcd_Set_Cursor
    _escenario3->_Lcd_Write_String
    _escenario2->_Lcd_Set_Cursor
    _escenario2->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMRAM

    _okmenu->i2_ContarReal
    i2_ContarReal->i2___awdiv
    i2_escenario3->i2_Lcd_Set_Cursor
    i2_escenario3->i2_Lcd_Write_String
    _escenario4->i2_Lcd_Set_Cursor
    _escenario4->i2_Lcd_Write_String
    _borrarDigito->i2_Lcd_Set_Cursor
    i2_escenario1->i2_Lcd_Set_Cursor
    i2_escenario1->i2_Lcd_Write_String
    i2_Lcd_Blink->i2_Lcd_Cmd
    i2_escenario2->i2_Lcd_Set_Cursor
    i2_escenario2->i2_Lcd_Write_String
    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_NoBlink->i2_Lcd_Cmd
    i2_Lcd_Clear->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port
    _PiezaAContar->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Duty_motor
    _Duty_motor->___ftmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   39858
                                             15 BANK0      7     7      0
                         _ContarReal
                         _Conversion
                         _Duty_motor
                          _Lcd_Blink
                    _Lcd_CGRAM_Close
               _Lcd_CGRAM_CreateChar
                     _Lcd_CGRAM_Init
                          _Lcd_Clear
                           _Lcd_Init
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                     _MedirDistancia
                           ___lwtoft
                               _atoi
                         _escenario1
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6    1960
                                             32 COMRAM    13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             27 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _escenario1                                           0     0      0    4713
                          _Lcd_Blink
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Blink                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 6     3      3    1067
                                             26 COMRAM     6     3      3
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3374
                                             28 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _MedirDistancia                                       1     1      0     641
                                             27 COMRAM     1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     601
                                             20 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     434
                                             23 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Init                                       0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_CreateChar                                11    10      1    1775
                                             24 COMRAM    11    10      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Close                                      0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Duty_motor                                           6     3      3    9128
                                              9 BANK0      6     3      3
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     461
                                             20 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4067
                                             43 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     378
                                             20 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3999
                                             28 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    3253
                                             20 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           4     2      2      31
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ContarReal                                           2     2      0   11362
                                             28 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                             ___wmul
                         _escenario2
                         _escenario3
                             _vaciar
 ---------------------------------------------------------------------------------
 (2) _vaciar                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _escenario3                                           0     0      0    4459
                          _Lcd_Clear
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _escenario2                                           0     0      0    4713
                          _Lcd_Clear
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     3      1    1484
                                             24 COMRAM     4     3      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     254
                                             21 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    2665
                                             23 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_NoBlink                                          0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     155
                                             21 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     592
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 10    10      0   13755
                                             10 COMRAM    10    10      0
                       _PiezaAContar
                          _Reiniciar
                           _Terminar
                          _Trasmitir
                   _blacklighttoggle
                       _borrarDigito
                         _escenario4
                             _okmenu
 ---------------------------------------------------------------------------------
 (7) _okmenu                                               0     0      0    6579
                       i2_ContarReal
                       i2_escenario1
 ---------------------------------------------------------------------------------
 (8) i2_ContarReal                                         2     2      0    4665
                                              8 COMRAM     2     2      0
                          i2___awdiv
                          i2___awmod
                           i2___wmul
                       i2_escenario2
                       i2_escenario3
                           i2_vaciar
 ---------------------------------------------------------------------------------
 (9) i2_escenario3                                         0     0      0    1736
                        i2_Lcd_Clear
                      i2_Lcd_NoBlink
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awdiv                                            8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _escenario4                                           0     0      0    1914
                        i2_Lcd_Clear
                      i2_Lcd_NoBlink
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (7) _borrarDigito                                         0     0      0    1166
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) _blacklighttoggle                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Trasmitir                                            2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Terminar                                             0     0      0    1914
                       i2_escenario1
                           i2_vaciar
 ---------------------------------------------------------------------------------
 (9) i2_vaciar                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_escenario1                                         0     0      0    1914
                        i2_Lcd_Blink
                        i2_Lcd_Clear
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Blink                                          0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) _Reiniciar                                            0     0      0    1914
                       i2_escenario2
 ---------------------------------------------------------------------------------
 (9) i2_escenario2                                         0     0      0    1914
                        i2_Lcd_Clear
                      i2_Lcd_NoBlink
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Write_String                                   4     3      1     528
                                              4 COMRAM     4     3      1
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Set_Cursor                                     5     4      1     988
                                              3 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_NoBlink                                       0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Clear                                          0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Cmd                                           2     2      0     110
                                              1 COMRAM     2     2      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) _PiezaAContar                                         2     2      0     222
                                              4 COMRAM     2     2      0
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Write_Char                                    3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (11) i2_Lcd_Port                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ContarReal
     ___awdiv
     ___awmod
     ___wmul
     _escenario2
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_NoBlink
         _Lcd_Cmd
       _Lcd_Set_Cursor
         _Lcd_Cmd
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
     _escenario3
       _Lcd_Clear
       _Lcd_NoBlink
       _Lcd_Set_Cursor
       _Lcd_Write_String
     _vaciar
   _Conversion
   _Duty_motor
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___ftdiv (ARG)
       ___ftpack (ARG)
     ___fttol
     ___lwtoft (ARG)
       ___ftpack
   _Lcd_Blink
     _Lcd_Cmd
   _Lcd_CGRAM_Close
     _Lcd_Cmd
   _Lcd_CGRAM_CreateChar
     _Lcd_Write_Char
   _Lcd_CGRAM_Init
     _Lcd_Cmd
   _Lcd_Clear
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_NoBlink
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
   _MedirDistancia
     ___lwdiv
   ___lwtoft
   _atoi
     ___wmul
     _isdigit
   _escenario1
     _Lcd_Blink
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_Char
     _Lcd_Write_String
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)
   _PiezaAContar
     i2_Lcd_Write_Char
       i2_Lcd_Port
   _Reiniciar
     i2_escenario2
       i2_Lcd_Clear
         i2_Lcd_Cmd
           i2_Lcd_Port
       i2_Lcd_NoBlink
         i2_Lcd_Cmd
       i2_Lcd_Set_Cursor
         i2_Lcd_Cmd
       i2_Lcd_Write_Char
       i2_Lcd_Write_String
         i2_Lcd_Write_Char
   _Terminar
     i2_escenario1
       i2_Lcd_Blink
         i2_Lcd_Cmd
       i2_Lcd_Clear
       i2_Lcd_Set_Cursor
       i2_Lcd_Write_Char
       i2_Lcd_Write_String
     i2_vaciar
   _Trasmitir
   _blacklighttoggle
   _borrarDigito
     i2_Lcd_Set_Cursor
     i2_Lcd_Write_Char
   _escenario4
     i2_Lcd_Clear
     i2_Lcd_NoBlink
     i2_Lcd_Set_Cursor
     i2_Lcd_Write_Char
     i2_Lcd_Write_String
   _okmenu
     i2_ContarReal
       i2___awdiv
       i2___awmod
       i2___wmul
       i2_escenario2
       i2_escenario3
         i2_Lcd_Clear
         i2_Lcd_NoBlink
         i2_Lcd_Set_Cursor
         i2_Lcd_Write_String
       i2_vaciar
     i2_escenario1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      4F       5       49.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      48       1       76.6%
BITBIGSFRlll        21      0       0      35        0.0%
BITBIGSFRhhhhlh     19      0       0      21        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhhhlll      9      0       0      29        0.0%
BITBIGSFRhhhlll      8      0       0      27        0.0%
BITBIGSFRhhhlll      7      0       0      31        0.0%
BITBIGSFRllh         6      0       0      34        0.0%
BITBIGSFRhhhlhl      5      0       0      24        0.0%
BITBIGSFRhl          4      0       0      32        0.0%
BITBIGSFRhhhlhh      3      0       0      23        0.0%
BITBIGSFRhhhlll      2      0       0      30        0.0%
BITBIGSFRhhhlll      1      0       0      25        0.0%
BITBIGSFRhhhlll      1      0       0      26        0.0%
BITBIGSFRhhhlll      1      0       0      28        0.0%
BITBIGSFRhhhhll      1      0       0      22        0.0%
BITBIGSFRlh          1      0       0      33        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      97      36        0.0%
DATA                 0      0      97       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 12 00:27:33 2024

                           _t 006C                             _v 0071                            l22 2112  
                          l14 20FE                            l26 211C                            l18 2108  
                          _GO 7E11                  ___awdiv@sign 001A           ___wmul@multiplicand 0017  
                         l433 1A6C                           l435 1A6E                           l428 1A58  
                         l366 218C                           l459 0E8A                           l817 1334  
                         l955 1D14                           l965 1E30                           _GIE 7F97  
                         _RC0 7C10                           _RC1 7C11                           _RB4 7C0C  
                         _RB5 7C0D                           _RB6 7C0E                           _RB7 7C0F  
                         _PR2 0FCB                           _ISR 0008                 ?_borrarDigito 0001  
                ___awmod@sign 001A                _contadorDecena 00AB                           wreg 0FE8  
         __end_of_Lcd_NoBlink 22A0                          ?_ISR 0001                _contadorUnidad 0032  
                ___ftdiv@cntr 0026         Lcd_CGRAM_CreateChar@i 001C                  ___ftdiv@sign 002B  
                        l5021 0B0C                          l5005 0A8C                          l4081 210A  
                        l4145 1634                          l4137 160C                          l4129 15E4  
                        l4321 11DC                          l4155 1F0A                          l4171 152C  
                        l4315 11B4                          l4413 1B44                          l4085 2114  
                        l4077 2100                          l4181 1588                          l4173 1536  
                        l4159 1F24                          l4183 1592                          l4175 1554  
                        l4335 120E                          l4433 1B8A                          l4425 1B72  
                        l4417 1B52                          l4409 1B38                          l4441 1AD2  
                        l4345 1236                          l4371 18CE                          l4419 1B5A  
                        l4179 156A                          l4275 12D0                          l4451 1B20  
                        l4339 121E                          l4603 0CEC                          l4507 1CE2  
                        l4365 18BE                          l4429 1B7C                          l4269 12A8  
                        l4445 1AF4                          l4349 1246                          l4461 1468  
                        l4621 0D38                          l4509 1CEA                          l4295 130E  
                        l4615 0D14                          l4519 1D0A                          l4535 1E26  
                        l4527 1E06                          l4377 18E4                          l4393 1916  
                        l4633 0D60                          l4609 0D10                          l4529 1E0E  
                        l4379 18EC                          l4491 14E0                          l4483 14CC  
                        l4715 176E                          l4651 0D8C                          l4627 0D3C  
                        l4547 2260                          l4397 1924                          l4389 190C  
                        l4645 0D88                          l4479 14BC                          l4719 1780  
                        l4663 0DB4                          l4639 0D64                          l4591 0CC8  
                        l4751 1A94                          l4815 0F62                          l4807 0F0C  
                        l4497 14FC                          l4489 14D4                          l4657 0DB0  
                        l4585 0CC4                          l4753 1AAC                          l4825 1368  
                        l4809 0F12                          l4675 0DDC                          l4683 0E00  
                        l4747 1A80                          l4843 13EA                          l4827 1374  
                        l4771 0E5A                          l4669 0DD8                          l4597 0CE8  
                        l4837 13C4                          l4765 0E50                          l4847 1422  
                        l4839 13D2                          l4783 0EB2                          l4767 0E56  
                        l4759 0E3A                          l4793 0EC8                          l4787 0EC4  
                        l4977 0A16                          STR_1 0874                          STR_2 089B  
                        STR_3 088F                          STR_4 0833                          STR_5 0863  
                        STR_6 08C4                          STR_7 08A6                          STR_8 08D5  
                        STR_9 08B0               ?_Lcd_CGRAM_Init 0001                          _LATB 0F8A  
                        _LATD 0F8C                          _LATE 0F8D                          u3321 1290  
                        u3250 151E                          u4107 0938                          u3341 12B8  
                        u4117 0A00                          u4207 1FAA                          u4127 0A6C  
                        u3520 1B5E                          u3600 1486                          u4217 221C  
                        u4137 0B18                          u3290 159C                          u3371 119C  
                        u4147 1A44                          u3460 18F0                          u3700 1E12  
                        u3605 147E                          u4157 19CA                          u3391 11C4  
                        u4167 19DE                          u3640 14E6                          u4177 19F2  
                        u4097 08E6                          u4187 106E                          u4197 1F98  
                        u3581 144C                          u3590 1456                          u3670 1CEE  
                        _RBIE 7F93                          _RBIF 7F90                          u3860 1A62  
                        i2l22 213E                          i2l14 212A                          u3960 0EF4  
                        i2l26 2148                          i2l18 2134                          u3890 1A76  
                        u3980 0F6A                          u3990 0F84                          _RBPU 7F8F  
                        _TMR0 0FD6                          _TMR1 0FCE                          _TMR2 0FCC  
                        _TRMT 7D61             ?_Lcd_Write_String 0019                          _atoi 1366  
                        _main 08DA                  ___ftpack@arg 0015                          _menu 0047  
                ___ftpack@exp 0018                          _rojo 006F                          fsr2h 0FDA  
                        indf2 0FDF                          fsr1l 0FE1                          fsr2l 0FD9  
                        btemp 0049                          prodh 0FF4                          prodl 0FF3  
                        start 000E            ??_Lcd_Write_String 001A               __end_of_Lcd_Cmd 222A  
                ___ftmul@cntr 009A                  ___param_bank 0000                  ___ftmul@sign 009B  
                       ??_ISR 000B                  ___fttol@exp1 0023                  ___fttol@lval 001F  
                       ?_atoi 001B                         ?_main 0001               __end_of___awdiv 192E  
                       _ADRES 0FC3                         STR_10 08D1                         _CCPR2 0FBB  
                       STR_11 0851                         STR_12 08CC                         STR_13 08BA  
                       STR_14 0883               __end_of___awmod 1B94              ?_Lcd_CGRAM_Close 0001  
             __end_of___ftdiv 1366                ??_borrarDigito 0009               __end_of___ftmul 1280  
                       _T0CON 0FD5               ___awdiv@divisor 0017                         _T1CON 0FCD  
             __end_of___fttol 150E                         _T2CON 0FCA                         _LATA1 7C49  
                       _LATA5 7C4D               __end_of___lwdiv 1D1E               __end_of___lwmod 1E3A  
                       i2l400 0BEA                         i2l410 0C30                         i2l402 0BF6  
                       i2l412 0C44                         i2l404 0C02                         i2l408 0C24  
                       i2l409 0C4A                         i2l419 0C9C                         i2l359 20CC  
                       i2l392 0BB0                         i2l384 0B74                         i2l394 0BBC  
                       i2l386 0B80                         i2l396 0BC8                         i2l388 0B8C  
             ___awdiv@counter 0019                         _RCSTA 0FAB                         _SPBRG 0FAF  
                       _PORTB 0F81                         _TRISA 0F92                         _TRISB 0F93  
                       _TRISC 0F94                         _TRISD 0F95                         _TRISE 0F96  
                       _TXREG 0FAD                         _TXSTA 0FAC                         _Tecla 0044  
                 ?i2_Lcd_Port 0001               __end_of_dpowers 080B                         _color 0060  
                  _ContarReal 0F8E               __end_of_isdigit 2268                 ___ftpack@sign 0019  
                       atoi@a 001E                         atoi@s 001B                         main@d 00A7  
                       main@i 00A8                         tablat 0FF5                    _Conversion 2174  
            __end_ofi2___wmul 21E6                         ttemp5 004A                         ttemp6 004D  
                       ttemp7 0051                         status 0FD8                         wtemp8 004A  
             __end_of_sprintf 0F8E              __end_ofi2_vaciar 1F00              i2_Lcd_Set_Cursor 165C  
            __end_of_Lcd_Init 1A32              __end_of_Lcd_Port 2120               __initialization 1C04  
                __end_of_atoi 143C                  __end_of_main 0B28                   _Lcd_NoBlink 2292  
                      ??_atoi 001E                        ??_main 00A2                 ___fttol@sign1 001E  
               __activetblptr 0002                    _Duty_motor 16FC              __end_of_Terminar 22EE  
     Lcd_CGRAM_CreateChar@add 001B                        _ADCON0 0FC2                        _ADCON2 0FC0  
                      _CCP2IF 7D08                        _CCPR1L 0FBE              ___awdiv@dividend 0015  
            __end_of___ftpack 15BC                        i2l3011 1BE2                        i2l3003 1BC2  
                      i2l3005 1BCA                        i2l3015 1BEC                        i2l4001 0BA0  
                      i2l3019 1BFA                        i2l4015 0BDA                  i2_escenario1 1DB2  
                i2_escenario2 1820                  i2_escenario3 2022                        i2l4029 0C16  
                      i2l4045 0C4E                        i2l4063 0C8E                        i2l4065 0C92  
                      i2l4049 0C68                        i2l2671 2136                        i2l2675 2140  
                      i2l2667 212C                        i2l2781 16D4                        i2l2773 16AC  
                      i2l2765 1684                        i2l2791 1F48                        i2l3823 20E0  
                      i2l2951 1942                        i2l3831 215A                        i2l2795 1F62  
                      i2l2963 1968                        i2l2965 1970                        i2l2957 1952  
                      i2l3775 1C9C                        i2l2983 19A8                        i2l2975 1990  
                      i2l3777 1CA4                        i2l3779 1CAA                        i2l2979 199A  
                      i2l2995 1BA8                        i2l3797 1D58                        i2l2999 1BB4  
            __end_of___lwtoft 220A                        _OSCCON 0FD3                     ??_Lcd_Cmd 0016  
                      _TMR0IE 7F95                        _TMR0IF 7F92                        _TMR1IF 7CF0  
                      _TMR0ON 7EAF                        _TMR1ON 7E68                        _TMR2ON 7E52  
               ?_PiezaAContar 0001              __end_of_figura_1 0833              __end_of_figura_2 082B  
            __end_of_figura_3 0823              __end_of_figura_4 081B              __end_of_figura_5 0813  
                ?i2_Lcd_Clear 0001                        ___ftge 1AB0                  ?i2_Lcd_Blink 0001  
           __end_ofi2_Lcd_Cmd 224A  Lcd_CGRAM_CreateChar@chardata 0019                        ___wmul 219A  
                   ??___awdiv 0019                        _decena 0040                     ??___awmod 0019  
                   ??___ftdiv 0023                     ??___ftmul 0093                     ??___fttol 0019  
                      _digito 0045                     ??___lwdiv 0019                     ??___lwmod 0020  
                      _buffer 0075           i2Lcd_Write_String@a 0005           i2Lcd_Write_String@i 0007  
                      clear_0 1C58              ___awdiv@quotient 001B                        _vaciar 1E3A  
             ___awmod@divisor 0017                        _okmenu 214C                        isa$std 0001  
             ___awmod@counter 0019                        _unidad 003E              i2_Lcd_Write_Char 1FB4  
              i2___awdiv@sign 0006         ___ftmul@f3_as_product 0097                  __pdataCOMRAM 0045  
                   ??_isdigit 0015             __end_ofi2___awdiv 19B2             __end_ofi2___awmod 1C04  
                __mediumconst 0000                        tblptrh 0FF7                        tblptrl 0FF6  
                      tblptru 0FF8                i2___awmod@sign 0006                   ?_ContarReal 0001  
                   ??_sprintf 0027             MedirDistancia@aux 001C               Lcd_Set_Cursor@a 0019  
             Lcd_Set_Cursor@b 0018               Lcd_Set_Cursor@y 001B               Lcd_Set_Cursor@z 001A  
   Lcd_CGRAM_CreateChar@i_243 001D     Lcd_CGRAM_CreateChar@i_244 001E     Lcd_CGRAM_CreateChar@i_245 001F  
   Lcd_CGRAM_CreateChar@i_246 0020     Lcd_CGRAM_CreateChar@i_247 0021     Lcd_CGRAM_CreateChar@i_248 0022  
   Lcd_CGRAM_CreateChar@i_249 0023              ??_MedirDistancia 001C                   ?_Conversion 0015  
                  __accesstop 0060       __end_of__initialization 1C5E                ??_PiezaAContar 0005  
                  ___ftge@ff1 0015                    ___ftge@ff2 0018             __end_of_Lcd_Clear 22AE  
           __end_of_Lcd_Blink 2276                 ___rparam_used 0001          __end_of_borrarDigito 1D6C  
                  ___ftdiv@f1 001D                    ___ftdiv@f2 0020                    ___ftdiv@f3 0027  
                  ___ftmul@f1 002C                    ___ftmul@f2 002F                    ___fttol@f1 0015  
              __pcstackCOMRAM 0001                    Trasmitir@i 0001                  __pidataBANK0 208E  
       __end_ofi2_Lcd_NoBlink 22CA                    ___lwtoft@c 001D             i2Lcd_Write_Char@a 0004  
           i2Lcd_Write_Char@y 0003                     ?i2___wmul 0001                _Lcd_Set_Cursor 15BC  
                 ?_Duty_motor 009C              ??_Lcd_CGRAM_Init 0018                     ?i2_vaciar 0001  
                   ?_Lcd_Init 0001                     ?_Lcd_Port 0001          i2Lcd_Write_Char@temp 0002  
           __end_of_Reiniciar 208E                    __pbssBANK0 00A9              _blacklighttoggle 22D8  
                   ?_Terminar 0001                       ?___ftge 0015                       ?___wmul 0015  
           __end_of_Trasmitir 20F4                       _CCP1CON 0FBD                       _CCP2CON 0FBA  
                     _BAUDCON 0FB8          i2Lcd_Set_Cursor@temp 0008                       ?_vaciar 0001  
                     ?_okmenu 0001                     ?___ftpack 0015        __end_of_Lcd_Set_Cursor 165C  
                   ?___lwtoft 001D                    ??i2___wmul 0005      __end_ofi2_Lcd_Set_Cursor 16FC  
                  ??i2_vaciar 0001                    ??_Lcd_Init 0018                  ??i2_Lcd_Port 0001  
                  ??_Lcd_Port 0015                    _escenario1 1D6C                    _escenario2 1796  
                  _escenario3 1FEC                    _escenario4 1E7C                _Lcd_Write_Char 1F7C  
                     _Lcd_Cmd 220A                       __Hparam 0000                       __Lparam 0000  
                  ??_Terminar 0009                       ___awdiv 18AA                       ___awmod 1B24  
                     ___ftdiv 1280                       ___ftmul 118A                       ___fttol 143C  
                     ___lwdiv 1CCC                       ___lwmod 1DF8                  __psmallconst 0800  
          __end_ofi2_Lcd_Port 214C                       __pcinit 1C04                    ??___ftpack 001A  
                     __ramtop 0800               ?_Lcd_Set_Cursor 0018                  ?_Lcd_NoBlink 0001  
                     __ptext0 08DA                       __ptext1 0E34                       __ptext2 1DF8  
                     __ptext3 1D6C                       __ptext4 2268                       __ptext5 1366  
                     __ptext6 224A                       __ptext7 21E6                       __ptext8 1A32  
                     __ptext9 1CCC                    ??___lwtoft 0020          __end_of_PiezaAContar 1CCC  
                     _dpowers 0801                       _isdigit 224A              ___awmod@dividend 0015  
                     _mostrar 00AD                 ?i2_ContarReal 0001                       _sprintf 0E34  
      __end_of_Lcd_Write_Char 1FB4                __pintcode_body 0B28          end_of_initialization 1C5E  
             Conversion@canal 0018                 __Lmediumconst 0000                       int_func 0B28  
         i2___wmul@multiplier 0001      __end_ofi2_Lcd_Write_Char 1FEC                       postdec1 0FE5  
                     postdec2 0FDD                       postinc0 0FEE                       postinc2 0FDE  
                   Lcd_Port@a 0015                     i2_Lcd_Cmd 222A                  _borrarDigito 1D1E  
                   _TRISAbits 0F92                     _TRISDbits 0F95                ??i2_ContarReal 0009  
                ??_ContarReal 001D                     i2___awdiv 192E                     i2___awmod 1B94  
             ?_Lcd_Write_Char 0001                   ?_escenario1 0001                   ?_escenario2 0001  
                 ?_escenario3 0001                   ?_escenario4 0001             Lcd_Write_String@a 0019  
           Lcd_Write_String@i 001B                  ??_Conversion 0017                   ___ftdiv@exp 002A  
          i2___awdiv@dividend 0001                   ___ftmul@exp 0096                     _Lcd_Clear 22A0  
                   _Lcd_Blink 2268          Duty_motor@escalarADC 009F                __end_of___ftge 1B24  
              __end_of___wmul 21C0            __end_of_ContarReal 108C              _Lcd_Write_String 1F00  
               __pidataCOMRAM 22EE                    ?i2_Lcd_Cmd 0001  __end_of_Lcd_CGRAM_CreateChar 0E34  
              __end_of_vaciar 1E7C                __end_of_okmenu 2174            __end_of_Conversion 219A  
               _cantidadResta 0038              i2___wmul@product 0005                  ??_Duty_motor 0032  
         start_initialization 1C04      __end_of_blacklighttoggle 22E4            i2___awdiv@quotient 0007  
                 __end_of_ISR 0CC0                    ?i2___awdiv 0001                    ?i2___awmod 0001  
                   _Reiniciar 2058             ??_Lcd_CGRAM_Close 0018            __end_of_Duty_motor 1796  
                  ?_Lcd_Clear 0001                    ?_Lcd_Blink 0001                      ??___ftge 001B  
  __end_ofi2_Lcd_Write_String 1F7C                      ??___wmul 0019                   __pdataBANK0 0060  
             Lcd_Write_Char@a 0018               Lcd_Write_Char@y 0017                      ??_vaciar 0015  
                    ??_okmenu 000B                     _Trasmitir 20C2                   __pbssCOMRAM 0032  
               __pcstackBANK0 0093             ?i2_Lcd_Set_Cursor 0004            ??i2_Lcd_Set_Cursor 0005  
         _cantidadRestaDecena 0034                      ?_Lcd_Cmd 0001                   sprintf@flag 002A  
                 sprintf@prec 0028                    ?_Reiniciar 0001                  _PiezaAContar 1C6C  
         _cantidadRestaUnidad 0036              ___lwdiv@dividend 0015              ??_Lcd_Set_Cursor 0019  
                   _flagParar 0073                     __pintcode 0008          __end_ofi2_ContarReal 118A  
                    ?___awdiv 0015                      ?___awmod 0015                      ?___ftdiv 001D  
                    ?___ftmul 002C                      ?___fttol 0015                      ?___lwdiv 0015  
                    ?___lwmod 001C                   ??i2_Lcd_Cmd 0002                    ?_Trasmitir 0001  
                 __smallconst 0800                      ?_isdigit 0001              ___lwdiv@quotient 001A  
                 ??i2___awdiv 0005                   ??i2___awmod 0005                      ?_sprintf 0021  
               ?i2_escenario1 0001                 ?i2_escenario2 0001                 ?i2_escenario3 0001  
              ___wmul@product 0019                      _LATAbits 0F89                      _LATDbits 0F8C  
           ?i2_Lcd_Write_Char 0001          _Lcd_CGRAM_CreateChar 0CC0                      i2u311_40 0C7E  
                    i2u312_45 0C80                      Lcd_Cmd@a 0017                      i2u422_47 0C58  
                    i2u271_40 22E0                      i2u423_47 116C                      i2u424_47 223C  
                    i2u193_40 1BCE                      i2u425_47 1FD0                      i2u274_40 1C94  
                    i2u426_47 1FE2                      i2u187_40 1974            ??i2_Lcd_Write_Char 0002  
               ??i2_Lcd_Clear 0004                 ??i2_Lcd_Blink 0004                   ??_Lcd_Clear 0018  
                 ??_Lcd_Blink 0018                    _ADCON1bits 0FC1             ___wmul@multiplier 0015  
                    i2___wmul 21C0                 i2_Lcd_NoBlink 22BC              ??_Lcd_Write_Char 0016  
           i2___awdiv@divisor 0003                      i2_vaciar 1EBE             i2___awdiv@counter 0005  
                    _Lcd_Init 19B2                      _Lcd_Port 20F4                ??i2_escenario1 0009  
              ??i2_escenario2 0009                ??i2_escenario3 0009                     copy_data0 1C18  
                   copy_data1 1C38                  ??_escenario1 001D                  ??_escenario2 001D  
                ??_escenario3 001D                  ??_escenario4 0009            i2___awmod@dividend 0001  
    __end_of_Lcd_Write_String 1F3E                   ??_Reiniciar 0009         ?_Lcd_CGRAM_CreateChar 0019  
                    __Hrparam 0000                      __Lrparam 0000                      _Terminar 22E4  
         main@distanciaContar 00A5         i2___wmul@multiplicand 0003                      ___ftpack 150E  
          __end_of_escenario1 1DB2            __end_of_escenario2 1820            __end_of_escenario3 2022  
          __end_of_escenario4 1EBE                ?i2_Lcd_NoBlink 0001           __end_ofi2_Lcd_Clear 22D8  
                 _isdigit$960 0016           __end_ofi2_Lcd_Blink 22BC                   ??_Trasmitir 0001  
                    ___lwtoft 21E6                    sprintf@val 002B                      _cantidad 003C  
             ___lwdiv@divisor 0017             ?_blacklighttoggle 0001               _Lcd_CGRAM_Close 2284  
               Duty_motor@ADC 009C               ___lwdiv@counter 0019                      __ptext10 19B2  
                    __ptext11 2276                      __ptext20 2174                      __ptext12 0CC0  
                    __ptext21 0F8E                      __ptext13 2284                      __ptext30 220A  
                    __ptext22 1E3A                      __ptext14 16FC                      __ptext31 20F4  
                    __ptext23 1FEC                      __ptext15 143C                      __ptext40 1B94  
                    __ptext32 219A                      __ptext24 1796                      __ptext16 118A  
                    __ptext41 192E                      __ptext33 1B24                      __ptext25 1F00  
                    __ptext17 1AB0                      __ptext50 2058                      __ptext42 1E7C  
                    __ptext34 18AA                      __ptext26 1F7C                      __ptext18 1280  
                    __ptext51 1820                      __ptext43 1D1E                      __ptext27 15BC  
                    __ptext19 150E                      __ptext52 1F3E                      __ptext44 22D8  
                    __ptext36 214C                      __ptext28 2292                      __ptext53 165C  
                    __ptext45 20C2                      __ptext37 108C                      __ptext29 22A0  
                    __ptext54 22BC                      __ptext46 22E4                      __ptext38 2022  
                    __ptext55 22CA                      __ptext47 1EBE                      __ptext39 21C0  
                    __ptext56 222A                      __ptext48 1DB2                      __ptext57 1C6C  
                    __ptext49 22AE                      __ptext58 1FB4                      __ptext59 2120  
                    _figura_1 082B                      _figura_2 0823                      _figura_3 081B  
                    _figura_4 0813                      _figura_5 080B            ??_blacklighttoggle 0001  
                    _contador 003A                      _ctimeout 0042                 _resultado_ADC 00A9  
                    _etimeout 0043                      isa$xinst 0000                _MedirDistancia 1A32  
                    int$flags 0049                      atoi@sign 0020                   i2Lcd_Port@a 0001  
           i2___awmod@divisor 0003             i2___awmod@counter 0005                 PiezaAContar@a 0006  
          i2_Lcd_Write_String 1F3E                      isdigit@c 0017                  i2_ContarReal 108C  
          Lcd_Write_Char@temp 0016                      intlevel2 0000                     sprintf@ap 0029  
                   sprintf@sp 0021           ?i2_Lcd_Write_String 0005        ??_Lcd_CGRAM_CreateChar 001A  
           i2Lcd_Set_Cursor@a 0005             i2Lcd_Set_Cursor@b 0004             i2Lcd_Set_Cursor@y 0007  
           i2Lcd_Set_Cursor@z 0006                _Lcd_CGRAM_Init 2276              ___lwmod@dividend 001C  
      __end_of_MedirDistancia 1AB0                    i2Lcd_Cmd@a 0003                   i2_Lcd_Clear 22CA  
                 i2_Lcd_Blink 22AE          __end_ofi2_escenario1 1DF8          __end_ofi2_escenario2 18AA  
        __end_ofi2_escenario3 2058               ??i2_Lcd_NoBlink 0004          ??i2_Lcd_Write_String 0006  
          Lcd_Set_Cursor@temp 001C                 ??_Lcd_NoBlink 0018       __end_of_Lcd_CGRAM_Close 2292  
                    sprintf@c 002D                      sprintf@f 0022               ___lwmod@divisor 001E  
             ___lwmod@counter 0020                    i2_Lcd_Port 2120        __end_of_Lcd_CGRAM_Init 2284  
             ?_MedirDistancia 0001  
