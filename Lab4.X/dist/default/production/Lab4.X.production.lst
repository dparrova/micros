

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Sep  1 22:25:58 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 05/01/2024 GMT
    32                           ; 
    33                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   000AA2                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _BackLight_State
    71   000AA2  08                 	db	8
    72   000000                     _ACKSTAT	set	32302
    73   000000                     _PEN	set	32298
    74   000000                     _SEN	set	32296
    75   000000                     _TRISB0	set	31896
    76   000000                     _SSPCON2	set	4037
    77   000000                     _SSPCON1	set	4038
    78   000000                     _TRISB1	set	31897
    79   000000                     _SSPBUF	set	4041
    80   000000                     _SSPADD	set	4040
    81   000000                     _SSPSTAT	set	4039
    82   000000                     _SSPIF	set	31987
    83                           
    84                           	psect	smallconst
    85   000800                     __psmallconst:
    86                           	callstack 0
    87   000800  00                 	db	0
    88   000801                     STR_1:
    89   000801  48                 	db	72	;'H'
    90   000802  6F                 	db	111	;'o'
    91   000803  6C                 	db	108	;'l'
    92   000804  61                 	db	97	;'a'
    93   000805  20                 	db	32
    94   000806  6D                 	db	109	;'m'
    95   000807  75                 	db	117	;'u'
    96   000808  6E                 	db	110	;'n'
    97   000809  64                 	db	100	;'d'
    98   00080A  6F                 	db	111	;'o'
    99   00080B  00                 	db	0
   100   00080C  00                 	db	0	; dummy byte at the end
   101   000000                     
   102                           ; #config settings
   103                           
   104                           	psect	cinit
   105   0009AE                     __pcinit:
   106                           	callstack 0
   107   0009AE                     start_initialization:
   108                           	callstack 0
   109   0009AE                     __initialization:
   110                           	callstack 0
   111                           
   112                           ; Initialize objects allocated to COMRAM (1 bytes)
   113                           ; load TBLPTR registers with __pidataCOMRAM
   114   0009AE  0EA2               	movlw	low __pidataCOMRAM
   115   0009B0  6EF6               	movwf	tblptrl,c
   116   0009B2  0E0A               	movlw	high __pidataCOMRAM
   117   0009B4  6EF7               	movwf	tblptrh,c
   118   0009B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   119   0009B8  6EF8               	movwf	tblptru,c
   120   0009BA  0009               	tblrd		*+	;fetch initializer
   121   0009BC  CFF5 F00E          	movff	tablat,__pdataCOMRAM
   122                           
   123                           ; Clear objects allocated to COMRAM (2 bytes)
   124   0009C0  6A0D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   125   0009C2  6A0C               	clrf	__pbssCOMRAM& (0+255),c
   126   0009C4                     end_of_initialization:
   127                           	callstack 0
   128   0009C4                     __end_of__initialization:
   129                           	callstack 0
   130   0009C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   131   0009C6  6EF8               	movwf	tblptru,c
   132   0009C8  0100               	movlb	0
   133   0009CA  EF6E  F004         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	bssCOMRAM
   136   00000C                     __pbssCOMRAM:
   137                           	callstack 0
   138   00000C                     _i2c_add:
   139                           	callstack 0
   140   00000C                     	ds	1
   141   00000D                     _RS:
   142                           	callstack 0
   143   00000D                     	ds	1
   144                           
   145                           	psect	dataCOMRAM
   146   00000E                     __pdataCOMRAM:
   147                           	callstack 0
   148   00000E                     _BackLight_State:
   149                           	callstack 0
   150   00000E                     	ds	1
   151                           
   152                           	psect	cstackCOMRAM
   153   000001                     __pcstackCOMRAM:
   154                           	callstack 0
   155   000001                     ??_I2C_Master_Wait:
   156   000001                     
   157                           ; 1 bytes @ 0x0
   158   000001                     	ds	1
   159   000002                     I2C_Master_Write@data:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x1
   163   000002                     	ds	1
   164   000003                     IO_Expander_Write@Data:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x2
   168   000003                     	ds	1
   169   000004                     LCD_Write_4Bit@Nibble:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x3
   173   000004                     	ds	1
   174   000005                     LCD_CMD@CMD:
   175                           	callstack 0
   176   000005                     LCD_Write_Char@Data:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x4
   180   000005                     	ds	1
   181   000006                     ??_LCD_Init:
   182   000006                     LCD_Write_String@Str:
   183                           	callstack 0
   184   000006                     LCD_Set_Cursor@COL:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x5
   188   000006                     	ds	1
   189   000007                     ??_LCD_Write_String:
   190   000007                     LCD_Init@I2C_Add:
   191                           	callstack 0
   192   000007                     LCD_Set_Cursor@ROW:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0x6
   196   000007                     	ds	1
   197   000008                     LCD_Write_String@i:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x7
   201   000008                     	ds	2
   202   00000A                     ??_main:
   203                           
   204                           ; 1 bytes @ 0x9
   205   00000A                     	ds	2
   206                           
   207 ;;
   208 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   209 ;;
   210 ;; *************** function _main *****************
   211 ;; Defined at:
   212 ;;		line 14 in file "Lab4.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;		None
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1    wreg      void 
   219 ;; Registers used:
   220 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   221 ;; Tracked objects:
   222 ;;		On entry : 0/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   226 ;;      Params:         0       0       0       0       0       0       0       0       0
   227 ;;      Locals:         0       0       0       0       0       0       0       0       0
   228 ;;      Temps:          2       0       0       0       0       0       0       0       0
   229 ;;      Totals:         2       0       0       0       0       0       0       0       0
   230 ;;Total ram usage:        2 bytes
   231 ;; Hardware stack levels required when called: 6
   232 ;; This function calls:
   233 ;;		_I2C_Master_Init
   234 ;;		_I2C_Master_Start
   235 ;;		_LCD_Clear
   236 ;;		_LCD_Init
   237 ;;		_LCD_Set_Cursor
   238 ;;		_LCD_Write_String
   239 ;;		_noBacklight
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text0
   246   0008DC                     __ptext0:
   247                           	callstack 0
   248   0008DC                     _main:
   249                           	callstack 25
   250                           
   251                           ;Lab4.c: 15: _delay((unsigned long)((500)*(4000000/4000.0)));
   252                           
   253                           ;incstack = 0
   254   0008DC  0E03               	movlw	3
   255   0008DE  6E0B               	movwf	(??_main+1)^0,c
   256   0008E0  0E8A               	movlw	138
   257   0008E2  6E0A               	movwf	??_main^0,c
   258   0008E4  0E56               	movlw	86
   259   0008E6                     u67:
   260   0008E6  2EE8               	decfsz	wreg,f,c
   261   0008E8  D7FE               	bra	u67
   262   0008EA  2E0A               	decfsz	??_main^0,f,c
   263   0008EC  D7FC               	bra	u67
   264   0008EE  2E0B               	decfsz	(??_main+1)^0,f,c
   265   0008F0  D7FA               	bra	u67
   266                           
   267                           ;Lab4.c: 17: I2C_Master_Init();
   268   0008F2  EC1E  F005         	call	_I2C_Master_Init	;wreg free
   269                           
   270                           ;Lab4.c: 18: I2C_Master_Start();
   271   0008F6  EC4D  F005         	call	_I2C_Master_Start	;wreg free
   272                           
   273                           ;Lab4.c: 22: LCD_Init(0x27);
   274   0008FA  0E27               	movlw	39
   275   0008FC  EC07  F004         	call	_LCD_Init
   276                           
   277                           ;Lab4.c: 23: LCD_Clear();
   278   000900  EC3B  F005         	call	_LCD_Clear	;wreg free
   279                           
   280                           ;Lab4.c: 24: LCD_Set_Cursor(1, 1);
   281   000904  0E01               	movlw	1
   282   000906  6E06               	movwf	LCD_Set_Cursor@COL^0,c
   283   000908  0E01               	movlw	1
   284   00090A  EC97  F004         	call	_LCD_Set_Cursor
   285                           
   286                           ;Lab4.c: 25: LCD_Write_String("Hola mundo");
   287   00090E  0E01               	movlw	low STR_1
   288   000910  6E06               	movwf	LCD_Write_String@Str^0,c
   289   000912  ECB8  F004         	call	_LCD_Write_String	;wreg free
   290                           
   291                           ;Lab4.c: 26: noBacklight();
   292   000916  EC43  F005         	call	_noBacklight	;wreg free
   293   00091A                     l1049:
   294                           
   295                           ;Lab4.c: 29: LCD_Set_Cursor(1, 1);
   296   00091A  0E01               	movlw	1
   297   00091C  6E06               	movwf	LCD_Set_Cursor@COL^0,c
   298   00091E  0E01               	movlw	1
   299   000920  EC97  F004         	call	_LCD_Set_Cursor
   300                           
   301                           ;Lab4.c: 30: LCD_Write_String("Hola mundo");
   302   000924  0E01               	movlw	low STR_1
   303   000926  6E06               	movwf	LCD_Write_String@Str^0,c
   304   000928  ECB8  F004         	call	_LCD_Write_String	;wreg free
   305   00092C  D7F6               	goto	l1049
   306   00092E                     __end_of_main:
   307                           	callstack 0
   308                           
   309 ;; *************** function _noBacklight *****************
   310 ;; Defined at:
   311 ;;		line 164 in file "lcd.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, status,2, status,0, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   325 ;;      Params:         0       0       0       0       0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0       0       0       0       0
   328 ;;      Totals:         0       0       0       0       0       0       0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels used: 1
   331 ;; Hardware stack levels required when called: 3
   332 ;; This function calls:
   333 ;;		_IO_Expander_Write
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text1
   340   000A86                     __ptext1:
   341                           	callstack 0
   342   000A86                     _noBacklight:
   343                           	callstack 27
   344                           
   345                           ;lcd.c: 166: BackLight_State = 0x00;
   346                           
   347                           ;incstack = 0
   348   000A86  0E00               	movlw	0
   349   000A88  6E0E               	movwf	_BackLight_State^0,c
   350                           
   351                           ;lcd.c: 167: IO_Expander_Write(0);
   352   000A8A  0E00               	movlw	0
   353   000A8C  EC11  F005         	call	_IO_Expander_Write
   354   000A90  0012               	return		;funcret
   355   000A92                     __end_of_noBacklight:
   356                           	callstack 0
   357                           
   358 ;; *************** function _LCD_Write_String *****************
   359 ;; Defined at:
   360 ;;		line 133 in file "lcd.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;  Str             1    5[COMRAM] PTR unsigned char 
   363 ;;		 -> STR_2(11), STR_1(11), 
   364 ;; Auto vars:     Size  Location     Type
   365 ;;  i               2    7[COMRAM] int 
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   375 ;;      Params:         1       0       0       0       0       0       0       0       0
   376 ;;      Locals:         2       0       0       0       0       0       0       0       0
   377 ;;      Temps:          1       0       0       0       0       0       0       0       0
   378 ;;      Totals:         4       0       0       0       0       0       0       0       0
   379 ;;Total ram usage:        4 bytes
   380 ;; Hardware stack levels used: 1
   381 ;; Hardware stack levels required when called: 5
   382 ;; This function calls:
   383 ;;		_LCD_Write_Char
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	text2
   390   000970                     __ptext2:
   391                           	callstack 0
   392   000970                     _LCD_Write_String:
   393                           	callstack 25
   394                           
   395                           ;lcd.c: 135: for(int i=0; Str[i]!='\0'; i++)
   396                           
   397                           ;incstack = 0
   398   000970  0E00               	movlw	0
   399   000972  6E09               	movwf	(LCD_Write_String@i+1)^0,c
   400   000974  0E00               	movlw	0
   401   000976  6E08               	movwf	LCD_Write_String@i^0,c
   402   000978  D00D               	goto	l1019
   403   00097A                     l1015:
   404                           
   405                           ;lcd.c: 136: LCD_Write_Char(Str[i]);
   406   00097A  5006               	movf	LCD_Write_String@Str^0,w,c
   407   00097C  2408               	addwf	LCD_Write_String@i^0,w,c
   408   00097E  6E07               	movwf	??_LCD_Write_String^0,c
   409   000980  C007  FFF6         	movff	??_LCD_Write_String,tblptrl
   410   000984                     	if	1	;There is more than 1 active tblptr byte
   411   000984  0E08               	movlw	high __smallconst
   412   000986  6EF7               	movwf	tblptrh,c
   413   000988                     	endif
   414   000988                     	if	0	;tblptru may be non-zero
   415   000988                     	endif
   416   000988                     	if	0	;tblptru may be non-zero
   417   000988                     	endif
   418   000988  0008               	tblrd		*
   419   00098A  50F5               	movf	tablat,w,c
   420   00098C  ECF7  F004         	call	_LCD_Write_Char
   421   000990  4A08               	infsnz	LCD_Write_String@i^0,f,c
   422   000992  2A09               	incf	(LCD_Write_String@i+1)^0,f,c
   423   000994                     l1019:
   424   000994  5006               	movf	LCD_Write_String@Str^0,w,c
   425   000996  2408               	addwf	LCD_Write_String@i^0,w,c
   426   000998  6E07               	movwf	??_LCD_Write_String^0,c
   427   00099A  C007  FFF6         	movff	??_LCD_Write_String,tblptrl
   428   00099E                     	if	1	;There is more than 1 active tblptr byte
   429   00099E  0E08               	movlw	high __smallconst
   430   0009A0  6EF7               	movwf	tblptrh,c
   431   0009A2                     	endif
   432   0009A2                     	if	0	;tblptru may be non-zero
   433   0009A2                     	endif
   434   0009A2                     	if	0	;tblptru may be non-zero
   435   0009A2                     	endif
   436   0009A2  0008               	tblrd		*
   437   0009A4  50F5               	movf	tablat,w,c
   438   0009A6  0900               	iorlw	0
   439   0009A8  B4D8               	btfsc	status,2,c
   440   0009AA  0012               	return	
   441   0009AC  D7E6               	goto	l1015
   442   0009AE                     __end_of_LCD_Write_String:
   443                           	callstack 0
   444                           
   445 ;; *************** function _LCD_Write_Char *****************
   446 ;; Defined at:
   447 ;;		line 126 in file "lcd.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;  Data            1    wreg     unsigned char 
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  Data            1    4[COMRAM] unsigned char 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, status,2, status,0, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   461 ;;      Params:         0       0       0       0       0       0       0       0       0
   462 ;;      Locals:         1       0       0       0       0       0       0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0       0       0
   464 ;;      Totals:         1       0       0       0       0       0       0       0       0
   465 ;;Total ram usage:        1 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; Hardware stack levels required when called: 4
   468 ;; This function calls:
   469 ;;		_LCD_Write_4Bit
   470 ;; This function is called by:
   471 ;;		_LCD_Write_String
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text3
   476   0009EE                     __ptext3:
   477                           	callstack 0
   478   0009EE                     _LCD_Write_Char:
   479                           	callstack 25
   480                           
   481                           ;incstack = 0
   482                           ;LCD_Write_Char@Data stored from wreg
   483   0009EE  6E05               	movwf	LCD_Write_Char@Data^0,c
   484                           
   485                           ;lcd.c: 128: RS = 1;
   486   0009F0  0E01               	movlw	1
   487   0009F2  6E0D               	movwf	_RS^0,c
   488                           
   489                           ;lcd.c: 129: LCD_Write_4Bit(Data & 0xF0);
   490   0009F4  5005               	movf	LCD_Write_Char@Data^0,w,c
   491   0009F6  0BF0               	andlw	240
   492   0009F8  ECE7  F004         	call	_LCD_Write_4Bit
   493                           
   494                           ;lcd.c: 130: LCD_Write_4Bit((Data << 4) & 0xF0);
   495   0009FC  3805               	swapf	LCD_Write_Char@Data^0,w,c
   496   0009FE  0BF0               	andlw	240
   497   000A00  0BF0               	andlw	240
   498   000A02  ECE7  F004         	call	_LCD_Write_4Bit
   499   000A06  0012               	return		;funcret
   500   000A08                     __end_of_LCD_Write_Char:
   501                           	callstack 0
   502                           
   503 ;; *************** function _LCD_Set_Cursor *****************
   504 ;; Defined at:
   505 ;;		line 139 in file "lcd.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  ROW             1    wreg     unsigned char 
   508 ;;  COL             1    5[COMRAM] unsigned char 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  ROW             1    6[COMRAM] unsigned char 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   520 ;;      Params:         1       0       0       0       0       0       0       0       0
   521 ;;      Locals:         1       0       0       0       0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0       0       0
   523 ;;      Totals:         2       0       0       0       0       0       0       0       0
   524 ;;Total ram usage:        2 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; Hardware stack levels required when called: 5
   527 ;; This function calls:
   528 ;;		_LCD_CMD
   529 ;; This function is called by:
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text4
   535   00092E                     __ptext4:
   536                           	callstack 0
   537   00092E                     _LCD_Set_Cursor:
   538                           	callstack 25
   539                           
   540                           ;incstack = 0
   541                           ;LCD_Set_Cursor@ROW stored from wreg
   542   00092E  6E07               	movwf	LCD_Set_Cursor@ROW^0,c
   543                           
   544                           ;lcd.c: 141: switch(ROW)
   545   000930  D014               	goto	l1031
   546   000932                     l1023:
   547                           
   548                           ;lcd.c: 144: LCD_CMD(0xC0 + COL-1);
   549   000932  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   550   000934  0FBF               	addlw	191
   551   000936  EC04  F005         	call	_LCD_CMD
   552                           
   553                           ;lcd.c: 145: break;
   554   00093A  0012               	return	
   555   00093C                     l1025:
   556                           
   557                           ;lcd.c: 147: LCD_CMD(0x94 + COL-1);
   558   00093C  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   559   00093E  0F93               	addlw	147
   560   000940  EC04  F005         	call	_LCD_CMD
   561                           
   562                           ;lcd.c: 148: break;
   563   000944  0012               	return	
   564   000946                     l1027:
   565                           
   566                           ;lcd.c: 150: LCD_CMD(0xD4 + COL-1);
   567   000946  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   568   000948  0FD3               	addlw	211
   569   00094A  EC04  F005         	call	_LCD_CMD
   570                           
   571                           ;lcd.c: 151: break;
   572   00094E  0012               	return	
   573   000950                     l1029:
   574                           
   575                           ;lcd.c: 154: LCD_CMD(0x80 + COL-1);
   576   000950  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   577   000952  0F7F               	addlw	127
   578   000954  EC04  F005         	call	_LCD_CMD
   579                           
   580                           ;lcd.c: 155: }
   581   000958  0012               	return	
   582   00095A                     l1031:
   583   00095A  5007               	movf	LCD_Set_Cursor@ROW^0,w,c
   584                           
   585                           ; Switch size 1, requested type "simple"
   586                           ; Number of cases is 3, Range of values is 2 to 4
   587                           ; switch strategies available:
   588                           ; Name         Instructions Cycles
   589                           ; simple_byte           10     6 (average)
   590                           ;	Chosen strategy is simple_byte
   591   00095C  0A02               	xorlw	2	; case 2
   592   00095E  B4D8               	btfsc	status,2,c
   593   000960  D7E8               	goto	l1023
   594   000962  0A01               	xorlw	1	; case 3
   595   000964  B4D8               	btfsc	status,2,c
   596   000966  D7EA               	goto	l1025
   597   000968  0A07               	xorlw	7	; case 4
   598   00096A  B4D8               	btfsc	status,2,c
   599   00096C  D7EC               	goto	l1027
   600   00096E  D7F0               	goto	l1029
   601   000970                     __end_of_LCD_Set_Cursor:
   602                           	callstack 0
   603                           
   604 ;; *************** function _LCD_Init *****************
   605 ;; Defined at:
   606 ;;		line 79 in file "lcd.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  I2C_Add         1    wreg     unsigned char 
   609 ;; Auto vars:     Size  Location     Type
   610 ;;  I2C_Add         1    6[COMRAM] unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   620 ;;      Params:         0       0       0       0       0       0       0       0       0
   621 ;;      Locals:         1       0       0       0       0       0       0       0       0
   622 ;;      Temps:          1       0       0       0       0       0       0       0       0
   623 ;;      Totals:         2       0       0       0       0       0       0       0       0
   624 ;;Total ram usage:        2 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; Hardware stack levels required when called: 5
   627 ;; This function calls:
   628 ;;		_IO_Expander_Write
   629 ;;		_LCD_CMD
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text5
   636   00080E                     __ptext5:
   637                           	callstack 0
   638   00080E                     _LCD_Init:
   639                           	callstack 25
   640                           
   641                           ;incstack = 0
   642                           ;LCD_Init@I2C_Add stored from wreg
   643   00080E  6E07               	movwf	LCD_Init@I2C_Add^0,c
   644                           
   645                           ;lcd.c: 81: i2c_add = I2C_Add;
   646   000810  C007  F00C         	movff	LCD_Init@I2C_Add,_i2c_add
   647                           
   648                           ;lcd.c: 82: IO_Expander_Write(0x00);
   649   000814  0E00               	movlw	0
   650   000816  EC11  F005         	call	_IO_Expander_Write
   651                           
   652                           ;lcd.c: 83: _delay((unsigned long)((30)*(4000000/4000.0)));
   653   00081A  0E27               	movlw	39
   654   00081C  6E06               	movwf	??_LCD_Init^0,c
   655   00081E  0EF5               	movlw	245
   656   000820                     u77:
   657   000820  2EE8               	decfsz	wreg,f,c
   658   000822  D7FE               	bra	u77
   659   000824  2E06               	decfsz	??_LCD_Init^0,f,c
   660   000826  D7FC               	bra	u77
   661   000828  0000               	nop	
   662                           
   663                           ;lcd.c: 84: LCD_CMD(0x03);
   664   00082A  0E03               	movlw	3
   665   00082C  EC04  F005         	call	_LCD_CMD
   666                           
   667                           ;lcd.c: 85: _delay((unsigned long)((5)*(4000000/4000.0)));
   668   000830  0E07               	movlw	7
   669   000832  6E06               	movwf	??_LCD_Init^0,c
   670   000834  0E7D               	movlw	125
   671   000836                     u87:
   672   000836  2EE8               	decfsz	wreg,f,c
   673   000838  D7FE               	bra	u87
   674   00083A  2E06               	decfsz	??_LCD_Init^0,f,c
   675   00083C  D7FC               	bra	u87
   676   00083E  0000               	nop	
   677                           
   678                           ;lcd.c: 86: LCD_CMD(0x03);
   679   000840  0E03               	movlw	3
   680   000842  EC04  F005         	call	_LCD_CMD
   681                           
   682                           ;lcd.c: 87: _delay((unsigned long)((5)*(4000000/4000.0)));
   683   000846  0E07               	movlw	7
   684   000848  6E06               	movwf	??_LCD_Init^0,c
   685   00084A  0E7D               	movlw	125
   686   00084C                     u97:
   687   00084C  2EE8               	decfsz	wreg,f,c
   688   00084E  D7FE               	bra	u97
   689   000850  2E06               	decfsz	??_LCD_Init^0,f,c
   690   000852  D7FC               	bra	u97
   691   000854  0000               	nop	
   692                           
   693                           ;lcd.c: 88: LCD_CMD(0x03);
   694   000856  0E03               	movlw	3
   695   000858  EC04  F005         	call	_LCD_CMD
   696                           
   697                           ;lcd.c: 89: _delay((unsigned long)((5)*(4000000/4000.0)));
   698   00085C  0E07               	movlw	7
   699   00085E  6E06               	movwf	??_LCD_Init^0,c
   700   000860  0E7D               	movlw	125
   701   000862                     u107:
   702   000862  2EE8               	decfsz	wreg,f,c
   703   000864  D7FE               	bra	u107
   704   000866  2E06               	decfsz	??_LCD_Init^0,f,c
   705   000868  D7FC               	bra	u107
   706   00086A  0000               	nop	
   707                           
   708                           ;lcd.c: 90: LCD_CMD(0x02);
   709   00086C  0E02               	movlw	2
   710   00086E  EC04  F005         	call	_LCD_CMD
   711                           
   712                           ;lcd.c: 91: _delay((unsigned long)((5)*(4000000/4000.0)));
   713   000872  0E07               	movlw	7
   714   000874  6E06               	movwf	??_LCD_Init^0,c
   715   000876  0E7D               	movlw	125
   716   000878                     u117:
   717   000878  2EE8               	decfsz	wreg,f,c
   718   00087A  D7FE               	bra	u117
   719   00087C  2E06               	decfsz	??_LCD_Init^0,f,c
   720   00087E  D7FC               	bra	u117
   721   000880  0000               	nop	
   722                           
   723                           ;lcd.c: 92: LCD_CMD(0x20 | (2 << 2));
   724   000882  0E28               	movlw	40
   725   000884  EC04  F005         	call	_LCD_CMD
   726                           
   727                           ;lcd.c: 93: _delay((unsigned long)((50)*(4000000/4000.0)));
   728   000888  0E41               	movlw	65
   729   00088A  6E06               	movwf	??_LCD_Init^0,c
   730   00088C  0EEE               	movlw	238
   731   00088E                     u127:
   732   00088E  2EE8               	decfsz	wreg,f,c
   733   000890  D7FE               	bra	u127
   734   000892  2E06               	decfsz	??_LCD_Init^0,f,c
   735   000894  D7FC               	bra	u127
   736   000896  D000               	nop2	
   737                           
   738                           ;lcd.c: 94: LCD_CMD(0x0C);
   739   000898  0E0C               	movlw	12
   740   00089A  EC04  F005         	call	_LCD_CMD
   741                           
   742                           ;lcd.c: 95: _delay((unsigned long)((50)*(4000000/4000.0)));
   743   00089E  0E41               	movlw	65
   744   0008A0  6E06               	movwf	??_LCD_Init^0,c
   745   0008A2  0EEE               	movlw	238
   746   0008A4                     u137:
   747   0008A4  2EE8               	decfsz	wreg,f,c
   748   0008A6  D7FE               	bra	u137
   749   0008A8  2E06               	decfsz	??_LCD_Init^0,f,c
   750   0008AA  D7FC               	bra	u137
   751   0008AC  D000               	nop2	
   752                           
   753                           ;lcd.c: 96: LCD_CMD(0x01);
   754   0008AE  0E01               	movlw	1
   755   0008B0  EC04  F005         	call	_LCD_CMD
   756                           
   757                           ;lcd.c: 97: _delay((unsigned long)((50)*(4000000/4000.0)));
   758   0008B4  0E41               	movlw	65
   759   0008B6  6E06               	movwf	??_LCD_Init^0,c
   760   0008B8  0EEE               	movlw	238
   761   0008BA                     u147:
   762   0008BA  2EE8               	decfsz	wreg,f,c
   763   0008BC  D7FE               	bra	u147
   764   0008BE  2E06               	decfsz	??_LCD_Init^0,f,c
   765   0008C0  D7FC               	bra	u147
   766   0008C2  D000               	nop2	
   767                           
   768                           ;lcd.c: 98: LCD_CMD(0x04 | 0x02);
   769   0008C4  0E06               	movlw	6
   770   0008C6  EC04  F005         	call	_LCD_CMD
   771                           
   772                           ;lcd.c: 99: _delay((unsigned long)((50)*(4000000/4000.0)));
   773   0008CA  0E41               	movlw	65
   774   0008CC  6E06               	movwf	??_LCD_Init^0,c
   775   0008CE  0EEE               	movlw	238
   776   0008D0                     u157:
   777   0008D0  2EE8               	decfsz	wreg,f,c
   778   0008D2  D7FE               	bra	u157
   779   0008D4  2E06               	decfsz	??_LCD_Init^0,f,c
   780   0008D6  D7FC               	bra	u157
   781   0008D8  D000               	nop2	
   782   0008DA  0012               	return		;funcret
   783   0008DC                     __end_of_LCD_Init:
   784                           	callstack 0
   785                           
   786 ;; *************** function _LCD_Clear *****************
   787 ;; Defined at:
   788 ;;		line 182 in file "lcd.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, status,2, status,0, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   802 ;;      Params:         0       0       0       0       0       0       0       0       0
   803 ;;      Locals:         0       0       0       0       0       0       0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0       0       0
   805 ;;      Totals:         0       0       0       0       0       0       0       0       0
   806 ;;Total ram usage:        0 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; Hardware stack levels required when called: 5
   809 ;; This function calls:
   810 ;;		_LCD_CMD
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text6
   817   000A76                     __ptext6:
   818                           	callstack 0
   819   000A76                     _LCD_Clear:
   820                           	callstack 25
   821                           
   822                           ;lcd.c: 184: LCD_CMD(0x01);
   823                           
   824                           ;incstack = 0
   825   000A76  0E01               	movlw	1
   826   000A78  EC04  F005         	call	_LCD_CMD
   827                           
   828                           ;lcd.c: 185: _delay((unsigned long)((40)*(4000000/4000000.0)));
   829   000A7C  0E0D               	movlw	13
   830   000A7E                     u167:
   831   000A7E  2EE8               	decfsz	wreg,f,c
   832   000A80  D7FE               	bra	u167
   833   000A82  0000               	nop	
   834   000A84  0012               	return		;funcret
   835   000A86                     __end_of_LCD_Clear:
   836                           	callstack 0
   837                           
   838 ;; *************** function _LCD_CMD *****************
   839 ;; Defined at:
   840 ;;		line 119 in file "lcd.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  CMD             1    wreg     unsigned char 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  CMD             1    4[COMRAM] unsigned char 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   854 ;;      Params:         0       0       0       0       0       0       0       0       0
   855 ;;      Locals:         1       0       0       0       0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0       0       0
   857 ;;      Totals:         1       0       0       0       0       0       0       0       0
   858 ;;Total ram usage:        1 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; Hardware stack levels required when called: 4
   861 ;; This function calls:
   862 ;;		_LCD_Write_4Bit
   863 ;; This function is called by:
   864 ;;		_LCD_Init
   865 ;;		_LCD_Set_Cursor
   866 ;;		_LCD_Clear
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text7
   871   000A08                     __ptext7:
   872                           	callstack 0
   873   000A08                     _LCD_CMD:
   874                           	callstack 25
   875                           
   876                           ;incstack = 0
   877                           ;LCD_CMD@CMD stored from wreg
   878   000A08  6E05               	movwf	LCD_CMD@CMD^0,c
   879                           
   880                           ;lcd.c: 121: RS = 0;
   881   000A0A  0E00               	movlw	0
   882   000A0C  6E0D               	movwf	_RS^0,c
   883                           
   884                           ;lcd.c: 122: LCD_Write_4Bit(CMD & 0xF0);
   885   000A0E  5005               	movf	LCD_CMD@CMD^0,w,c
   886   000A10  0BF0               	andlw	240
   887   000A12  ECE7  F004         	call	_LCD_Write_4Bit
   888                           
   889                           ;lcd.c: 123: LCD_Write_4Bit((CMD << 4) & 0xF0);
   890   000A16  3805               	swapf	LCD_CMD@CMD^0,w,c
   891   000A18  0BF0               	andlw	240
   892   000A1A  0BF0               	andlw	240
   893   000A1C  ECE7  F004         	call	_LCD_Write_4Bit
   894   000A20  0012               	return		;funcret
   895   000A22                     __end_of_LCD_CMD:
   896                           	callstack 0
   897                           
   898 ;; *************** function _LCD_Write_4Bit *****************
   899 ;; Defined at:
   900 ;;		line 110 in file "lcd.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  Nibble          1    wreg     unsigned char 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  Nibble          1    3[COMRAM] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   914 ;;      Params:         0       0       0       0       0       0       0       0       0
   915 ;;      Locals:         1       0       0       0       0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0       0       0
   917 ;;      Totals:         1       0       0       0       0       0       0       0       0
   918 ;;Total ram usage:        1 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 3
   921 ;; This function calls:
   922 ;;		_IO_Expander_Write
   923 ;; This function is called by:
   924 ;;		_LCD_CMD
   925 ;;		_LCD_Write_Char
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text8
   930   0009CE                     __ptext8:
   931                           	callstack 0
   932   0009CE                     _LCD_Write_4Bit:
   933                           	callstack 25
   934                           
   935                           ;incstack = 0
   936                           ;LCD_Write_4Bit@Nibble stored from wreg
   937   0009CE  6E04               	movwf	LCD_Write_4Bit@Nibble^0,c
   938                           
   939                           ;lcd.c: 113: Nibble |= RS;
   940   0009D0  500D               	movf	_RS^0,w,c
   941   0009D2  1204               	iorwf	LCD_Write_4Bit@Nibble^0,f,c
   942                           
   943                           ;lcd.c: 114: IO_Expander_Write(Nibble | 0x04);
   944   0009D4  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
   945   0009D6  0904               	iorlw	4
   946   0009D8  EC11  F005         	call	_IO_Expander_Write
   947                           
   948                           ;lcd.c: 115: IO_Expander_Write(Nibble & 0xFB);
   949   0009DC  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
   950   0009DE  0BFB               	andlw	251
   951   0009E0  EC11  F005         	call	_IO_Expander_Write
   952                           
   953                           ;lcd.c: 116: _delay((unsigned long)((50)*(4000000/4000000.0)));
   954   0009E4  0E10               	movlw	16
   955   0009E6                     u177:
   956   0009E6  2EE8               	decfsz	wreg,f,c
   957   0009E8  D7FE               	bra	u177
   958   0009EA  D000               	nop2	
   959   0009EC  0012               	return		;funcret
   960   0009EE                     __end_of_LCD_Write_4Bit:
   961                           	callstack 0
   962                           
   963 ;; *************** function _IO_Expander_Write *****************
   964 ;; Defined at:
   965 ;;		line 102 in file "lcd.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  Data            1    wreg     unsigned char 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  Data            1    2[COMRAM] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   979 ;;      Params:         0       0       0       0       0       0       0       0       0
   980 ;;      Locals:         1       0       0       0       0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0       0       0
   982 ;;      Totals:         1       0       0       0       0       0       0       0       0
   983 ;;Total ram usage:        1 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 2
   986 ;; This function calls:
   987 ;;		_I2C_Master_Start
   988 ;;		_I2C_Master_Stop
   989 ;;		_I2C_Master_Write
   990 ;; This function is called by:
   991 ;;		_LCD_Init
   992 ;;		_LCD_Write_4Bit
   993 ;;		_noBacklight
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text9
   998   000A22                     __ptext9:
   999                           	callstack 0
  1000   000A22                     _IO_Expander_Write:
  1001                           	callstack 27
  1002                           
  1003                           ;incstack = 0
  1004                           ;IO_Expander_Write@Data stored from wreg
  1005   000A22  6E03               	movwf	IO_Expander_Write@Data^0,c
  1006                           
  1007                           ;lcd.c: 104: I2C_Master_Start();
  1008   000A24  EC4D  F005         	call	_I2C_Master_Start	;wreg free
  1009                           
  1010                           ;lcd.c: 105: I2C_Master_Write(i2c_add);
  1011   000A28  500C               	movf	_i2c_add^0,w,c
  1012   000A2A  EC29  F005         	call	_I2C_Master_Write
  1013                           
  1014                           ;lcd.c: 106: I2C_Master_Write(Data | BackLight_State);
  1015   000A2E  5003               	movf	IO_Expander_Write@Data^0,w,c
  1016   000A30  100E               	iorwf	_BackLight_State^0,w,c
  1017   000A32  EC29  F005         	call	_I2C_Master_Write
  1018                           
  1019                           ;lcd.c: 107: I2C_Master_Stop();
  1020   000A36  EC49  F005         	call	_I2C_Master_Stop	;wreg free
  1021   000A3A  0012               	return		;funcret
  1022   000A3C                     __end_of_IO_Expander_Write:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _I2C_Master_Write *****************
  1026 ;; Defined at:
  1027 ;;		line 55 in file "lcd.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  data            1    wreg     unsigned char 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  data            1    1[COMRAM] unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      unsigned char 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0
  1042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1044 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1045 ;;Total ram usage:        1 bytes
  1046 ;; Hardware stack levels used: 1
  1047 ;; Hardware stack levels required when called: 1
  1048 ;; This function calls:
  1049 ;;		_I2C_Master_Wait
  1050 ;; This function is called by:
  1051 ;;		_IO_Expander_Write
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text10
  1056   000A52                     __ptext10:
  1057                           	callstack 0
  1058   000A52                     _I2C_Master_Write:
  1059                           	callstack 27
  1060                           
  1061                           ;incstack = 0
  1062                           ;I2C_Master_Write@data stored from wreg
  1063   000A52  6E02               	movwf	I2C_Master_Write@data^0,c
  1064                           
  1065                           ;lcd.c: 57: I2C_Master_Wait();
  1066   000A54  EC32  F005         	call	_I2C_Master_Wait	;wreg free
  1067                           
  1068                           ;lcd.c: 58: SSPBUF = data;
  1069   000A58  C002  FFC9         	movff	I2C_Master_Write@data,4041	;volatile
  1070   000A5C                     l69:
  1071   000A5C  A69E               	btfss	3998,3,c	;volatile
  1072   000A5E  D7FE               	goto	l69
  1073                           
  1074                           ;lcd.c: 60: SSPIF = 0;
  1075   000A60  969E               	bcf	3998,3,c	;volatile
  1076                           
  1077                           ;lcd.c: 61: return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  1078   000A62  0012               	return		;funcret
  1079   000A64                     __end_of_I2C_Master_Write:
  1080                           	callstack 0
  1081                           
  1082 ;; *************** function _I2C_Master_Stop *****************
  1083 ;; Defined at:
  1084 ;;		line 35 in file "lcd.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1098 ;;      Params:         0       0       0       0       0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1101 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1102 ;;Total ram usage:        0 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; Hardware stack levels required when called: 1
  1105 ;; This function calls:
  1106 ;;		_I2C_Master_Wait
  1107 ;; This function is called by:
  1108 ;;		_IO_Expander_Write
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text11
  1113   000A92                     __ptext11:
  1114                           	callstack 0
  1115   000A92                     _I2C_Master_Stop:
  1116                           	callstack 27
  1117                           
  1118                           ;lcd.c: 37: I2C_Master_Wait();
  1119                           
  1120                           ;incstack = 0
  1121   000A92  EC32  F005         	call	_I2C_Master_Wait	;wreg free
  1122                           
  1123                           ;lcd.c: 38: PEN = 1;
  1124   000A96  84C5               	bsf	4037,2,c	;volatile
  1125   000A98  0012               	return		;funcret
  1126   000A9A                     __end_of_I2C_Master_Stop:
  1127                           	callstack 0
  1128                           
  1129 ;; *************** function _I2C_Master_Start *****************
  1130 ;; Defined at:
  1131 ;;		line 23 in file "lcd.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1145 ;;      Params:         0       0       0       0       0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1148 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 1
  1152 ;; This function calls:
  1153 ;;		_I2C_Master_Wait
  1154 ;; This function is called by:
  1155 ;;		_IO_Expander_Write
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text12
  1161   000A9A                     __ptext12:
  1162                           	callstack 0
  1163   000A9A                     _I2C_Master_Start:
  1164                           	callstack 27
  1165                           
  1166                           ;lcd.c: 25: I2C_Master_Wait();
  1167                           
  1168                           ;incstack = 0
  1169   000A9A  EC32  F005         	call	_I2C_Master_Wait	;wreg free
  1170                           
  1171                           ;lcd.c: 26: SEN = 1;
  1172   000A9E  80C5               	bsf	4037,0,c	;volatile
  1173   000AA0  0012               	return		;funcret
  1174   000AA2                     __end_of_I2C_Master_Start:
  1175                           	callstack 0
  1176                           
  1177 ;; *************** function _I2C_Master_Wait *****************
  1178 ;; Defined at:
  1179 ;;		line 18 in file "lcd.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1193 ;;      Params:         0       0       0       0       0       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1195 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1196 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1197 ;;Total ram usage:        1 bytes
  1198 ;; Hardware stack levels used: 1
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_I2C_Master_Start
  1203 ;;		_I2C_Master_Stop
  1204 ;;		_I2C_Master_Write
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text13
  1209   000A64                     __ptext13:
  1210                           	callstack 0
  1211   000A64                     _I2C_Master_Wait:
  1212                           	callstack 27
  1213                           
  1214                           ;lcd.c: 20: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1215                           
  1216                           ;incstack = 0
  1217   000A64  B4C7               	btfsc	199,2,c	;volatile
  1218   000A66  D7FE               	goto	__ptext13
  1219   000A68  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  1220   000A6C  0E1F               	movlw	31
  1221   000A6E  1601               	andwf	??_I2C_Master_Wait^0,f,c
  1222   000A70  B4D8               	btfsc	status,2,c
  1223   000A72  0012               	return	
  1224   000A74  D7F7               	goto	__ptext13
  1225   000A76                     __end_of_I2C_Master_Wait:
  1226                           	callstack 0
  1227                           
  1228 ;; *************** function _I2C_Master_Init *****************
  1229 ;; Defined at:
  1230 ;;		line 8 in file "lcd.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1244 ;;      Params:         0       0       0       0       0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used: 1
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text14
  1258   000A3C                     __ptext14:
  1259                           	callstack 0
  1260   000A3C                     _I2C_Master_Init:
  1261                           	callstack 30
  1262                           
  1263                           ;lcd.c: 10: SSPCON1 = 0x28;
  1264                           
  1265                           ;incstack = 0
  1266   000A3C  0E28               	movlw	40
  1267   000A3E  6EC6               	movwf	198,c	;volatile
  1268                           
  1269                           ;lcd.c: 11: SSPCON2 = 0x00;
  1270   000A40  0E00               	movlw	0
  1271   000A42  6EC5               	movwf	197,c	;volatile
  1272                           
  1273                           ;lcd.c: 12: SSPSTAT = 0x00;
  1274   000A44  0E00               	movlw	0
  1275   000A46  6EC7               	movwf	199,c	;volatile
  1276                           
  1277                           ;lcd.c: 13: SSPADD = ((4000000/4)/100000) - 1;
  1278   000A48  0E09               	movlw	9
  1279   000A4A  6EC8               	movwf	200,c	;volatile
  1280                           
  1281                           ;lcd.c: 14: TRISB1 = 1;
  1282   000A4C  8293               	bsf	3987,1,c	;volatile
  1283                           
  1284                           ;lcd.c: 15: TRISB0 = 1;
  1285   000A4E  8093               	bsf	3987,0,c	;volatile
  1286   000A50  0012               	return		;funcret
  1287   000A52                     __end_of_I2C_Master_Init:
  1288                           	callstack 0
  1289                           
  1290                           	psect	rparam
  1291   000000                     
  1292                           	psect	idloc
  1293                           
  1294                           ;Config register IDLOC0 @ 0x200000
  1295                           ;	unspecified, using default values
  1296   200000                     	org	2097152
  1297   200000  FF                 	db	255
  1298                           
  1299                           ;Config register IDLOC1 @ 0x200001
  1300                           ;	unspecified, using default values
  1301   200001                     	org	2097153
  1302   200001  FF                 	db	255
  1303                           
  1304                           ;Config register IDLOC2 @ 0x200002
  1305                           ;	unspecified, using default values
  1306   200002                     	org	2097154
  1307   200002  FF                 	db	255
  1308                           
  1309                           ;Config register IDLOC3 @ 0x200003
  1310                           ;	unspecified, using default values
  1311   200003                     	org	2097155
  1312   200003  FF                 	db	255
  1313                           
  1314                           ;Config register IDLOC4 @ 0x200004
  1315                           ;	unspecified, using default values
  1316   200004                     	org	2097156
  1317   200004  FF                 	db	255
  1318                           
  1319                           ;Config register IDLOC5 @ 0x200005
  1320                           ;	unspecified, using default values
  1321   200005                     	org	2097157
  1322   200005  FF                 	db	255
  1323                           
  1324                           ;Config register IDLOC6 @ 0x200006
  1325                           ;	unspecified, using default values
  1326   200006                     	org	2097158
  1327   200006  FF                 	db	255
  1328                           
  1329                           ;Config register IDLOC7 @ 0x200007
  1330                           ;	unspecified, using default values
  1331   200007                     	org	2097159
  1332   200007  FF                 	db	255
  1333                           
  1334                           	psect	config
  1335                           
  1336                           ;Config register CONFIG1L @ 0x300000
  1337                           ;	unspecified, using default values
  1338                           ;	PLL Prescaler Selection bits
  1339                           ;	PLLDIV = 0x0, unprogrammed default
  1340                           ;	System Clock Postscaler Selection bits
  1341                           ;	CPUDIV = 0x0, unprogrammed default
  1342                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1343                           ;	USBDIV = 0x0, unprogrammed default
  1344   300000                     	org	3145728
  1345   300000  00                 	db	0
  1346                           
  1347                           ;Config register CONFIG1H @ 0x300001
  1348                           ;	Oscillator Selection bits
  1349                           ;	FOSC = HS, HS oscillator (HS)
  1350                           ;	Fail-Safe Clock Monitor Enable bit
  1351                           ;	FCMEN = 0x0, unprogrammed default
  1352                           ;	Internal/External Oscillator Switchover bit
  1353                           ;	IESO = 0x0, unprogrammed default
  1354   300001                     	org	3145729
  1355   300001  0C                 	db	12
  1356                           
  1357                           ;Config register CONFIG2L @ 0x300002
  1358                           ;	unspecified, using default values
  1359                           ;	Power-up Timer Enable bit
  1360                           ;	PWRT = 0x1, unprogrammed default
  1361                           ;	Brown-out Reset Enable bits
  1362                           ;	BOR = 0x3, unprogrammed default
  1363                           ;	Brown-out Reset Voltage bits
  1364                           ;	BORV = 0x3, unprogrammed default
  1365                           ;	USB Voltage Regulator Enable bit
  1366                           ;	VREGEN = 0x0, unprogrammed default
  1367   300002                     	org	3145730
  1368   300002  1F                 	db	31
  1369                           
  1370                           ;Config register CONFIG2H @ 0x300003
  1371                           ;	Watchdog Timer Enable bit
  1372                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1373                           ;	Watchdog Timer Postscale Select bits
  1374                           ;	WDTPS = 0xF, unprogrammed default
  1375   300003                     	org	3145731
  1376   300003  1E                 	db	30
  1377                           
  1378                           ; Padding undefined space
  1379   300004                     	org	3145732
  1380   300004  FF                 	db	255
  1381                           
  1382                           ;Config register CONFIG3H @ 0x300005
  1383                           ;	CCP2 MUX bit
  1384                           ;	CCP2MX = 0x1, unprogrammed default
  1385                           ;	PORTB A/D Enable bit
  1386                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1387                           ;	Low-Power Timer 1 Oscillator Enable bit
  1388                           ;	LPT1OSC = 0x0, unprogrammed default
  1389                           ;	MCLR Pin Enable bit
  1390                           ;	MCLRE = 0x1, unprogrammed default
  1391   300005                     	org	3145733
  1392   300005  81                 	db	129
  1393                           
  1394                           ;Config register CONFIG4L @ 0x300006
  1395                           ;	Stack Full/Underflow Reset Enable bit
  1396                           ;	STVREN = 0x1, unprogrammed default
  1397                           ;	Single-Supply ICSP Enable bit
  1398                           ;	LVP = OFF, Single-Supply ICSP disabled
  1399                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1400                           ;	ICPRT = 0x0, unprogrammed default
  1401                           ;	Extended Instruction Set Enable bit
  1402                           ;	XINST = 0x0, unprogrammed default
  1403                           ;	Background Debugger Enable bit
  1404                           ;	DEBUG = 0x1, unprogrammed default
  1405   300006                     	org	3145734
  1406   300006  81                 	db	129
  1407                           
  1408                           ; Padding undefined space
  1409   300007                     	org	3145735
  1410   300007  FF                 	db	255
  1411                           
  1412                           ;Config register CONFIG5L @ 0x300008
  1413                           ;	unspecified, using default values
  1414                           ;	Code Protection bit
  1415                           ;	CP0 = 0x1, unprogrammed default
  1416                           ;	Code Protection bit
  1417                           ;	CP1 = 0x1, unprogrammed default
  1418                           ;	Code Protection bit
  1419                           ;	CP2 = 0x1, unprogrammed default
  1420                           ;	Code Protection bit
  1421                           ;	CP3 = 0x1, unprogrammed default
  1422   300008                     	org	3145736
  1423   300008  0F                 	db	15
  1424                           
  1425                           ;Config register CONFIG5H @ 0x300009
  1426                           ;	unspecified, using default values
  1427                           ;	Boot Block Code Protection bit
  1428                           ;	CPB = 0x1, unprogrammed default
  1429                           ;	Data EEPROM Code Protection bit
  1430                           ;	CPD = 0x1, unprogrammed default
  1431   300009                     	org	3145737
  1432   300009  C0                 	db	192
  1433                           
  1434                           ;Config register CONFIG6L @ 0x30000A
  1435                           ;	unspecified, using default values
  1436                           ;	Write Protection bit
  1437                           ;	WRT0 = 0x1, unprogrammed default
  1438                           ;	Write Protection bit
  1439                           ;	WRT1 = 0x1, unprogrammed default
  1440                           ;	Write Protection bit
  1441                           ;	WRT2 = 0x1, unprogrammed default
  1442                           ;	Write Protection bit
  1443                           ;	WRT3 = 0x1, unprogrammed default
  1444   30000A                     	org	3145738
  1445   30000A  0F                 	db	15
  1446                           
  1447                           ;Config register CONFIG6H @ 0x30000B
  1448                           ;	unspecified, using default values
  1449                           ;	Configuration Register Write Protection bit
  1450                           ;	WRTC = 0x1, unprogrammed default
  1451                           ;	Boot Block Write Protection bit
  1452                           ;	WRTB = 0x1, unprogrammed default
  1453                           ;	Data EEPROM Write Protection bit
  1454                           ;	WRTD = 0x1, unprogrammed default
  1455   30000B                     	org	3145739
  1456   30000B  E0                 	db	224
  1457                           
  1458                           ;Config register CONFIG7L @ 0x30000C
  1459                           ;	unspecified, using default values
  1460                           ;	Table Read Protection bit
  1461                           ;	EBTR0 = 0x1, unprogrammed default
  1462                           ;	Table Read Protection bit
  1463                           ;	EBTR1 = 0x1, unprogrammed default
  1464                           ;	Table Read Protection bit
  1465                           ;	EBTR2 = 0x1, unprogrammed default
  1466                           ;	Table Read Protection bit
  1467                           ;	EBTR3 = 0x1, unprogrammed default
  1468   30000C                     	org	3145740
  1469   30000C  0F                 	db	15
  1470                           
  1471                           ;Config register CONFIG7H @ 0x30000D
  1472                           ;	unspecified, using default values
  1473                           ;	Boot Block Table Read Protection bit
  1474                           ;	EBTRB = 0x1, unprogrammed default
  1475   30000D                     	org	3145741
  1476   30000D  40                 	db	64
  1477                           tosu	equ	0xFFF
  1478                           tosh	equ	0xFFE
  1479                           tosl	equ	0xFFD
  1480                           stkptr	equ	0xFFC
  1481                           pclatu	equ	0xFFB
  1482                           pclath	equ	0xFFA
  1483                           pcl	equ	0xFF9
  1484                           tblptru	equ	0xFF8
  1485                           tblptrh	equ	0xFF7
  1486                           tblptrl	equ	0xFF6
  1487                           tablat	equ	0xFF5
  1488                           prodh	equ	0xFF4
  1489                           prodl	equ	0xFF3
  1490                           indf0	equ	0xFEF
  1491                           postinc0	equ	0xFEE
  1492                           postdec0	equ	0xFED
  1493                           preinc0	equ	0xFEC
  1494                           plusw0	equ	0xFEB
  1495                           fsr0h	equ	0xFEA
  1496                           fsr0l	equ	0xFE9
  1497                           wreg	equ	0xFE8
  1498                           indf1	equ	0xFE7
  1499                           postinc1	equ	0xFE6
  1500                           postdec1	equ	0xFE5
  1501                           preinc1	equ	0xFE4
  1502                           plusw1	equ	0xFE3
  1503                           fsr1h	equ	0xFE2
  1504                           fsr1l	equ	0xFE1
  1505                           bsr	equ	0xFE0
  1506                           indf2	equ	0xFDF
  1507                           postinc2	equ	0xFDE
  1508                           postdec2	equ	0xFDD
  1509                           preinc2	equ	0xFDC
  1510                           plusw2	equ	0xFDB
  1511                           fsr2h	equ	0xFDA
  1512                           fsr2l	equ	0xFD9
  1513                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), STR_2(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Write_String
    _noBacklight->_IO_Expander_Write
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     939
                                              9 COMRAM     2     2      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                        _noBacklight
 ---------------------------------------------------------------------------------
 (1) _noBacklight                                          0     0      0      30
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     4     3      1     332
                                              5 COMRAM     4     3      1
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       1     1      0      90
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       2     1      1     352
                                              5 COMRAM     2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     135
                                              5 COMRAM     2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      90
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              1     1      0      90
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       1     1      0      60
                                              3 COMRAM     1     1      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (2) _IO_Expander_Write                                    1     1      0      30
                                              2 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      15
                                              1 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _I2C_Master_Start
     _I2C_Master_Wait
   _LCD_Clear
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Init
     _IO_Expander_Write
     _LCD_CMD
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
   _noBacklight
     _IO_Expander_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B       E       1       14.7%
BITBIGSFRh          36      0       0      20        0.0%
BITBIGSFRll         33      0       0      23        0.0%
BITBIGSFRlhh        26      0       0      21        0.0%
BITBIGSFRlhl         A      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      24        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Sep  1 22:25:58 2024

                       l69 0A5C                         _RS 000D                         u67 08E6  
                       u77 0820                         u87 0836                         u97 084C  
                      u107 0862                        u117 0878                        u127 088E  
                      u137 08A4                        u147 08BA                        u157 08D0  
                      u167 0A7E                        _PEN 7E2A                        u177 09E6  
                      _SEN 7E28                        wreg 0FE8            __end_of_LCD_CMD 0A22  
      LCD_Write_String@Str 0006             _LCD_Set_Cursor 092E                       l1023 0932  
                     l1031 095A                       l1015 097A                       l1025 093C  
                     l1027 0946                       l1019 0994                       l1029 0950  
                     l1049 091A                       STR_1 0801                       STR_2 0801  
        ?_LCD_Write_String 0006                       _main 08DC                       start 0000  
       ??_LCD_Write_String 0007               ___param_bank 0000       LCD_Write_4Bit@Nibble 0004  
         __end_of_LCD_Init 08DC           ?_I2C_Master_Init 0001           ?_I2C_Master_Wait 0001  
         ?_I2C_Master_Stop 0001                      ?_main 0001                      _SSPIF 7CF3  
   __end_of_LCD_Set_Cursor 0970                      tablat 0FF5                      status 0FD8  
           _LCD_Write_4Bit 09CE             _LCD_Write_Char 09EE            __initialization 09AE  
             __end_of_main 092E          _IO_Expander_Write 0A22         ?_IO_Expander_Write 0001  
                   ??_main 000A          __end_of_LCD_Clear 0A86              __activetblptr 0002  
                ??_LCD_CMD 0005          ?_I2C_Master_Start 0001          ?_I2C_Master_Write 0001  
      ??_IO_Expander_Write 0003            ?_LCD_Set_Cursor 0006         ??_I2C_Master_Start 0002  
       ??_I2C_Master_Write 0002                     _SSPADD 0FC8                     _TRISB0 7C98  
                   _TRISB1 7C99                     _SSPBUF 0FC9     __end_of_LCD_Write_4Bit 09EE  
   __end_of_LCD_Write_Char 0A08  __end_of_IO_Expander_Write 0A3C                     isa$std 0001  
             __pdataCOMRAM 000E               __mediumconst 0000                     tblptrh 0FF7  
                   tblptrl 0FF6                     tblptru 0FF8                 __accesstop 0060  
  __end_of__initialization 09C4                  ?_LCD_Init 0001            ?_LCD_Write_4Bit 0001  
            ___rparam_used 0001            ?_LCD_Write_Char 0001             __pcstackCOMRAM 0001  
               ??_LCD_Init 0006                    _ACKSTAT 7E2E                    _LCD_CMD 0A08  
                  _SSPCON1 0FC6                    _SSPCON2 0FC5                    _SSPSTAT 0FC7  
                  _i2c_add 000C                    __Hparam 0000                    __Lparam 0000  
             __psmallconst 0800                    __pcinit 09AE                    __ramtop 0800  
         ??_LCD_Set_Cursor 0007                    __ptext0 08DC                    __ptext1 0A86  
                  __ptext2 0970                    __ptext3 09EE                    __ptext4 092E  
                  __ptext5 080E                    __ptext6 0A76                    __ptext7 0A08  
                  __ptext8 09CE                    __ptext9 0A22                  _LCD_Clear 0A76  
     end_of_initialization 09C4              __Lmediumconst 0000                 LCD_CMD@CMD 0005  
               ?_LCD_Clear 0001           ??_LCD_Write_4Bit 0004          LCD_Write_String@i 0008  
         ??_LCD_Write_Char 0005              ??_noBacklight 0004           _LCD_Write_String 0970  
            __pidataCOMRAM 0AA2        start_initialization 09AE          ??_I2C_Master_Init 0001  
        ??_I2C_Master_Wait 0001          ??_I2C_Master_Stop 0002        __end_of_noBacklight 0A92  
                 ?_LCD_CMD 0001                __pbssCOMRAM 000C                ??_LCD_Clear 0006  
         _I2C_Master_Start 0A9A           _I2C_Master_Write 0A52      IO_Expander_Write@Data 0003  
     I2C_Master_Write@data 0002                __smallconst 0800                   _LCD_Init 080E  
              _noBacklight 0A86   __end_of_LCD_Write_String 09AE                   __Hrparam 0000  
                 __Lrparam 0000            _I2C_Master_Init 0A3C            _I2C_Master_Wait 0A64  
          _I2C_Master_Stop 0A92                   __ptext10 0A52                   __ptext11 0A92  
                 __ptext12 0A9A                   __ptext13 0A64                   __ptext14 0A3C  
          _BackLight_State 000E                   isa$xinst 0000   __end_of_I2C_Master_Start 0AA2  
 __end_of_I2C_Master_Write 0A64         LCD_Write_Char@Data 0005    __end_of_I2C_Master_Init 0A52  
  __end_of_I2C_Master_Wait 0A76    __end_of_I2C_Master_Stop 0A9A            LCD_Init@I2C_Add 0007  
        LCD_Set_Cursor@COL 0006          LCD_Set_Cursor@ROW 0007               ?_noBacklight 0001  
