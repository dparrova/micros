

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Sep  4 22:40:10 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Generated 05/01/2024 GMT
    38                           ; 
    39                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000000                     
    72                           	psect	idataCOMRAM
    73   000C2A                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _BackLight_State
    77   000C2A  08                 	db	8
    78   000000                     _TRISB	set	3987
    79   000000                     _RB7	set	31759
    80   000000                     _RB6	set	31758
    81   000000                     _RB5	set	31757
    82   000000                     _RB4	set	31756
    83   000000                     _GIE	set	32663
    84   000000                     _RBIE	set	32659
    85   000000                     _ACKSTAT	set	32302
    86   000000                     _PEN	set	32298
    87   000000                     _SEN	set	32296
    88   000000                     _TRISB0	set	31896
    89   000000                     _PORTB	set	3969
    90   000000                     _LATB	set	3978
    91   000000                     _SSPCON2	set	4037
    92   000000                     _SSPCON1	set	4038
    93   000000                     _TRISB1	set	31897
    94   000000                     _SSPBUF	set	4041
    95   000000                     _SSPADD	set	4040
    96   000000                     _SSPSTAT	set	4039
    97   000000                     _RBPU	set	32655
    98   000000                     _TRISD	set	3989
    99   000000                     _SSPIF	set	31987
   100   000000                     _LATD	set	3980
   101   000000                     _RBIF	set	32656
   102                           
   103                           	psect	smallconst
   104   000800                     __psmallconst:
   105                           	callstack 0
   106   000800  00                 	db	0
   107   000801                     STR_3:
   108   000801  50                 	db	80	;'P'
   109   000802  69                 	db	105	;'i'
   110   000803  65                 	db	101	;'e'
   111   000804  7A                 	db	122	;'z'
   112   000805  61                 	db	97	;'a'
   113   000806  73                 	db	115	;'s'
   114   000807  20                 	db	32
   115   000808  61                 	db	97	;'a'
   116   000809  20                 	db	32
   117   00080A  63                 	db	99	;'c'
   118   00080B  6F                 	db	111	;'o'
   119   00080C  6E                 	db	110	;'n'
   120   00080D  74                 	db	116	;'t'
   121   00080E  61                 	db	97	;'a'
   122   00080F  72                 	db	114	;'r'
   123   000810  3A                 	db	58	;':'
   124   000811  00                 	db	0
   125   000812                     STR_2:
   126   000812  47                 	db	71	;'G'
   127   000813  72                 	db	114	;'r'
   128   000814  75                 	db	117	;'u'
   129   000815  70                 	db	112	;'p'
   130   000816  6F                 	db	111	;'o'
   131   000817  20                 	db	32
   132   000818  32                 	db	50	;'2'
   133   000819  3A                 	db	58	;':'
   134   00081A  00                 	db	0
   135   00081B                     STR_1:
   136   00081B  42                 	db	66	;'B'
   137   00081C  69                 	db	105	;'i'
   138   00081D  65                 	db	101	;'e'
   139   00081E  00                 	db	0
   140   00081F  00                 	db	0	; dummy byte at the end
   141   000000                     
   142                           ; #config settings
   143                           
   144                           	psect	cinit
   145   000B00                     __pcinit:
   146                           	callstack 0
   147   000B00                     start_initialization:
   148                           	callstack 0
   149   000B00                     __initialization:
   150                           	callstack 0
   151                           
   152                           ; Initialize objects allocated to COMRAM (1 bytes)
   153                           ; load TBLPTR registers with __pidataCOMRAM
   154   000B00  0E2A               	movlw	low __pidataCOMRAM
   155   000B02  6EF6               	movwf	tblptrl,c
   156   000B04  0E0C               	movlw	high __pidataCOMRAM
   157   000B06  6EF7               	movwf	tblptrh,c
   158   000B08  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   159   000B0A  6EF8               	movwf	tblptru,c
   160   000B0C  0009               	tblrd		*+	;fetch initializer
   161   000B0E  CFF5 F00F          	movff	tablat,__pdataCOMRAM
   162                           
   163                           ; Clear objects allocated to COMRAM (3 bytes)
   164   000B12  6A0E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   165   000B14  6A0D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   166   000B16  6A0C               	clrf	__pbssCOMRAM& (0+255),c
   167   000B18                     end_of_initialization:
   168                           	callstack 0
   169   000B18                     __end_of__initialization:
   170                           	callstack 0
   171   000B18  9010               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   172   000B1A  9210               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   173   000B1C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   174   000B1E  6EF8               	movwf	tblptru,c
   175   000B20  0100               	movlb	0
   176   000B22  EF05  F005         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMRAM
   179   00000C                     __pbssCOMRAM:
   180                           	callstack 0
   181   00000C                     _Tecla:
   182                           	callstack 0
   183   00000C                     	ds	1
   184   00000D                     _i2c_add:
   185                           	callstack 0
   186   00000D                     	ds	1
   187   00000E                     _RS:
   188                           	callstack 0
   189   00000E                     	ds	1
   190                           
   191                           	psect	dataCOMRAM
   192   00000F                     __pdataCOMRAM:
   193                           	callstack 0
   194   00000F                     _BackLight_State:
   195                           	callstack 0
   196   00000F                     	ds	1
   197                           
   198                           	psect	cstackCOMRAM
   199   000001                     __pcstackCOMRAM:
   200                           	callstack 0
   201   000001                     ??_ISR:
   202                           
   203                           ; 1 bytes @ 0x0
   204   000001                     	ds	1
   205   000002                     ??_I2C_Master_Wait:
   206                           
   207                           ; 1 bytes @ 0x1
   208   000002                     	ds	1
   209   000003                     I2C_Master_Write@data:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x2
   213   000003                     	ds	1
   214   000004                     IO_Expander_Write@Data:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x3
   218   000004                     	ds	1
   219   000005                     LCD_Write_4Bit@Nibble:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x4
   223   000005                     	ds	1
   224   000006                     LCD_CMD@CMD:
   225                           	callstack 0
   226   000006                     LCD_Write_Char@Data:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x5
   230   000006                     	ds	1
   231   000007                     ??_LCD_Init:
   232   000007                     LCD_Write_String@Str:
   233                           	callstack 0
   234   000007                     LCD_Set_Cursor@COL:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x6
   238   000007                     	ds	1
   239   000008                     ??_LCD_Write_String:
   240   000008                     LCD_Init@I2C_Add:
   241                           	callstack 0
   242   000008                     LCD_Set_Cursor@ROW:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x7
   246   000008                     	ds	1
   247   000009                     LCD_Write_String@i:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x8
   251   000009                     	ds	2
   252   00000B                     ??_main:
   253                           
   254                           ; 1 bytes @ 0xA
   255   00000B                     	ds	1
   256                           
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 24 in file "Lab4.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;		None
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   276 ;;      Params:         0       0       0       0       0       0       0       0       0
   277 ;;      Locals:         0       0       0       0       0       0       0       0       0
   278 ;;      Temps:          1       0       0       0       0       0       0       0       0
   279 ;;      Totals:         1       0       0       0       0       0       0       0       0
   280 ;;Total ram usage:        1 bytes
   281 ;; Hardware stack levels required when called: 8
   282 ;; This function calls:
   283 ;;		_Backlight
   284 ;;		_I2C_Master_Init
   285 ;;		_I2C_Master_Start
   286 ;;		_LCD_CHAR_PROPIO
   287 ;;		_LCD_Clear
   288 ;;		_LCD_Init
   289 ;;		_LCD_Set_Cursor
   290 ;;		_LCD_Write_Char
   291 ;;		_LCD_Write_String
   292 ;;		_mensaje2
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text0
   299   000A0A                     __ptext0:
   300                           	callstack 0
   301   000A0A                     _main:
   302                           	callstack 23
   303                           
   304                           ;Lab4.c: 25: TRISB= 0b11110000;
   305                           
   306                           ;incstack = 0
   307   000A0A  0EF0               	movlw	240
   308   000A0C  6E93               	movwf	147,c	;volatile
   309                           
   310                           ;Lab4.c: 26: TRISD=0;
   311   000A0E  0E00               	movlw	0
   312   000A10  6E95               	movwf	149,c	;volatile
   313                           
   314                           ;Lab4.c: 27: LATB= 0b00000000;
   315   000A12  0E00               	movlw	0
   316   000A14  6E8A               	movwf	138,c	;volatile
   317                           
   318                           ;Lab4.c: 28: LATD=0;
   319   000A16  0E00               	movlw	0
   320   000A18  6E8C               	movwf	140,c	;volatile
   321                           
   322                           ;Lab4.c: 29: RBPU=0;
   323   000A1A  9EF1               	bcf	4081,7,c	;volatile
   324                           
   325                           ;Lab4.c: 31: RBIF=0;
   326   000A1C  90F2               	bcf	4082,0,c	;volatile
   327                           
   328                           ;Lab4.c: 32: RBIE=1;
   329   000A1E  86F2               	bsf	4082,3,c	;volatile
   330                           
   331                           ;Lab4.c: 33: GIE=1;
   332   000A20  8EF2               	bsf	4082,7,c	;volatile
   333                           
   334                           ;Lab4.c: 37: _delay((unsigned long)((500)*(1000000/4000.0)));
   335   000A22  0EA3               	movlw	163
   336   000A24  6E0B               	movwf	??_main^0,c
   337   000A26  0E55               	movlw	85
   338   000A28                     u247:
   339   000A28  2EE8               	decfsz	wreg,f,c
   340   000A2A  D7FE               	bra	u247
   341   000A2C  2E0B               	decfsz	??_main^0,f,c
   342   000A2E  D7FC               	bra	u247
   343   000A30  0000               	nop	
   344                           
   345                           ;Lab4.c: 39: I2C_Master_Init();
   346   000A32  ECDA  F005         	call	_I2C_Master_Init	;wreg free
   347                           
   348                           ;Lab4.c: 40: I2C_Master_Start();
   349   000A36  EC11  F006         	call	_I2C_Master_Start	;wreg free
   350                           
   351                           ;Lab4.c: 42: LCD_Init(0x4E);
   352   000A3A  0E4E               	movlw	78
   353   000A3C  EC6E  F004         	call	_LCD_Init
   354                           
   355                           ;Lab4.c: 43: LCD_Clear();
   356   000A40  ECFF  F005         	call	_LCD_Clear	;wreg free
   357                           
   358                           ;Lab4.c: 44: LCD_Set_Cursor(1, 4);
   359   000A44  0E04               	movlw	4
   360   000A46  6E07               	movwf	LCD_Set_Cursor@COL^0,c
   361   000A48  0E01               	movlw	1
   362   000A4A  EC40  F005         	call	_LCD_Set_Cursor
   363                           
   364                           ;Lab4.c: 45: LCD_Write_String("Bie");
   365   000A4E  0E1B               	movlw	low STR_1
   366   000A50  6E07               	movwf	LCD_Write_String@Str^0,c
   367   000A52  EC61  F005         	call	_LCD_Write_String	;wreg free
   368                           
   369                           ;Lab4.c: 46: LCD_Set_Cursor(2, 1);
   370   000A56  0E01               	movlw	1
   371   000A58  6E07               	movwf	LCD_Set_Cursor@COL^0,c
   372   000A5A  0E02               	movlw	2
   373   000A5C  EC40  F005         	call	_LCD_Set_Cursor
   374                           
   375                           ;Lab4.c: 47: LCD_Write_String("Grupo 2:");
   376   000A60  0E12               	movlw	low STR_2
   377   000A62  6E07               	movwf	LCD_Write_String@Str^0,c
   378   000A64  EC61  F005         	call	_LCD_Write_String	;wreg free
   379                           
   380                           ;Lab4.c: 48: LCD_CHAR_PROPIO();
   381   000A68  ECC5  F004         	call	_LCD_CHAR_PROPIO	;wreg free
   382                           
   383                           ;Lab4.c: 49: LCD_Write_Char(0x00);
   384   000A6C  0E00               	movlw	0
   385   000A6E  ECB3  F005         	call	_LCD_Write_Char
   386                           
   387                           ;Lab4.c: 50: Backlight();
   388   000A72  EC07  F006         	call	_Backlight	;wreg free
   389                           
   390                           ;Lab4.c: 54: LCD_Clear();
   391   000A76  ECFF  F005         	call	_LCD_Clear	;wreg free
   392                           
   393                           ;Lab4.c: 55: mensaje2();
   394   000A7A  EC93  F005         	call	_mensaje2	;wreg free
   395   000A7E                     l186:
   396   000A7E  D7FF               	goto	l186
   397   000A80                     __end_of_main:
   398                           	callstack 0
   399                           
   400 ;; *************** function _mensaje2 *****************
   401 ;; Defined at:
   402 ;;		line 65 in file "Lab4.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   416 ;;      Params:         0       0       0       0       0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0       0       0       0       0
   419 ;;      Totals:         0       0       0       0       0       0       0       0       0
   420 ;;Total ram usage:        0 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; Hardware stack levels required when called: 7
   423 ;; This function calls:
   424 ;;		_Cursor
   425 ;;		_LCD_Set_Cursor
   426 ;;		_LCD_Write_String
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text1
   433   000B26                     __ptext1:
   434                           	callstack 0
   435   000B26                     _mensaje2:
   436                           	callstack 23
   437                           
   438                           ;Lab4.c: 66: LCD_Set_Cursor(1, 1);
   439                           
   440                           ;incstack = 0
   441   000B26  0E01               	movlw	1
   442   000B28  6E07               	movwf	LCD_Set_Cursor@COL^0,c
   443   000B2A  0E01               	movlw	1
   444   000B2C  EC40  F005         	call	_LCD_Set_Cursor
   445                           
   446                           ;Lab4.c: 67: LCD_Write_String("Piezas a contar:");
   447   000B30  0E01               	movlw	low STR_3
   448   000B32  6E07               	movwf	LCD_Write_String@Str^0,c
   449   000B34  EC61  F005         	call	_LCD_Write_String	;wreg free
   450                           
   451                           ;Lab4.c: 68: LCD_Set_Cursor(2, 1);
   452   000B38  0E01               	movlw	1
   453   000B3A  6E07               	movwf	LCD_Set_Cursor@COL^0,c
   454   000B3C  0E02               	movlw	2
   455   000B3E  EC40  F005         	call	_LCD_Set_Cursor
   456                           
   457                           ;Lab4.c: 69: Cursor();
   458   000B42  ECF7  F005         	call	_Cursor	;wreg free
   459   000B46  0012               	return		;funcret
   460   000B48                     __end_of_mensaje2:
   461                           	callstack 0
   462                           
   463 ;; *************** function _LCD_Write_String *****************
   464 ;; Defined at:
   465 ;;		line 133 in file "lcd.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;  Str             1    6[COMRAM] PTR unsigned char 
   468 ;;		 -> STR_3(17), STR_2(9), STR_1(4), 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;  i               2    8[COMRAM] int 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   480 ;;      Params:         1       0       0       0       0       0       0       0       0
   481 ;;      Locals:         2       0       0       0       0       0       0       0       0
   482 ;;      Temps:          1       0       0       0       0       0       0       0       0
   483 ;;      Totals:         4       0       0       0       0       0       0       0       0
   484 ;;Total ram usage:        4 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; Hardware stack levels required when called: 6
   487 ;; This function calls:
   488 ;;		_LCD_Write_Char
   489 ;; This function is called by:
   490 ;;		_main
   491 ;;		_mensaje2
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text2
   496   000AC2                     __ptext2:
   497                           	callstack 0
   498   000AC2                     _LCD_Write_String:
   499                           	callstack 23
   500                           
   501                           ;lcd.c: 135: for(int i=0; Str[i]!='\0'; i++)
   502                           
   503                           ;incstack = 0
   504   000AC2  0E00               	movlw	0
   505   000AC4  6E0A               	movwf	(LCD_Write_String@i+1)^0,c
   506   000AC6  0E00               	movlw	0
   507   000AC8  6E09               	movwf	LCD_Write_String@i^0,c
   508   000ACA  D00D               	goto	l1214
   509   000ACC                     l1210:
   510                           
   511                           ;lcd.c: 136: LCD_Write_Char(Str[i]);
   512   000ACC  5007               	movf	LCD_Write_String@Str^0,w,c
   513   000ACE  2409               	addwf	LCD_Write_String@i^0,w,c
   514   000AD0  6E08               	movwf	??_LCD_Write_String^0,c
   515   000AD2  C008  FFF6         	movff	??_LCD_Write_String,tblptrl
   516   000AD6                     	if	1	;There is more than 1 active tblptr byte
   517   000AD6  0E08               	movlw	high __smallconst
   518   000AD8  6EF7               	movwf	tblptrh,c
   519   000ADA                     	endif
   520   000ADA                     	if	0	;tblptru may be non-zero
   521   000ADA                     	endif
   522   000ADA                     	if	0	;tblptru may be non-zero
   523   000ADA                     	endif
   524   000ADA  0008               	tblrd		*
   525   000ADC  50F5               	movf	tablat,w,c
   526   000ADE  ECB3  F005         	call	_LCD_Write_Char
   527   000AE2  4A09               	infsnz	LCD_Write_String@i^0,f,c
   528   000AE4  2A0A               	incf	(LCD_Write_String@i+1)^0,f,c
   529   000AE6                     l1214:
   530   000AE6  5007               	movf	LCD_Write_String@Str^0,w,c
   531   000AE8  2409               	addwf	LCD_Write_String@i^0,w,c
   532   000AEA  6E08               	movwf	??_LCD_Write_String^0,c
   533   000AEC  C008  FFF6         	movff	??_LCD_Write_String,tblptrl
   534   000AF0                     	if	1	;There is more than 1 active tblptr byte
   535   000AF0  0E08               	movlw	high __smallconst
   536   000AF2  6EF7               	movwf	tblptrh,c
   537   000AF4                     	endif
   538   000AF4                     	if	0	;tblptru may be non-zero
   539   000AF4                     	endif
   540   000AF4                     	if	0	;tblptru may be non-zero
   541   000AF4                     	endif
   542   000AF4  0008               	tblrd		*
   543   000AF6  50F5               	movf	tablat,w,c
   544   000AF8  0900               	iorlw	0
   545   000AFA  B4D8               	btfsc	status,2,c
   546   000AFC  0012               	return	
   547   000AFE  D7E6               	goto	l1210
   548   000B00                     __end_of_LCD_Write_String:
   549                           	callstack 0
   550                           
   551 ;; *************** function _LCD_Write_Char *****************
   552 ;; Defined at:
   553 ;;		line 126 in file "lcd.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  Data            1    wreg     unsigned char 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  Data            1    5[COMRAM] unsigned char 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   567 ;;      Params:         0       0       0       0       0       0       0       0       0
   568 ;;      Locals:         1       0       0       0       0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0       0       0       0       0
   570 ;;      Totals:         1       0       0       0       0       0       0       0       0
   571 ;;Total ram usage:        1 bytes
   572 ;; Hardware stack levels used: 1
   573 ;; Hardware stack levels required when called: 5
   574 ;; This function calls:
   575 ;;		_LCD_Write_4Bit
   576 ;; This function is called by:
   577 ;;		_LCD_Write_String
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text3
   583   000B66                     __ptext3:
   584                           	callstack 0
   585   000B66                     _LCD_Write_Char:
   586                           	callstack 23
   587                           
   588                           ;incstack = 0
   589                           ;LCD_Write_Char@Data stored from wreg
   590   000B66  6E06               	movwf	LCD_Write_Char@Data^0,c
   591                           
   592                           ;lcd.c: 128: RS = 1;
   593   000B68  0E01               	movlw	1
   594   000B6A  6E0E               	movwf	_RS^0,c
   595                           
   596                           ;lcd.c: 129: LCD_Write_4Bit(Data & 0xF0);
   597   000B6C  5006               	movf	LCD_Write_Char@Data^0,w,c
   598   000B6E  0BF0               	andlw	240
   599   000B70  ECA4  F005         	call	_LCD_Write_4Bit
   600                           
   601                           ;lcd.c: 130: LCD_Write_4Bit((Data << 4) & 0xF0);
   602   000B74  3806               	swapf	LCD_Write_Char@Data^0,w,c
   603   000B76  0BF0               	andlw	240
   604   000B78  0BF0               	andlw	240
   605   000B7A  ECA4  F005         	call	_LCD_Write_4Bit
   606   000B7E  0012               	return		;funcret
   607   000B80                     __end_of_LCD_Write_Char:
   608                           	callstack 0
   609                           
   610 ;; *************** function _LCD_Set_Cursor *****************
   611 ;; Defined at:
   612 ;;		line 139 in file "lcd.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  ROW             1    wreg     unsigned char 
   615 ;;  COL             1    6[COMRAM] unsigned char 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  ROW             1    7[COMRAM] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   627 ;;      Params:         1       0       0       0       0       0       0       0       0
   628 ;;      Locals:         1       0       0       0       0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0       0       0
   630 ;;      Totals:         2       0       0       0       0       0       0       0       0
   631 ;;Total ram usage:        2 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; Hardware stack levels required when called: 6
   634 ;; This function calls:
   635 ;;		_LCD_CMD
   636 ;; This function is called by:
   637 ;;		_main
   638 ;;		_mensaje2
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text4
   643   000A80                     __ptext4:
   644                           	callstack 0
   645   000A80                     _LCD_Set_Cursor:
   646                           	callstack 23
   647                           
   648                           ;incstack = 0
   649                           ;LCD_Set_Cursor@ROW stored from wreg
   650   000A80  6E08               	movwf	LCD_Set_Cursor@ROW^0,c
   651                           
   652                           ;lcd.c: 141: switch(ROW)
   653   000A82  D014               	goto	l1226
   654   000A84                     l1218:
   655                           
   656                           ;lcd.c: 144: LCD_CMD(0xC0 + COL-1);
   657   000A84  5007               	movf	LCD_Set_Cursor@COL^0,w,c
   658   000A86  0FBF               	addlw	191
   659   000A88  ECC0  F005         	call	_LCD_CMD
   660                           
   661                           ;lcd.c: 145: break;
   662   000A8C  0012               	return	
   663   000A8E                     l1220:
   664                           
   665                           ;lcd.c: 147: LCD_CMD(0x94 + COL-1);
   666   000A8E  5007               	movf	LCD_Set_Cursor@COL^0,w,c
   667   000A90  0F93               	addlw	147
   668   000A92  ECC0  F005         	call	_LCD_CMD
   669                           
   670                           ;lcd.c: 148: break;
   671   000A96  0012               	return	
   672   000A98                     l1222:
   673                           
   674                           ;lcd.c: 150: LCD_CMD(0xD4 + COL-1);
   675   000A98  5007               	movf	LCD_Set_Cursor@COL^0,w,c
   676   000A9A  0FD3               	addlw	211
   677   000A9C  ECC0  F005         	call	_LCD_CMD
   678                           
   679                           ;lcd.c: 151: break;
   680   000AA0  0012               	return	
   681   000AA2                     l1224:
   682                           
   683                           ;lcd.c: 154: LCD_CMD(0x80 + COL-1);
   684   000AA2  5007               	movf	LCD_Set_Cursor@COL^0,w,c
   685   000AA4  0F7F               	addlw	127
   686   000AA6  ECC0  F005         	call	_LCD_CMD
   687                           
   688                           ;lcd.c: 155: }
   689   000AAA  0012               	return	
   690   000AAC                     l1226:
   691   000AAC  5008               	movf	LCD_Set_Cursor@ROW^0,w,c
   692                           
   693                           ; Switch size 1, requested type "simple"
   694                           ; Number of cases is 3, Range of values is 2 to 4
   695                           ; switch strategies available:
   696                           ; Name         Instructions Cycles
   697                           ; simple_byte           10     6 (average)
   698                           ;	Chosen strategy is simple_byte
   699   000AAE  0A02               	xorlw	2	; case 2
   700   000AB0  B4D8               	btfsc	status,2,c
   701   000AB2  D7E8               	goto	l1218
   702   000AB4  0A01               	xorlw	1	; case 3
   703   000AB6  B4D8               	btfsc	status,2,c
   704   000AB8  D7EA               	goto	l1220
   705   000ABA  0A07               	xorlw	7	; case 4
   706   000ABC  B4D8               	btfsc	status,2,c
   707   000ABE  D7EC               	goto	l1222
   708   000AC0  D7F0               	goto	l1224
   709   000AC2                     __end_of_LCD_Set_Cursor:
   710                           	callstack 0
   711                           
   712 ;; *************** function _Cursor *****************
   713 ;; Defined at:
   714 ;;		line 188 in file "lcd.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, status,2, status,0, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   728 ;;      Params:         0       0       0       0       0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0       0       0
   731 ;;      Totals:         0       0       0       0       0       0       0       0       0
   732 ;;Total ram usage:        0 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 6
   735 ;; This function calls:
   736 ;;		_LCD_CMD
   737 ;; This function is called by:
   738 ;;		_mensaje2
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text5
   743   000BEE                     __ptext5:
   744                           	callstack 0
   745   000BEE                     _Cursor:
   746                           	callstack 23
   747                           
   748                           ;lcd.c: 190: LCD_CMD(0xD);
   749                           
   750                           ;incstack = 0
   751   000BEE  0E0D               	movlw	13
   752   000BF0  ECC0  F005         	call	_LCD_CMD
   753                           
   754                           ;lcd.c: 191: _delay((unsigned long)((40)*(1000000/4000000.0)));
   755   000BF4  0E03               	movlw	3
   756   000BF6                     u257:
   757   000BF6  2EE8               	decfsz	wreg,f,c
   758   000BF8  D7FE               	bra	u257
   759   000BFA  0000               	nop	
   760   000BFC  0012               	return		;funcret
   761   000BFE                     __end_of_Cursor:
   762                           	callstack 0
   763                           
   764 ;; *************** function _LCD_Init *****************
   765 ;; Defined at:
   766 ;;		line 79 in file "lcd.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  I2C_Add         1    wreg     unsigned char 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  I2C_Add         1    7[COMRAM] unsigned char 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   780 ;;      Params:         0       0       0       0       0       0       0       0       0
   781 ;;      Locals:         1       0       0       0       0       0       0       0       0
   782 ;;      Temps:          1       0       0       0       0       0       0       0       0
   783 ;;      Totals:         2       0       0       0       0       0       0       0       0
   784 ;;Total ram usage:        2 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; Hardware stack levels required when called: 6
   787 ;; This function calls:
   788 ;;		_IO_Expander_Write
   789 ;;		_LCD_CMD
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text6
   796   0008DC                     __ptext6:
   797                           	callstack 0
   798   0008DC                     _LCD_Init:
   799                           	callstack 24
   800                           
   801                           ;incstack = 0
   802                           ;LCD_Init@I2C_Add stored from wreg
   803   0008DC  6E08               	movwf	LCD_Init@I2C_Add^0,c
   804                           
   805                           ;lcd.c: 81: i2c_add = I2C_Add;
   806   0008DE  C008  F00D         	movff	LCD_Init@I2C_Add,_i2c_add
   807                           
   808                           ;lcd.c: 82: IO_Expander_Write(0x00);
   809   0008E2  0E00               	movlw	0
   810   0008E4  ECCD  F005         	call	_IO_Expander_Write
   811                           
   812                           ;lcd.c: 83: _delay((unsigned long)((30)*(1000000/4000.0)));
   813   0008E8  0E0A               	movlw	10
   814   0008EA  6E07               	movwf	??_LCD_Init^0,c
   815   0008EC  0EBC               	movlw	188
   816   0008EE                     u267:
   817   0008EE  2EE8               	decfsz	wreg,f,c
   818   0008F0  D7FE               	bra	u267
   819   0008F2  2E07               	decfsz	??_LCD_Init^0,f,c
   820   0008F4  D7FC               	bra	u267
   821   0008F6  D000               	nop2	
   822                           
   823                           ;lcd.c: 84: LCD_CMD(0x03);
   824   0008F8  0E03               	movlw	3
   825   0008FA  ECC0  F005         	call	_LCD_CMD
   826                           
   827                           ;lcd.c: 85: _delay((unsigned long)((5)*(1000000/4000.0)));
   828   0008FE  0EFA               	movlw	250
   829   000900                     u277:
   830   000900  D000               	nop2	
   831   000902  2EE8               	decfsz	wreg,f,c
   832   000904  D7FD               	bra	u277
   833                           
   834                           ;lcd.c: 86: LCD_CMD(0x03);
   835   000906  0E03               	movlw	3
   836   000908  ECC0  F005         	call	_LCD_CMD
   837                           
   838                           ;lcd.c: 87: _delay((unsigned long)((5)*(1000000/4000.0)));
   839   00090C  0EFA               	movlw	250
   840   00090E                     u287:
   841   00090E  D000               	nop2	
   842   000910  2EE8               	decfsz	wreg,f,c
   843   000912  D7FD               	bra	u287
   844                           
   845                           ;lcd.c: 88: LCD_CMD(0x03);
   846   000914  0E03               	movlw	3
   847   000916  ECC0  F005         	call	_LCD_CMD
   848                           
   849                           ;lcd.c: 89: _delay((unsigned long)((5)*(1000000/4000.0)));
   850   00091A  0EFA               	movlw	250
   851   00091C                     u297:
   852   00091C  D000               	nop2	
   853   00091E  2EE8               	decfsz	wreg,f,c
   854   000920  D7FD               	bra	u297
   855                           
   856                           ;lcd.c: 90: LCD_CMD(0x02);
   857   000922  0E02               	movlw	2
   858   000924  ECC0  F005         	call	_LCD_CMD
   859                           
   860                           ;lcd.c: 91: _delay((unsigned long)((5)*(1000000/4000.0)));
   861   000928  0EFA               	movlw	250
   862   00092A                     u307:
   863   00092A  D000               	nop2	
   864   00092C  2EE8               	decfsz	wreg,f,c
   865   00092E  D7FD               	bra	u307
   866                           
   867                           ;lcd.c: 92: LCD_CMD(0x20 | (2 << 2));
   868   000930  0E28               	movlw	40
   869   000932  ECC0  F005         	call	_LCD_CMD
   870                           
   871                           ;lcd.c: 93: _delay((unsigned long)((50)*(1000000/4000.0)));
   872   000936  0E11               	movlw	17
   873   000938  6E07               	movwf	??_LCD_Init^0,c
   874   00093A  0E3A               	movlw	58
   875   00093C                     u317:
   876   00093C  2EE8               	decfsz	wreg,f,c
   877   00093E  D7FE               	bra	u317
   878   000940  2E07               	decfsz	??_LCD_Init^0,f,c
   879   000942  D7FC               	bra	u317
   880   000944  D000               	nop2	
   881                           
   882                           ;lcd.c: 94: LCD_CMD(0x0C);
   883   000946  0E0C               	movlw	12
   884   000948  ECC0  F005         	call	_LCD_CMD
   885                           
   886                           ;lcd.c: 95: _delay((unsigned long)((50)*(1000000/4000.0)));
   887   00094C  0E11               	movlw	17
   888   00094E  6E07               	movwf	??_LCD_Init^0,c
   889   000950  0E3A               	movlw	58
   890   000952                     u327:
   891   000952  2EE8               	decfsz	wreg,f,c
   892   000954  D7FE               	bra	u327
   893   000956  2E07               	decfsz	??_LCD_Init^0,f,c
   894   000958  D7FC               	bra	u327
   895   00095A  D000               	nop2	
   896                           
   897                           ;lcd.c: 96: LCD_CMD(0x01);
   898   00095C  0E01               	movlw	1
   899   00095E  ECC0  F005         	call	_LCD_CMD
   900                           
   901                           ;lcd.c: 97: _delay((unsigned long)((50)*(1000000/4000.0)));
   902   000962  0E11               	movlw	17
   903   000964  6E07               	movwf	??_LCD_Init^0,c
   904   000966  0E3A               	movlw	58
   905   000968                     u337:
   906   000968  2EE8               	decfsz	wreg,f,c
   907   00096A  D7FE               	bra	u337
   908   00096C  2E07               	decfsz	??_LCD_Init^0,f,c
   909   00096E  D7FC               	bra	u337
   910   000970  D000               	nop2	
   911                           
   912                           ;lcd.c: 98: LCD_CMD(0x04 | 0x02);
   913   000972  0E06               	movlw	6
   914   000974  ECC0  F005         	call	_LCD_CMD
   915                           
   916                           ;lcd.c: 99: _delay((unsigned long)((50)*(1000000/4000.0)));
   917   000978  0E11               	movlw	17
   918   00097A  6E07               	movwf	??_LCD_Init^0,c
   919   00097C  0E3A               	movlw	58
   920   00097E                     u347:
   921   00097E  2EE8               	decfsz	wreg,f,c
   922   000980  D7FE               	bra	u347
   923   000982  2E07               	decfsz	??_LCD_Init^0,f,c
   924   000984  D7FC               	bra	u347
   925   000986  D000               	nop2	
   926   000988  0012               	return		;funcret
   927   00098A                     __end_of_LCD_Init:
   928                           	callstack 0
   929                           
   930 ;; *************** function _LCD_Clear *****************
   931 ;; Defined at:
   932 ;;		line 182 in file "lcd.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   946 ;;      Params:         0       0       0       0       0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0
   949 ;;      Totals:         0       0       0       0       0       0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; Hardware stack levels required when called: 6
   953 ;; This function calls:
   954 ;;		_LCD_CMD
   955 ;; This function is called by:
   956 ;;		_main
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text7
   961   000BFE                     __ptext7:
   962                           	callstack 0
   963   000BFE                     _LCD_Clear:
   964                           	callstack 24
   965                           
   966                           ;lcd.c: 184: LCD_CMD(0x01);
   967                           
   968                           ;incstack = 0
   969   000BFE  0E01               	movlw	1
   970   000C00  ECC0  F005         	call	_LCD_CMD
   971                           
   972                           ;lcd.c: 185: _delay((unsigned long)((40)*(1000000/4000000.0)));
   973   000C04  0E03               	movlw	3
   974   000C06                     u357:
   975   000C06  2EE8               	decfsz	wreg,f,c
   976   000C08  D7FE               	bra	u357
   977   000C0A  0000               	nop	
   978   000C0C  0012               	return		;funcret
   979   000C0E                     __end_of_LCD_Clear:
   980                           	callstack 0
   981                           
   982 ;; *************** function _LCD_CHAR_PROPIO *****************
   983 ;; Defined at:
   984 ;;		line 195 in file "lcd.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   998 ;;      Params:         0       0       0       0       0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1001 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1002 ;;Total ram usage:        0 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; Hardware stack levels required when called: 6
  1005 ;; This function calls:
  1006 ;;		_LCD_CMD
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text8
  1013   00098A                     __ptext8:
  1014                           	callstack 0
  1015   00098A                     _LCD_CHAR_PROPIO:
  1016                           	callstack 24
  1017                           
  1018                           ;lcd.c: 197: LCD_CMD(0x80);
  1019                           
  1020                           ;incstack = 0
  1021   00098A  0E80               	movlw	128
  1022   00098C  ECC0  F005         	call	_LCD_CMD
  1023                           
  1024                           ;lcd.c: 198: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1025   000990  0E03               	movlw	3
  1026   000992                     u367:
  1027   000992  2EE8               	decfsz	wreg,f,c
  1028   000994  D7FE               	bra	u367
  1029   000996  0000               	nop	
  1030                           
  1031                           ;lcd.c: 199: LCD_CMD(0x40);
  1032   000998  0E40               	movlw	64
  1033   00099A  ECC0  F005         	call	_LCD_CMD
  1034                           
  1035                           ;lcd.c: 200: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1036   00099E  0E03               	movlw	3
  1037   0009A0                     u377:
  1038   0009A0  2EE8               	decfsz	wreg,f,c
  1039   0009A2  D7FE               	bra	u377
  1040   0009A4  0000               	nop	
  1041                           
  1042                           ;lcd.c: 203: LCD_CMD(0x40+0xe);
  1043   0009A6  0E4E               	movlw	78
  1044   0009A8  ECC0  F005         	call	_LCD_CMD
  1045                           
  1046                           ;lcd.c: 204: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1047   0009AC  0E03               	movlw	3
  1048   0009AE                     u387:
  1049   0009AE  2EE8               	decfsz	wreg,f,c
  1050   0009B0  D7FE               	bra	u387
  1051   0009B2  0000               	nop	
  1052                           
  1053                           ;lcd.c: 205: LCD_CMD(0x40+0x4);
  1054   0009B4  0E44               	movlw	68
  1055   0009B6  ECC0  F005         	call	_LCD_CMD
  1056                           
  1057                           ;lcd.c: 206: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1058   0009BA  0E03               	movlw	3
  1059   0009BC                     u397:
  1060   0009BC  2EE8               	decfsz	wreg,f,c
  1061   0009BE  D7FE               	bra	u397
  1062   0009C0  0000               	nop	
  1063                           
  1064                           ;lcd.c: 207: LCD_CMD(0x40+0xe);
  1065   0009C2  0E4E               	movlw	78
  1066   0009C4  ECC0  F005         	call	_LCD_CMD
  1067                           
  1068                           ;lcd.c: 208: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1069   0009C8  0E03               	movlw	3
  1070   0009CA                     u407:
  1071   0009CA  2EE8               	decfsz	wreg,f,c
  1072   0009CC  D7FE               	bra	u407
  1073   0009CE  0000               	nop	
  1074                           
  1075                           ;lcd.c: 209: LCD_CMD(0x40+0x15);
  1076   0009D0  0E55               	movlw	85
  1077   0009D2  ECC0  F005         	call	_LCD_CMD
  1078                           
  1079                           ;lcd.c: 210: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1080   0009D6  0E03               	movlw	3
  1081   0009D8                     u417:
  1082   0009D8  2EE8               	decfsz	wreg,f,c
  1083   0009DA  D7FE               	bra	u417
  1084   0009DC  0000               	nop	
  1085                           
  1086                           ;lcd.c: 211: LCD_CMD(0x40+0x4);
  1087   0009DE  0E44               	movlw	68
  1088   0009E0  ECC0  F005         	call	_LCD_CMD
  1089                           
  1090                           ;lcd.c: 212: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1091   0009E4  0E03               	movlw	3
  1092   0009E6                     u427:
  1093   0009E6  2EE8               	decfsz	wreg,f,c
  1094   0009E8  D7FE               	bra	u427
  1095   0009EA  0000               	nop	
  1096                           
  1097                           ;lcd.c: 213: LCD_CMD(0x40+0xa);
  1098   0009EC  0E4A               	movlw	74
  1099   0009EE  ECC0  F005         	call	_LCD_CMD
  1100                           
  1101                           ;lcd.c: 214: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1102   0009F2  0E03               	movlw	3
  1103   0009F4                     u437:
  1104   0009F4  2EE8               	decfsz	wreg,f,c
  1105   0009F6  D7FE               	bra	u437
  1106   0009F8  0000               	nop	
  1107                           
  1108                           ;lcd.c: 215: LCD_CMD(0x40+0x1b);
  1109   0009FA  0E5B               	movlw	91
  1110   0009FC  ECC0  F005         	call	_LCD_CMD
  1111                           
  1112                           ;lcd.c: 216: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1113   000A00  0E03               	movlw	3
  1114   000A02                     u447:
  1115   000A02  2EE8               	decfsz	wreg,f,c
  1116   000A04  D7FE               	bra	u447
  1117   000A06  0000               	nop	
  1118   000A08  0012               	return		;funcret
  1119   000A0A                     __end_of_LCD_CHAR_PROPIO:
  1120                           	callstack 0
  1121                           
  1122 ;; *************** function _LCD_CMD *****************
  1123 ;; Defined at:
  1124 ;;		line 119 in file "lcd.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  CMD             1    wreg     unsigned char 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  CMD             1    5[COMRAM] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1138 ;;      Params:         0       0       0       0       0       0       0       0       0
  1139 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1141 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1142 ;;Total ram usage:        1 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; Hardware stack levels required when called: 5
  1145 ;; This function calls:
  1146 ;;		_LCD_Write_4Bit
  1147 ;; This function is called by:
  1148 ;;		_LCD_Init
  1149 ;;		_LCD_Set_Cursor
  1150 ;;		_LCD_Clear
  1151 ;;		_Cursor
  1152 ;;		_LCD_CHAR_PROPIO
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text9
  1157   000B80                     __ptext9:
  1158                           	callstack 0
  1159   000B80                     _LCD_CMD:
  1160                           	callstack 23
  1161                           
  1162                           ;incstack = 0
  1163                           ;LCD_CMD@CMD stored from wreg
  1164   000B80  6E06               	movwf	LCD_CMD@CMD^0,c
  1165                           
  1166                           ;lcd.c: 121: RS = 0;
  1167   000B82  0E00               	movlw	0
  1168   000B84  6E0E               	movwf	_RS^0,c
  1169                           
  1170                           ;lcd.c: 122: LCD_Write_4Bit(CMD & 0xF0);
  1171   000B86  5006               	movf	LCD_CMD@CMD^0,w,c
  1172   000B88  0BF0               	andlw	240
  1173   000B8A  ECA4  F005         	call	_LCD_Write_4Bit
  1174                           
  1175                           ;lcd.c: 123: LCD_Write_4Bit((CMD << 4) & 0xF0);
  1176   000B8E  3806               	swapf	LCD_CMD@CMD^0,w,c
  1177   000B90  0BF0               	andlw	240
  1178   000B92  0BF0               	andlw	240
  1179   000B94  ECA4  F005         	call	_LCD_Write_4Bit
  1180   000B98  0012               	return		;funcret
  1181   000B9A                     __end_of_LCD_CMD:
  1182                           	callstack 0
  1183                           
  1184 ;; *************** function _LCD_Write_4Bit *****************
  1185 ;; Defined at:
  1186 ;;		line 110 in file "lcd.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  Nibble          1    wreg     unsigned char 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  Nibble          1    4[COMRAM] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1200 ;;      Params:         0       0       0       0       0       0       0       0       0
  1201 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1203 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1204 ;;Total ram usage:        1 bytes
  1205 ;; Hardware stack levels used: 1
  1206 ;; Hardware stack levels required when called: 4
  1207 ;; This function calls:
  1208 ;;		_IO_Expander_Write
  1209 ;; This function is called by:
  1210 ;;		_LCD_CMD
  1211 ;;		_LCD_Write_Char
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text10
  1216   000B48                     __ptext10:
  1217                           	callstack 0
  1218   000B48                     _LCD_Write_4Bit:
  1219                           	callstack 23
  1220                           
  1221                           ;incstack = 0
  1222                           ;LCD_Write_4Bit@Nibble stored from wreg
  1223   000B48  6E05               	movwf	LCD_Write_4Bit@Nibble^0,c
  1224                           
  1225                           ;lcd.c: 113: Nibble |= RS;
  1226   000B4A  500E               	movf	_RS^0,w,c
  1227   000B4C  1205               	iorwf	LCD_Write_4Bit@Nibble^0,f,c
  1228                           
  1229                           ;lcd.c: 114: IO_Expander_Write(Nibble | 0x04);
  1230   000B4E  5005               	movf	LCD_Write_4Bit@Nibble^0,w,c
  1231   000B50  0904               	iorlw	4
  1232   000B52  ECCD  F005         	call	_IO_Expander_Write
  1233                           
  1234                           ;lcd.c: 115: IO_Expander_Write(Nibble & 0xFB);
  1235   000B56  5005               	movf	LCD_Write_4Bit@Nibble^0,w,c
  1236   000B58  0BFB               	andlw	251
  1237   000B5A  ECCD  F005         	call	_IO_Expander_Write
  1238                           
  1239                           ;lcd.c: 116: _delay((unsigned long)((50)*(1000000/4000000.0)));
  1240   000B5E  0E04               	movlw	4
  1241   000B60                     u457:
  1242   000B60  2EE8               	decfsz	wreg,f,c
  1243   000B62  D7FE               	bra	u457
  1244   000B64  0012               	return		;funcret
  1245   000B66                     __end_of_LCD_Write_4Bit:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function _I2C_Master_Init *****************
  1249 ;; Defined at:
  1250 ;;		line 8 in file "lcd.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1264 ;;      Params:         0       0       0       0       0       0       0       0       0
  1265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1267 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1268 ;;Total ram usage:        0 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; Hardware stack levels required when called: 1
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text11
  1279   000BB4                     __ptext11:
  1280                           	callstack 0
  1281   000BB4                     _I2C_Master_Init:
  1282                           	callstack 29
  1283                           
  1284                           ;lcd.c: 10: SSPCON1 = 0x28;
  1285                           
  1286                           ;incstack = 0
  1287   000BB4  0E28               	movlw	40
  1288   000BB6  6EC6               	movwf	198,c	;volatile
  1289                           
  1290                           ;lcd.c: 11: SSPCON2 = 0x00;
  1291   000BB8  0E00               	movlw	0
  1292   000BBA  6EC5               	movwf	197,c	;volatile
  1293                           
  1294                           ;lcd.c: 12: SSPSTAT = 0x00;
  1295   000BBC  0E00               	movlw	0
  1296   000BBE  6EC7               	movwf	199,c	;volatile
  1297                           
  1298                           ;lcd.c: 13: SSPADD = ((1000000/2)/100000) - 1;
  1299   000BC0  0E04               	movlw	4
  1300   000BC2  6EC8               	movwf	200,c	;volatile
  1301                           
  1302                           ;lcd.c: 14: TRISB1 = 1;
  1303   000BC4  8293               	bsf	3987,1,c	;volatile
  1304                           
  1305                           ;lcd.c: 15: TRISB0 = 1;
  1306   000BC6  8093               	bsf	3987,0,c	;volatile
  1307   000BC8  0012               	return		;funcret
  1308   000BCA                     __end_of_I2C_Master_Init:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function _Backlight *****************
  1312 ;; Defined at:
  1313 ;;		line 158 in file "lcd.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1327 ;;      Params:         0       0       0       0       0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; Hardware stack levels required when called: 4
  1334 ;; This function calls:
  1335 ;;		_IO_Expander_Write
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text12
  1342   000C0E                     __ptext12:
  1343                           	callstack 0
  1344   000C0E                     _Backlight:
  1345                           	callstack 26
  1346                           
  1347                           ;lcd.c: 160: BackLight_State = 0x08;
  1348                           
  1349                           ;incstack = 0
  1350   000C0E  0E08               	movlw	8
  1351   000C10  6E0F               	movwf	_BackLight_State^0,c
  1352                           
  1353                           ;lcd.c: 161: IO_Expander_Write(0);
  1354   000C12  0E00               	movlw	0
  1355   000C14  ECCD  F005         	call	_IO_Expander_Write
  1356   000C18  0012               	return		;funcret
  1357   000C1A                     __end_of_Backlight:
  1358                           	callstack 0
  1359                           
  1360 ;; *************** function _IO_Expander_Write *****************
  1361 ;; Defined at:
  1362 ;;		line 102 in file "lcd.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  Data            1    wreg     unsigned char 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  Data            1    3[COMRAM] unsigned char 
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		wreg, status,2, status,0, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1376 ;;      Params:         0       0       0       0       0       0       0       0       0
  1377 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1379 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1380 ;;Total ram usage:        1 bytes
  1381 ;; Hardware stack levels used: 1
  1382 ;; Hardware stack levels required when called: 3
  1383 ;; This function calls:
  1384 ;;		_I2C_Master_Start
  1385 ;;		_I2C_Master_Stop
  1386 ;;		_I2C_Master_Write
  1387 ;; This function is called by:
  1388 ;;		_LCD_Init
  1389 ;;		_LCD_Write_4Bit
  1390 ;;		_Backlight
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text13
  1395   000B9A                     __ptext13:
  1396                           	callstack 0
  1397   000B9A                     _IO_Expander_Write:
  1398                           	callstack 23
  1399                           
  1400                           ;incstack = 0
  1401                           ;IO_Expander_Write@Data stored from wreg
  1402   000B9A  6E04               	movwf	IO_Expander_Write@Data^0,c
  1403                           
  1404                           ;lcd.c: 104: I2C_Master_Start();
  1405   000B9C  EC11  F006         	call	_I2C_Master_Start	;wreg free
  1406                           
  1407                           ;lcd.c: 105: I2C_Master_Write(i2c_add);
  1408   000BA0  500D               	movf	_i2c_add^0,w,c
  1409   000BA2  ECE5  F005         	call	_I2C_Master_Write
  1410                           
  1411                           ;lcd.c: 106: I2C_Master_Write(Data | BackLight_State);
  1412   000BA6  5004               	movf	IO_Expander_Write@Data^0,w,c
  1413   000BA8  100F               	iorwf	_BackLight_State^0,w,c
  1414   000BAA  ECE5  F005         	call	_I2C_Master_Write
  1415                           
  1416                           ;lcd.c: 107: I2C_Master_Stop();
  1417   000BAE  EC0D  F006         	call	_I2C_Master_Stop	;wreg free
  1418   000BB2  0012               	return		;funcret
  1419   000BB4                     __end_of_IO_Expander_Write:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _I2C_Master_Write *****************
  1423 ;; Defined at:
  1424 ;;		line 55 in file "lcd.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  data            1    wreg     unsigned char 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  data            1    2[COMRAM] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      unsigned char 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1438 ;;      Params:         0       0       0       0       0       0       0       0       0
  1439 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1441 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1442 ;;Total ram usage:        1 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; Hardware stack levels required when called: 2
  1445 ;; This function calls:
  1446 ;;		_I2C_Master_Wait
  1447 ;; This function is called by:
  1448 ;;		_IO_Expander_Write
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text14
  1453   000BCA                     __ptext14:
  1454                           	callstack 0
  1455   000BCA                     _I2C_Master_Write:
  1456                           	callstack 23
  1457                           
  1458                           ;incstack = 0
  1459                           ;I2C_Master_Write@data stored from wreg
  1460   000BCA  6E03               	movwf	I2C_Master_Write@data^0,c
  1461                           
  1462                           ;lcd.c: 57: I2C_Master_Wait();
  1463   000BCC  ECEE  F005         	call	_I2C_Master_Wait	;wreg free
  1464                           
  1465                           ;lcd.c: 58: SSPBUF = data;
  1466   000BD0  C003  FFC9         	movff	I2C_Master_Write@data,4041	;volatile
  1467   000BD4                     l69:
  1468   000BD4  A69E               	btfss	3998,3,c	;volatile
  1469   000BD6  D7FE               	goto	l69
  1470                           
  1471                           ;lcd.c: 60: SSPIF = 0;
  1472   000BD8  969E               	bcf	3998,3,c	;volatile
  1473                           
  1474                           ;lcd.c: 61: return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  1475   000BDA  0012               	return		;funcret
  1476   000BDC                     __end_of_I2C_Master_Write:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _I2C_Master_Stop *****************
  1480 ;; Defined at:
  1481 ;;		line 35 in file "lcd.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1498 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 2
  1502 ;; This function calls:
  1503 ;;		_I2C_Master_Wait
  1504 ;; This function is called by:
  1505 ;;		_IO_Expander_Write
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text15
  1510   000C1A                     __ptext15:
  1511                           	callstack 0
  1512   000C1A                     _I2C_Master_Stop:
  1513                           	callstack 23
  1514                           
  1515                           ;lcd.c: 37: I2C_Master_Wait();
  1516                           
  1517                           ;incstack = 0
  1518   000C1A  ECEE  F005         	call	_I2C_Master_Wait	;wreg free
  1519                           
  1520                           ;lcd.c: 38: PEN = 1;
  1521   000C1E  84C5               	bsf	4037,2,c	;volatile
  1522   000C20  0012               	return		;funcret
  1523   000C22                     __end_of_I2C_Master_Stop:
  1524                           	callstack 0
  1525                           
  1526 ;; *************** function _I2C_Master_Start *****************
  1527 ;; Defined at:
  1528 ;;		line 23 in file "lcd.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1542 ;;      Params:         0       0       0       0       0       0       0       0       0
  1543 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1545 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1546 ;;Total ram usage:        0 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 2
  1549 ;; This function calls:
  1550 ;;		_I2C_Master_Wait
  1551 ;; This function is called by:
  1552 ;;		_IO_Expander_Write
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text16
  1558   000C22                     __ptext16:
  1559                           	callstack 0
  1560   000C22                     _I2C_Master_Start:
  1561                           	callstack 23
  1562                           
  1563                           ;lcd.c: 25: I2C_Master_Wait();
  1564                           
  1565                           ;incstack = 0
  1566   000C22  ECEE  F005         	call	_I2C_Master_Wait	;wreg free
  1567                           
  1568                           ;lcd.c: 26: SEN = 1;
  1569   000C26  80C5               	bsf	4037,0,c	;volatile
  1570   000C28  0012               	return		;funcret
  1571   000C2A                     __end_of_I2C_Master_Start:
  1572                           	callstack 0
  1573                           
  1574 ;; *************** function _I2C_Master_Wait *****************
  1575 ;; Defined at:
  1576 ;;		line 18 in file "lcd.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1590 ;;      Params:         0       0       0       0       0       0       0       0       0
  1591 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1592 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1593 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1594 ;;Total ram usage:        1 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; Hardware stack levels required when called: 1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_I2C_Master_Start
  1601 ;;		_I2C_Master_Stop
  1602 ;;		_I2C_Master_Write
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text17
  1607   000BDC                     __ptext17:
  1608                           	callstack 0
  1609   000BDC                     _I2C_Master_Wait:
  1610                           	callstack 23
  1611                           
  1612                           ;lcd.c: 20: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1613                           
  1614                           ;incstack = 0
  1615   000BDC  B4C7               	btfsc	199,2,c	;volatile
  1616   000BDE  D7FE               	goto	__ptext17
  1617   000BE0  CFC5 F002          	movff	4037,??_I2C_Master_Wait	;volatile
  1618   000BE4  0E1F               	movlw	31
  1619   000BE6  1602               	andwf	??_I2C_Master_Wait^0,f,c
  1620   000BE8  B4D8               	btfsc	status,2,c
  1621   000BEA  0012               	return	
  1622   000BEC  D7F7               	goto	__ptext17
  1623   000BEE                     __end_of_I2C_Master_Wait:
  1624                           	callstack 0
  1625                           
  1626 ;; *************** function _ISR *****************
  1627 ;; Defined at:
  1628 ;;		line 72 in file "Lab4.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1642 ;;      Params:         0       0       0       0       0       0       0       0       0
  1643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1644 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1645 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1646 ;;Total ram usage:        1 bytes
  1647 ;; Hardware stack levels used: 1
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		Interrupt level 2
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	intcode
  1656   000008                     __pintcode:
  1657                           	callstack 0
  1658   000008                     _ISR:
  1659                           	callstack 23
  1660                           
  1661                           ;incstack = 0
  1662   000008  8210               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1663   00000A  ED10  F004         	call	int_func,f	;refresh shadow registers
  1664                           
  1665                           	psect	intcode_body
  1666   000820                     __pintcode_body:
  1667                           	callstack 23
  1668   000820                     int_func:
  1669                           	callstack 23
  1670   000820  0006               	pop		; remove dummy address from shadow register refresh
  1671                           
  1672                           ;Lab4.c: 73: if(RBIF==1){
  1673   000822  A0F2               	btfss	4082,0,c	;volatile
  1674   000824  D059               	goto	i2l230
  1675                           
  1676                           ;Lab4.c: 74: if(PORTB!=0b11110000){
  1677   000826  0EF0               	movlw	240
  1678   000828  1881               	xorwf	129,w,c	;volatile
  1679   00082A  B4D8               	btfsc	status,2,c
  1680   00082C  D04C               	goto	i2l1204
  1681                           
  1682                           ;Lab4.c: 75: Tecla=0;
  1683   00082E  0E00               	movlw	0
  1684   000830  6E0C               	movwf	_Tecla^0,c
  1685                           
  1686                           ;Lab4.c: 76: LATB=0b11111110;
  1687   000832  0EFE               	movlw	254
  1688   000834  6E8A               	movwf	138,c	;volatile
  1689                           
  1690                           ;Lab4.c: 77: if(RB4==0) Tecla=1;
  1691   000836  B881               	btfsc	3969,4,c	;volatile
  1692   000838  D002               	goto	i2l199
  1693   00083A  0E01               	movlw	1
  1694   00083C  D041               	goto	L15
  1695   00083E                     i2l199:
  1696                           
  1697                           ;Lab4.c: 78: else if(RB5==0) Tecla=2;
  1698   00083E  BA81               	btfsc	3969,5,c	;volatile
  1699   000840  D002               	goto	i2l201
  1700   000842  0E02               	movlw	2
  1701   000844  D03D               	goto	L15
  1702   000846                     i2l201:
  1703                           
  1704                           ;Lab4.c: 79: else if(RB6==0) Tecla=3;
  1705   000846  BC81               	btfsc	3969,6,c	;volatile
  1706   000848  D002               	goto	i2l203
  1707   00084A  0E03               	movlw	3
  1708   00084C  D039               	goto	L15
  1709   00084E                     i2l203:
  1710                           
  1711                           ;Lab4.c: 80: else if(RB7==0) Tecla=4;
  1712   00084E  BE81               	btfsc	3969,7,c	;volatile
  1713   000850  D002               	goto	i2l1168
  1714   000852  0E04               	movlw	4
  1715   000854  D035               	goto	L15
  1716   000856                     i2l1168:
  1717                           
  1718                           ;Lab4.c: 81: else{;Lab4.c: 82: LATB=0b11111101;
  1719   000856  0EFD               	movlw	253
  1720   000858  6E8A               	movwf	138,c	;volatile
  1721                           
  1722                           ;Lab4.c: 83: if(RB4==0) Tecla=5;
  1723   00085A  B881               	btfsc	3969,4,c	;volatile
  1724   00085C  D002               	goto	i2l207
  1725   00085E  0E05               	movlw	5
  1726   000860  D02F               	goto	L15
  1727   000862                     i2l207:
  1728                           
  1729                           ;Lab4.c: 84: else if(RB5==0) Tecla=6;
  1730   000862  BA81               	btfsc	3969,5,c	;volatile
  1731   000864  D002               	goto	i2l209
  1732   000866  0E06               	movlw	6
  1733   000868  D02B               	goto	L15
  1734   00086A                     i2l209:
  1735                           
  1736                           ;Lab4.c: 85: else if(RB6==0) Tecla=7;
  1737   00086A  BC81               	btfsc	3969,6,c	;volatile
  1738   00086C  D002               	goto	i2l211
  1739   00086E  0E07               	movlw	7
  1740   000870  D027               	goto	L15
  1741   000872                     i2l211:
  1742                           
  1743                           ;Lab4.c: 86: else if(RB7==0) Tecla=8;
  1744   000872  BE81               	btfsc	3969,7,c	;volatile
  1745   000874  D002               	goto	i2l1180
  1746   000876  0E08               	movlw	8
  1747   000878  D023               	goto	L15
  1748   00087A                     i2l1180:
  1749                           
  1750                           ;Lab4.c: 87: else{;Lab4.c: 88: LATB=0b11111011;
  1751   00087A  0EFB               	movlw	251
  1752   00087C  6E8A               	movwf	138,c	;volatile
  1753                           
  1754                           ;Lab4.c: 89: if(RB4==0) Tecla=9;
  1755   00087E  B881               	btfsc	3969,4,c	;volatile
  1756   000880  D002               	goto	i2l215
  1757   000882  0E09               	movlw	9
  1758   000884  D01D               	goto	L15
  1759   000886                     i2l215:
  1760                           
  1761                           ;Lab4.c: 90: else if(RB5==0) Tecla=10;
  1762   000886  BA81               	btfsc	3969,5,c	;volatile
  1763   000888  D002               	goto	i2l217
  1764   00088A  0E0A               	movlw	10
  1765   00088C  D019               	goto	L15
  1766   00088E                     i2l217:
  1767                           
  1768                           ;Lab4.c: 91: else if(RB6==0) Tecla=11;
  1769   00088E  BC81               	btfsc	3969,6,c	;volatile
  1770   000890  D002               	goto	i2l219
  1771   000892  0E0B               	movlw	11
  1772   000894  D015               	goto	L15
  1773   000896                     i2l219:
  1774                           
  1775                           ;Lab4.c: 92: else if(RB7==0) Tecla=12;
  1776   000896  BE81               	btfsc	3969,7,c	;volatile
  1777   000898  D002               	goto	i2l1192
  1778   00089A  0E0C               	movlw	12
  1779   00089C  D011               	goto	L15
  1780   00089E                     i2l1192:
  1781                           
  1782                           ;Lab4.c: 93: else{;Lab4.c: 94: LATB=0b11110111;
  1783   00089E  0EF7               	movlw	247
  1784   0008A0  6E8A               	movwf	138,c	;volatile
  1785                           
  1786                           ;Lab4.c: 95: if(RB4==0) Tecla=13;
  1787   0008A2  B881               	btfsc	3969,4,c	;volatile
  1788   0008A4  D002               	goto	i2l223
  1789   0008A6  0E0D               	movlw	13
  1790   0008A8  D00B               	goto	L15
  1791   0008AA                     i2l223:
  1792                           
  1793                           ;Lab4.c: 96: else if(RB5==0) Tecla=14;
  1794   0008AA  BA81               	btfsc	3969,5,c	;volatile
  1795   0008AC  D002               	goto	i2l225
  1796   0008AE  0E0E               	movlw	14
  1797   0008B0  D007               	goto	L15
  1798   0008B2                     i2l225:
  1799                           
  1800                           ;Lab4.c: 97: else if(RB6==0) Tecla=15;
  1801   0008B2  BC81               	btfsc	3969,6,c	;volatile
  1802   0008B4  D002               	goto	i2l227
  1803   0008B6  0E0F               	movlw	15
  1804   0008B8  D003               	goto	L15
  1805   0008BA                     i2l227:
  1806                           
  1807                           ;Lab4.c: 98: else if(RB7==0) Tecla=16;
  1808   0008BA  BE81               	btfsc	3969,7,c	;volatile
  1809   0008BC  D002               	goto	i2l224
  1810   0008BE  0E10               	movlw	16
  1811   0008C0                     L15:
  1812   0008C0  6E0C               	movwf	_Tecla^0,c
  1813   0008C2                     i2l224:
  1814                           
  1815                           ;Lab4.c: 99: };Lab4.c: 100: };Lab4.c: 101: };Lab4.c: 102: LATB=0b11110000;
  1816   0008C2  0EF0               	movlw	240
  1817   0008C4  6E8A               	movwf	138,c	;volatile
  1818   0008C6                     i2l1204:
  1819                           
  1820                           ;Lab4.c: 103: };Lab4.c: 104: _delay((unsigned long)((100)*(1000000/4000.0)));
  1821   0008C6  0E21               	movlw	33
  1822   0008C8  6E01               	movwf	??_ISR^0,c
  1823   0008CA  0E76               	movlw	118
  1824   0008CC                     i2u46_47:
  1825   0008CC  2EE8               	decfsz	wreg,f,c
  1826   0008CE  D7FE               	bra	i2u46_47
  1827   0008D0  2E01               	decfsz	??_ISR^0,f,c
  1828   0008D2  D7FC               	bra	i2u46_47
  1829   0008D4  D000               	nop2	
  1830                           
  1831                           ;Lab4.c: 105: RBIF=0;
  1832   0008D6  90F2               	bcf	4082,0,c	;volatile
  1833   0008D8                     i2l230:
  1834   0008D8  9210               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1835   0008DA  0011               	retfie		f
  1836   0008DC                     __end_of_ISR:
  1837                           	callstack 0
  1838                           
  1839                           	psect	rparam
  1840   000000                     
  1841                           	psect	temp
  1842   000010                     btemp:
  1843                           	callstack 0
  1844   000010                     	ds	1
  1845   000000                     int$flags	set	btemp
  1846   000000                     wtemp8	set	btemp+1
  1847   000000                     ttemp5	set	btemp+1
  1848   000000                     ttemp6	set	btemp+4
  1849   000000                     ttemp7	set	btemp+8
  1850                           
  1851                           	psect	idloc
  1852                           
  1853                           ;Config register IDLOC0 @ 0x200000
  1854                           ;	unspecified, using default values
  1855   200000                     	org	2097152
  1856   200000  FF                 	db	255
  1857                           
  1858                           ;Config register IDLOC1 @ 0x200001
  1859                           ;	unspecified, using default values
  1860   200001                     	org	2097153
  1861   200001  FF                 	db	255
  1862                           
  1863                           ;Config register IDLOC2 @ 0x200002
  1864                           ;	unspecified, using default values
  1865   200002                     	org	2097154
  1866   200002  FF                 	db	255
  1867                           
  1868                           ;Config register IDLOC3 @ 0x200003
  1869                           ;	unspecified, using default values
  1870   200003                     	org	2097155
  1871   200003  FF                 	db	255
  1872                           
  1873                           ;Config register IDLOC4 @ 0x200004
  1874                           ;	unspecified, using default values
  1875   200004                     	org	2097156
  1876   200004  FF                 	db	255
  1877                           
  1878                           ;Config register IDLOC5 @ 0x200005
  1879                           ;	unspecified, using default values
  1880   200005                     	org	2097157
  1881   200005  FF                 	db	255
  1882                           
  1883                           ;Config register IDLOC6 @ 0x200006
  1884                           ;	unspecified, using default values
  1885   200006                     	org	2097158
  1886   200006  FF                 	db	255
  1887                           
  1888                           ;Config register IDLOC7 @ 0x200007
  1889                           ;	unspecified, using default values
  1890   200007                     	org	2097159
  1891   200007  FF                 	db	255
  1892                           
  1893                           	psect	config
  1894                           
  1895                           ;Config register CONFIG1L @ 0x300000
  1896                           ;	unspecified, using default values
  1897                           ;	PLL Prescaler Selection bits
  1898                           ;	PLLDIV = 0x0, unprogrammed default
  1899                           ;	System Clock Postscaler Selection bits
  1900                           ;	CPUDIV = 0x0, unprogrammed default
  1901                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1902                           ;	USBDIV = 0x0, unprogrammed default
  1903   300000                     	org	3145728
  1904   300000  00                 	db	0
  1905                           
  1906                           ;Config register CONFIG1H @ 0x300001
  1907                           ;	Oscillator Selection bits
  1908                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1909                           ;	Fail-Safe Clock Monitor Enable bit
  1910                           ;	FCMEN = 0x0, unprogrammed default
  1911                           ;	Internal/External Oscillator Switchover bit
  1912                           ;	IESO = 0x0, unprogrammed default
  1913   300001                     	org	3145729
  1914   300001  09                 	db	9
  1915                           
  1916                           ;Config register CONFIG2L @ 0x300002
  1917                           ;	unspecified, using default values
  1918                           ;	Power-up Timer Enable bit
  1919                           ;	PWRT = 0x1, unprogrammed default
  1920                           ;	Brown-out Reset Enable bits
  1921                           ;	BOR = 0x3, unprogrammed default
  1922                           ;	Brown-out Reset Voltage bits
  1923                           ;	BORV = 0x3, unprogrammed default
  1924                           ;	USB Voltage Regulator Enable bit
  1925                           ;	VREGEN = 0x0, unprogrammed default
  1926   300002                     	org	3145730
  1927   300002  1F                 	db	31
  1928                           
  1929                           ;Config register CONFIG2H @ 0x300003
  1930                           ;	Watchdog Timer Enable bit
  1931                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1932                           ;	Watchdog Timer Postscale Select bits
  1933                           ;	WDTPS = 0xF, unprogrammed default
  1934   300003                     	org	3145731
  1935   300003  1E                 	db	30
  1936                           
  1937                           ; Padding undefined space
  1938   300004                     	org	3145732
  1939   300004  FF                 	db	255
  1940                           
  1941                           ;Config register CONFIG3H @ 0x300005
  1942                           ;	CCP2 MUX bit
  1943                           ;	CCP2MX = 0x1, unprogrammed default
  1944                           ;	PORTB A/D Enable bit
  1945                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1946                           ;	Low-Power Timer 1 Oscillator Enable bit
  1947                           ;	LPT1OSC = 0x0, unprogrammed default
  1948                           ;	MCLR Pin Enable bit
  1949                           ;	MCLRE = 0x1, unprogrammed default
  1950   300005                     	org	3145733
  1951   300005  81                 	db	129
  1952                           
  1953                           ;Config register CONFIG4L @ 0x300006
  1954                           ;	Stack Full/Underflow Reset Enable bit
  1955                           ;	STVREN = 0x1, unprogrammed default
  1956                           ;	Single-Supply ICSP Enable bit
  1957                           ;	LVP = OFF, Single-Supply ICSP disabled
  1958                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1959                           ;	ICPRT = 0x0, unprogrammed default
  1960                           ;	Extended Instruction Set Enable bit
  1961                           ;	XINST = 0x0, unprogrammed default
  1962                           ;	Background Debugger Enable bit
  1963                           ;	DEBUG = 0x1, unprogrammed default
  1964   300006                     	org	3145734
  1965   300006  81                 	db	129
  1966                           
  1967                           ; Padding undefined space
  1968   300007                     	org	3145735
  1969   300007  FF                 	db	255
  1970                           
  1971                           ;Config register CONFIG5L @ 0x300008
  1972                           ;	unspecified, using default values
  1973                           ;	Code Protection bit
  1974                           ;	CP0 = 0x1, unprogrammed default
  1975                           ;	Code Protection bit
  1976                           ;	CP1 = 0x1, unprogrammed default
  1977                           ;	Code Protection bit
  1978                           ;	CP2 = 0x1, unprogrammed default
  1979                           ;	Code Protection bit
  1980                           ;	CP3 = 0x1, unprogrammed default
  1981   300008                     	org	3145736
  1982   300008  0F                 	db	15
  1983                           
  1984                           ;Config register CONFIG5H @ 0x300009
  1985                           ;	unspecified, using default values
  1986                           ;	Boot Block Code Protection bit
  1987                           ;	CPB = 0x1, unprogrammed default
  1988                           ;	Data EEPROM Code Protection bit
  1989                           ;	CPD = 0x1, unprogrammed default
  1990   300009                     	org	3145737
  1991   300009  C0                 	db	192
  1992                           
  1993                           ;Config register CONFIG6L @ 0x30000A
  1994                           ;	unspecified, using default values
  1995                           ;	Write Protection bit
  1996                           ;	WRT0 = 0x1, unprogrammed default
  1997                           ;	Write Protection bit
  1998                           ;	WRT1 = 0x1, unprogrammed default
  1999                           ;	Write Protection bit
  2000                           ;	WRT2 = 0x1, unprogrammed default
  2001                           ;	Write Protection bit
  2002                           ;	WRT3 = 0x1, unprogrammed default
  2003   30000A                     	org	3145738
  2004   30000A  0F                 	db	15
  2005                           
  2006                           ;Config register CONFIG6H @ 0x30000B
  2007                           ;	unspecified, using default values
  2008                           ;	Configuration Register Write Protection bit
  2009                           ;	WRTC = 0x1, unprogrammed default
  2010                           ;	Boot Block Write Protection bit
  2011                           ;	WRTB = 0x1, unprogrammed default
  2012                           ;	Data EEPROM Write Protection bit
  2013                           ;	WRTD = 0x1, unprogrammed default
  2014   30000B                     	org	3145739
  2015   30000B  E0                 	db	224
  2016                           
  2017                           ;Config register CONFIG7L @ 0x30000C
  2018                           ;	unspecified, using default values
  2019                           ;	Table Read Protection bit
  2020                           ;	EBTR0 = 0x1, unprogrammed default
  2021                           ;	Table Read Protection bit
  2022                           ;	EBTR1 = 0x1, unprogrammed default
  2023                           ;	Table Read Protection bit
  2024                           ;	EBTR2 = 0x1, unprogrammed default
  2025                           ;	Table Read Protection bit
  2026                           ;	EBTR3 = 0x1, unprogrammed default
  2027   30000C                     	org	3145740
  2028   30000C  0F                 	db	15
  2029                           
  2030                           ;Config register CONFIG7H @ 0x30000D
  2031                           ;	unspecified, using default values
  2032                           ;	Boot Block Table Read Protection bit
  2033                           ;	EBTRB = 0x1, unprogrammed default
  2034   30000D                     	org	3145741
  2035   30000D  40                 	db	64
  2036                           tosu	equ	0xFFF
  2037                           tosh	equ	0xFFE
  2038                           tosl	equ	0xFFD
  2039                           stkptr	equ	0xFFC
  2040                           pclatu	equ	0xFFB
  2041                           pclath	equ	0xFFA
  2042                           pcl	equ	0xFF9
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           prodh	equ	0xFF4
  2048                           prodl	equ	0xFF3
  2049                           indf0	equ	0xFEF
  2050                           postinc0	equ	0xFEE
  2051                           postdec0	equ	0xFED
  2052                           preinc0	equ	0xFEC
  2053                           plusw0	equ	0xFEB
  2054                           fsr0h	equ	0xFEA
  2055                           fsr0l	equ	0xFE9
  2056                           wreg	equ	0xFE8
  2057                           indf1	equ	0xFE7
  2058                           postinc1	equ	0xFE6
  2059                           postdec1	equ	0xFE5
  2060                           preinc1	equ	0xFE4
  2061                           plusw1	equ	0xFE3
  2062                           fsr1h	equ	0xFE2
  2063                           fsr1l	equ	0xFE1
  2064                           bsr	equ	0xFE0
  2065                           indf2	equ	0xFDF
  2066                           postinc2	equ	0xFDE
  2067                           postdec2	equ	0xFDD
  2068                           preinc2	equ	0xFDC
  2069                           plusw2	equ	0xFDB
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[4]), STR_2(CODE[9]), STR_3(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Write_String
    _mensaje2->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CHAR_PROPIO->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _Backlight->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2349
                                             10 COMRAM     1     1      0
                          _Backlight
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _LCD_CHAR_PROPIO
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
                           _mensaje2
 ---------------------------------------------------------------------------------
 (1) _mensaje2                                             0     0      0    1002
                             _Cursor
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     4     3      1     408
                                              6 COMRAM     4     3      1
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       1     1      0      90
                                              5 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       2     1      1     504
                                              6 COMRAM     2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _Cursor                                               0     0      0      90
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     135
                                              6 COMRAM     2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      90
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_CHAR_PROPIO                                      0     0      0      90
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              1     1      0      90
                                              5 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       1     1      0      60
                                              4 COMRAM     1     1      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Backlight                                            0     0      0      30
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      30
                                              3 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     1     1      0      15
                                              2 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Backlight
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _I2C_Master_Init
   _I2C_Master_Start
   _LCD_CHAR_PROPIO
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _LCD_Clear
     _LCD_CMD
   _LCD_Init
     _IO_Expander_Write
     _LCD_CMD
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_Char
     _LCD_Write_4Bit
   _LCD_Write_String
     _LCD_Write_Char
   _mensaje2
     _Cursor
       _LCD_CMD
     _LCD_Set_Cursor
     _LCD_Write_String

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      B       F       1       16.0%
BITBIGSFRhl         27      0       0      21        0.0%
BITBIGSFRlhh        26      0       0      22        0.0%
BITBIGSFRllll       21      0       0      28        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllh        8      0       0      27        0.0%
BITBIGSFRlhlh        8      0       0      23        0.0%
BITBIGSFRllhh        6      0       0      25        0.0%
BITBIGSFRllhl        1      0       0      26        0.0%
BITBIGSFRlhll        1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       F      29        0.0%
DATA                 0      0       F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Sep  4 22:40:10 2024

                       l69 0BD4                         _RS 000E                        l186 0A7E  
                      _GIE 7F97                        _RB4 7C0C                        _RB5 7C0D  
                      _RB6 7C0E                        _RB7 7C0F                        u307 092A  
                      u317 093C                        u407 09CA                        u327 0952  
                      u247 0A28                        _PEN 7E2A                        u417 09D8  
                      u337 0968                        u257 0BF6                        u427 09E6  
                      u347 097E                        u267 08EE                        _ISR 0008  
                      u437 09F4                        u357 0C06                        u277 0900  
                      u447 0A02                        u367 0992                        u287 090E  
                      u457 0B60                        u377 09A0                        u297 091C  
                      u387 09AE                        _SEN 7E28                        u397 09BC  
                      wreg 0FE8            __end_of_LCD_CMD 0B9A                       ?_ISR 0001  
      LCD_Write_String@Str 0007             _LCD_Set_Cursor 0A80                       l1210 0ACC  
                     l1220 0A8E                       l1222 0A98                       l1214 0AE6  
                     l1224 0AA2                       l1218 0A84                       l1226 0AAC  
                     STR_1 081B                       STR_2 0812                       STR_3 0801  
                     _LATB 0F8A                       _LATD 0F8C                       _RBIE 7F93  
                     _RBIF 7F90                       _RBPU 7F8F          ?_LCD_Write_String 0007  
                     _main 0A0A                       btemp 0010                       start 000E  
       ??_LCD_Write_String 0008               ___param_bank 0000       LCD_Write_4Bit@Nibble 0005  
        ??_LCD_CHAR_PROPIO 0007                      ??_ISR 0001           __end_of_LCD_Init 098A  
         ?_I2C_Master_Init 0001           ?_I2C_Master_Wait 0001           ?_I2C_Master_Stop 0001  
                    ?_main 0001                      i2l201 0846                      i2l211 0872  
                    i2l203 084E                      i2l230 08D8                      i2l223 08AA  
                    i2l215 0886                      i2l207 0862                      i2l224 08C2  
                    i2l225 08B2                      i2l217 088E                      i2l209 086A  
                    i2l227 08BA                      i2l219 0896                      i2l199 083E  
                    _PORTB 0F81                      _TRISB 0F93                      _TRISD 0F95  
                    _SSPIF 7CF3                      _Tecla 000C     __end_of_LCD_Set_Cursor 0AC2  
                    tablat 0FF5                      ttemp5 0011                      ttemp6 0014  
                    ttemp7 0018                      status 0FD8                      wtemp8 0011  
           _LCD_Write_4Bit 0B48             _LCD_Write_Char 0B66            __initialization 0B00  
             __end_of_main 0A80          _IO_Expander_Write 0B9A         ?_IO_Expander_Write 0001  
                   ??_main 000B          __end_of_LCD_Clear 0C0E              __activetblptr 0002  
                ??_LCD_CMD 0006          ?_I2C_Master_Start 0001          ?_I2C_Master_Write 0001  
      ??_IO_Expander_Write 0004            ?_LCD_Set_Cursor 0007         ??_I2C_Master_Start 0003  
       ??_I2C_Master_Write 0003                     i2l1204 08C6                     i2l1180 087A  
                   i2l1192 089E                     i2l1168 0856                     _SSPADD 0FC8  
                   _TRISB0 7C98                     _TRISB1 7C99                     _SSPBUF 0FC9  
   __end_of_LCD_Write_4Bit 0B66     __end_of_LCD_Write_Char 0B80                     _Cursor 0BEE  
__end_of_IO_Expander_Write 0BB4           __end_of_mensaje2 0B48                     isa$std 0001  
             __pdataCOMRAM 000F          __end_of_Backlight 0C1A               __mediumconst 0000  
                   tblptrh 0FF7                     tblptrl 0FF6                     tblptru 0FF8  
               __accesstop 0060    __end_of__initialization 0B18                  ?_LCD_Init 0001  
          ?_LCD_Write_4Bit 0001              ___rparam_used 0001            ?_LCD_Write_Char 0001  
           __pcstackCOMRAM 0001            _LCD_CHAR_PROPIO 098A                 ??_LCD_Init 0007  
                  ?_Cursor 0001                    _ACKSTAT 7E2E                    _LCD_CMD 0B80  
                  i2u46_47 08CC                    _SSPCON1 0FC6                    _SSPCON2 0FC5  
                  _SSPSTAT 0FC7                  ?_mensaje2 0001                    _i2c_add 000D  
                  __Hparam 0000                    __Lparam 0000               __psmallconst 0800  
                  __pcinit 0B00                    __ramtop 0800           ??_LCD_Set_Cursor 0008  
                  __ptext0 0A0A                    __ptext1 0B26                    __ptext2 0AC2  
                  __ptext3 0B66                    __ptext4 0A80                    __ptext5 0BEE  
                  __ptext6 08DC                    __ptext7 0BFE                    __ptext8 098A  
                  __ptext9 0B80    __end_of_LCD_CHAR_PROPIO 0A0A                  _LCD_Clear 0BFE  
           __pintcode_body 0820       end_of_initialization 0B18              __Lmediumconst 0000  
                  int_func 0820                 ??_mensaje2 000B                 LCD_CMD@CMD 0006  
               ?_LCD_Clear 0001                  _Backlight 0C0E           ??_LCD_Write_4Bit 0005  
        LCD_Write_String@i 0009           ??_LCD_Write_Char 0006             __end_of_Cursor 0BFE  
         _LCD_Write_String 0AC2              __pidataCOMRAM 0C2A        start_initialization 0B00  
              __end_of_ISR 08DC           ?_LCD_CHAR_PROPIO 0001                 ?_Backlight 0001  
        ??_I2C_Master_Init 0002          ??_I2C_Master_Wait 0002          ??_I2C_Master_Stop 0003  
                 ??_Cursor 0007                   ?_LCD_CMD 0001                __pbssCOMRAM 000C  
              ??_LCD_Clear 0007           _I2C_Master_Start 0C22           _I2C_Master_Write 0BCA  
    IO_Expander_Write@Data 0004                  __pintcode 0008       I2C_Master_Write@data 0003  
              __smallconst 0800                ??_Backlight 0005                   _LCD_Init 08DC  
 __end_of_LCD_Write_String 0B00                   __Hrparam 0000                   __Lrparam 0000  
          _I2C_Master_Init 0BB4            _I2C_Master_Wait 0BDC            _I2C_Master_Stop 0C1A  
                 __ptext10 0B48                   __ptext11 0BB4                   __ptext12 0C0E  
                 __ptext13 0B9A                   __ptext14 0BCA                   __ptext15 0C1A  
                 __ptext16 0C22                   __ptext17 0BDC            _BackLight_State 000F  
                 _mensaje2 0B26                   isa$xinst 0000                   int$flags 0010  
 __end_of_I2C_Master_Start 0C2A   __end_of_I2C_Master_Write 0BDC         LCD_Write_Char@Data 0006  
                 intlevel2 0000    __end_of_I2C_Master_Init 0BCA    __end_of_I2C_Master_Wait 0BEE  
  __end_of_I2C_Master_Stop 0C22            LCD_Init@I2C_Add 0008          LCD_Set_Cursor@COL 0007  
        LCD_Set_Cursor@ROW 0008  
