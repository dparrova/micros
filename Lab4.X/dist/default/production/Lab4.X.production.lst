

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Sep 10 22:58:29 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78   000000                     
    79                           ; Generated 05/01/2024 GMT
    80                           ; 
    81                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4550 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113   000000                     
   114                           	psect	idataCOMRAM
   115   00207C                     __pidataCOMRAM:
   116                           	callstack 0
   117                           
   118                           ;initializer for _digito
   119   00207C  0001               	dw	1
   120                           
   121                           ;initializer for _menu
   122   00207E  0002               	dw	2
   123                           
   124                           	psect	idataBANK0
   125   001EDE                     __pidataBANK0:
   126                           	callstack 0
   127                           
   128                           ;initializer for _color
   129   001EDE  0002               	dw	2
   130   001EE0  0006               	dw	6
   131   001EE2  0004               	dw	4
   132   001EE4  0005               	dw	5
   133   001EE6  0001               	dw	1
   134   001EE8  0000               	dw	0
   135                           
   136                           ;initializer for _t
   137   001EEA  8F                 	db	143
   138   001EEB  C2                 	db	194
   139   001EEC  41                 	db	65
   140                           
   141                           ;initializer for _rojo
   142   001EED  0003               	dw	3
   143                           
   144                           ;initializer for _v
   145   001EEF  03FF               	dw	1023
   146                           
   147                           ;initializer for _flagParar
   148   001EF1  0001               	dw	1
   149                           
   150                           ;initializer for _buffer
   151   001EF3  76                 	db	118
   152   001EF4  61                 	db	97
   153   001EF5  6C                 	db	108
   154   001EF6  6F                 	db	111
   155   001EF7  72                 	db	114
   156   001EF8  20                 	db	32
   157   001EF9  64                 	db	100
   158   001EFA  65                 	db	101
   159   001EFB  20                 	db	32
   160   001EFC  41                 	db	65
   161   001EFD  44                 	db	68
   162   001EFE  43                 	db	67
   163   001EFF  3D                 	db	61
   164   001F00  00                 	db	0
   165   001F01  00                 	db	0
   166   001F02  00                 	db	0
   167   001F03  00                 	db	0
   168   001F04  00                 	db	0
   169   001F05  00                 	db	0
   170   001F06  00                 	db	0
   171                           
   172                           	psect	smallconst
   173   000800                     __psmallconst:
   174                           	callstack 0
   175   000800  00                 	db	0
   176   000801                     _dpowers:
   177                           	callstack 0
   178   000801  0001               	dw	1
   179   000803  000A               	dw	10
   180   000805  0064               	dw	100
   181   000807  03E8               	dw	1000
   182   000809  2710               	dw	10000
   183   00080B                     __end_of_dpowers:
   184                           	callstack 0
   185   00080B                     _figura_5:
   186                           	callstack 0
   187   00080B  0F                 	db	15
   188   00080C  09                 	db	9
   189   00080D  1C                 	db	28
   190   00080E  08                 	db	8
   191   00080F  02                 	db	2
   192   000810  07                 	db	7
   193   000811  12                 	db	18
   194   000812  1E                 	db	30
   195   000813                     __end_of_figura_5:
   196                           	callstack 0
   197   000813                     _figura_4:
   198                           	callstack 0
   199   000813  04                 	db	4
   200   000814  0E                 	db	14
   201   000815  0A                 	db	10
   202   000816  0A                 	db	10
   203   000817  1F                 	db	31
   204   000818  1B                 	db	27
   205   000819  1F                 	db	31
   206   00081A  00                 	db	0
   207   00081B                     __end_of_figura_4:
   208                           	callstack 0
   209   00081B                     _figura_3:
   210                           	callstack 0
   211   00081B  03                 	db	3
   212   00081C  03                 	db	3
   213   00081D  02                 	db	2
   214   00081E  07                 	db	7
   215   00081F  06                 	db	6
   216   000820  0E                 	db	14
   217   000821  0A                 	db	10
   218   000822  13                 	db	19
   219   000823                     __end_of_figura_3:
   220                           	callstack 0
   221   000823                     _figura_2:
   222                           	callstack 0
   223   000823  04                 	db	4
   224   000824  11                 	db	17
   225   000825  0E                 	db	14
   226   000826  04                 	db	4
   227   000827  04                 	db	4
   228   000828  0A                 	db	10
   229   000829  11                 	db	17
   230   00082A  00                 	db	0
   231   00082B                     __end_of_figura_2:
   232                           	callstack 0
   233   00082B                     _figura_1:
   234                           	callstack 0
   235   00082B  0A                 	db	10
   236   00082C  0A                 	db	10
   237   00082D  0A                 	db	10
   238   00082E  00                 	db	0
   239   00082F  11                 	db	17
   240   000830  11                 	db	17
   241   000831  0E                 	db	14
   242   000832  00                 	db	0
   243   000833                     __end_of_figura_1:
   244                           	callstack 0
   245   000000                     _ADCON1bits	set	4033
   246   000000                     _TRISB	set	3987
   247   000000                     _TRISC	set	3988
   248   000000                     _TRISDbits	set	3989
   249   000000                     _LATD	set	3980
   250   000000                     _TRISA	set	3986
   251   000000                     _TRISD	set	3989
   252   000000                     _LATA1	set	31817
   253   000000                     _RB7	set	31759
   254   000000                     _RB6	set	31758
   255   000000                     _RB5	set	31757
   256   000000                     _RB4	set	31756
   257   000000                     _GO	set	32273
   258   000000                     _TRMT	set	32097
   259   000000                     _TMR2ON	set	32338
   260   000000                     _GIE	set	32663
   261   000000                     _RBIE	set	32659
   262   000000                     _RBIF	set	32656
   263   000000                     _TMR0ON	set	32431
   264   000000                     _TMR0IE	set	32661
   265   000000                     _LATA5	set	31821
   266   000000                     _PORTAbits	set	3968
   267   000000                     _LATAbits	set	3977
   268   000000                     _LATDbits	set	3980
   269   000000                     _LATE	set	3981
   270   000000                     _TRISAbits	set	3986
   271   000000                     _LATB	set	3978
   272   000000                     _RCSTA	set	4011
   273   000000                     _TXSTA	set	4012
   274   000000                     _TRISE	set	3990
   275   000000                     _ADCON2	set	4032
   276   000000                     _ADCON0	set	4034
   277   000000                     _ADRES	set	4035
   278   000000                     _TMR0	set	4054
   279   000000                     _T2CON	set	4042
   280   000000                     _PR2	set	4043
   281   000000                     _T0CON	set	4053
   282   000000                     _RBPU	set	32655
   283   000000                     _TXREG	set	4013
   284   000000                     _SPBRG	set	4015
   285   000000                     _BAUDCON	set	4024
   286   000000                     _CCP1CON	set	4029
   287   000000                     _CCPR1L	set	4030
   288   000000                     _TMR0IF	set	32658
   289   000000                     _TMR2	set	4044
   290   000000                     _PORTB	set	3969
   291   000833                     STR_11:
   292   000833  43                 	db	67	;'C'
   293   000834  75                 	db	117	;'u'
   294   000835  65                 	db	101	;'e'
   295   000836  6E                 	db	110	;'n'
   296   000837  74                 	db	116	;'t'
   297   000838  61                 	db	97	;'a'
   298   000839  20                 	db	32
   299   00083A  66                 	db	102	;'f'
   300   00083B  69                 	db	105	;'i'
   301   00083C  6E                 	db	110	;'n'
   302   00083D  61                 	db	97	;'a'
   303   00083E  6C                 	db	108	;'l'
   304   00083F  69                 	db	105	;'i'
   305   000840  7A                 	db	122	;'z'
   306   000841  61                 	db	97	;'a'
   307   000842  64                 	db	100	;'d'
   308   000843  61                 	db	97	;'a'
   309   000844  00                 	db	0
   310   000845                     STR_4:
   311   000845  56                 	db	86	;'V'
   312   000846  61                 	db	97	;'a'
   313   000847  6C                 	db	108	;'l'
   314   000848  6F                 	db	111	;'o'
   315   000849  72                 	db	114	;'r'
   316   00084A  20                 	db	32
   317   00084B  64                 	db	100	;'d'
   318   00084C  65                 	db	101	;'e'
   319   00084D  20                 	db	32
   320   00084E  41                 	db	65	;'A'
   321   00084F  44                 	db	68	;'D'
   322   000850  43                 	db	67	;'C'
   323   000851  20                 	db	32
   324   000852  3D                 	db	61	;'='
   325   000853  20                 	db	32
   326   000854  25                 	db	37
   327   000855  75                 	db	117	;'u'
   328   000856  00                 	db	0
   329   000857                     STR_5:
   330   000857  50                 	db	80	;'P'
   331   000858  69                 	db	105	;'i'
   332   000859  65                 	db	101	;'e'
   333   00085A  7A                 	db	122	;'z'
   334   00085B  61                 	db	97	;'a'
   335   00085C  73                 	db	115	;'s'
   336   00085D  20                 	db	32
   337   00085E  61                 	db	97	;'a'
   338   00085F  20                 	db	32
   339   000860  63                 	db	99	;'c'
   340   000861  6F                 	db	111	;'o'
   341   000862  6E                 	db	110	;'n'
   342   000863  74                 	db	116	;'t'
   343   000864  61                 	db	97	;'a'
   344   000865  72                 	db	114	;'r'
   345   000866  3A                 	db	58	;':'
   346   000867  00                 	db	0
   347   000868                     STR_1:
   348   000868  4C                 	db	76	;'L'
   349   000869  61                 	db	97	;'a'
   350   00086A  62                 	db	98	;'b'
   351   00086B  6F                 	db	111	;'o'
   352   00086C  72                 	db	114	;'r'
   353   00086D  61                 	db	97	;'a'
   354   00086E  74                 	db	116	;'t'
   355   00086F  6F                 	db	111	;'o'
   356   000870  72                 	db	114	;'r'
   357   000871  69                 	db	105	;'i'
   358   000872  6F                 	db	111	;'o'
   359   000873  20                 	db	32
   360   000874  30                 	db	48	;'0'
   361   000875  34                 	db	52	;'4'
   362   000876  00                 	db	0
   363   000877                     STR_14:
   364   000877  45                 	db	69	;'E'
   365   000878  6D                 	db	109	;'m'
   366   000879  65                 	db	101	;'e'
   367   00087A  72                 	db	114	;'r'
   368   00087B  67                 	db	103	;'g'
   369   00087C  65                 	db	101	;'e'
   370   00087D  6E                 	db	110	;'n'
   371   00087E  63                 	db	99	;'c'
   372   00087F  69                 	db	105	;'i'
   373   000880  61                 	db	97	;'a'
   374   000881  20                 	db	32
   375   000882  00                 	db	0
   376   000883                     STR_3:
   377   000883  4D                 	db	77	;'M'
   378   000884  69                 	db	105	;'i'
   379   000885  63                 	db	99	;'c'
   380   000886  72                 	db	114	;'r'
   381   000887  6F                 	db	111	;'o'
   382   000888  73                 	db	115	;'s'
   383   000889  20                 	db	32
   384   00088A  55                 	db	85	;'U'
   385   00088B  4E                 	db	78	;'N'
   386   00088C  41                 	db	65	;'A'
   387   00088D  4C                 	db	76	;'L'
   388   00088E  00                 	db	0
   389   00088F                     STR_2:
   390   00088F  50                 	db	80	;'P'
   391   000890  49                 	db	73	;'I'
   392   000891  43                 	db	67	;'C'
   393   000892  31                 	db	49	;'1'
   394   000893  38                 	db	56	;'8'
   395   000894  46                 	db	70	;'F'
   396   000895  34                 	db	52	;'4'
   397   000896  35                 	db	53	;'5'
   398   000897  35                 	db	53	;'5'
   399   000898  30                 	db	48	;'0'
   400   000899  00                 	db	0
   401   00089A                     STR_7:
   402   00089A  46                 	db	70	;'F'
   403   00089B  61                 	db	97	;'a'
   404   00089C  6C                 	db	108	;'l'
   405   00089D  74                 	db	116	;'t'
   406   00089E  61                 	db	97	;'a'
   407   00089F  6E                 	db	110	;'n'
   408   0008A0  74                 	db	116	;'t'
   409   0008A1  65                 	db	101	;'e'
   410   0008A2  3A                 	db	58	;':'
   411   0008A3  00                 	db	0
   412   0008A4                     STR_9:
   413   0008A4  4F                 	db	79	;'O'
   414   0008A5  62                 	db	98	;'b'
   415   0008A6  6A                 	db	106	;'j'
   416   0008A7  65                 	db	101	;'e'
   417   0008A8  74                 	db	116	;'t'
   418   0008A9  69                 	db	105	;'i'
   419   0008AA  76                 	db	118	;'v'
   420   0008AB  6F                 	db	111	;'o'
   421   0008AC  3A                 	db	58	;':'
   422   0008AD  00                 	db	0
   423   0008AE                     STR_13:
   424   0008AE  50                 	db	80	;'P'
   425   0008AF  61                 	db	97	;'a'
   426   0008B0  72                 	db	114	;'r'
   427   0008B1  61                 	db	97	;'a'
   428   0008B2  64                 	db	100	;'d'
   429   0008B3  61                 	db	97	;'a'
   430   0008B4  20                 	db	32
   431   0008B5  64                 	db	100	;'d'
   432   0008B6  65                 	db	101	;'e'
   433   0008B7  00                 	db	0
   434   0008B8                     STR_6:
   435   0008B8  41                 	db	65	;'A'
   436   0008B9  3A                 	db	58	;':'
   437   0008BA  6F                 	db	111	;'o'
   438   0008BB  6B                 	db	107	;'k'
   439   0008BC  20                 	db	32
   440   0008BD  42                 	db	66	;'B'
   441   0008BE  3A                 	db	58	;':'
   442   0008BF  00                 	db	0
   443   0008C0                     STR_12:
   444   0008C0  41                 	db	65	;'A'
   445   0008C1  3A                 	db	58	;':'
   446   0008C2  4F                 	db	79	;'O'
   447   0008C3  4B                 	db	75	;'K'
   448   0008C4  00                 	db	0
   449   0008C5                     STR_10:
   450   0008C5  23                 	db	35
   451   0008C6  3D                 	db	61	;'='
   452   0008C7  58                 	db	88	;'X'
   453   0008C8  00                 	db	0
   454   0008C9                     STR_8:
   455   0008C9  43                 	db	67	;'C'
   456   0008CA  3D                 	db	61	;'='
   457   0008CB  00                 	db	0
   458   0008CC  00                 	db	0	; dummy byte at the end
   459   000000                     
   460                           ; #config settings
   461                           
   462                           	psect	cinit
   463   0019D2                     __pcinit:
   464                           	callstack 0
   465   0019D2                     start_initialization:
   466                           	callstack 0
   467   0019D2                     __initialization:
   468                           	callstack 0
   469                           
   470                           ; Initialize objects allocated to BANK0 (41 bytes)
   471                           ; load TBLPTR registers with __pidataBANK0
   472   0019D2  0EDE               	movlw	low __pidataBANK0
   473   0019D4  6EF6               	movwf	tblptrl,c
   474   0019D6  0E1E               	movlw	high __pidataBANK0
   475   0019D8  6EF7               	movwf	tblptrh,c
   476   0019DA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   477   0019DC  6EF8               	movwf	tblptru,c
   478   0019DE  EE00  F060         	lfsr	0,__pdataBANK0
   479   0019E2  EE10 F029          	lfsr	1,41
   480   0019E6                     copy_data0:
   481   0019E6  0009               	tblrd		*+
   482   0019E8  CFF5 FFEE          	movff	tablat,postinc0
   483   0019EC  50E5               	movf	postdec1,w,c
   484   0019EE  50E1               	movf	fsr1l,w,c
   485   0019F0  E1FA               	bnz	copy_data0
   486                           
   487                           ; Initialize objects allocated to COMRAM (4 bytes)
   488                           ; load TBLPTR registers with __pidataCOMRAM
   489   0019F2  0E7C               	movlw	low __pidataCOMRAM
   490   0019F4  6EF6               	movwf	tblptrl,c
   491   0019F6  0E20               	movlw	high __pidataCOMRAM
   492   0019F8  6EF7               	movwf	tblptrh,c
   493   0019FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   494   0019FC  6EF8               	movwf	tblptru,c
   495   0019FE  EE00  F048         	lfsr	0,__pdataCOMRAM
   496   001A02  EE10 F004          	lfsr	1,4
   497   001A06                     copy_data1:
   498   001A06  0009               	tblrd		*+
   499   001A08  CFF5 FFEE          	movff	tablat,postinc0
   500   001A0C  50E5               	movf	postdec1,w,c
   501   001A0E  50E1               	movf	fsr1l,w,c
   502   001A10  E1FA               	bnz	copy_data1
   503                           
   504                           ; Clear objects allocated to BANK0 (2 bytes)
   505   001A12  0100               	movlb	0
   506   001A14  6B9C               	clrf	(__pbssBANK0+1)& (0+255),b
   507   001A16  6B9B               	clrf	__pbssBANK0& (0+255),b
   508                           
   509                           ; Clear objects allocated to COMRAM (21 bytes)
   510   001A18  EE00  F033         	lfsr	0,__pbssCOMRAM
   511   001A1C  0E15               	movlw	21
   512   001A1E                     clear_0:
   513   001A1E  6AEE               	clrf	postinc0,c
   514   001A20  06E8               	decf	wreg,f,c
   515   001A22  E1FD               	bnz	clear_0
   516   001A24                     end_of_initialization:
   517                           	callstack 0
   518   001A24                     __end_of__initialization:
   519                           	callstack 0
   520   001A24  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   521   001A26  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   522   001A28  0E00               	movlw	low (__Lmediumconst shr (0+16))
   523   001A2A  6EF8               	movwf	tblptru,c
   524   001A2C  0100               	movlb	0
   525   001A2E  EF67  F004         	goto	_main	;jump to C main() function
   526                           
   527                           	psect	bssCOMRAM
   528   000033                     __pbssCOMRAM:
   529                           	callstack 0
   530   000033                     _resultado_ADC:
   531                           	callstack 0
   532   000033                     	ds	2
   533   000035                     _contadorDecena:
   534                           	callstack 0
   535   000035                     	ds	2
   536   000037                     _contadorUnidad:
   537                           	callstack 0
   538   000037                     	ds	2
   539   000039                     _cantidadRestaDecena:
   540                           	callstack 0
   541   000039                     	ds	2
   542   00003B                     _cantidadRestaUnidad:
   543                           	callstack 0
   544   00003B                     	ds	2
   545   00003D                     _cantidadResta:
   546                           	callstack 0
   547   00003D                     	ds	2
   548   00003F                     _contador:
   549                           	callstack 0
   550   00003F                     	ds	2
   551   000041                     _cantidad:
   552                           	callstack 0
   553   000041                     	ds	2
   554   000043                     _unidad:
   555                           	callstack 0
   556   000043                     	ds	2
   557   000045                     _decena:
   558                           	callstack 0
   559   000045                     	ds	2
   560   000047                     _Tecla:
   561                           	callstack 0
   562   000047                     	ds	1
   563                           
   564                           	psect	dataCOMRAM
   565   000048                     __pdataCOMRAM:
   566                           	callstack 0
   567   000048                     _digito:
   568                           	callstack 0
   569   000048                     	ds	2
   570   00004A                     _menu:
   571                           	callstack 0
   572   00004A                     	ds	2
   573                           
   574                           	psect	bssBANK0
   575   00009B                     __pbssBANK0:
   576                           	callstack 0
   577   00009B                     _mostrar:
   578                           	callstack 0
   579   00009B                     	ds	2
   580                           
   581                           	psect	dataBANK0
   582   000060                     __pdataBANK0:
   583                           	callstack 0
   584   000060                     _color:
   585                           	callstack 0
   586   000060                     	ds	12
   587   00006C                     _t:
   588                           	callstack 0
   589   00006C                     	ds	3
   590   00006F                     _rojo:
   591                           	callstack 0
   592   00006F                     	ds	2
   593   000071                     _v:
   594                           	callstack 0
   595   000071                     	ds	2
   596   000073                     _flagParar:
   597                           	callstack 0
   598   000073                     	ds	2
   599   000075                     _buffer:
   600                           	callstack 0
   601   000075                     	ds	20
   602                           
   603                           	psect	cstackBANK0
   604   000089                     __pcstackBANK0:
   605                           	callstack 0
   606   000089                     ??___ftmul:
   607                           
   608                           ; 1 bytes @ 0x0
   609   000089                     	ds	3
   610   00008C                     ___ftmul@exp:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0x3
   614   00008C                     	ds	1
   615   00008D                     ___ftmul@f3_as_product:
   616                           	callstack 0
   617                           
   618                           ; 3 bytes @ 0x4
   619   00008D                     	ds	3
   620   000090                     ___ftmul@cntr:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x7
   624   000090                     	ds	1
   625   000091                     ___ftmul@sign:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x8
   629   000091                     	ds	1
   630   000092                     Duty_motor@ADC:
   631                           	callstack 0
   632                           
   633                           ; 3 bytes @ 0x9
   634   000092                     	ds	3
   635   000095                     Duty_motor@escalarADC:
   636                           	callstack 0
   637                           
   638                           ; 3 bytes @ 0xC
   639   000095                     	ds	3
   640   000098                     main@pina0:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0xF
   644   000098                     	ds	2
   645   00009A                     main@i:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x11
   649   00009A                     	ds	1
   650                           
   651                           	psect	cstackCOMRAM
   652   000001                     __pcstackCOMRAM:
   653                           	callstack 0
   654   000001                     ?i2___wmul:
   655                           	callstack 0
   656   000001                     ?i2___awdiv:
   657                           	callstack 0
   658   000001                     ?i2___awmod:
   659                           	callstack 0
   660   000001                     i2Lcd_Port@a:
   661                           	callstack 0
   662   000001                     Trasmitir@i:
   663                           	callstack 0
   664   000001                     i2___wmul@multiplier:
   665                           	callstack 0
   666   000001                     i2___awdiv@dividend:
   667                           	callstack 0
   668   000001                     i2___awmod@dividend:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x0
   672   000001                     	ds	1
   673   000002                     i2Lcd_Cmd@a:
   674                           	callstack 0
   675   000002                     i2Lcd_Write_Char@temp:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x1
   679   000002                     	ds	1
   680   000003                     i2Lcd_Set_Cursor@b:
   681                           	callstack 0
   682   000003                     i2Lcd_Write_Char@y:
   683                           	callstack 0
   684   000003                     i2___wmul@multiplicand:
   685                           	callstack 0
   686   000003                     i2___awdiv@divisor:
   687                           	callstack 0
   688   000003                     i2___awmod@divisor:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x2
   692   000003                     	ds	1
   693   000004                     i2Lcd_Set_Cursor@a:
   694                           	callstack 0
   695   000004                     i2Lcd_Write_Char@a:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x3
   699   000004                     	ds	1
   700   000005                     ??_PiezaAContar:
   701   000005                     i2Lcd_Set_Cursor@z:
   702                           	callstack 0
   703   000005                     i2Lcd_Write_String@a:
   704                           	callstack 0
   705   000005                     i2___awdiv@counter:
   706                           	callstack 0
   707   000005                     i2___awmod@counter:
   708                           	callstack 0
   709   000005                     i2___wmul@product:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x4
   713   000005                     	ds	1
   714   000006                     ??i2_Lcd_Write_String:
   715   000006                     PiezaAContar@a:
   716                           	callstack 0
   717   000006                     i2Lcd_Set_Cursor@y:
   718                           	callstack 0
   719   000006                     i2___awdiv@sign:
   720                           	callstack 0
   721   000006                     i2___awmod@sign:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x5
   725   000006                     	ds	1
   726   000007                     i2Lcd_Set_Cursor@temp:
   727                           	callstack 0
   728   000007                     i2Lcd_Write_String@i:
   729                           	callstack 0
   730   000007                     i2___awdiv@quotient:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x6
   734   000007                     	ds	1
   735   000008                     
   736                           ; 1 bytes @ 0x7
   737   000008                     	ds	1
   738   000009                     ??i2_ContarReal:
   739                           
   740                           ; 1 bytes @ 0x8
   741   000009                     	ds	2
   742   00000B                     ??_ISR:
   743                           
   744                           ; 1 bytes @ 0xA
   745   00000B                     	ds	9
   746   000014                     ?_Conversion:
   747                           	callstack 0
   748   000014                     ?___wmul:
   749                           	callstack 0
   750   000014                     ?___awdiv:
   751                           	callstack 0
   752   000014                     ?___awmod:
   753                           	callstack 0
   754   000014                     ?___lwdiv:
   755                           	callstack 0
   756   000014                     ?___ftpack:
   757                           	callstack 0
   758   000014                     ?___fttol:
   759                           	callstack 0
   760   000014                     Lcd_Port@a:
   761                           	callstack 0
   762   000014                     ___wmul@multiplier:
   763                           	callstack 0
   764   000014                     ___awdiv@dividend:
   765                           	callstack 0
   766   000014                     ___awmod@dividend:
   767                           	callstack 0
   768   000014                     ___lwdiv@dividend:
   769                           	callstack 0
   770   000014                     ___ftpack@arg:
   771                           	callstack 0
   772   000014                     ___ftge@ff1:
   773                           	callstack 0
   774   000014                     ___fttol@f1:
   775                           	callstack 0
   776                           
   777                           ; 3 bytes @ 0x13
   778   000014                     	ds	1
   779   000015                     Lcd_Cmd@a:
   780                           	callstack 0
   781   000015                     Lcd_Write_Char@temp:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0x14
   785   000015                     	ds	1
   786   000016                     ??_Conversion:
   787   000016                     ??_Lcd_Init:
   788   000016                     Lcd_Set_Cursor@b:
   789                           	callstack 0
   790   000016                     Lcd_Write_Char@y:
   791                           	callstack 0
   792   000016                     ___wmul@multiplicand:
   793                           	callstack 0
   794   000016                     ___awdiv@divisor:
   795                           	callstack 0
   796   000016                     ___awmod@divisor:
   797                           	callstack 0
   798   000016                     ___lwdiv@divisor:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x15
   802   000016                     	ds	1
   803   000017                     Lcd_Set_Cursor@a:
   804                           	callstack 0
   805   000017                     Lcd_Write_Char@a:
   806                           	callstack 0
   807   000017                     Conversion@canal:
   808                           	callstack 0
   809   000017                     ___ftpack@exp:
   810                           	callstack 0
   811   000017                     ___ftge@ff2:
   812                           	callstack 0
   813                           
   814                           ; 3 bytes @ 0x16
   815   000017                     	ds	1
   816   000018                     ??___fttol:
   817   000018                     Lcd_Set_Cursor@z:
   818                           	callstack 0
   819   000018                     Lcd_Write_String@a:
   820                           	callstack 0
   821   000018                     Lcd_CGRAM_CreateChar@chardata:
   822                           	callstack 0
   823   000018                     ___awdiv@counter:
   824                           	callstack 0
   825   000018                     ___awmod@counter:
   826                           	callstack 0
   827   000018                     ___ftpack@sign:
   828                           	callstack 0
   829   000018                     ___lwdiv@counter:
   830                           	callstack 0
   831   000018                     ___wmul@product:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x17
   835   000018                     	ds	1
   836   000019                     ??___ftpack:
   837   000019                     ??_Lcd_Write_String:
   838   000019                     ??_Lcd_CGRAM_CreateChar:
   839   000019                     Lcd_Set_Cursor@y:
   840                           	callstack 0
   841   000019                     ___awdiv@sign:
   842                           	callstack 0
   843   000019                     ___awmod@sign:
   844                           	callstack 0
   845   000019                     ___lwdiv@quotient:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x18
   849   000019                     	ds	1
   850   00001A                     ??___ftge:
   851   00001A                     Lcd_Set_Cursor@temp:
   852                           	callstack 0
   853   00001A                     Lcd_CGRAM_CreateChar@add:
   854                           	callstack 0
   855   00001A                     Lcd_Write_String@i:
   856                           	callstack 0
   857   00001A                     ___awdiv@quotient:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x19
   861   00001A                     	ds	1
   862   00001B                     ?___lwmod:
   863                           	callstack 0
   864   00001B                     Lcd_CGRAM_CreateChar@i:
   865                           	callstack 0
   866   00001B                     ___lwmod@dividend:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x1A
   870   00001B                     	ds	1
   871   00001C                     ??_ContarReal:
   872   00001C                     ?___ftdiv:
   873                           	callstack 0
   874   00001C                     ?___lwtoft:
   875                           	callstack 0
   876   00001C                     Lcd_CGRAM_CreateChar@i_243:
   877                           	callstack 0
   878   00001C                     ___lwtoft@c:
   879                           	callstack 0
   880   00001C                     ___ftdiv@f1:
   881                           	callstack 0
   882                           
   883                           ; 3 bytes @ 0x1B
   884   00001C                     	ds	1
   885   00001D                     Lcd_CGRAM_CreateChar@i_244:
   886                           	callstack 0
   887   00001D                     ___fttol@sign1:
   888                           	callstack 0
   889   00001D                     ___lwmod@divisor:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x1C
   893   00001D                     	ds	1
   894   00001E                     Lcd_CGRAM_CreateChar@i_245:
   895                           	callstack 0
   896   00001E                     ___fttol@lval:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x1D
   900   00001E                     	ds	1
   901   00001F                     Lcd_CGRAM_CreateChar@i_246:
   902                           	callstack 0
   903   00001F                     ___lwmod@counter:
   904                           	callstack 0
   905   00001F                     ___ftdiv@f2:
   906                           	callstack 0
   907                           
   908                           ; 3 bytes @ 0x1E
   909   00001F                     	ds	1
   910   000020                     ?_sprintf:
   911                           	callstack 0
   912   000020                     Lcd_CGRAM_CreateChar@i_247:
   913                           	callstack 0
   914   000020                     sprintf@sp:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x1F
   918   000020                     	ds	1
   919   000021                     Lcd_CGRAM_CreateChar@i_248:
   920                           	callstack 0
   921   000021                     sprintf@f:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x20
   925   000021                     	ds	1
   926   000022                     ??___ftdiv:
   927   000022                     Lcd_CGRAM_CreateChar@i_249:
   928                           	callstack 0
   929   000022                     ___fttol@exp1:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0x21
   933   000022                     	ds	2
   934   000024                     ??_sprintf:
   935                           
   936                           ; 1 bytes @ 0x23
   937   000024                     	ds	1
   938   000025                     sprintf@flag:
   939                           	callstack 0
   940   000025                     ___ftdiv@cntr:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x24
   944   000025                     	ds	1
   945   000026                     sprintf@ap:
   946                           	callstack 0
   947   000026                     ___ftdiv@f3:
   948                           	callstack 0
   949                           
   950                           ; 3 bytes @ 0x25
   951   000026                     	ds	1
   952   000027                     sprintf@val:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x26
   956   000027                     	ds	2
   957   000029                     sprintf@prec:
   958                           	callstack 0
   959   000029                     ___ftdiv@exp:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x28
   963   000029                     	ds	1
   964   00002A                     sprintf@c:
   965                           	callstack 0
   966   00002A                     ___ftdiv@sign:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x29
   970   00002A                     	ds	1
   971   00002B                     ?___ftmul:
   972                           	callstack 0
   973   00002B                     ___ftmul@f1:
   974                           	callstack 0
   975                           
   976                           ; 3 bytes @ 0x2A
   977   00002B                     	ds	3
   978   00002E                     ___ftmul@f2:
   979                           	callstack 0
   980                           
   981                           ; 3 bytes @ 0x2D
   982   00002E                     	ds	3
   983   000031                     ??_main:
   984                           
   985                           ; 1 bytes @ 0x30
   986   000031                     	ds	2
   987                           
   988 ;;
   989 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   990 ;;
   991 ;; *************** function _main *****************
   992 ;; Defined at:
   993 ;;		line 67 in file "Lab4.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  pina0           2   15[BANK0 ] int 
   998 ;;  i               1   17[BANK0 ] unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1008 ;;      Params:         0       0       0       0       0       0       0       0       0
  1009 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1010 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1011 ;;      Totals:         2       3       0       0       0       0       0       0       0
  1012 ;;Total ram usage:        5 bytes
  1013 ;; Hardware stack levels required when called: 12
  1014 ;; This function calls:
  1015 ;;		_ContarReal
  1016 ;;		_Conversion
  1017 ;;		_Duty_motor
  1018 ;;		_Lcd_Blink
  1019 ;;		_Lcd_CGRAM_Close
  1020 ;;		_Lcd_CGRAM_CreateChar
  1021 ;;		_Lcd_CGRAM_Init
  1022 ;;		_Lcd_Clear
  1023 ;;		_Lcd_Init
  1024 ;;		_Lcd_NoBlink
  1025 ;;		_Lcd_Set_Cursor
  1026 ;;		_Lcd_Write_Char
  1027 ;;		_Lcd_Write_String
  1028 ;;		___lwtoft
  1029 ;;		_escenario1
  1030 ;;		_sprintf
  1031 ;; This function is called by:
  1032 ;;		Startup code after reset
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text0
  1037   0008CE                     __ptext0:
  1038                           	callstack 0
  1039   0008CE                     _main:
  1040                           	callstack 19
  1041                           
  1042                           ;Lab4.c: 68: ADCON0=0b00000001;
  1043                           
  1044                           ;incstack = 0
  1045   0008CE  0E01               	movlw	1
  1046   0008D0  6EC2               	movwf	194,c	;volatile
  1047                           
  1048                           ;Lab4.c: 69: ADCON2=0b10001000;
  1049   0008D2  0E88               	movlw	136
  1050   0008D4  6EC0               	movwf	192,c	;volatile
  1051                           
  1052                           ;Lab4.c: 71: int pina0;;Lab4.c: 72: TRISE = 0;
  1053   0008D6  0E00               	movlw	0
  1054   0008D8  6E96               	movwf	150,c	;volatile
  1055                           
  1056                           ;Lab4.c: 73: TRISD = 0;
  1057   0008DA  0E00               	movlw	0
  1058   0008DC  6E95               	movwf	149,c	;volatile
  1059                           
  1060                           ;Lab4.c: 74: TRISA = 0b00000001;
  1061   0008DE  0E01               	movlw	1
  1062   0008E0  6E92               	movwf	146,c	;volatile
  1063                           
  1064                           ;Lab4.c: 75: TRISC = 0b00000000;
  1065   0008E2  0E00               	movlw	0
  1066   0008E4  6E94               	movwf	148,c	;volatile
  1067                           
  1068                           ;Lab4.c: 77: LATD = 0b00000000;
  1069   0008E6  0E00               	movlw	0
  1070   0008E8  6E8C               	movwf	140,c	;volatile
  1071                           
  1072                           ;Lab4.c: 78: LATE = 0b00000111;
  1073   0008EA  0E07               	movlw	7
  1074   0008EC  6E8D               	movwf	141,c	;volatile
  1075                           
  1076                           ;Lab4.c: 80: LATA5=1;
  1077   0008EE  8A89               	bsf	3977,5,c	;volatile
  1078                           
  1079                           ;Lab4.c: 81: TXSTA = 0b00100100;
  1080   0008F0  0E24               	movlw	36
  1081   0008F2  6EAC               	movwf	172,c	;volatile
  1082                           
  1083                           ;Lab4.c: 82: RCSTA = 0b10000000;
  1084   0008F4  0E80               	movlw	128
  1085   0008F6  6EAB               	movwf	171,c	;volatile
  1086                           
  1087                           ;Lab4.c: 83: BAUDCON = 0b00001000;
  1088   0008F8  0E08               	movlw	8
  1089   0008FA  6EB8               	movwf	184,c	;volatile
  1090                           
  1091                           ;Lab4.c: 84: SPBRG = 25;
  1092   0008FC  0E19               	movlw	25
  1093   0008FE  6EAF               	movwf	175,c	;volatile
  1094                           
  1095                           ;Lab4.c: 86: unsigned char i;;Lab4.c: 87: TRISB = 0b11110000;
  1096   000900  0EF0               	movlw	240
  1097   000902  6E93               	movwf	147,c	;volatile
  1098                           
  1099                           ;Lab4.c: 88: LATB = 0b00000000;
  1100   000904  0E00               	movlw	0
  1101   000906  6E8A               	movwf	138,c	;volatile
  1102                           
  1103                           ;Lab4.c: 89: RBPU = 0;
  1104   000908  9EF1               	bcf	4081,7,c	;volatile
  1105                           
  1106                           ;Lab4.c: 90: _delay((unsigned long)((100)*(1000000/4000.0)));
  1107   00090A  0E21               	movlw	33
  1108   00090C  6E31               	movwf	??_main^0,c
  1109   00090E  0E76               	movlw	118
  1110   000910                     u3577:
  1111   000910  2EE8               	decfsz	wreg,f,c
  1112   000912  D7FE               	bra	u3577
  1113   000914  2E31               	decfsz	??_main^0,f,c
  1114   000916  D7FC               	bra	u3577
  1115   000918  D000               	nop2	
  1116                           
  1117                           ;Lab4.c: 91: TMR0 = 3036;
  1118   00091A  0E0B               	movlw	11
  1119   00091C  6ED7               	movwf	215,c	;volatile
  1120   00091E  0EDC               	movlw	220
  1121   000920  6ED6               	movwf	214,c	;volatile
  1122                           
  1123                           ;Lab4.c: 92: T0CON = 0b00000001;
  1124   000922  0E01               	movlw	1
  1125   000924  6ED5               	movwf	213,c	;volatile
  1126                           
  1127                           ;Lab4.c: 93: TMR0IF = 0;
  1128   000926  94F2               	bcf	4082,2,c	;volatile
  1129                           
  1130                           ;Lab4.c: 94: TMR0IE = 1;
  1131   000928  8AF2               	bsf	4082,5,c	;volatile
  1132                           
  1133                           ;Lab4.c: 95: TMR0ON = 1;
  1134   00092A  8ED5               	bsf	4053,7,c	;volatile
  1135                           
  1136                           ;Lab4.c: 96: RBIF = 0;
  1137   00092C  90F2               	bcf	4082,0,c	;volatile
  1138                           
  1139                           ;Lab4.c: 97: RBIE = 1;
  1140   00092E  86F2               	bsf	4082,3,c	;volatile
  1141                           
  1142                           ;Lab4.c: 98: GIE = 1;
  1143   000930  8EF2               	bsf	4082,7,c	;volatile
  1144                           
  1145                           ;Lab4.c: 99: ADCON1bits.PCFG = 0x0E;
  1146   000932  50C1               	movf	193,w,c	;volatile
  1147   000934  0BF0               	andlw	-16
  1148   000936  090E               	iorlw	14
  1149   000938  6EC1               	movwf	193,c	;volatile
  1150                           
  1151                           ;Lab4.c: 101: PR2 = 249;
  1152   00093A  0EF9               	movlw	249
  1153   00093C  6ECB               	movwf	203,c	;volatile
  1154                           
  1155                           ;Lab4.c: 102: CCPR1L= 125;
  1156   00093E  0E7D               	movlw	125
  1157   000940  6EBE               	movwf	190,c	;volatile
  1158                           
  1159                           ;Lab4.c: 103: T2CON = 0;
  1160   000942  0E00               	movlw	0
  1161   000944  6ECA               	movwf	202,c	;volatile
  1162                           
  1163                           ;Lab4.c: 104: CCP1CON = 12;
  1164   000946  0E0C               	movlw	12
  1165   000948  6EBD               	movwf	189,c	;volatile
  1166                           
  1167                           ;Lab4.c: 105: TMR2 =0 ;
  1168   00094A  0E00               	movlw	0
  1169   00094C  6ECC               	movwf	204,c	;volatile
  1170                           
  1171                           ;Lab4.c: 106: TMR2ON =1;
  1172   00094E  84CA               	bsf	4042,2,c	;volatile
  1173                           
  1174                           ;Lab4.c: 109: Lcd_Init();
  1175   000950  EC01  F00C         	call	_Lcd_Init	;wreg free
  1176                           
  1177                           ;Lab4.c: 111: Lcd_CGRAM_Init();
  1178   000954  EC02  F010         	call	_Lcd_CGRAM_Init	;wreg free
  1179                           
  1180                           ;Lab4.c: 112: Lcd_CGRAM_CreateChar(0, figura_1);
  1181   000958  0E2B               	movlw	low _figura_1
  1182   00095A  6E18               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1183   00095C  0E00               	movlw	0
  1184   00095E  EC18  F006         	call	_Lcd_CGRAM_CreateChar
  1185                           
  1186                           ;Lab4.c: 113: Lcd_CGRAM_CreateChar(1, figura_2);
  1187   000962  0E23               	movlw	low _figura_2
  1188   000964  6E18               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1189   000966  0E01               	movlw	1
  1190   000968  EC18  F006         	call	_Lcd_CGRAM_CreateChar
  1191                           
  1192                           ;Lab4.c: 114: Lcd_CGRAM_CreateChar(2, figura_3);
  1193   00096C  0E1B               	movlw	low _figura_3
  1194   00096E  6E18               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1195   000970  0E02               	movlw	2
  1196   000972  EC18  F006         	call	_Lcd_CGRAM_CreateChar
  1197                           
  1198                           ;Lab4.c: 115: Lcd_CGRAM_CreateChar(3, figura_4);
  1199   000976  0E13               	movlw	low _figura_4
  1200   000978  6E18               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1201   00097A  0E03               	movlw	3
  1202   00097C  EC18  F006         	call	_Lcd_CGRAM_CreateChar
  1203                           
  1204                           ;Lab4.c: 116: Lcd_CGRAM_CreateChar(4, figura_5);
  1205   000980  0E0B               	movlw	low _figura_5
  1206   000982  6E18               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1207   000984  0E04               	movlw	4
  1208   000986  EC18  F006         	call	_Lcd_CGRAM_CreateChar
  1209                           
  1210                           ;Lab4.c: 117: Lcd_CGRAM_Close();
  1211   00098A  EC09  F010         	call	_Lcd_CGRAM_Close	;wreg free
  1212                           
  1213                           ;Lab4.c: 118: Lcd_Clear();
  1214   00098E  EC17  F010         	call	_Lcd_Clear	;wreg free
  1215                           
  1216                           ;Lab4.c: 121: Lcd_Set_Cursor(1, 1);
  1217   000992  0E01               	movlw	1
  1218   000994  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1219   000996  0E01               	movlw	1
  1220   000998  EC04  F00A         	call	_Lcd_Set_Cursor
  1221                           
  1222                           ;Lab4.c: 122: Lcd_Write_String("Laboratorio 04");
  1223   00099C  0E68               	movlw	low STR_1
  1224   00099E  6E18               	movwf	Lcd_Write_String@a^0,c
  1225   0009A0  EC63  F00E         	call	_Lcd_Write_String	;wreg free
  1226                           
  1227                           ;Lab4.c: 123: Lcd_Set_Cursor(2, 1);
  1228   0009A4  0E01               	movlw	1
  1229   0009A6  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1230   0009A8  0E02               	movlw	2
  1231   0009AA  EC04  F00A         	call	_Lcd_Set_Cursor
  1232                           
  1233                           ;Lab4.c: 124: Lcd_Write_String("PIC18F4550");
  1234   0009AE  0E8F               	movlw	low STR_2
  1235   0009B0  6E18               	movwf	Lcd_Write_String@a^0,c
  1236   0009B2  EC63  F00E         	call	_Lcd_Write_String	;wreg free
  1237                           
  1238                           ;Lab4.c: 125: Lcd_Set_Cursor(2, 12);
  1239   0009B6  0E0C               	movlw	12
  1240   0009B8  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1241   0009BA  0E02               	movlw	2
  1242   0009BC  EC04  F00A         	call	_Lcd_Set_Cursor
  1243                           
  1244                           ;Lab4.c: 126: Lcd_Blink();
  1245   0009C0  ECFB  F00F         	call	_Lcd_Blink	;wreg free
  1246                           
  1247                           ;Lab4.c: 127: _delay((unsigned long)((200)*(1000000/4000.0)));
  1248   0009C4  0E41               	movlw	65
  1249   0009C6  6E31               	movwf	??_main^0,c
  1250   0009C8  0EEE               	movlw	238
  1251   0009CA                     u3587:
  1252   0009CA  2EE8               	decfsz	wreg,f,c
  1253   0009CC  D7FE               	bra	u3587
  1254   0009CE  2E31               	decfsz	??_main^0,f,c
  1255   0009D0  D7FC               	bra	u3587
  1256   0009D2  D000               	nop2	
  1257                           
  1258                           ;Lab4.c: 128: Lcd_NoBlink();
  1259   0009D4  EC10  F010         	call	_Lcd_NoBlink	;wreg free
  1260                           
  1261                           ;Lab4.c: 131: for (i = 1; i <= 5; i++) {
  1262   0009D8  0E01               	movlw	1
  1263   0009DA  0100               	movlb	0	; () banked
  1264   0009DC  6F9A               	movwf	main@i& (0+255),b
  1265   0009DE                     l4547:
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;Lab4.c: 132: Lcd_Clear();
  1269   0009DE  EC17  F010         	call	_Lcd_Clear	;wreg free
  1270                           
  1271                           ;Lab4.c: 133: Lcd_Set_Cursor(1, 1);
  1272   0009E2  0E01               	movlw	1
  1273   0009E4  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1274   0009E6  0E01               	movlw	1
  1275   0009E8  EC04  F00A         	call	_Lcd_Set_Cursor
  1276                           
  1277                           ;Lab4.c: 134: Lcd_Write_String("Micros UNAL");
  1278   0009EC  0E83               	movlw	low STR_3
  1279   0009EE  6E18               	movwf	Lcd_Write_String@a^0,c
  1280   0009F0  EC63  F00E         	call	_Lcd_Write_String	;wreg free
  1281                           
  1282                           ;Lab4.c: 135: Lcd_Set_Cursor(2, 1);
  1283   0009F4  0E01               	movlw	1
  1284   0009F6  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1285   0009F8  0E02               	movlw	2
  1286   0009FA  EC04  F00A         	call	_Lcd_Set_Cursor
  1287                           
  1288                           ;Lab4.c: 136: Lcd_Write_Char(0);
  1289   0009FE  0E00               	movlw	0
  1290   000A00  ECA1  F00E         	call	_Lcd_Write_Char
  1291                           
  1292                           ;Lab4.c: 137: Lcd_Set_Cursor(2, 7);
  1293   000A04  0E07               	movlw	7
  1294   000A06  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1295   000A08  0E02               	movlw	2
  1296   000A0A  EC04  F00A         	call	_Lcd_Set_Cursor
  1297                           
  1298                           ;Lab4.c: 138: Lcd_Write_Char(1);
  1299   000A0E  0E01               	movlw	1
  1300   000A10  ECA1  F00E         	call	_Lcd_Write_Char
  1301                           
  1302                           ;Lab4.c: 139: Lcd_Set_Cursor(2, 2 + i);
  1303   000A14  0100               	movlb	0	; () banked
  1304   000A16  519A               	movf	main@i& (0+255),w,b
  1305   000A18  0F02               	addlw	2
  1306   000A1A  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1307   000A1C  0E02               	movlw	2
  1308   000A1E  EC04  F00A         	call	_Lcd_Set_Cursor
  1309                           
  1310                           ;Lab4.c: 140: Lcd_Write_Char(2);
  1311   000A22  0E02               	movlw	2
  1312   000A24  ECA1  F00E         	call	_Lcd_Write_Char
  1313                           
  1314                           ;Lab4.c: 141: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1315   000A28  0E02               	movlw	2
  1316   000A2A  6E32               	movwf	(??_main+1)^0,c
  1317   000A2C  0E45               	movlw	69
  1318   000A2E  6E31               	movwf	??_main^0,c
  1319   000A30  0EAA               	movlw	170
  1320   000A32                     u3597:
  1321   000A32  2EE8               	decfsz	wreg,f,c
  1322   000A34  D7FE               	bra	u3597
  1323   000A36  2E31               	decfsz	??_main^0,f,c
  1324   000A38  D7FC               	bra	u3597
  1325   000A3A  2E32               	decfsz	(??_main+1)^0,f,c
  1326   000A3C  D7FA               	bra	u3597
  1327   000A3E  0100               	movlb	0	; () banked
  1328   000A40  2B9A               	incf	main@i& (0+255),f,b
  1329                           
  1330                           ; BSR set to: 0
  1331   000A42  0E05               	movlw	5
  1332   000A44  659A               	cpfsgt	main@i& (0+255),b
  1333   000A46  D7CB               	goto	l4547
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;Lab4.c: 142: };Lab4.c: 143: Lcd_Clear();
  1337   000A48  EC17  F010         	call	_Lcd_Clear	;wreg free
  1338                           
  1339                           ;Lab4.c: 144: escenario1();
  1340   000A4C  EC99  F00D         	call	_escenario1	;wreg free
  1341   000A50                     l4575:
  1342                           
  1343                           ;Lab4.c: 149: resultado_ADC= Conversion(0);
  1344   000A50  0E00               	movlw	0
  1345   000A52  EC98  F00F         	call	_Conversion
  1346   000A56  C014  F033         	movff	?_Conversion,_resultado_ADC
  1347   000A5A  C015  F034         	movff	?_Conversion+1,_resultado_ADC+1
  1348                           
  1349                           ;Lab4.c: 150: Duty_motor(resultado_ADC);
  1350   000A5E  C033  F01C         	movff	_resultado_ADC,___lwtoft@c
  1351   000A62  C034  F01D         	movff	_resultado_ADC+1,___lwtoft@c+1
  1352   000A66  ECD1  F00F         	call	___lwtoft	;wreg free
  1353   000A6A  C01C  F092         	movff	?___lwtoft,Duty_motor@ADC
  1354   000A6E  C01D  F093         	movff	?___lwtoft+1,Duty_motor@ADC+1
  1355   000A72  C01E  F094         	movff	?___lwtoft+2,Duty_motor@ADC+2
  1356   000A76  ECA4  F00A         	call	_Duty_motor	;wreg free
  1357                           
  1358                           ;Lab4.c: 151: sprintf(buffer, "Valor de ADC = %u", resultado_ADC);
  1359   000A7A  0E75               	movlw	low _buffer
  1360   000A7C  6E20               	movwf	sprintf@sp^0,c
  1361   000A7E  0E45               	movlw	low STR_4
  1362   000A80  6E21               	movwf	sprintf@f^0,c
  1363   000A82  C033  F022         	movff	_resultado_ADC,?_sprintf+2
  1364   000A86  C034  F023         	movff	_resultado_ADC+1,?_sprintf+3
  1365   000A8A  ECD2  F006         	call	_sprintf	;wreg free
  1366                           
  1367                           ;Lab4.c: 153: pina0 = PORTAbits.RA2;
  1368   000A8E  A480               	btfss	128,2,c	;volatile
  1369   000A90  D003               	goto	u3540
  1370   000A92  6A31               	clrf	??_main^0,c
  1371   000A94  2A31               	incf	??_main^0,f,c
  1372   000A96  D001               	goto	u3548
  1373   000A98                     u3540:
  1374   000A98  6A31               	clrf	??_main^0,c
  1375   000A9A                     u3548:
  1376   000A9A  5031               	movf	??_main^0,w,c
  1377   000A9C  0100               	movlb	0	; () banked
  1378   000A9E  6F98               	movwf	main@pina0& (0+255),b
  1379   000AA0  6B99               	clrf	(main@pina0+1)& (0+255),b
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;Lab4.c: 154: if (mostrar && pina0==1) {
  1383   000AA2  519B               	movf	_mostrar& (0+255),w,b
  1384   000AA4  119C               	iorwf	(_mostrar+1)& (0+255),w,b
  1385   000AA6  B4D8               	btfsc	status,2,c
  1386   000AA8  D7D3               	goto	l4575
  1387                           
  1388                           ; BSR set to: 0
  1389   000AAA  0598               	decf	main@pina0& (0+255),w,b
  1390   000AAC  1199               	iorwf	(main@pina0+1)& (0+255),w,b
  1391   000AAE  A4D8               	btfss	status,2,c
  1392   000AB0  D7CF               	goto	l4575
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;Lab4.c: 155: ContarReal();
  1396   000AB2  EC5A  F007         	call	_ContarReal	;wreg free
  1397   000AB6  D7CC               	goto	l4575
  1398   000AB8                     __end_of_main:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _sprintf *****************
  1402 ;; Defined at:
  1403 ;;		line 505 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/doprnt.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  sp              1   31[COMRAM] PTR unsigned char 
  1406 ;;		 -> buffer(20), 
  1407 ;;  f               1   32[COMRAM] PTR const unsigned char 
  1408 ;;		 -> STR_4(18), 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  tmpval          4    0        struct .
  1411 ;;  cp              3    0        PTR const unsigned char 
  1412 ;;  val             2   38[COMRAM] unsigned int 
  1413 ;;  len             2    0        unsigned int 
  1414 ;;  c               1   41[COMRAM] unsigned char 
  1415 ;;  prec            1   40[COMRAM] char 
  1416 ;;  ap              1   37[COMRAM] PTR void [1]
  1417 ;;		 -> ?_sprintf(2), 
  1418 ;;  flag            1   36[COMRAM] unsigned char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2   31[COMRAM] int 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1428 ;;      Params:         4       0       0       0       0       0       0       0       0
  1429 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1430 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1431 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1432 ;;Total ram usage:       11 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; Hardware stack levels required when called: 8
  1435 ;; This function calls:
  1436 ;;		___lwdiv
  1437 ;;		___lwmod
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text1
  1444   000DA4                     __ptext1:
  1445                           	callstack 0
  1446   000DA4                     _sprintf:
  1447                           	callstack 22
  1448                           
  1449                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  1450                           
  1451                           ;incstack = 0
  1452   000DA4  0E22               	movlw	low (?_sprintf+2)
  1453   000DA6  6E26               	movwf	sprintf@ap^0,c
  1454                           
  1455                           ;doprnt.c: 553: while((c = *f++)) {
  1456   000DA8  D073               	goto	u3500
  1457   000DAA                     l4391:
  1458                           
  1459                           ;doprnt.c: 555: if(c != '%')
  1460   000DAA  0E25               	movlw	37
  1461   000DAC  182A               	xorwf	sprintf@c^0,w,c
  1462   000DAE  B4D8               	btfsc	status,2,c
  1463   000DB0  D007               	goto	l4397
  1464                           
  1465                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1466   000DB2  5020               	movf	sprintf@sp^0,w,c
  1467   000DB4  6ED9               	movwf	fsr2l,c
  1468   000DB6  6ADA               	clrf	fsr2h,c
  1469   000DB8  C02A  FFDF         	movff	sprintf@c,indf2
  1470   000DBC  2A20               	incf	sprintf@sp^0,f,c
  1471                           
  1472                           ;doprnt.c: 559: continue;
  1473   000DBE  D068               	goto	u3500
  1474   000DC0                     l4397:
  1475                           
  1476                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1477   000DC0  0E00               	movlw	0
  1478   000DC2  6E25               	movwf	sprintf@flag^0,c
  1479                           
  1480                           ;doprnt.c: 661: switch(c = *f++) {
  1481   000DC4  D003               	goto	l4403
  1482   000DC6                     l4399:
  1483                           
  1484                           ;doprnt.c: 844: flag |= 0xC0;
  1485   000DC6  0EC0               	movlw	192
  1486   000DC8  1225               	iorwf	sprintf@flag^0,f,c
  1487                           
  1488                           ;doprnt.c: 845: break;
  1489   000DCA  D012               	goto	l4405
  1490   000DCC                     l4403:
  1491   000DCC  2A21               	incf	sprintf@f^0,f,c
  1492   000DCE  0421               	decf	sprintf@f^0,w,c
  1493   000DD0  6E24               	movwf	??_sprintf^0,c
  1494   000DD2  C024  FFF6         	movff	??_sprintf,tblptrl
  1495   000DD6                     	if	1	;There is more than 1 active tblptr byte
  1496   000DD6  0E08               	movlw	high __smallconst
  1497   000DD8  6EF7               	movwf	tblptrh,c
  1498   000DDA                     	endif
  1499   000DDA                     	if	0	;tblptru may be non-zero
  1500   000DDA                     	endif
  1501   000DDA                     	if	0	;tblptru may be non-zero
  1502   000DDA                     	endif
  1503   000DDA  0008               	tblrd		*
  1504   000DDC  CFF5 F02A          	movff	tablat,sprintf@c
  1505   000DE0  502A               	movf	sprintf@c^0,w,c
  1506                           
  1507                           ; Switch size 1, requested type "simple"
  1508                           ; Number of cases is 2, Range of values is 0 to 117
  1509                           ; switch strategies available:
  1510                           ; Name         Instructions Cycles
  1511                           ; simple_byte            7     4 (average)
  1512                           ;	Chosen strategy is simple_byte
  1513   000DE2  0A00               	xorlw	0	; case 0
  1514   000DE4  B4D8               	btfsc	status,2,c
  1515   000DE6  D061               	goto	u3510
  1516   000DE8  0A75               	xorlw	117	; case 117
  1517   000DEA  B4D8               	btfsc	status,2,c
  1518   000DEC  D7EC               	goto	l4399
  1519   000DEE  D050               	goto	u3500
  1520   000DF0                     l4405:
  1521                           
  1522                           ;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (uns
      +                          igned)0));
  1523   000DF0  5026               	movf	sprintf@ap^0,w,c
  1524   000DF2  6ED9               	movwf	fsr2l,c
  1525   000DF4  6ADA               	clrf	fsr2h,c
  1526   000DF6  CFDE F027          	movff	postinc2,sprintf@val
  1527   000DFA  CFDD F028          	movff	postdec2,sprintf@val+1
  1528   000DFE  0E02               	movlw	2
  1529   000E00  2626               	addwf	sprintf@ap^0,f,c
  1530                           
  1531                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  1532   000E02  0E01               	movlw	1
  1533   000E04  6E2A               	movwf	sprintf@c^0,c
  1534   000E06                     l4415:
  1535                           
  1536                           ;doprnt.c: 1332: if(val < dpowers[c])
  1537   000E06  502A               	movf	sprintf@c^0,w,c
  1538   000E08  0D02               	mullw	2
  1539   000E0A  50F3               	movf	243,w,c
  1540   000E0C  0F01               	addlw	low _dpowers
  1541   000E0E  6E24               	movwf	??_sprintf^0,c
  1542   000E10  C024  FFF6         	movff	??_sprintf,tblptrl
  1543   000E14                     	if	1	;There is more than 1 active tblptr byte
  1544   000E14  0E08               	movlw	high __smallconst
  1545   000E16  6EF7               	movwf	tblptrh,c
  1546   000E18                     	endif
  1547   000E18                     	if	0	;tblptru may be non-zero
  1548   000E18                     	endif
  1549   000E18                     	if	0	;tblptru may be non-zero
  1550   000E18                     	endif
  1551   000E18  0009               	tblrd		*+
  1552   000E1A  50F5               	movf	tablat,w,c
  1553   000E1C  5C27               	subwf	sprintf@val^0,w,c
  1554   000E1E  0009               	tblrd		*+
  1555   000E20  50F5               	movf	tablat,w,c
  1556   000E22  5828               	subwfb	(sprintf@val+1)^0,w,c
  1557   000E24  A0D8               	btfss	status,0,c
  1558   000E26  D005               	goto	u3490
  1559   000E28  2A2A               	incf	sprintf@c^0,f,c
  1560   000E2A  0E05               	movlw	5
  1561   000E2C  182A               	xorwf	sprintf@c^0,w,c
  1562   000E2E  A4D8               	btfss	status,2,c
  1563   000E30  D7EA               	goto	l4415
  1564   000E32                     u3490:
  1565                           
  1566                           ;doprnt.c: 1448: {;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1567   000E32  C02A  F029         	movff	sprintf@c,sprintf@prec
  1568                           
  1569                           ;doprnt.c: 1500: while(prec--) {
  1570   000E36  D028               	goto	l4429
  1571   000E38                     l4423:
  1572                           
  1573                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1574   000E38  5029               	movf	sprintf@prec^0,w,c
  1575   000E3A  0D02               	mullw	2
  1576   000E3C  50F3               	movf	243,w,c
  1577   000E3E  0F01               	addlw	low _dpowers
  1578   000E40  6E24               	movwf	??_sprintf^0,c
  1579   000E42  C024  FFF6         	movff	??_sprintf,tblptrl
  1580   000E46                     	if	1	;There is more than 1 active tblptr byte
  1581   000E46  0E08               	movlw	high __smallconst
  1582   000E48  6EF7               	movwf	tblptrh,c
  1583   000E4A                     	endif
  1584   000E4A                     	if	0	;tblptru may be non-zero
  1585   000E4A                     	endif
  1586   000E4A                     	if	0	;tblptru may be non-zero
  1587   000E4A                     	endif
  1588   000E4A  0009               	tblrd		*+
  1589   000E4C  CFF5 F016          	movff	tablat,___lwdiv@divisor
  1590   000E50  000A               	tblrd		*-
  1591   000E52  CFF5 F017          	movff	tablat,___lwdiv@divisor+1
  1592   000E56  C027  F014         	movff	sprintf@val,___lwdiv@dividend
  1593   000E5A  C028  F015         	movff	sprintf@val+1,___lwdiv@dividend+1
  1594   000E5E  EC49  F00D         	call	___lwdiv	;wreg free
  1595   000E62  C014  F01B         	movff	?___lwdiv,___lwmod@dividend
  1596   000E66  C015  F01C         	movff	?___lwdiv+1,___lwmod@dividend+1
  1597   000E6A  0E00               	movlw	0
  1598   000E6C  6E1E               	movwf	(___lwmod@divisor+1)^0,c
  1599   000E6E  0E0A               	movlw	10
  1600   000E70  6E1D               	movwf	___lwmod@divisor^0,c
  1601   000E72  ECDF  F00D         	call	___lwmod	;wreg free
  1602   000E76  501B               	movf	?___lwmod^0,w,c
  1603   000E78  0F30               	addlw	48
  1604   000E7A  6E2A               	movwf	sprintf@c^0,c
  1605                           
  1606                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  1607   000E7C  5020               	movf	sprintf@sp^0,w,c
  1608   000E7E  6ED9               	movwf	fsr2l,c
  1609   000E80  6ADA               	clrf	fsr2h,c
  1610   000E82  C02A  FFDF         	movff	sprintf@c,indf2
  1611   000E86  2A20               	incf	sprintf@sp^0,f,c
  1612   000E88                     l4429:
  1613   000E88  0629               	decf	sprintf@prec^0,f,c
  1614   000E8A  2829               	incf	sprintf@prec^0,w,c
  1615   000E8C  A4D8               	btfss	status,2,c
  1616   000E8E  D7D4               	goto	l4423
  1617   000E90                     u3500:
  1618   000E90  2A21               	incf	sprintf@f^0,f,c
  1619   000E92  0421               	decf	sprintf@f^0,w,c
  1620   000E94  6E24               	movwf	??_sprintf^0,c
  1621   000E96  C024  FFF6         	movff	??_sprintf,tblptrl
  1622   000E9A                     	if	1	;There is more than 1 active tblptr byte
  1623   000E9A  0E08               	movlw	high __smallconst
  1624   000E9C  6EF7               	movwf	tblptrh,c
  1625   000E9E                     	endif
  1626   000E9E                     	if	0	;tblptru may be non-zero
  1627   000E9E                     	endif
  1628   000E9E                     	if	0	;tblptru may be non-zero
  1629   000E9E                     	endif
  1630   000E9E  0008               	tblrd		*
  1631   000EA0  CFF5 F02A          	movff	tablat,sprintf@c
  1632   000EA4  502A               	movf	sprintf@c^0,w,c
  1633   000EA6  A4D8               	btfss	status,2,c
  1634   000EA8  D780               	goto	l4391
  1635   000EAA                     u3510:
  1636                           
  1637                           ;doprnt.c: 1564: *sp = 0;
  1638   000EAA  5020               	movf	sprintf@sp^0,w,c
  1639   000EAC  6ED9               	movwf	fsr2l,c
  1640   000EAE  6ADA               	clrf	fsr2h,c
  1641   000EB0  6ADF               	clrf	indf2,c
  1642   000EB2  0012               	return		;funcret
  1643   000EB4                     __end_of_sprintf:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function ___lwmod *****************
  1647 ;; Defined at:
  1648 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/lwmod.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  dividend        2   26[COMRAM] unsigned int 
  1651 ;;  divisor         2   28[COMRAM] unsigned int 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  counter         1   30[COMRAM] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  2   26[COMRAM] unsigned int 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1663 ;;      Params:         4       0       0       0       0       0       0       0       0
  1664 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1666 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1667 ;;Total ram usage:        5 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; Hardware stack levels required when called: 7
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_sprintf
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text2
  1678   001BBE                     __ptext2:
  1679                           	callstack 0
  1680   001BBE                     ___lwmod:
  1681                           	callstack 22
  1682                           
  1683                           ;incstack = 0
  1684   001BBE  501D               	movf	___lwmod@divisor^0,w,c
  1685   001BC0  101E               	iorwf	(___lwmod@divisor+1)^0,w,c
  1686   001BC2  B4D8               	btfsc	status,2,c
  1687   001BC4  D018               	goto	l913
  1688   001BC6  0E01               	movlw	1
  1689   001BC8  6E1F               	movwf	___lwmod@counter^0,c
  1690   001BCA  D004               	goto	l4209
  1691   001BCC                     l4207:
  1692   001BCC  90D8               	bcf	status,0,c
  1693   001BCE  361D               	rlcf	___lwmod@divisor^0,f,c
  1694   001BD0  361E               	rlcf	(___lwmod@divisor+1)^0,f,c
  1695   001BD2  2A1F               	incf	___lwmod@counter^0,f,c
  1696   001BD4                     l4209:
  1697   001BD4  AE1E               	btfss	(___lwmod@divisor+1)^0,7,c
  1698   001BD6  D7FA               	goto	l4207
  1699   001BD8                     u3340:
  1700   001BD8  501D               	movf	___lwmod@divisor^0,w,c
  1701   001BDA  5C1B               	subwf	___lwmod@dividend^0,w,c
  1702   001BDC  501E               	movf	(___lwmod@divisor+1)^0,w,c
  1703   001BDE  581C               	subwfb	(___lwmod@dividend+1)^0,w,c
  1704   001BE0  A0D8               	btfss	status,0,c
  1705   001BE2  D004               	goto	l4215
  1706   001BE4  501D               	movf	___lwmod@divisor^0,w,c
  1707   001BE6  5E1B               	subwf	___lwmod@dividend^0,f,c
  1708   001BE8  501E               	movf	(___lwmod@divisor+1)^0,w,c
  1709   001BEA  5A1C               	subwfb	(___lwmod@dividend+1)^0,f,c
  1710   001BEC                     l4215:
  1711   001BEC  90D8               	bcf	status,0,c
  1712   001BEE  321E               	rrcf	(___lwmod@divisor+1)^0,f,c
  1713   001BF0  321D               	rrcf	___lwmod@divisor^0,f,c
  1714   001BF2  2E1F               	decfsz	___lwmod@counter^0,f,c
  1715   001BF4  D7F1               	goto	u3340
  1716   001BF6                     l913:
  1717   001BF6  C01B  F01B         	movff	___lwmod@dividend,?___lwmod
  1718   001BFA  C01C  F01C         	movff	___lwmod@dividend+1,?___lwmod+1
  1719   001BFE  0012               	return		;funcret
  1720   001C00                     __end_of___lwmod:
  1721                           	callstack 0
  1722                           
  1723 ;; *************** function ___lwdiv *****************
  1724 ;; Defined at:
  1725 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/lwdiv.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  dividend        2   19[COMRAM] unsigned int 
  1728 ;;  divisor         2   21[COMRAM] unsigned int 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  quotient        2   24[COMRAM] unsigned int 
  1731 ;;  counter         1   23[COMRAM] unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  2   19[COMRAM] unsigned int 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, status,0
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1741 ;;      Params:         4       0       0       0       0       0       0       0       0
  1742 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1744 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1745 ;;Total ram usage:        7 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 7
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_sprintf
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text3
  1756   001A92                     __ptext3:
  1757                           	callstack 0
  1758   001A92                     ___lwdiv:
  1759                           	callstack 22
  1760                           
  1761                           ;incstack = 0
  1762   001A92  0E00               	movlw	0
  1763   001A94  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  1764   001A96  0E00               	movlw	0
  1765   001A98  6E19               	movwf	___lwdiv@quotient^0,c
  1766   001A9A  5016               	movf	___lwdiv@divisor^0,w,c
  1767   001A9C  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1768   001A9E  B4D8               	btfsc	status,2,c
  1769   001AA0  D01C               	goto	l903
  1770   001AA2  0E01               	movlw	1
  1771   001AA4  6E18               	movwf	___lwdiv@counter^0,c
  1772   001AA6  D004               	goto	l4189
  1773   001AA8                     l4187:
  1774   001AA8  90D8               	bcf	status,0,c
  1775   001AAA  3616               	rlcf	___lwdiv@divisor^0,f,c
  1776   001AAC  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1777   001AAE  2A18               	incf	___lwdiv@counter^0,f,c
  1778   001AB0                     l4189:
  1779   001AB0  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  1780   001AB2  D7FA               	goto	l4187
  1781   001AB4                     u3310:
  1782   001AB4  90D8               	bcf	status,0,c
  1783   001AB6  3619               	rlcf	___lwdiv@quotient^0,f,c
  1784   001AB8  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1785   001ABA  5016               	movf	___lwdiv@divisor^0,w,c
  1786   001ABC  5C14               	subwf	___lwdiv@dividend^0,w,c
  1787   001ABE  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  1788   001AC0  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1789   001AC2  A0D8               	btfss	status,0,c
  1790   001AC4  D005               	goto	l4199
  1791   001AC6  5016               	movf	___lwdiv@divisor^0,w,c
  1792   001AC8  5E14               	subwf	___lwdiv@dividend^0,f,c
  1793   001ACA  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  1794   001ACC  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1795   001ACE  8019               	bsf	___lwdiv@quotient^0,0,c
  1796   001AD0                     l4199:
  1797   001AD0  90D8               	bcf	status,0,c
  1798   001AD2  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1799   001AD4  3216               	rrcf	___lwdiv@divisor^0,f,c
  1800   001AD6  2E18               	decfsz	___lwdiv@counter^0,f,c
  1801   001AD8  D7ED               	goto	u3310
  1802   001ADA                     l903:
  1803   001ADA  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  1804   001ADE  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1805   001AE2  0012               	return		;funcret
  1806   001AE4                     __end_of___lwdiv:
  1807                           	callstack 0
  1808                           
  1809 ;; *************** function _escenario1 *****************
  1810 ;; Defined at:
  1811 ;;		line 166 in file "Lab4.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1825 ;;      Params:         0       0       0       0       0       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1828 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1829 ;;Total ram usage:        0 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 10
  1832 ;; This function calls:
  1833 ;;		_Lcd_Blink
  1834 ;;		_Lcd_Clear
  1835 ;;		_Lcd_Set_Cursor
  1836 ;;		_Lcd_Write_Char
  1837 ;;		_Lcd_Write_String
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text4
  1844   001B32                     __ptext4:
  1845                           	callstack 0
  1846   001B32                     _escenario1:
  1847                           	callstack 20
  1848                           
  1849                           ;Lab4.c: 167: menu=1;
  1850                           
  1851                           ;incstack = 0
  1852   001B32  0E00               	movlw	0
  1853   001B34  6E4B               	movwf	(_menu+1)^0,c
  1854   001B36  0E01               	movlw	1
  1855   001B38  6E4A               	movwf	_menu^0,c
  1856                           
  1857                           ;Lab4.c: 168: Lcd_Clear();
  1858   001B3A  EC17  F010         	call	_Lcd_Clear	;wreg free
  1859                           
  1860                           ;Lab4.c: 169: Lcd_Set_Cursor(1, 1);
  1861   001B3E  0E01               	movlw	1
  1862   001B40  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1863   001B42  0E01               	movlw	1
  1864   001B44  EC04  F00A         	call	_Lcd_Set_Cursor
  1865                           
  1866                           ;Lab4.c: 170: Lcd_Write_String("Piezas a contar:");
  1867   001B48  0E57               	movlw	low STR_5
  1868   001B4A  6E18               	movwf	Lcd_Write_String@a^0,c
  1869   001B4C  EC63  F00E         	call	_Lcd_Write_String	;wreg free
  1870                           
  1871                           ;Lab4.c: 171: Lcd_Set_Cursor(2, 9);
  1872   001B50  0E09               	movlw	9
  1873   001B52  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1874   001B54  0E02               	movlw	2
  1875   001B56  EC04  F00A         	call	_Lcd_Set_Cursor
  1876                           
  1877                           ;Lab4.c: 172: Lcd_Write_String("A:ok B:");
  1878   001B5A  0EB8               	movlw	low STR_6
  1879   001B5C  6E18               	movwf	Lcd_Write_String@a^0,c
  1880   001B5E  EC63  F00E         	call	_Lcd_Write_String	;wreg free
  1881                           
  1882                           ;Lab4.c: 173: Lcd_Write_Char(0b01111111);
  1883   001B62  0E7F               	movlw	127
  1884   001B64  ECA1  F00E         	call	_Lcd_Write_Char
  1885                           
  1886                           ;Lab4.c: 174: Lcd_Set_Cursor(2, 1);
  1887   001B68  0E01               	movlw	1
  1888   001B6A  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  1889   001B6C  0E02               	movlw	2
  1890   001B6E  EC04  F00A         	call	_Lcd_Set_Cursor
  1891                           
  1892                           ;Lab4.c: 175: Lcd_Blink();
  1893   001B72  ECFB  F00F         	call	_Lcd_Blink	;wreg free
  1894   001B76  0012               	return		;funcret
  1895   001B78                     __end_of_escenario1:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _Lcd_Blink *****************
  1899 ;; Defined at:
  1900 ;;		line 124 in file "lcd.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1917 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 9
  1921 ;; This function calls:
  1922 ;;		_Lcd_Cmd
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;;		_escenario1
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text5
  1930   001FF6                     __ptext5:
  1931                           	callstack 0
  1932   001FF6                     _Lcd_Blink:
  1933                           	callstack 20
  1934                           
  1935                           ;lcd.c: 126: Lcd_Cmd(0x00);
  1936                           
  1937                           ;incstack = 0
  1938   001FF6  0E00               	movlw	0
  1939   001FF8  ECE3  F00F         	call	_Lcd_Cmd
  1940                           
  1941                           ;lcd.c: 127: Lcd_Cmd(0x0F);
  1942   001FFC  0E0F               	movlw	15
  1943   001FFE  ECE3  F00F         	call	_Lcd_Cmd
  1944   002002  0012               	return		;funcret
  1945   002004                     __end_of_Lcd_Blink:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function ___lwtoft *****************
  1949 ;; Defined at:
  1950 ;;		line 28 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/lwtoft.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  c               2   27[COMRAM] unsigned int 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  3   27[COMRAM] float 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1964 ;;      Params:         3       0       0       0       0       0       0       0       0
  1965 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1967 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1968 ;;Total ram usage:        3 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 8
  1971 ;; This function calls:
  1972 ;;		___ftpack
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text6
  1979   001FA2                     __ptext6:
  1980                           	callstack 0
  1981   001FA2                     ___lwtoft:
  1982                           	callstack 22
  1983                           
  1984                           ;incstack = 0
  1985   001FA2  C01C  F014         	movff	___lwtoft@c,___ftpack@arg
  1986   001FA6  C01D  F015         	movff	___lwtoft@c+1,___ftpack@arg+1
  1987   001FAA  6A16               	clrf	(___ftpack@arg+2)^0,c
  1988   001FAC  0E8E               	movlw	142
  1989   001FAE  6E17               	movwf	___ftpack@exp^0,c
  1990   001FB0  0E00               	movlw	0
  1991   001FB2  6E18               	movwf	___ftpack@sign^0,c
  1992   001FB4  ECAD  F009         	call	___ftpack	;wreg free
  1993   001FB8  C014  F01C         	movff	?___ftpack,?___lwtoft
  1994   001FBC  C015  F01D         	movff	?___ftpack+1,?___lwtoft+1
  1995   001FC0  C016  F01E         	movff	?___ftpack+2,?___lwtoft+2
  1996   001FC4  0012               	return		;funcret
  1997   001FC6                     __end_of___lwtoft:
  1998                           	callstack 0
  1999                           
  2000 ;; *************** function _Lcd_Init *****************
  2001 ;; Defined at:
  2002 ;;		line 64 in file "lcd.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2016 ;;      Params:         0       0       0       0       0       0       0       0       0
  2017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2018 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2019 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2020 ;;Total ram usage:        1 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 10
  2023 ;; This function calls:
  2024 ;;		_Lcd_Clear
  2025 ;;		_Lcd_Cmd
  2026 ;;		_Lcd_Port
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text7
  2033   001802                     __ptext7:
  2034                           	callstack 0
  2035   001802                     _Lcd_Init:
  2036                           	callstack 20
  2037                           
  2038                           ;lcd.c: 66: TRISAbits.TRISA3 = 0;
  2039                           
  2040                           ;incstack = 0
  2041   001802  9692               	bcf	146,3,c	;volatile
  2042                           
  2043                           ;lcd.c: 67: TRISAbits.TRISA4 = 0;
  2044   001804  9892               	bcf	146,4,c	;volatile
  2045                           
  2046                           ;lcd.c: 68: TRISDbits.TRISD4 = 0;
  2047   001806  9895               	bcf	149,4,c	;volatile
  2048                           
  2049                           ;lcd.c: 69: TRISDbits.TRISD5 = 0;
  2050   001808  9A95               	bcf	149,5,c	;volatile
  2051                           
  2052                           ;lcd.c: 70: TRISDbits.TRISD6 = 0;
  2053   00180A  9C95               	bcf	149,6,c	;volatile
  2054                           
  2055                           ;lcd.c: 71: TRISDbits.TRISD7 = 0;
  2056   00180C  9E95               	bcf	149,7,c	;volatile
  2057                           
  2058                           ;lcd.c: 72: Lcd_Port(0x00);
  2059   00180E  0E00               	movlw	0
  2060   001810  EC43  F00F         	call	_Lcd_Port
  2061                           
  2062                           ;lcd.c: 73: _delay((unsigned long)((20)*(1000000/4000.0)));
  2063   001814  0E07               	movlw	7
  2064   001816  6E16               	movwf	??_Lcd_Init^0,c
  2065   001818  0E7D               	movlw	125
  2066   00181A                     u3607:
  2067   00181A  2EE8               	decfsz	wreg,f,c
  2068   00181C  D7FE               	bra	u3607
  2069   00181E  2E16               	decfsz	??_Lcd_Init^0,f,c
  2070   001820  D7FC               	bra	u3607
  2071   001822  0000               	nop	
  2072                           
  2073                           ;lcd.c: 74: Lcd_Cmd(0x03);
  2074   001824  0E03               	movlw	3
  2075   001826  ECE3  F00F         	call	_Lcd_Cmd
  2076                           
  2077                           ;lcd.c: 75: _delay((unsigned long)((5)*(1000000/4000.0)));
  2078   00182A  0EFA               	movlw	250
  2079   00182C                     u3617:
  2080   00182C  D000               	nop2	
  2081   00182E  2EE8               	decfsz	wreg,f,c
  2082   001830  D7FD               	bra	u3617
  2083                           
  2084                           ;lcd.c: 76: Lcd_Cmd(0x03);
  2085   001832  0E03               	movlw	3
  2086   001834  ECE3  F00F         	call	_Lcd_Cmd
  2087                           
  2088                           ;lcd.c: 77: _delay((unsigned long)((11)*(1000000/4000.0)));
  2089   001838  0E04               	movlw	4
  2090   00183A  6E16               	movwf	??_Lcd_Init^0,c
  2091   00183C  0E91               	movlw	145
  2092   00183E                     u3627:
  2093   00183E  2EE8               	decfsz	wreg,f,c
  2094   001840  D7FE               	bra	u3627
  2095   001842  2E16               	decfsz	??_Lcd_Init^0,f,c
  2096   001844  D7FC               	bra	u3627
  2097   001846  0000               	nop	
  2098                           
  2099                           ;lcd.c: 78: Lcd_Cmd(0x03);
  2100   001848  0E03               	movlw	3
  2101   00184A  ECE3  F00F         	call	_Lcd_Cmd
  2102                           
  2103                           ;lcd.c: 79: Lcd_Cmd(0x02);
  2104   00184E  0E02               	movlw	2
  2105   001850  ECE3  F00F         	call	_Lcd_Cmd
  2106                           
  2107                           ;lcd.c: 80: Lcd_Cmd(0x02);
  2108   001854  0E02               	movlw	2
  2109   001856  ECE3  F00F         	call	_Lcd_Cmd
  2110                           
  2111                           ;lcd.c: 81: Lcd_Cmd(0x08);
  2112   00185A  0E08               	movlw	8
  2113   00185C  ECE3  F00F         	call	_Lcd_Cmd
  2114                           
  2115                           ;lcd.c: 82: Lcd_Cmd(0x00);
  2116   001860  0E00               	movlw	0
  2117   001862  ECE3  F00F         	call	_Lcd_Cmd
  2118                           
  2119                           ;lcd.c: 83: Lcd_Cmd(0x0C);
  2120   001866  0E0C               	movlw	12
  2121   001868  ECE3  F00F         	call	_Lcd_Cmd
  2122                           
  2123                           ;lcd.c: 84: Lcd_Cmd(0x00);
  2124   00186C  0E00               	movlw	0
  2125   00186E  ECE3  F00F         	call	_Lcd_Cmd
  2126                           
  2127                           ;lcd.c: 85: Lcd_Cmd(0x06);
  2128   001872  0E06               	movlw	6
  2129   001874  ECE3  F00F         	call	_Lcd_Cmd
  2130                           
  2131                           ;lcd.c: 86: Lcd_Clear();
  2132   001878  EC17  F010         	call	_Lcd_Clear	;wreg free
  2133   00187C  0012               	return		;funcret
  2134   00187E                     __end_of_Lcd_Init:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _Lcd_CGRAM_Init *****************
  2138 ;; Defined at:
  2139 ;;		line 186 in file "lcd.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;		None
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0
  2154 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2156 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2157 ;;Total ram usage:        0 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 9
  2160 ;; This function calls:
  2161 ;;		_Lcd_Cmd
  2162 ;; This function is called by:
  2163 ;;		_main
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text8
  2168   002004                     __ptext8:
  2169                           	callstack 0
  2170   002004                     _Lcd_CGRAM_Init:
  2171                           	callstack 21
  2172                           
  2173                           ;lcd.c: 188: Lcd_Cmd(0x04);
  2174                           
  2175                           ;incstack = 0
  2176   002004  0E04               	movlw	4
  2177   002006  ECE3  F00F         	call	_Lcd_Cmd
  2178                           
  2179                           ;lcd.c: 189: Lcd_Cmd(0x00);
  2180   00200A  0E00               	movlw	0
  2181   00200C  ECE3  F00F         	call	_Lcd_Cmd
  2182   002010  0012               	return		;funcret
  2183   002012                     __end_of_Lcd_CGRAM_Init:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _Lcd_CGRAM_CreateChar *****************
  2187 ;; Defined at:
  2188 ;;		line 147 in file "lcd.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  add             1    wreg     unsigned char 
  2191 ;;  chardata        1   23[COMRAM] PTR const unsigned char 
  2192 ;;		 -> figura_5(8), figura_4(8), figura_3(8), figura_2(8), 
  2193 ;;		 -> figura_1(8), 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  add             1   25[COMRAM] unsigned char 
  2196 ;;  i               1   33[COMRAM] unsigned char 
  2197 ;;  i               1   32[COMRAM] unsigned char 
  2198 ;;  i               1   31[COMRAM] unsigned char 
  2199 ;;  i               1   30[COMRAM] unsigned char 
  2200 ;;  i               1   29[COMRAM] unsigned char 
  2201 ;;  i               1   28[COMRAM] unsigned char 
  2202 ;;  i               1   27[COMRAM] unsigned char 
  2203 ;;  i               1   26[COMRAM] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2213 ;;      Params:         1       0       0       0       0       0       0       0       0
  2214 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2215 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2216 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2217 ;;Total ram usage:       11 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 9
  2220 ;; This function calls:
  2221 ;;		_Lcd_Write_Char
  2222 ;; This function is called by:
  2223 ;;		_main
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text9
  2228   000C30                     __ptext9:
  2229                           	callstack 0
  2230   000C30                     _Lcd_CGRAM_CreateChar:
  2231                           	callstack 21
  2232                           
  2233                           ;incstack = 0
  2234                           ;Lcd_CGRAM_CreateChar@add stored from wreg
  2235   000C30  6E1A               	movwf	Lcd_CGRAM_CreateChar@add^0,c
  2236                           
  2237                           ;lcd.c: 149: switch(add)
  2238   000C32  D09E               	goto	l4351
  2239   000C34                     l4253:
  2240                           
  2241                           ;lcd.c: 152: for(char i=0; i<=7; i++)
  2242   000C34  0E00               	movlw	0
  2243   000C36  6E1B               	movwf	Lcd_CGRAM_CreateChar@i^0,c
  2244   000C38                     l4259:
  2245                           
  2246                           ;lcd.c: 153: Lcd_Write_Char(chardata[i]);
  2247   000C38  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2248   000C3A  241B               	addwf	Lcd_CGRAM_CreateChar@i^0,w,c
  2249   000C3C  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2250   000C3E  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2251   000C42                     	if	1	;There is more than 1 active tblptr byte
  2252   000C42  0E08               	movlw	high __smallconst
  2253   000C44  6EF7               	movwf	tblptrh,c
  2254   000C46                     	endif
  2255   000C46                     	if	0	;tblptru may be non-zero
  2256   000C46                     	endif
  2257   000C46                     	if	0	;tblptru may be non-zero
  2258   000C46                     	endif
  2259   000C46  0008               	tblrd		*
  2260   000C48  50F5               	movf	tablat,w,c
  2261   000C4A  ECA1  F00E         	call	_Lcd_Write_Char
  2262   000C4E  2A1B               	incf	Lcd_CGRAM_CreateChar@i^0,f,c
  2263   000C50  0E07               	movlw	7
  2264   000C52  641B               	cpfsgt	Lcd_CGRAM_CreateChar@i^0,c
  2265   000C54  D7F1               	goto	l4259
  2266   000C56  0012               	return	
  2267   000C58                     l4265:
  2268                           
  2269                           ;lcd.c: 156: for(char i=8; i<=15; i++)
  2270   000C58  0E08               	movlw	8
  2271   000C5A  6E1C               	movwf	Lcd_CGRAM_CreateChar@i_243^0,c
  2272   000C5C                     l4271:
  2273                           
  2274                           ;lcd.c: 157: Lcd_Write_Char(chardata[i-8]);
  2275   000C5C  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2276   000C5E  241C               	addwf	Lcd_CGRAM_CreateChar@i_243^0,w,c
  2277   000C60  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2278   000C62  0EF8               	movlw	-8
  2279   000C64  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2280   000C66  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2281   000C6A                     	if	1	;There is more than 1 active tblptr byte
  2282   000C6A  0E08               	movlw	high __smallconst
  2283   000C6C  6EF7               	movwf	tblptrh,c
  2284   000C6E                     	endif
  2285   000C6E                     	if	0	;tblptru may be non-zero
  2286   000C6E                     	endif
  2287   000C6E                     	if	0	;tblptru may be non-zero
  2288   000C6E                     	endif
  2289   000C6E  0008               	tblrd		*
  2290   000C70  50F5               	movf	tablat,w,c
  2291   000C72  ECA1  F00E         	call	_Lcd_Write_Char
  2292   000C76  2A1C               	incf	Lcd_CGRAM_CreateChar@i_243^0,f,c
  2293   000C78  0E0F               	movlw	15
  2294   000C7A  641C               	cpfsgt	Lcd_CGRAM_CreateChar@i_243^0,c
  2295   000C7C  D7EF               	goto	l4271
  2296   000C7E  0012               	return	
  2297   000C80                     l4277:
  2298                           
  2299                           ;lcd.c: 160: for(char i=16; i<=23; i++)
  2300   000C80  0E10               	movlw	16
  2301   000C82  6E1D               	movwf	Lcd_CGRAM_CreateChar@i_244^0,c
  2302   000C84                     l4283:
  2303                           
  2304                           ;lcd.c: 161: Lcd_Write_Char(chardata[i-16]);
  2305   000C84  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2306   000C86  241D               	addwf	Lcd_CGRAM_CreateChar@i_244^0,w,c
  2307   000C88  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2308   000C8A  0EF0               	movlw	-16
  2309   000C8C  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2310   000C8E  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2311   000C92                     	if	1	;There is more than 1 active tblptr byte
  2312   000C92  0E08               	movlw	high __smallconst
  2313   000C94  6EF7               	movwf	tblptrh,c
  2314   000C96                     	endif
  2315   000C96                     	if	0	;tblptru may be non-zero
  2316   000C96                     	endif
  2317   000C96                     	if	0	;tblptru may be non-zero
  2318   000C96                     	endif
  2319   000C96  0008               	tblrd		*
  2320   000C98  50F5               	movf	tablat,w,c
  2321   000C9A  ECA1  F00E         	call	_Lcd_Write_Char
  2322   000C9E  2A1D               	incf	Lcd_CGRAM_CreateChar@i_244^0,f,c
  2323   000CA0  0E17               	movlw	23
  2324   000CA2  641D               	cpfsgt	Lcd_CGRAM_CreateChar@i_244^0,c
  2325   000CA4  D7EF               	goto	l4283
  2326   000CA6  0012               	return	
  2327   000CA8                     l4289:
  2328                           
  2329                           ;lcd.c: 164: for(char i=24; i<=31; i++)
  2330   000CA8  0E18               	movlw	24
  2331   000CAA  6E1E               	movwf	Lcd_CGRAM_CreateChar@i_245^0,c
  2332   000CAC                     l4295:
  2333                           
  2334                           ;lcd.c: 165: Lcd_Write_Char(chardata[i-24]);
  2335   000CAC  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2336   000CAE  241E               	addwf	Lcd_CGRAM_CreateChar@i_245^0,w,c
  2337   000CB0  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2338   000CB2  0EE8               	movlw	-24
  2339   000CB4  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2340   000CB6  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2341   000CBA                     	if	1	;There is more than 1 active tblptr byte
  2342   000CBA  0E08               	movlw	high __smallconst
  2343   000CBC  6EF7               	movwf	tblptrh,c
  2344   000CBE                     	endif
  2345   000CBE                     	if	0	;tblptru may be non-zero
  2346   000CBE                     	endif
  2347   000CBE                     	if	0	;tblptru may be non-zero
  2348   000CBE                     	endif
  2349   000CBE  0008               	tblrd		*
  2350   000CC0  50F5               	movf	tablat,w,c
  2351   000CC2  ECA1  F00E         	call	_Lcd_Write_Char
  2352   000CC6  2A1E               	incf	Lcd_CGRAM_CreateChar@i_245^0,f,c
  2353   000CC8  0E1F               	movlw	31
  2354   000CCA  641E               	cpfsgt	Lcd_CGRAM_CreateChar@i_245^0,c
  2355   000CCC  D7EF               	goto	l4295
  2356   000CCE  0012               	return	
  2357   000CD0                     l4301:
  2358                           
  2359                           ;lcd.c: 168: for(char i=32; i<=39; i++)
  2360   000CD0  0E20               	movlw	32
  2361   000CD2  6E1F               	movwf	Lcd_CGRAM_CreateChar@i_246^0,c
  2362   000CD4                     l4307:
  2363                           
  2364                           ;lcd.c: 169: Lcd_Write_Char(chardata[i-32]);
  2365   000CD4  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2366   000CD6  241F               	addwf	Lcd_CGRAM_CreateChar@i_246^0,w,c
  2367   000CD8  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2368   000CDA  0EE0               	movlw	-32
  2369   000CDC  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2370   000CDE  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2371   000CE2                     	if	1	;There is more than 1 active tblptr byte
  2372   000CE2  0E08               	movlw	high __smallconst
  2373   000CE4  6EF7               	movwf	tblptrh,c
  2374   000CE6                     	endif
  2375   000CE6                     	if	0	;tblptru may be non-zero
  2376   000CE6                     	endif
  2377   000CE6                     	if	0	;tblptru may be non-zero
  2378   000CE6                     	endif
  2379   000CE6  0008               	tblrd		*
  2380   000CE8  50F5               	movf	tablat,w,c
  2381   000CEA  ECA1  F00E         	call	_Lcd_Write_Char
  2382   000CEE  2A1F               	incf	Lcd_CGRAM_CreateChar@i_246^0,f,c
  2383   000CF0  0E27               	movlw	39
  2384   000CF2  641F               	cpfsgt	Lcd_CGRAM_CreateChar@i_246^0,c
  2385   000CF4  D7EF               	goto	l4307
  2386   000CF6  0012               	return	
  2387   000CF8                     l4313:
  2388                           
  2389                           ;lcd.c: 172: for(char i=40; i<=47; i++)
  2390   000CF8  0E28               	movlw	40
  2391   000CFA  6E20               	movwf	Lcd_CGRAM_CreateChar@i_247^0,c
  2392   000CFC                     l4319:
  2393                           
  2394                           ;lcd.c: 173: Lcd_Write_Char(chardata[i-40]);
  2395   000CFC  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2396   000CFE  2420               	addwf	Lcd_CGRAM_CreateChar@i_247^0,w,c
  2397   000D00  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2398   000D02  0ED8               	movlw	-40
  2399   000D04  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2400   000D06  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2401   000D0A                     	if	1	;There is more than 1 active tblptr byte
  2402   000D0A  0E08               	movlw	high __smallconst
  2403   000D0C  6EF7               	movwf	tblptrh,c
  2404   000D0E                     	endif
  2405   000D0E                     	if	0	;tblptru may be non-zero
  2406   000D0E                     	endif
  2407   000D0E                     	if	0	;tblptru may be non-zero
  2408   000D0E                     	endif
  2409   000D0E  0008               	tblrd		*
  2410   000D10  50F5               	movf	tablat,w,c
  2411   000D12  ECA1  F00E         	call	_Lcd_Write_Char
  2412   000D16  2A20               	incf	Lcd_CGRAM_CreateChar@i_247^0,f,c
  2413   000D18  0E2F               	movlw	47
  2414   000D1A  6420               	cpfsgt	Lcd_CGRAM_CreateChar@i_247^0,c
  2415   000D1C  D7EF               	goto	l4319
  2416   000D1E  0012               	return	
  2417   000D20                     l4325:
  2418                           
  2419                           ;lcd.c: 176: for(char i=48; i<=55; i++)
  2420   000D20  0E30               	movlw	48
  2421   000D22  6E21               	movwf	Lcd_CGRAM_CreateChar@i_248^0,c
  2422   000D24                     l4331:
  2423                           
  2424                           ;lcd.c: 177: Lcd_Write_Char(chardata[i-48]);
  2425   000D24  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2426   000D26  2421               	addwf	Lcd_CGRAM_CreateChar@i_248^0,w,c
  2427   000D28  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2428   000D2A  0ED0               	movlw	-48
  2429   000D2C  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2430   000D2E  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2431   000D32                     	if	1	;There is more than 1 active tblptr byte
  2432   000D32  0E08               	movlw	high __smallconst
  2433   000D34  6EF7               	movwf	tblptrh,c
  2434   000D36                     	endif
  2435   000D36                     	if	0	;tblptru may be non-zero
  2436   000D36                     	endif
  2437   000D36                     	if	0	;tblptru may be non-zero
  2438   000D36                     	endif
  2439   000D36  0008               	tblrd		*
  2440   000D38  50F5               	movf	tablat,w,c
  2441   000D3A  ECA1  F00E         	call	_Lcd_Write_Char
  2442   000D3E  2A21               	incf	Lcd_CGRAM_CreateChar@i_248^0,f,c
  2443   000D40  0E37               	movlw	55
  2444   000D42  6421               	cpfsgt	Lcd_CGRAM_CreateChar@i_248^0,c
  2445   000D44  D7EF               	goto	l4331
  2446   000D46  0012               	return	
  2447   000D48                     l4337:
  2448                           
  2449                           ;lcd.c: 180: for(char i=56; i<=63; i++)
  2450   000D48  0E38               	movlw	56
  2451   000D4A  6E22               	movwf	Lcd_CGRAM_CreateChar@i_249^0,c
  2452   000D4C                     l4343:
  2453                           
  2454                           ;lcd.c: 181: Lcd_Write_Char(chardata[i-56]);
  2455   000D4C  5018               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2456   000D4E  2422               	addwf	Lcd_CGRAM_CreateChar@i_249^0,w,c
  2457   000D50  6E19               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2458   000D52  0EC8               	movlw	-56
  2459   000D54  2619               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2460   000D56  C019  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2461   000D5A                     	if	1	;There is more than 1 active tblptr byte
  2462   000D5A  0E08               	movlw	high __smallconst
  2463   000D5C  6EF7               	movwf	tblptrh,c
  2464   000D5E                     	endif
  2465   000D5E                     	if	0	;tblptru may be non-zero
  2466   000D5E                     	endif
  2467   000D5E                     	if	0	;tblptru may be non-zero
  2468   000D5E                     	endif
  2469   000D5E  0008               	tblrd		*
  2470   000D60  50F5               	movf	tablat,w,c
  2471   000D62  ECA1  F00E         	call	_Lcd_Write_Char
  2472   000D66  2A22               	incf	Lcd_CGRAM_CreateChar@i_249^0,f,c
  2473   000D68  0E3F               	movlw	63
  2474   000D6A  6422               	cpfsgt	Lcd_CGRAM_CreateChar@i_249^0,c
  2475   000D6C  D7EF               	goto	l4343
  2476   000D6E  0012               	return	
  2477   000D70                     l4351:
  2478   000D70  501A               	movf	Lcd_CGRAM_CreateChar@add^0,w,c
  2479                           
  2480                           ; Switch size 1, requested type "simple"
  2481                           ; Number of cases is 8, Range of values is 0 to 7
  2482                           ; switch strategies available:
  2483                           ; Name         Instructions Cycles
  2484                           ; simple_byte           25    13 (average)
  2485                           ;	Chosen strategy is simple_byte
  2486   000D72  0A00               	xorlw	0	; case 0
  2487   000D74  B4D8               	btfsc	status,2,c
  2488   000D76  D75E               	goto	l4253
  2489   000D78  0A01               	xorlw	1	; case 1
  2490   000D7A  B4D8               	btfsc	status,2,c
  2491   000D7C  D76D               	goto	l4265
  2492   000D7E  0A03               	xorlw	3	; case 2
  2493   000D80  B4D8               	btfsc	status,2,c
  2494   000D82  D77E               	goto	l4277
  2495   000D84  0A01               	xorlw	1	; case 3
  2496   000D86  B4D8               	btfsc	status,2,c
  2497   000D88  D78F               	goto	l4289
  2498   000D8A  0A07               	xorlw	7	; case 4
  2499   000D8C  B4D8               	btfsc	status,2,c
  2500   000D8E  D7A0               	goto	l4301
  2501   000D90  0A01               	xorlw	1	; case 5
  2502   000D92  B4D8               	btfsc	status,2,c
  2503   000D94  D7B1               	goto	l4313
  2504   000D96  0A03               	xorlw	3	; case 6
  2505   000D98  B4D8               	btfsc	status,2,c
  2506   000D9A  D7C2               	goto	l4325
  2507   000D9C  0A01               	xorlw	1	; case 7
  2508   000D9E  A4D8               	btfss	status,2,c
  2509   000DA0  0012               	return	
  2510   000DA2  D7D2               	goto	l4337
  2511   000DA4                     __end_of_Lcd_CGRAM_CreateChar:
  2512                           	callstack 0
  2513                           
  2514 ;; *************** function _Lcd_CGRAM_Close *****************
  2515 ;; Defined at:
  2516 ;;		line 192 in file "lcd.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2533 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; Hardware stack levels required when called: 9
  2537 ;; This function calls:
  2538 ;;		_Lcd_Cmd
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text10
  2545   002012                     __ptext10:
  2546                           	callstack 0
  2547   002012                     _Lcd_CGRAM_Close:
  2548                           	callstack 21
  2549                           
  2550                           ;lcd.c: 194: Lcd_Cmd(0x00);
  2551                           
  2552                           ;incstack = 0
  2553   002012  0E00               	movlw	0
  2554   002014  ECE3  F00F         	call	_Lcd_Cmd
  2555                           
  2556                           ;lcd.c: 195: Lcd_Cmd(0x02);
  2557   002018  0E02               	movlw	2
  2558   00201A  ECE3  F00F         	call	_Lcd_Cmd
  2559   00201E  0012               	return		;funcret
  2560   002020                     __end_of_Lcd_CGRAM_Close:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _Duty_motor *****************
  2564 ;; Defined at:
  2565 ;;		line 381 in file "Lab4.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  ADC             3    9[BANK0 ] float 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  escalarADC      3   12[BANK0 ] float 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2579 ;;      Params:         0       3       0       0       0       0       0       0       0
  2580 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2582 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2583 ;;Total ram usage:        6 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 9
  2586 ;; This function calls:
  2587 ;;		___ftdiv
  2588 ;;		___ftge
  2589 ;;		___ftmul
  2590 ;;		___fttol
  2591 ;; This function is called by:
  2592 ;;		_main
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text11
  2597   001548                     __ptext11:
  2598                           	callstack 0
  2599   001548                     _Duty_motor:
  2600                           	callstack 21
  2601                           
  2602                           ;Lab4.c: 382: float escalarADC = (ADC/1024)*249;
  2603                           
  2604                           ;incstack = 0
  2605   001548  0E00               	movlw	0
  2606   00154A  6E1F               	movwf	___ftdiv@f2^0,c
  2607   00154C  0E80               	movlw	128
  2608   00154E  6E20               	movwf	(___ftdiv@f2+1)^0,c
  2609   001550  0E44               	movlw	68
  2610   001552  6E21               	movwf	(___ftdiv@f2+2)^0,c
  2611   001554  C092  F01C         	movff	Duty_motor@ADC,___ftdiv@f1
  2612   001558  C093  F01D         	movff	Duty_motor@ADC+1,___ftdiv@f1+1
  2613   00155C  C094  F01E         	movff	Duty_motor@ADC+2,___ftdiv@f1+2
  2614   001560  ECD1  F008         	call	___ftdiv	;wreg free
  2615   001564  C01C  F02B         	movff	?___ftdiv,___ftmul@f1
  2616   001568  C01D  F02C         	movff	?___ftdiv+1,___ftmul@f1+1
  2617   00156C  C01E  F02D         	movff	?___ftdiv+2,___ftmul@f1+2
  2618   001570  0E00               	movlw	0
  2619   001572  6E2E               	movwf	___ftmul@f2^0,c
  2620   001574  0E79               	movlw	121
  2621   001576  6E2F               	movwf	(___ftmul@f2+1)^0,c
  2622   001578  0E43               	movlw	67
  2623   00157A  6E30               	movwf	(___ftmul@f2+2)^0,c
  2624   00157C  EC56  F008         	call	___ftmul	;wreg free
  2625   001580  C02B  F095         	movff	?___ftmul,Duty_motor@escalarADC
  2626   001584  C02C  F096         	movff	?___ftmul+1,Duty_motor@escalarADC+1
  2627   001588  C02D  F097         	movff	?___ftmul+2,Duty_motor@escalarADC+2
  2628                           
  2629                           ;Lab4.c: 384: if(escalarADC >= 249) escalarADC= 249;
  2630   00158C  C095  F014         	movff	Duty_motor@escalarADC,___ftge@ff1
  2631   001590  C096  F015         	movff	Duty_motor@escalarADC+1,___ftge@ff1+1
  2632   001594  C097  F016         	movff	Duty_motor@escalarADC+2,___ftge@ff1+2
  2633   001598  0E00               	movlw	0
  2634   00159A  6E17               	movwf	___ftge@ff2^0,c
  2635   00159C  0E79               	movlw	121
  2636   00159E  6E18               	movwf	(___ftge@ff2+1)^0,c
  2637   0015A0  0E43               	movlw	67
  2638   0015A2  6E19               	movwf	(___ftge@ff2+2)^0,c
  2639   0015A4  EC3F  F00C         	call	___ftge	;wreg free
  2640   0015A8  A0D8               	btfss	status,0,c
  2641   0015AA  D007               	goto	l4383
  2642   0015AC  0E00               	movlw	0
  2643   0015AE  0100               	movlb	0	; () banked
  2644   0015B0  6F95               	movwf	Duty_motor@escalarADC& (0+255),b
  2645   0015B2  0E79               	movlw	121
  2646   0015B4  6F96               	movwf	(Duty_motor@escalarADC+1)& (0+255),b
  2647   0015B6  0E43               	movlw	67
  2648   0015B8  D008               	goto	L1
  2649   0015BA                     l4383:
  2650                           
  2651                           ;Lab4.c: 385: else if(escalarADC < 0 ) escalarADC = 0;
  2652   0015BA  0100               	movlb	0	; () banked
  2653   0015BC  AF97               	btfss	(Duty_motor@escalarADC+2)& (0+255),7,b
  2654   0015BE  D006               	goto	l4387
  2655                           
  2656                           ; BSR set to: 0
  2657   0015C0  0E00               	movlw	0
  2658   0015C2  6F95               	movwf	Duty_motor@escalarADC& (0+255),b
  2659   0015C4  0E00               	movlw	0
  2660   0015C6  6F96               	movwf	(Duty_motor@escalarADC+1)& (0+255),b
  2661   0015C8  0E00               	movlw	0
  2662   0015CA                     L1:
  2663   0015CA  6F97               	movwf	(Duty_motor@escalarADC+2)& (0+255),b
  2664   0015CC                     l4387:
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;Lab4.c: 386: CCPR1L=(int) escalarADC;
  2668   0015CC  C095  F014         	movff	Duty_motor@escalarADC,___fttol@f1
  2669   0015D0  C096  F015         	movff	Duty_motor@escalarADC+1,___fttol@f1+1
  2670   0015D4  C097  F016         	movff	Duty_motor@escalarADC+2,___fttol@f1+2
  2671   0015D8  EC44  F009         	call	___fttol	;wreg free
  2672   0015DC  5014               	movf	?___fttol^0,w,c
  2673   0015DE  6EBE               	movwf	190,c	;volatile
  2674   0015E0  0012               	return		;funcret
  2675   0015E2                     __end_of_Duty_motor:
  2676                           	callstack 0
  2677                           
  2678 ;; *************** function ___fttol *****************
  2679 ;; Defined at:
  2680 ;;		line 44 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/fttol.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  f1              3   19[COMRAM] float 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  lval            4   29[COMRAM] unsigned long 
  2685 ;;  exp1            1   33[COMRAM] unsigned char 
  2686 ;;  sign1           1   28[COMRAM] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  4   19[COMRAM] long 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0
  2691 ;; Tracked objects:
  2692 ;;		On entry : 3F/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2696 ;;      Params:         4       0       0       0       0       0       0       0       0
  2697 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2698 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2699 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2700 ;;Total ram usage:       15 bytes
  2701 ;; Hardware stack levels used: 1
  2702 ;; Hardware stack levels required when called: 7
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_Duty_motor
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text12
  2711   001288                     __ptext12:
  2712                           	callstack 0
  2713   001288                     ___fttol:
  2714                           	callstack 22
  2715                           
  2716                           ; BSR set to: 0
  2717                           
  2718                           ;incstack = 0
  2719   001288  C016  F018         	movff	___fttol@f1+2,??___fttol
  2720   00128C  6A19               	clrf	(??___fttol+1)^0,c
  2721   00128E  6A1A               	clrf	(??___fttol+2)^0,c
  2722   001290  3415               	rlcf	(___fttol@f1+1)^0,w,c
  2723   001292  3618               	rlcf	??___fttol^0,f,c
  2724   001294  E301               	bnc	u3221
  2725   001296  8019               	bsf	(??___fttol+1)^0,0,c
  2726   001298                     u3221:
  2727   001298  5018               	movf	??___fttol^0,w,c
  2728   00129A  6E22               	movwf	___fttol@exp1^0,c
  2729   00129C  5022               	movf	___fttol@exp1^0,w,c
  2730   00129E  A4D8               	btfss	status,2,c
  2731   0012A0  D009               	goto	l4141
  2732   0012A2                     u3230:
  2733   0012A2  0E00               	movlw	0
  2734   0012A4  6E14               	movwf	?___fttol^0,c
  2735   0012A6  0E00               	movlw	0
  2736   0012A8  6E15               	movwf	(?___fttol+1)^0,c
  2737   0012AA  0E00               	movlw	0
  2738   0012AC  6E16               	movwf	(?___fttol+2)^0,c
  2739   0012AE  0E00               	movlw	0
  2740   0012B0  6E17               	movwf	(?___fttol+3)^0,c
  2741   0012B2  0012               	return	
  2742   0012B4                     l4141:
  2743                           
  2744                           ; BSR set to: 0
  2745   0012B4  0E17               	movlw	23
  2746   0012B6  6E18               	movwf	??___fttol^0,c
  2747   0012B8  C014  F019         	movff	___fttol@f1,??___fttol+1
  2748   0012BC  C015  F01A         	movff	___fttol@f1+1,??___fttol+2
  2749   0012C0  C016  F01B         	movff	___fttol@f1+2,??___fttol+3
  2750   0012C4  2818               	incf	??___fttol^0,w,c
  2751   0012C6  6E1C               	movwf	(??___fttol+4)^0,c
  2752   0012C8  D004               	goto	u3240
  2753   0012CA                     u3245:
  2754   0012CA  90D8               	bcf	status,0,c
  2755   0012CC  321B               	rrcf	(??___fttol+3)^0,f,c
  2756   0012CE  321A               	rrcf	(??___fttol+2)^0,f,c
  2757   0012D0  3219               	rrcf	(??___fttol+1)^0,f,c
  2758   0012D2                     u3240:
  2759   0012D2  2E1C               	decfsz	(??___fttol+4)^0,f,c
  2760   0012D4  D7FA               	goto	u3245
  2761   0012D6  5019               	movf	(??___fttol+1)^0,w,c
  2762   0012D8  6E1D               	movwf	___fttol@sign1^0,c
  2763   0012DA  8E15               	bsf	(___fttol@f1+1)^0,7,c
  2764   0012DC  0EFF               	movlw	255
  2765   0012DE  1614               	andwf	___fttol@f1^0,f,c
  2766   0012E0  0EFF               	movlw	255
  2767   0012E2  1615               	andwf	(___fttol@f1+1)^0,f,c
  2768   0012E4  0E00               	movlw	0
  2769   0012E6  1616               	andwf	(___fttol@f1+2)^0,f,c
  2770   0012E8  5014               	movf	___fttol@f1^0,w,c
  2771   0012EA  6E1E               	movwf	___fttol@lval^0,c
  2772   0012EC  5015               	movf	(___fttol@f1+1)^0,w,c
  2773   0012EE  6E1F               	movwf	(___fttol@lval+1)^0,c
  2774   0012F0  5016               	movf	(___fttol@f1+2)^0,w,c
  2775   0012F2  6E20               	movwf	(___fttol@lval+2)^0,c
  2776   0012F4  6A21               	clrf	(___fttol@lval+3)^0,c
  2777   0012F6  0E8E               	movlw	142
  2778   0012F8  5E22               	subwf	___fttol@exp1^0,f,c
  2779   0012FA  AE22               	btfss	___fttol@exp1^0,7,c
  2780   0012FC  D00D               	goto	l4163
  2781   0012FE  5022               	movf	___fttol@exp1^0,w,c
  2782   001300  0A80               	xorlw	128
  2783   001302  0F8F               	addlw	143
  2784   001304  A0D8               	btfss	status,0,c
  2785   001306  D7CD               	goto	u3230
  2786   001308                     l4159:
  2787   001308  90D8               	bcf	status,0,c
  2788   00130A  3221               	rrcf	(___fttol@lval+3)^0,f,c
  2789   00130C  3220               	rrcf	(___fttol@lval+2)^0,f,c
  2790   00130E  321F               	rrcf	(___fttol@lval+1)^0,f,c
  2791   001310  321E               	rrcf	___fttol@lval^0,f,c
  2792   001312  3E22               	incfsz	___fttol@exp1^0,f,c
  2793   001314  D7F9               	goto	l4159
  2794   001316  D00D               	goto	u3280
  2795   001318                     l4163:
  2796   001318  0E17               	movlw	23
  2797   00131A  6422               	cpfsgt	___fttol@exp1^0,c
  2798   00131C  D007               	goto	l4171
  2799   00131E  D7C1               	goto	u3230
  2800   001320                     l4169:
  2801   001320  90D8               	bcf	status,0,c
  2802   001322  361E               	rlcf	___fttol@lval^0,f,c
  2803   001324  361F               	rlcf	(___fttol@lval+1)^0,f,c
  2804   001326  3620               	rlcf	(___fttol@lval+2)^0,f,c
  2805   001328  3621               	rlcf	(___fttol@lval+3)^0,f,c
  2806   00132A  0622               	decf	___fttol@exp1^0,f,c
  2807   00132C                     l4171:
  2808   00132C  5022               	movf	___fttol@exp1^0,w,c
  2809   00132E  A4D8               	btfss	status,2,c
  2810   001330  D7F7               	goto	l4169
  2811   001332                     u3280:
  2812   001332  501D               	movf	___fttol@sign1^0,w,c
  2813   001334  B4D8               	btfsc	status,2,c
  2814   001336  D008               	goto	l4177
  2815   001338  1E21               	comf	(___fttol@lval+3)^0,f,c
  2816   00133A  1E20               	comf	(___fttol@lval+2)^0,f,c
  2817   00133C  1E1F               	comf	(___fttol@lval+1)^0,f,c
  2818   00133E  6C1E               	negf	___fttol@lval^0,c
  2819   001340  0E00               	movlw	0
  2820   001342  221F               	addwfc	(___fttol@lval+1)^0,f,c
  2821   001344  2220               	addwfc	(___fttol@lval+2)^0,f,c
  2822   001346  2221               	addwfc	(___fttol@lval+3)^0,f,c
  2823   001348                     l4177:
  2824   001348  C01E  F014         	movff	___fttol@lval,?___fttol
  2825   00134C  C01F  F015         	movff	___fttol@lval+1,?___fttol+1
  2826   001350  C020  F016         	movff	___fttol@lval+2,?___fttol+2
  2827   001354  C021  F017         	movff	___fttol@lval+3,?___fttol+3
  2828   001358  0012               	return		;funcret
  2829   00135A                     __end_of___fttol:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function ___ftmul *****************
  2833 ;; Defined at:
  2834 ;;		line 62 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/ftmul.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  f1              3   42[COMRAM] float 
  2837 ;;  f2              3   45[COMRAM] float 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  2840 ;;  sign            1    8[BANK0 ] unsigned char 
  2841 ;;  cntr            1    7[BANK0 ] unsigned char 
  2842 ;;  exp             1    3[BANK0 ] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  3   42[COMRAM] float 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2852 ;;      Params:         6       0       0       0       0       0       0       0       0
  2853 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2854 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2855 ;;      Totals:         6       9       0       0       0       0       0       0       0
  2856 ;;Total ram usage:       15 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; Hardware stack levels required when called: 8
  2859 ;; This function calls:
  2860 ;;		___ftpack
  2861 ;; This function is called by:
  2862 ;;		_Duty_motor
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text13
  2867   0010AC                     __ptext13:
  2868                           	callstack 0
  2869   0010AC                     ___ftmul:
  2870                           	callstack 21
  2871                           
  2872                           ;incstack = 0
  2873   0010AC  C02D  F089         	movff	___ftmul@f1+2,??___ftmul
  2874   0010B0  0100               	movlb	0	; () banked
  2875   0010B2  6B8A               	clrf	(??___ftmul+1)& (0+255),b
  2876   0010B4  6B8B               	clrf	(??___ftmul+2)& (0+255),b
  2877   0010B6  342C               	rlcf	(___ftmul@f1+1)^0,w,c
  2878   0010B8  3789               	rlcf	??___ftmul& (0+255),f,b
  2879   0010BA  E301               	bnc	u3011
  2880   0010BC  818A               	bsf	(??___ftmul+1)& (0+255),0,b
  2881   0010BE                     u3011:
  2882   0010BE  5189               	movf	??___ftmul& (0+255),w,b
  2883   0010C0  6F8C               	movwf	___ftmul@exp& (0+255),b
  2884   0010C2  518C               	movf	___ftmul@exp& (0+255),w,b
  2885   0010C4  A4D8               	btfss	status,2,c
  2886   0010C6  D007               	goto	l3995
  2887                           
  2888                           ; BSR set to: 0
  2889   0010C8  0E00               	movlw	0
  2890   0010CA  6E2B               	movwf	?___ftmul^0,c
  2891   0010CC  0E00               	movlw	0
  2892   0010CE  6E2C               	movwf	(?___ftmul+1)^0,c
  2893   0010D0  0E00               	movlw	0
  2894   0010D2  6E2D               	movwf	(?___ftmul+2)^0,c
  2895   0010D4  0012               	return	
  2896   0010D6                     l3995:
  2897                           
  2898                           ; BSR set to: 0
  2899   0010D6  C030  F089         	movff	___ftmul@f2+2,??___ftmul
  2900   0010DA  6B8A               	clrf	(??___ftmul+1)& (0+255),b
  2901   0010DC  6B8B               	clrf	(??___ftmul+2)& (0+255),b
  2902   0010DE  342F               	rlcf	(___ftmul@f2+1)^0,w,c
  2903   0010E0  3789               	rlcf	??___ftmul& (0+255),f,b
  2904   0010E2  E301               	bnc	u3031
  2905   0010E4  818A               	bsf	(??___ftmul+1)& (0+255),0,b
  2906   0010E6                     u3031:
  2907   0010E6  5189               	movf	??___ftmul& (0+255),w,b
  2908   0010E8  6F91               	movwf	___ftmul@sign& (0+255),b
  2909   0010EA  5191               	movf	___ftmul@sign& (0+255),w,b
  2910   0010EC  A4D8               	btfss	status,2,c
  2911   0010EE  D007               	goto	l4001
  2912                           
  2913                           ; BSR set to: 0
  2914   0010F0  0E00               	movlw	0
  2915   0010F2  6E2B               	movwf	?___ftmul^0,c
  2916   0010F4  0E00               	movlw	0
  2917   0010F6  6E2C               	movwf	(?___ftmul+1)^0,c
  2918   0010F8  0E00               	movlw	0
  2919   0010FA  6E2D               	movwf	(?___ftmul+2)^0,c
  2920   0010FC  0012               	return	
  2921   0010FE                     l4001:
  2922                           
  2923                           ; BSR set to: 0
  2924   0010FE  5191               	movf	___ftmul@sign& (0+255),w,b
  2925   001100  0F7B               	addlw	123
  2926   001102  278C               	addwf	___ftmul@exp& (0+255),f,b
  2927                           
  2928                           ; BSR set to: 0
  2929   001104  C02D  F091         	movff	___ftmul@f1+2,___ftmul@sign
  2930   001108  5030               	movf	(___ftmul@f2+2)^0,w,c
  2931   00110A  1B91               	xorwf	___ftmul@sign& (0+255),f,b
  2932   00110C  0E80               	movlw	128
  2933   00110E  1791               	andwf	___ftmul@sign& (0+255),f,b
  2934                           
  2935                           ; BSR set to: 0
  2936   001110  8E2C               	bsf	(___ftmul@f1+1)^0,7,c
  2937                           
  2938                           ; BSR set to: 0
  2939   001112  8E2F               	bsf	(___ftmul@f2+1)^0,7,c
  2940                           
  2941                           ; BSR set to: 0
  2942   001114  0EFF               	movlw	255
  2943   001116  162E               	andwf	___ftmul@f2^0,f,c
  2944   001118  0EFF               	movlw	255
  2945   00111A  162F               	andwf	(___ftmul@f2+1)^0,f,c
  2946   00111C  0E00               	movlw	0
  2947   00111E  1630               	andwf	(___ftmul@f2+2)^0,f,c
  2948                           
  2949                           ; BSR set to: 0
  2950   001120  0E00               	movlw	0
  2951   001122  6F8D               	movwf	___ftmul@f3_as_product& (0+255),b
  2952   001124  0E00               	movlw	0
  2953   001126  6F8E               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2954   001128  0E00               	movlw	0
  2955   00112A  6F8F               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2956                           
  2957                           ; BSR set to: 0
  2958   00112C  0E07               	movlw	7
  2959   00112E  6F90               	movwf	___ftmul@cntr& (0+255),b
  2960   001130                     l4015:
  2961                           
  2962                           ; BSR set to: 0
  2963   001130  A02B               	btfss	___ftmul@f1^0,0,c
  2964   001132  D006               	goto	l4019
  2965                           
  2966                           ; BSR set to: 0
  2967   001134  502E               	movf	___ftmul@f2^0,w,c
  2968   001136  278D               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2969   001138  502F               	movf	(___ftmul@f2+1)^0,w,c
  2970   00113A  238E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2971   00113C  5030               	movf	(___ftmul@f2+2)^0,w,c
  2972   00113E  238F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2973   001140                     l4019:
  2974                           
  2975                           ; BSR set to: 0
  2976   001140  90D8               	bcf	status,0,c
  2977   001142  322D               	rrcf	(___ftmul@f1+2)^0,f,c
  2978   001144  322C               	rrcf	(___ftmul@f1+1)^0,f,c
  2979   001146  322B               	rrcf	___ftmul@f1^0,f,c
  2980   001148  90D8               	bcf	status,0,c
  2981   00114A  362E               	rlcf	___ftmul@f2^0,f,c
  2982   00114C  362F               	rlcf	(___ftmul@f2+1)^0,f,c
  2983   00114E  3630               	rlcf	(___ftmul@f2+2)^0,f,c
  2984                           
  2985                           ; BSR set to: 0
  2986   001150  2F90               	decfsz	___ftmul@cntr& (0+255),f,b
  2987   001152  D7EE               	goto	l4015
  2988                           
  2989                           ; BSR set to: 0
  2990   001154  0E09               	movlw	9
  2991   001156  6F90               	movwf	___ftmul@cntr& (0+255),b
  2992   001158                     l4025:
  2993                           
  2994                           ; BSR set to: 0
  2995   001158  A02B               	btfss	___ftmul@f1^0,0,c
  2996   00115A  D006               	goto	l4029
  2997                           
  2998                           ; BSR set to: 0
  2999   00115C  502E               	movf	___ftmul@f2^0,w,c
  3000   00115E  278D               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3001   001160  502F               	movf	(___ftmul@f2+1)^0,w,c
  3002   001162  238E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3003   001164  5030               	movf	(___ftmul@f2+2)^0,w,c
  3004   001166  238F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3005   001168                     l4029:
  3006                           
  3007                           ; BSR set to: 0
  3008   001168  90D8               	bcf	status,0,c
  3009   00116A  322D               	rrcf	(___ftmul@f1+2)^0,f,c
  3010   00116C  322C               	rrcf	(___ftmul@f1+1)^0,f,c
  3011   00116E  322B               	rrcf	___ftmul@f1^0,f,c
  3012   001170  90D8               	bcf	status,0,c
  3013   001172  338F               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  3014   001174  338E               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  3015   001176  338D               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  3016                           
  3017                           ; BSR set to: 0
  3018   001178  2F90               	decfsz	___ftmul@cntr& (0+255),f,b
  3019   00117A  D7EE               	goto	l4025
  3020                           
  3021                           ; BSR set to: 0
  3022   00117C  C08D  F014         	movff	___ftmul@f3_as_product,___ftpack@arg
  3023   001180  C08E  F015         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3024   001184  C08F  F016         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3025   001188  C08C  F017         	movff	___ftmul@exp,___ftpack@exp
  3026   00118C  C091  F018         	movff	___ftmul@sign,___ftpack@sign
  3027   001190  ECAD  F009         	call	___ftpack	;wreg free
  3028   001194  C014  F02B         	movff	?___ftpack,?___ftmul
  3029   001198  C015  F02C         	movff	?___ftpack+1,?___ftmul+1
  3030   00119C  C016  F02D         	movff	?___ftpack+2,?___ftmul+2
  3031   0011A0  0012               	return		;funcret
  3032   0011A2                     __end_of___ftmul:
  3033                           	callstack 0
  3034                           
  3035 ;; *************** function ___ftge *****************
  3036 ;; Defined at:
  3037 ;;		line 4 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/ftge.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  ff1             3   19[COMRAM] float 
  3040 ;;  ff2             3   22[COMRAM] float 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;		None               void
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3052 ;;      Params:         6       0       0       0       0       0       0       0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3054 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3055 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3056 ;;Total ram usage:        9 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 7
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_Duty_motor
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text14
  3067   00187E                     __ptext14:
  3068                           	callstack 0
  3069   00187E                     ___ftge:
  3070                           	callstack 22
  3071                           
  3072                           ;incstack = 0
  3073   00187E  AE16               	btfss	(___ftge@ff1+2)^0,7,c
  3074   001880  D00F               	goto	l4121
  3075   001882  0E00               	movlw	0
  3076   001884  6E1A               	movwf	??___ftge^0,c
  3077   001886  0E00               	movlw	0
  3078   001888  6E1B               	movwf	(??___ftge+1)^0,c
  3079   00188A  0E80               	movlw	128
  3080   00188C  6E1C               	movwf	(??___ftge+2)^0,c
  3081   00188E  5014               	movf	___ftge@ff1^0,w,c
  3082   001890  5C1A               	subwf	??___ftge^0,w,c
  3083   001892  6E14               	movwf	___ftge@ff1^0,c
  3084   001894  5015               	movf	(___ftge@ff1+1)^0,w,c
  3085   001896  581B               	subwfb	(??___ftge+1)^0,w,c
  3086   001898  6E15               	movwf	(___ftge@ff1+1)^0,c
  3087   00189A  5016               	movf	(___ftge@ff1+2)^0,w,c
  3088   00189C  581C               	subwfb	(??___ftge+2)^0,w,c
  3089   00189E  6E16               	movwf	(___ftge@ff1+2)^0,c
  3090   0018A0                     l4121:
  3091   0018A0  AE19               	btfss	(___ftge@ff2+2)^0,7,c
  3092   0018A2  D00F               	goto	l4125
  3093   0018A4  0E00               	movlw	0
  3094   0018A6  6E1A               	movwf	??___ftge^0,c
  3095   0018A8  0E00               	movlw	0
  3096   0018AA  6E1B               	movwf	(??___ftge+1)^0,c
  3097   0018AC  0E80               	movlw	128
  3098   0018AE  6E1C               	movwf	(??___ftge+2)^0,c
  3099   0018B0  5017               	movf	___ftge@ff2^0,w,c
  3100   0018B2  5C1A               	subwf	??___ftge^0,w,c
  3101   0018B4  6E17               	movwf	___ftge@ff2^0,c
  3102   0018B6  5018               	movf	(___ftge@ff2+1)^0,w,c
  3103   0018B8  581B               	subwfb	(??___ftge+1)^0,w,c
  3104   0018BA  6E18               	movwf	(___ftge@ff2+1)^0,c
  3105   0018BC  5019               	movf	(___ftge@ff2+2)^0,w,c
  3106   0018BE  581C               	subwfb	(??___ftge+2)^0,w,c
  3107   0018C0  6E19               	movwf	(___ftge@ff2+2)^0,c
  3108   0018C2                     l4125:
  3109   0018C2  0E00               	movlw	0
  3110   0018C4  1A14               	xorwf	___ftge@ff1^0,f,c
  3111   0018C6  0E00               	movlw	0
  3112   0018C8  1A15               	xorwf	(___ftge@ff1+1)^0,f,c
  3113   0018CA  0E80               	movlw	128
  3114   0018CC  1A16               	xorwf	(___ftge@ff1+2)^0,f,c
  3115   0018CE  0E00               	movlw	0
  3116   0018D0  1A17               	xorwf	___ftge@ff2^0,f,c
  3117   0018D2  0E00               	movlw	0
  3118   0018D4  1A18               	xorwf	(___ftge@ff2+1)^0,f,c
  3119   0018D6  0E80               	movlw	128
  3120   0018D8  1A19               	xorwf	(___ftge@ff2+2)^0,f,c
  3121   0018DA  5017               	movf	___ftge@ff2^0,w,c
  3122   0018DC  5C14               	subwf	___ftge@ff1^0,w,c
  3123   0018DE  5018               	movf	(___ftge@ff2+1)^0,w,c
  3124   0018E0  5815               	subwfb	(___ftge@ff1+1)^0,w,c
  3125   0018E2  5019               	movf	(___ftge@ff2+2)^0,w,c
  3126   0018E4  5816               	subwfb	(___ftge@ff1+2)^0,w,c
  3127   0018E6  B0D8               	btfsc	status,0,c
  3128   0018E8  D002               	goto	l4131
  3129   0018EA  90D8               	bcf	status,0,c
  3130   0018EC  0012               	return	
  3131   0018EE                     l4131:
  3132   0018EE  80D8               	bsf	status,0,c
  3133   0018F0  0012               	return		;funcret
  3134   0018F2                     __end_of___ftge:
  3135                           	callstack 0
  3136                           
  3137 ;; *************** function ___ftdiv *****************
  3138 ;; Defined at:
  3139 ;;		line 54 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/ftdiv.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  f1              3   27[COMRAM] float 
  3142 ;;  f2              3   30[COMRAM] float 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  f3              3   37[COMRAM] float 
  3145 ;;  sign            1   41[COMRAM] unsigned char 
  3146 ;;  exp             1   40[COMRAM] unsigned char 
  3147 ;;  cntr            1   36[COMRAM] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  3   27[COMRAM] float 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3157 ;;      Params:         6       0       0       0       0       0       0       0       0
  3158 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3159 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3160 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3161 ;;Total ram usage:       15 bytes
  3162 ;; Hardware stack levels used: 1
  3163 ;; Hardware stack levels required when called: 8
  3164 ;; This function calls:
  3165 ;;		___ftpack
  3166 ;; This function is called by:
  3167 ;;		_Duty_motor
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text15
  3172   0011A2                     __ptext15:
  3173                           	callstack 0
  3174   0011A2                     ___ftdiv:
  3175                           	callstack 21
  3176                           
  3177                           ;incstack = 0
  3178   0011A2  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  3179   0011A6  6A23               	clrf	(??___ftdiv+1)^0,c
  3180   0011A8  6A24               	clrf	(??___ftdiv+2)^0,c
  3181   0011AA  341D               	rlcf	(___ftdiv@f1+1)^0,w,c
  3182   0011AC  3622               	rlcf	??___ftdiv^0,f,c
  3183   0011AE  E301               	bnc	u2961
  3184   0011B0  8023               	bsf	(??___ftdiv+1)^0,0,c
  3185   0011B2                     u2961:
  3186   0011B2  5022               	movf	??___ftdiv^0,w,c
  3187   0011B4  6E29               	movwf	___ftdiv@exp^0,c
  3188   0011B6  5029               	movf	___ftdiv@exp^0,w,c
  3189   0011B8  A4D8               	btfss	status,2,c
  3190   0011BA  D007               	goto	l3949
  3191   0011BC  0E00               	movlw	0
  3192   0011BE  6E1C               	movwf	?___ftdiv^0,c
  3193   0011C0  0E00               	movlw	0
  3194   0011C2  6E1D               	movwf	(?___ftdiv+1)^0,c
  3195   0011C4  0E00               	movlw	0
  3196   0011C6  6E1E               	movwf	(?___ftdiv+2)^0,c
  3197   0011C8  0012               	return	
  3198   0011CA                     l3949:
  3199   0011CA  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  3200   0011CE  6A23               	clrf	(??___ftdiv+1)^0,c
  3201   0011D0  6A24               	clrf	(??___ftdiv+2)^0,c
  3202   0011D2  3420               	rlcf	(___ftdiv@f2+1)^0,w,c
  3203   0011D4  3622               	rlcf	??___ftdiv^0,f,c
  3204   0011D6  E301               	bnc	u2981
  3205   0011D8  8023               	bsf	(??___ftdiv+1)^0,0,c
  3206   0011DA                     u2981:
  3207   0011DA  5022               	movf	??___ftdiv^0,w,c
  3208   0011DC  6E2A               	movwf	___ftdiv@sign^0,c
  3209   0011DE  502A               	movf	___ftdiv@sign^0,w,c
  3210   0011E0  A4D8               	btfss	status,2,c
  3211   0011E2  D007               	goto	l3955
  3212   0011E4  0E00               	movlw	0
  3213   0011E6  6E1C               	movwf	?___ftdiv^0,c
  3214   0011E8  0E00               	movlw	0
  3215   0011EA  6E1D               	movwf	(?___ftdiv+1)^0,c
  3216   0011EC  0E00               	movlw	0
  3217   0011EE  6E1E               	movwf	(?___ftdiv+2)^0,c
  3218   0011F0  0012               	return	
  3219   0011F2                     l3955:
  3220   0011F2  0E00               	movlw	0
  3221   0011F4  6E26               	movwf	___ftdiv@f3^0,c
  3222   0011F6  0E00               	movlw	0
  3223   0011F8  6E27               	movwf	(___ftdiv@f3+1)^0,c
  3224   0011FA  0E00               	movlw	0
  3225   0011FC  6E28               	movwf	(___ftdiv@f3+2)^0,c
  3226   0011FE  502A               	movf	___ftdiv@sign^0,w,c
  3227   001200  0F89               	addlw	137
  3228   001202  5E29               	subwf	___ftdiv@exp^0,f,c
  3229   001204  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  3230   001208  5021               	movf	(___ftdiv@f2+2)^0,w,c
  3231   00120A  1A2A               	xorwf	___ftdiv@sign^0,f,c
  3232   00120C  0E80               	movlw	128
  3233   00120E  162A               	andwf	___ftdiv@sign^0,f,c
  3234   001210  8E1D               	bsf	(___ftdiv@f1+1)^0,7,c
  3235   001212  0EFF               	movlw	255
  3236   001214  161C               	andwf	___ftdiv@f1^0,f,c
  3237   001216  0EFF               	movlw	255
  3238   001218  161D               	andwf	(___ftdiv@f1+1)^0,f,c
  3239   00121A  0E00               	movlw	0
  3240   00121C  161E               	andwf	(___ftdiv@f1+2)^0,f,c
  3241   00121E  8E20               	bsf	(___ftdiv@f2+1)^0,7,c
  3242   001220  0EFF               	movlw	255
  3243   001222  161F               	andwf	___ftdiv@f2^0,f,c
  3244   001224  0EFF               	movlw	255
  3245   001226  1620               	andwf	(___ftdiv@f2+1)^0,f,c
  3246   001228  0E00               	movlw	0
  3247   00122A  1621               	andwf	(___ftdiv@f2+2)^0,f,c
  3248   00122C  0E18               	movlw	24
  3249   00122E  6E25               	movwf	___ftdiv@cntr^0,c
  3250   001230                     l3975:
  3251   001230  90D8               	bcf	status,0,c
  3252   001232  3626               	rlcf	___ftdiv@f3^0,f,c
  3253   001234  3627               	rlcf	(___ftdiv@f3+1)^0,f,c
  3254   001236  3628               	rlcf	(___ftdiv@f3+2)^0,f,c
  3255   001238  501F               	movf	___ftdiv@f2^0,w,c
  3256   00123A  5C1C               	subwf	___ftdiv@f1^0,w,c
  3257   00123C  5020               	movf	(___ftdiv@f2+1)^0,w,c
  3258   00123E  581D               	subwfb	(___ftdiv@f1+1)^0,w,c
  3259   001240  5021               	movf	(___ftdiv@f2+2)^0,w,c
  3260   001242  581E               	subwfb	(___ftdiv@f1+2)^0,w,c
  3261   001244  A0D8               	btfss	status,0,c
  3262   001246  D007               	goto	l765
  3263   001248  501F               	movf	___ftdiv@f2^0,w,c
  3264   00124A  5E1C               	subwf	___ftdiv@f1^0,f,c
  3265   00124C  5020               	movf	(___ftdiv@f2+1)^0,w,c
  3266   00124E  5A1D               	subwfb	(___ftdiv@f1+1)^0,f,c
  3267   001250  5021               	movf	(___ftdiv@f2+2)^0,w,c
  3268   001252  5A1E               	subwfb	(___ftdiv@f1+2)^0,f,c
  3269   001254  8026               	bsf	___ftdiv@f3^0,0,c
  3270   001256                     l765:
  3271   001256  90D8               	bcf	status,0,c
  3272   001258  361C               	rlcf	___ftdiv@f1^0,f,c
  3273   00125A  361D               	rlcf	(___ftdiv@f1+1)^0,f,c
  3274   00125C  361E               	rlcf	(___ftdiv@f1+2)^0,f,c
  3275   00125E  2E25               	decfsz	___ftdiv@cntr^0,f,c
  3276   001260  D7E7               	goto	l3975
  3277   001262  C026  F014         	movff	___ftdiv@f3,___ftpack@arg
  3278   001266  C027  F015         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3279   00126A  C028  F016         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3280   00126E  C029  F017         	movff	___ftdiv@exp,___ftpack@exp
  3281   001272  C02A  F018         	movff	___ftdiv@sign,___ftpack@sign
  3282   001276  ECAD  F009         	call	___ftpack	;wreg free
  3283   00127A  C014  F01C         	movff	?___ftpack,?___ftdiv
  3284   00127E  C015  F01D         	movff	?___ftpack+1,?___ftdiv+1
  3285   001282  C016  F01E         	movff	?___ftpack+2,?___ftdiv+2
  3286   001286  0012               	return		;funcret
  3287   001288                     __end_of___ftdiv:
  3288                           	callstack 0
  3289                           
  3290 ;; *************** function ___ftpack *****************
  3291 ;; Defined at:
  3292 ;;		line 62 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/float.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  arg             3   19[COMRAM] unsigned um
  3295 ;;  exp             1   22[COMRAM] unsigned char 
  3296 ;;  sign            1   23[COMRAM] unsigned char 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  3   19[COMRAM] float 
  3301 ;; Registers used:
  3302 ;;		wreg, status,2, status,0
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3308 ;;      Params:         5       0       0       0       0       0       0       0       0
  3309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3310 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3311 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3312 ;;Total ram usage:        8 bytes
  3313 ;; Hardware stack levels used: 1
  3314 ;; Hardware stack levels required when called: 7
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		___ftdiv
  3319 ;;		___ftmul
  3320 ;;		___lwtoft
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text16
  3325   00135A                     __ptext16:
  3326                           	callstack 0
  3327   00135A                     ___ftpack:
  3328                           	callstack 22
  3329                           
  3330                           ;incstack = 0
  3331   00135A  5017               	movf	___ftpack@exp^0,w,c
  3332   00135C  B4D8               	btfsc	status,2,c
  3333   00135E  D005               	goto	u2890
  3334   001360  5014               	movf	___ftpack@arg^0,w,c
  3335   001362  1015               	iorwf	(___ftpack@arg+1)^0,w,c
  3336   001364  1016               	iorwf	(___ftpack@arg+2)^0,w,c
  3337   001366  A4D8               	btfss	status,2,c
  3338   001368  D00C               	goto	l3853
  3339   00136A                     u2890:
  3340   00136A  0E00               	movlw	0
  3341   00136C  6E14               	movwf	?___ftpack^0,c
  3342   00136E  0E00               	movlw	0
  3343   001370  6E15               	movwf	(?___ftpack+1)^0,c
  3344   001372  0E00               	movlw	0
  3345   001374  6E16               	movwf	(?___ftpack+2)^0,c
  3346   001376  0012               	return	
  3347   001378                     l3851:
  3348   001378  2A17               	incf	___ftpack@exp^0,f,c
  3349   00137A  90D8               	bcf	status,0,c
  3350   00137C  3216               	rrcf	(___ftpack@arg+2)^0,f,c
  3351   00137E  3215               	rrcf	(___ftpack@arg+1)^0,f,c
  3352   001380  3214               	rrcf	___ftpack@arg^0,f,c
  3353   001382                     l3853:
  3354   001382  0E00               	movlw	0
  3355   001384  1414               	andwf	___ftpack@arg^0,w,c
  3356   001386  6E19               	movwf	??___ftpack^0,c
  3357   001388  0E00               	movlw	0
  3358   00138A  1415               	andwf	(___ftpack@arg+1)^0,w,c
  3359   00138C  6E1A               	movwf	(??___ftpack+1)^0,c
  3360   00138E  0EFE               	movlw	254
  3361   001390  1416               	andwf	(___ftpack@arg+2)^0,w,c
  3362   001392  6E1B               	movwf	(??___ftpack+2)^0,c
  3363   001394  5019               	movf	??___ftpack^0,w,c
  3364   001396  101A               	iorwf	(??___ftpack+1)^0,w,c
  3365   001398  101B               	iorwf	(??___ftpack+2)^0,w,c
  3366   00139A  B4D8               	btfsc	status,2,c
  3367   00139C  D00C               	goto	l3859
  3368   00139E  D7EC               	goto	l3851
  3369   0013A0                     l3855:
  3370   0013A0  2A17               	incf	___ftpack@exp^0,f,c
  3371   0013A2  0E01               	movlw	1
  3372   0013A4  2614               	addwf	___ftpack@arg^0,f,c
  3373   0013A6  0E00               	movlw	0
  3374   0013A8  2215               	addwfc	(___ftpack@arg+1)^0,f,c
  3375   0013AA  0E00               	movlw	0
  3376   0013AC  2216               	addwfc	(___ftpack@arg+2)^0,f,c
  3377   0013AE  90D8               	bcf	status,0,c
  3378   0013B0  3216               	rrcf	(___ftpack@arg+2)^0,f,c
  3379   0013B2  3215               	rrcf	(___ftpack@arg+1)^0,f,c
  3380   0013B4  3214               	rrcf	___ftpack@arg^0,f,c
  3381   0013B6                     l3859:
  3382   0013B6  0E00               	movlw	0
  3383   0013B8  1414               	andwf	___ftpack@arg^0,w,c
  3384   0013BA  6E19               	movwf	??___ftpack^0,c
  3385   0013BC  0E00               	movlw	0
  3386   0013BE  1415               	andwf	(___ftpack@arg+1)^0,w,c
  3387   0013C0  6E1A               	movwf	(??___ftpack+1)^0,c
  3388   0013C2  0EFF               	movlw	255
  3389   0013C4  1416               	andwf	(___ftpack@arg+2)^0,w,c
  3390   0013C6  6E1B               	movwf	(??___ftpack+2)^0,c
  3391   0013C8  5019               	movf	??___ftpack^0,w,c
  3392   0013CA  101A               	iorwf	(??___ftpack+1)^0,w,c
  3393   0013CC  101B               	iorwf	(??___ftpack+2)^0,w,c
  3394   0013CE  B4D8               	btfsc	status,2,c
  3395   0013D0  D006               	goto	l3863
  3396   0013D2  D7E6               	goto	l3855
  3397   0013D4                     l3861:
  3398   0013D4  0617               	decf	___ftpack@exp^0,f,c
  3399   0013D6  90D8               	bcf	status,0,c
  3400   0013D8  3614               	rlcf	___ftpack@arg^0,f,c
  3401   0013DA  3615               	rlcf	(___ftpack@arg+1)^0,f,c
  3402   0013DC  3616               	rlcf	(___ftpack@arg+2)^0,f,c
  3403   0013DE                     l3863:
  3404   0013DE  BE15               	btfsc	(___ftpack@arg+1)^0,7,c
  3405   0013E0  D003               	goto	u2930
  3406   0013E2  0E02               	movlw	2
  3407   0013E4  6017               	cpfslt	___ftpack@exp^0,c
  3408   0013E6  D7F6               	goto	l3861
  3409   0013E8                     u2930:
  3410   0013E8  A017               	btfss	___ftpack@exp^0,0,c
  3411   0013EA  9E15               	bcf	(___ftpack@arg+1)^0,7,c
  3412   0013EC  90D8               	bcf	status,0,c
  3413   0013EE  3217               	rrcf	___ftpack@exp^0,f,c
  3414   0013F0  5017               	movf	___ftpack@exp^0,w,c
  3415   0013F2  1216               	iorwf	(___ftpack@arg+2)^0,f,c
  3416   0013F4  5018               	movf	___ftpack@sign^0,w,c
  3417   0013F6  A4D8               	btfss	status,2,c
  3418   0013F8  8E16               	bsf	(___ftpack@arg+2)^0,7,c
  3419   0013FA  C014  F014         	movff	___ftpack@arg,?___ftpack
  3420   0013FE  C015  F015         	movff	___ftpack@arg+1,?___ftpack+1
  3421   001402  C016  F016         	movff	___ftpack@arg+2,?___ftpack+2
  3422   001406  0012               	return		;funcret
  3423   001408                     __end_of___ftpack:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function _Conversion *****************
  3427 ;; Defined at:
  3428 ;;		line 317 in file "Lab4.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  canal           1    wreg     unsigned char 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  canal           1   22[COMRAM] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  2   19[COMRAM] unsigned int 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3442 ;;      Params:         2       0       0       0       0       0       0       0       0
  3443 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3444 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3445 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3446 ;;Total ram usage:        4 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 7
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_main
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text17
  3457   001F30                     __ptext17:
  3458                           	callstack 0
  3459   001F30                     _Conversion:
  3460                           	callstack 23
  3461                           
  3462                           ;incstack = 0
  3463                           ;Conversion@canal stored from wreg
  3464   001F30  6E17               	movwf	Conversion@canal^0,c
  3465                           
  3466                           ;Lab4.c: 318: ADCON0=(ADCON0 & 0b00000011) | (canal<<2);
  3467   001F32  C017  F016         	movff	Conversion@canal,??_Conversion
  3468   001F36  90D8               	bcf	status,0,c
  3469   001F38  3616               	rlcf	??_Conversion^0,f,c
  3470   001F3A  90D8               	bcf	status,0,c
  3471   001F3C  3616               	rlcf	??_Conversion^0,f,c
  3472   001F3E  50C2               	movf	194,w,c	;volatile
  3473   001F40  0B03               	andlw	3
  3474   001F42  1016               	iorwf	??_Conversion^0,w,c
  3475   001F44  6EC2               	movwf	194,c	;volatile
  3476                           
  3477                           ;Lab4.c: 319: GO=1;
  3478   001F46  82C2               	bsf	4034,1,c	;volatile
  3479   001F48                     l340:
  3480   001F48  B2C2               	btfsc	4034,1,c	;volatile
  3481   001F4A  D7FE               	goto	l340
  3482                           
  3483                           ;Lab4.c: 321: return ADRES;
  3484   001F4C  CFC3 F014          	movff	4035,?_Conversion	;volatile
  3485   001F50  CFC4 F015          	movff	4036,?_Conversion+1	;volatile
  3486   001F54  0012               	return		;funcret
  3487   001F56                     __end_of_Conversion:
  3488                           	callstack 0
  3489                           
  3490 ;; *************** function _ContarReal *****************
  3491 ;; Defined at:
  3492 ;;		line 260 in file "Lab4.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 3F/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3506 ;;      Params:         0       0       0       0       0       0       0       0       0
  3507 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3508 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3509 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3510 ;;Total ram usage:        2 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 11
  3513 ;; This function calls:
  3514 ;;		___awdiv
  3515 ;;		___awmod
  3516 ;;		___wmul
  3517 ;;		_escenario2
  3518 ;;		_escenario3
  3519 ;;		_vaciar
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text18
  3526   000EB4                     __ptext18:
  3527                           	callstack 0
  3528   000EB4                     _ContarReal:
  3529                           	callstack 19
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;Lab4.c: 261: cantidad = (decena * 10) + unidad;
  3533                           
  3534                           ;incstack = 0
  3535   000EB4  C045  F014         	movff	_decena,___wmul@multiplier
  3536   000EB8  C046  F015         	movff	_decena+1,___wmul@multiplier+1
  3537   000EBC  0E00               	movlw	0
  3538   000EBE  6E17               	movwf	(___wmul@multiplicand+1)^0,c
  3539   000EC0  0E0A               	movlw	10
  3540   000EC2  6E16               	movwf	___wmul@multiplicand^0,c
  3541   000EC4  ECAB  F00F         	call	___wmul	;wreg free
  3542   000EC8  5043               	movf	_unidad^0,w,c
  3543   000ECA  2414               	addwf	?___wmul^0,w,c
  3544   000ECC  6E41               	movwf	_cantidad^0,c
  3545   000ECE  5044               	movf	(_unidad+1)^0,w,c
  3546   000ED0  2015               	addwfc	(?___wmul+1)^0,w,c
  3547   000ED2  6E42               	movwf	(_cantidad+1)^0,c
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;Lab4.c: 262: contador++;
  3551   000ED4  4A3F               	infsnz	_contador^0,f,c
  3552   000ED6  2A40               	incf	(_contador+1)^0,f,c
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;Lab4.c: 263: cantidadResta = cantidad - contador +1;
  3556   000ED8  503F               	movf	_contador^0,w,c
  3557   000EDA  5C41               	subwf	_cantidad^0,w,c
  3558   000EDC  6E1C               	movwf	??_ContarReal^0,c
  3559   000EDE  5040               	movf	(_contador+1)^0,w,c
  3560   000EE0  5842               	subwfb	(_cantidad+1)^0,w,c
  3561   000EE2  6E1D               	movwf	(??_ContarReal+1)^0,c
  3562   000EE4  0E01               	movlw	1
  3563   000EE6  241C               	addwf	??_ContarReal^0,w,c
  3564   000EE8  6E3D               	movwf	_cantidadResta^0,c
  3565   000EEA  0E00               	movlw	0
  3566   000EEC  201D               	addwfc	(??_ContarReal+1)^0,w,c
  3567   000EEE  6E3E               	movwf	(_cantidadResta+1)^0,c
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;Lab4.c: 264: cantidadRestaUnidad =0b00110000 + cantidadResta%10;
  3571   000EF0  C03D  F014         	movff	_cantidadResta,___awmod@dividend
  3572   000EF4  C03E  F015         	movff	_cantidadResta+1,___awmod@dividend+1
  3573   000EF8  0E00               	movlw	0
  3574   000EFA  6E17               	movwf	(___awmod@divisor+1)^0,c
  3575   000EFC  0E0A               	movlw	10
  3576   000EFE  6E16               	movwf	___awmod@divisor^0,c
  3577   000F00  EC79  F00C         	call	___awmod	;wreg free
  3578   000F04  0E30               	movlw	48
  3579   000F06  2414               	addwf	?___awmod^0,w,c
  3580   000F08  6E3B               	movwf	_cantidadRestaUnidad^0,c
  3581   000F0A  0E00               	movlw	0
  3582   000F0C  2015               	addwfc	(?___awmod+1)^0,w,c
  3583   000F0E  6E3C               	movwf	(_cantidadRestaUnidad+1)^0,c
  3584                           
  3585                           ;Lab4.c: 265: cantidadRestaDecena =0b00110000 + cantidadResta/10;
  3586   000F10  C03D  F014         	movff	_cantidadResta,___awdiv@dividend
  3587   000F14  C03E  F015         	movff	_cantidadResta+1,___awdiv@dividend+1
  3588   000F18  0E00               	movlw	0
  3589   000F1A  6E17               	movwf	(___awdiv@divisor+1)^0,c
  3590   000F1C  0E0A               	movlw	10
  3591   000F1E  6E16               	movwf	___awdiv@divisor^0,c
  3592   000F20  EC7D  F00B         	call	___awdiv	;wreg free
  3593   000F24  0E30               	movlw	48
  3594   000F26  2414               	addwf	?___awdiv^0,w,c
  3595   000F28  6E39               	movwf	_cantidadRestaDecena^0,c
  3596   000F2A  0E00               	movlw	0
  3597   000F2C  2015               	addwfc	(?___awdiv+1)^0,w,c
  3598   000F2E  6E3A               	movwf	(_cantidadRestaDecena+1)^0,c
  3599                           
  3600                           ;Lab4.c: 266: contadorUnidad = (contador-1)%10;
  3601   000F30  0EFF               	movlw	255
  3602   000F32  243F               	addwf	_contador^0,w,c
  3603   000F34  6E14               	movwf	___awmod@dividend^0,c
  3604   000F36  0EFF               	movlw	255
  3605   000F38  2040               	addwfc	(_contador+1)^0,w,c
  3606   000F3A  6E15               	movwf	(___awmod@dividend+1)^0,c
  3607   000F3C  0E00               	movlw	0
  3608   000F3E  6E17               	movwf	(___awmod@divisor+1)^0,c
  3609   000F40  0E0A               	movlw	10
  3610   000F42  6E16               	movwf	___awmod@divisor^0,c
  3611   000F44  EC79  F00C         	call	___awmod	;wreg free
  3612   000F48  C014  F037         	movff	?___awmod,_contadorUnidad
  3613   000F4C  C015  F038         	movff	?___awmod+1,_contadorUnidad+1
  3614                           
  3615                           ;Lab4.c: 267: contadorDecena = (contador-1)/10;
  3616   000F50  0EFF               	movlw	255
  3617   000F52  243F               	addwf	_contador^0,w,c
  3618   000F54  6E14               	movwf	___awdiv@dividend^0,c
  3619   000F56  0EFF               	movlw	255
  3620   000F58  2040               	addwfc	(_contador+1)^0,w,c
  3621   000F5A  6E15               	movwf	(___awdiv@dividend+1)^0,c
  3622   000F5C  0E00               	movlw	0
  3623   000F5E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  3624   000F60  0E0A               	movlw	10
  3625   000F62  6E16               	movwf	___awdiv@divisor^0,c
  3626   000F64  EC7D  F00B         	call	___awdiv	;wreg free
  3627   000F68  C014  F035         	movff	?___awdiv,_contadorDecena
  3628   000F6C  C015  F036         	movff	?___awdiv+1,_contadorDecena+1
  3629                           
  3630                           ;Lab4.c: 269: LATD = contadorUnidad;
  3631   000F70  C037  FF8C         	movff	_contadorUnidad,3980	;volatile
  3632                           
  3633                           ;Lab4.c: 270: LATE = color[contadorDecena];
  3634   000F74  5035               	movf	_contadorDecena^0,w,c
  3635   000F76  0D02               	mullw	2
  3636   000F78  50F3               	movf	243,w,c
  3637   000F7A  0F60               	addlw	low _color
  3638   000F7C  6ED9               	movwf	fsr2l,c
  3639   000F7E  6ADA               	clrf	fsr2h,c
  3640   000F80  50DF               	movf	indf2,w,c
  3641   000F82  6E8D               	movwf	141,c	;volatile
  3642                           
  3643                           ;Lab4.c: 271: escenario2();
  3644   000F84  ECF1  F00A         	call	_escenario2	;wreg free
  3645                           
  3646                           ;Lab4.c: 272: _delay((unsigned long)((1000)*(1000000/4000.0)));
  3647   000F88  0E02               	movlw	2
  3648   000F8A  6E1D               	movwf	(??_ContarReal+1)^0,c
  3649   000F8C  0E45               	movlw	69
  3650   000F8E  6E1C               	movwf	??_ContarReal^0,c
  3651   000F90  0EAA               	movlw	170
  3652   000F92                     u3637:
  3653   000F92  2EE8               	decfsz	wreg,f,c
  3654   000F94  D7FE               	bra	u3637
  3655   000F96  2E1C               	decfsz	??_ContarReal^0,f,c
  3656   000F98  D7FC               	bra	u3637
  3657   000F9A  2E1D               	decfsz	(??_ContarReal+1)^0,f,c
  3658   000F9C  D7FA               	bra	u3637
  3659                           
  3660                           ;Lab4.c: 273: if(!cantidadResta) {
  3661   000F9E  503D               	movf	_cantidadResta^0,w,c
  3662   000FA0  103E               	iorwf	(_cantidadResta+1)^0,w,c
  3663   000FA2  A4D8               	btfss	status,2,c
  3664   000FA4  0012               	return	
  3665                           
  3666                           ;Lab4.c: 274: vaciar();
  3667   000FA6  EC00  F00E         	call	_vaciar	;wreg free
  3668                           
  3669                           ;Lab4.c: 275: escenario3();
  3670   000FAA  ECD9  F00E         	call	_escenario3	;wreg free
  3671   000FAE  0012               	return		;funcret
  3672   000FB0                     __end_of_ContarReal:
  3673                           	callstack 0
  3674                           
  3675 ;; *************** function _vaciar *****************
  3676 ;; Defined at:
  3677 ;;		line 280 in file "Lab4.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;		None
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;		None
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      void 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3691 ;;      Params:         0       0       0       0       0       0       0       0       0
  3692 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3694 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3695 ;;Total ram usage:        0 bytes
  3696 ;; Hardware stack levels used: 1
  3697 ;; Hardware stack levels required when called: 7
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_ContarReal
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text19
  3706   001C00                     __ptext19:
  3707                           	callstack 0
  3708   001C00                     _vaciar:
  3709                           	callstack 22
  3710                           
  3711                           ;Lab4.c: 281: unidad = 0 ;
  3712                           
  3713                           ;incstack = 0
  3714   001C00  0E00               	movlw	0
  3715   001C02  6E44               	movwf	(_unidad+1)^0,c
  3716   001C04  0E00               	movlw	0
  3717   001C06  6E43               	movwf	_unidad^0,c
  3718                           
  3719                           ;Lab4.c: 282: unidad = 0;
  3720   001C08  0E00               	movlw	0
  3721   001C0A  6E44               	movwf	(_unidad+1)^0,c
  3722   001C0C  0E00               	movlw	0
  3723   001C0E  6E43               	movwf	_unidad^0,c
  3724                           
  3725                           ;Lab4.c: 283: cantidadRestaUnidad =0b00110000 + unidad;
  3726   001C10  0E30               	movlw	48
  3727   001C12  2443               	addwf	_unidad^0,w,c
  3728   001C14  6E3B               	movwf	_cantidadRestaUnidad^0,c
  3729   001C16  0E00               	movlw	0
  3730   001C18  2044               	addwfc	(_unidad+1)^0,w,c
  3731   001C1A  6E3C               	movwf	(_cantidadRestaUnidad+1)^0,c
  3732                           
  3733                           ;Lab4.c: 284: cantidadRestaDecena =0b00110000 + unidad;
  3734   001C1C  0E30               	movlw	48
  3735   001C1E  2443               	addwf	_unidad^0,w,c
  3736   001C20  6E39               	movwf	_cantidadRestaDecena^0,c
  3737   001C22  0E00               	movlw	0
  3738   001C24  2044               	addwfc	(_unidad+1)^0,w,c
  3739   001C26  6E3A               	movwf	(_cantidadRestaDecena+1)^0,c
  3740                           
  3741                           ;Lab4.c: 285: LATD = 0;
  3742   001C28  0E00               	movlw	0
  3743   001C2A  6E8C               	movwf	140,c	;volatile
  3744                           
  3745                           ;Lab4.c: 286: LATE = color[0];
  3746   001C2C  C060  FF8D         	movff	_color,3981	;volatile
  3747                           
  3748                           ;Lab4.c: 287: contador =0;
  3749   001C30  0E00               	movlw	0
  3750   001C32  6E40               	movwf	(_contador+1)^0,c
  3751   001C34  0E00               	movlw	0
  3752   001C36  6E3F               	movwf	_contador^0,c
  3753                           
  3754                           ;Lab4.c: 288: digito = 1;
  3755   001C38  0E00               	movlw	0
  3756   001C3A  6E49               	movwf	(_digito+1)^0,c
  3757   001C3C  0E01               	movlw	1
  3758   001C3E  6E48               	movwf	_digito^0,c
  3759   001C40  0012               	return		;funcret
  3760   001C42                     __end_of_vaciar:
  3761                           	callstack 0
  3762                           
  3763 ;; *************** function _escenario3 *****************
  3764 ;; Defined at:
  3765 ;;		line 200 in file "Lab4.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3779 ;;      Params:         0       0       0       0       0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used: 1
  3785 ;; Hardware stack levels required when called: 10
  3786 ;; This function calls:
  3787 ;;		_Lcd_Clear
  3788 ;;		_Lcd_NoBlink
  3789 ;;		_Lcd_Set_Cursor
  3790 ;;		_Lcd_Write_String
  3791 ;; This function is called by:
  3792 ;;		_ContarReal
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text20
  3797   001DB2                     __ptext20:
  3798                           	callstack 0
  3799   001DB2                     _escenario3:
  3800                           	callstack 19
  3801                           
  3802                           ;Lab4.c: 201: menu=3;
  3803                           
  3804                           ;incstack = 0
  3805   001DB2  0E00               	movlw	0
  3806   001DB4  6E4B               	movwf	(_menu+1)^0,c
  3807   001DB6  0E03               	movlw	3
  3808   001DB8  6E4A               	movwf	_menu^0,c
  3809                           
  3810                           ;Lab4.c: 202: Lcd_Clear();
  3811   001DBA  EC17  F010         	call	_Lcd_Clear	;wreg free
  3812                           
  3813                           ;Lab4.c: 203: Lcd_NoBlink();
  3814   001DBE  EC10  F010         	call	_Lcd_NoBlink	;wreg free
  3815                           
  3816                           ;Lab4.c: 204: Lcd_Set_Cursor(1, 1);
  3817   001DC2  0E01               	movlw	1
  3818   001DC4  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  3819   001DC6  0E01               	movlw	1
  3820   001DC8  EC04  F00A         	call	_Lcd_Set_Cursor
  3821                           
  3822                           ;Lab4.c: 205: Lcd_Write_String("Cuenta finalizada");
  3823   001DCC  0E33               	movlw	low STR_11
  3824   001DCE  6E18               	movwf	Lcd_Write_String@a^0,c
  3825   001DD0  EC63  F00E         	call	_Lcd_Write_String	;wreg free
  3826                           
  3827                           ;Lab4.c: 206: Lcd_Set_Cursor(2, 13);
  3828   001DD4  0E0D               	movlw	13
  3829   001DD6  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  3830   001DD8  0E02               	movlw	2
  3831   001DDA  EC04  F00A         	call	_Lcd_Set_Cursor
  3832                           
  3833                           ;Lab4.c: 207: Lcd_Write_String("A:OK");
  3834   001DDE  0EC0               	movlw	low STR_12
  3835   001DE0  6E18               	movwf	Lcd_Write_String@a^0,c
  3836   001DE2  EC63  F00E         	call	_Lcd_Write_String	;wreg free
  3837   001DE6  0012               	return		;funcret
  3838   001DE8                     __end_of_escenario3:
  3839                           	callstack 0
  3840                           
  3841 ;; *************** function _escenario2 *****************
  3842 ;; Defined at:
  3843 ;;		line 178 in file "Lab4.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      void 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3857 ;;      Params:         0       0       0       0       0       0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3860 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3861 ;;Total ram usage:        0 bytes
  3862 ;; Hardware stack levels used: 1
  3863 ;; Hardware stack levels required when called: 10
  3864 ;; This function calls:
  3865 ;;		_Lcd_Clear
  3866 ;;		_Lcd_NoBlink
  3867 ;;		_Lcd_Set_Cursor
  3868 ;;		_Lcd_Write_Char
  3869 ;;		_Lcd_Write_String
  3870 ;; This function is called by:
  3871 ;;		_ContarReal
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text21
  3876   0015E2                     __ptext21:
  3877                           	callstack 0
  3878   0015E2                     _escenario2:
  3879                           	callstack 19
  3880                           
  3881                           ;Lab4.c: 179: menu=2;
  3882                           
  3883                           ;incstack = 0
  3884   0015E2  0E00               	movlw	0
  3885   0015E4  6E4B               	movwf	(_menu+1)^0,c
  3886   0015E6  0E02               	movlw	2
  3887   0015E8  6E4A               	movwf	_menu^0,c
  3888                           
  3889                           ;Lab4.c: 180: mostrar = 1;
  3890   0015EA  0E00               	movlw	0
  3891   0015EC  0100               	movlb	0	; () banked
  3892   0015EE  6F9C               	movwf	(_mostrar+1)& (0+255),b
  3893   0015F0  0E01               	movlw	1
  3894   0015F2  6F9B               	movwf	_mostrar& (0+255),b
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;Lab4.c: 181: Lcd_Clear();
  3898   0015F4  EC17  F010         	call	_Lcd_Clear	;wreg free
  3899                           
  3900                           ;Lab4.c: 182: Lcd_NoBlink();
  3901   0015F8  EC10  F010         	call	_Lcd_NoBlink	;wreg free
  3902                           
  3903                           ;Lab4.c: 183: Lcd_Set_Cursor(1, 1);
  3904   0015FC  0E01               	movlw	1
  3905   0015FE  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  3906   001600  0E01               	movlw	1
  3907   001602  EC04  F00A         	call	_Lcd_Set_Cursor
  3908                           
  3909                           ;Lab4.c: 184: Lcd_Write_String("Faltante:");
  3910   001606  0E9A               	movlw	low STR_7
  3911   001608  6E18               	movwf	Lcd_Write_String@a^0,c
  3912   00160A  EC63  F00E         	call	_Lcd_Write_String	;wreg free
  3913                           
  3914                           ;Lab4.c: 185: Lcd_Write_Char(cantidadRestaDecena);
  3915   00160E  5039               	movf	_cantidadRestaDecena^0,w,c
  3916   001610  ECA1  F00E         	call	_Lcd_Write_Char
  3917                           
  3918                           ;Lab4.c: 186: Lcd_Write_Char(cantidadRestaUnidad);
  3919   001614  503B               	movf	_cantidadRestaUnidad^0,w,c
  3920   001616  ECA1  F00E         	call	_Lcd_Write_Char
  3921                           
  3922                           ;Lab4.c: 187: Lcd_Set_Cursor(1, 14);
  3923   00161A  0E0E               	movlw	14
  3924   00161C  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  3925   00161E  0E01               	movlw	1
  3926   001620  EC04  F00A         	call	_Lcd_Set_Cursor
  3927                           
  3928                           ;Lab4.c: 188: Lcd_Write_String("C=");
  3929   001624  0EC9               	movlw	low STR_8
  3930   001626  6E18               	movwf	Lcd_Write_String@a^0,c
  3931   001628  EC63  F00E         	call	_Lcd_Write_String	;wreg free
  3932                           
  3933                           ;Lab4.c: 189: Lcd_Write_Char(4);
  3934   00162C  0E04               	movlw	4
  3935   00162E  ECA1  F00E         	call	_Lcd_Write_Char
  3936                           
  3937                           ;Lab4.c: 190: Lcd_Set_Cursor(2, 1);
  3938   001632  0E01               	movlw	1
  3939   001634  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  3940   001636  0E02               	movlw	2
  3941   001638  EC04  F00A         	call	_Lcd_Set_Cursor
  3942                           
  3943                           ;Lab4.c: 191: Lcd_Write_String("Objetivo:");
  3944   00163C  0EA4               	movlw	low STR_9
  3945   00163E  6E18               	movwf	Lcd_Write_String@a^0,c
  3946   001640  EC63  F00E         	call	_Lcd_Write_String	;wreg free
  3947                           
  3948                           ;Lab4.c: 192: Lcd_Write_Char(0b00110000 + decena);
  3949   001644  5045               	movf	_decena^0,w,c
  3950   001646  0F30               	addlw	48
  3951   001648  ECA1  F00E         	call	_Lcd_Write_Char
  3952                           
  3953                           ;Lab4.c: 193: Lcd_Write_Char(0b00110000 + unidad);
  3954   00164C  5043               	movf	_unidad^0,w,c
  3955   00164E  0F30               	addlw	48
  3956   001650  ECA1  F00E         	call	_Lcd_Write_Char
  3957                           
  3958                           ;Lab4.c: 194: Lcd_Set_Cursor(2, 14);
  3959   001654  0E0E               	movlw	14
  3960   001656  6E16               	movwf	Lcd_Set_Cursor@b^0,c
  3961   001658  0E02               	movlw	2
  3962   00165A  EC04  F00A         	call	_Lcd_Set_Cursor
  3963                           
  3964                           ;Lab4.c: 195: Lcd_Write_String("#=X");
  3965   00165E  0EC5               	movlw	low STR_10
  3966   001660  6E18               	movwf	Lcd_Write_String@a^0,c
  3967   001662  EC63  F00E         	call	_Lcd_Write_String	;wreg free
  3968                           
  3969                           ;Lab4.c: 196: Lcd_Write_Char(3);
  3970   001666  0E03               	movlw	3
  3971   001668  ECA1  F00E         	call	_Lcd_Write_Char
  3972   00166C  0012               	return		;funcret
  3973   00166E                     __end_of_escenario2:
  3974                           	callstack 0
  3975                           
  3976 ;; *************** function _Lcd_Write_String *****************
  3977 ;; Defined at:
  3978 ;;		line 105 in file "lcd.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  a               1   23[COMRAM] PTR const unsigned char 
  3981 ;;		 -> STR_14(12), STR_13(10), STR_12(5), STR_11(18), 
  3982 ;;		 -> STR_10(4), STR_9(10), STR_8(3), STR_7(10), 
  3983 ;;		 -> STR_6(8), STR_5(17), STR_3(12), STR_2(11), 
  3984 ;;		 -> STR_1(15), 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  i               2   25[COMRAM] int 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3996 ;;      Params:         1       0       0       0       0       0       0       0       0
  3997 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3998 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3999 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4000 ;;Total ram usage:        4 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; Hardware stack levels required when called: 9
  4003 ;; This function calls:
  4004 ;;		_Lcd_Write_Char
  4005 ;; This function is called by:
  4006 ;;		_main
  4007 ;;		_escenario1
  4008 ;;		_escenario2
  4009 ;;		_escenario3
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text22
  4014   001CC6                     __ptext22:
  4015                           	callstack 0
  4016   001CC6                     _Lcd_Write_String:
  4017                           	callstack 20
  4018                           
  4019                           ;lcd.c: 107: int i;;lcd.c: 108: for(i=0;a[i]!='\0';i++)
  4020                           
  4021                           ;incstack = 0
  4022   001CC6  0E00               	movlw	0
  4023   001CC8  6E1B               	movwf	(Lcd_Write_String@i+1)^0,c
  4024   001CCA  0E00               	movlw	0
  4025   001CCC  6E1A               	movwf	Lcd_Write_String@i^0,c
  4026   001CCE  D00D               	goto	l3839
  4027   001CD0                     l3835:
  4028                           
  4029                           ;lcd.c: 109: Lcd_Write_Char(a[i]);
  4030   001CD0  5018               	movf	Lcd_Write_String@a^0,w,c
  4031   001CD2  241A               	addwf	Lcd_Write_String@i^0,w,c
  4032   001CD4  6E19               	movwf	??_Lcd_Write_String^0,c
  4033   001CD6  C019  FFF6         	movff	??_Lcd_Write_String,tblptrl
  4034   001CDA                     	if	1	;There is more than 1 active tblptr byte
  4035   001CDA  0E08               	movlw	high __smallconst
  4036   001CDC  6EF7               	movwf	tblptrh,c
  4037   001CDE                     	endif
  4038   001CDE                     	if	0	;tblptru may be non-zero
  4039   001CDE                     	endif
  4040   001CDE                     	if	0	;tblptru may be non-zero
  4041   001CDE                     	endif
  4042   001CDE  0008               	tblrd		*
  4043   001CE0  50F5               	movf	tablat,w,c
  4044   001CE2  ECA1  F00E         	call	_Lcd_Write_Char
  4045   001CE6  4A1A               	infsnz	Lcd_Write_String@i^0,f,c
  4046   001CE8  2A1B               	incf	(Lcd_Write_String@i+1)^0,f,c
  4047   001CEA                     l3839:
  4048   001CEA  5018               	movf	Lcd_Write_String@a^0,w,c
  4049   001CEC  241A               	addwf	Lcd_Write_String@i^0,w,c
  4050   001CEE  6E19               	movwf	??_Lcd_Write_String^0,c
  4051   001CF0  C019  FFF6         	movff	??_Lcd_Write_String,tblptrl
  4052   001CF4                     	if	1	;There is more than 1 active tblptr byte
  4053   001CF4  0E08               	movlw	high __smallconst
  4054   001CF6  6EF7               	movwf	tblptrh,c
  4055   001CF8                     	endif
  4056   001CF8                     	if	0	;tblptru may be non-zero
  4057   001CF8                     	endif
  4058   001CF8                     	if	0	;tblptru may be non-zero
  4059   001CF8                     	endif
  4060   001CF8  0008               	tblrd		*
  4061   001CFA  50F5               	movf	tablat,w,c
  4062   001CFC  0900               	iorlw	0
  4063   001CFE  B4D8               	btfsc	status,2,c
  4064   001D00  0012               	return	
  4065   001D02  D7E6               	goto	l3835
  4066   001D04                     __end_of_Lcd_Write_String:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _Lcd_Write_Char *****************
  4070 ;; Defined at:
  4071 ;;		line 89 in file "lcd.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  a               1    wreg     unsigned char 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  a               1   22[COMRAM] unsigned char 
  4076 ;;  y               1   21[COMRAM] unsigned char 
  4077 ;;  temp            1   20[COMRAM] unsigned char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4087 ;;      Params:         0       0       0       0       0       0       0       0       0
  4088 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4090 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4091 ;;Total ram usage:        3 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; Hardware stack levels required when called: 8
  4094 ;; This function calls:
  4095 ;;		_Lcd_Port
  4096 ;; This function is called by:
  4097 ;;		_Lcd_Write_String
  4098 ;;		_Lcd_CGRAM_CreateChar
  4099 ;;		_main
  4100 ;;		_escenario1
  4101 ;;		_escenario2
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text23
  4106   001D42                     __ptext23:
  4107                           	callstack 0
  4108   001D42                     _Lcd_Write_Char:
  4109                           	callstack 20
  4110                           
  4111                           ;incstack = 0
  4112                           ;Lcd_Write_Char@a stored from wreg
  4113   001D42  6E17               	movwf	Lcd_Write_Char@a^0,c
  4114                           
  4115                           ;lcd.c: 91: char temp,y;;lcd.c: 92: temp = a&0x0F;
  4116   001D44  5017               	movf	Lcd_Write_Char@a^0,w,c
  4117   001D46  0B0F               	andlw	15
  4118   001D48  6E15               	movwf	Lcd_Write_Char@temp^0,c
  4119                           
  4120                           ;lcd.c: 93: y = a&0xF0;
  4121   001D4A  5017               	movf	Lcd_Write_Char@a^0,w,c
  4122   001D4C  0BF0               	andlw	240
  4123   001D4E  6E16               	movwf	Lcd_Write_Char@y^0,c
  4124                           
  4125                           ;lcd.c: 94: LATAbits.LA3 = 1;
  4126   001D50  8689               	bsf	137,3,c	;volatile
  4127                           
  4128                           ;lcd.c: 95: Lcd_Port(y>>4);
  4129   001D52  3816               	swapf	Lcd_Write_Char@y^0,w,c
  4130   001D54  0B0F               	andlw	15
  4131   001D56  EC43  F00F         	call	_Lcd_Port
  4132                           
  4133                           ;lcd.c: 96: LATAbits.LA4 = 1;
  4134   001D5A  8889               	bsf	137,4,c	;volatile
  4135                           
  4136                           ;lcd.c: 97: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4137   001D5C  0E03               	movlw	3
  4138   001D5E                     u3647:
  4139   001D5E  2EE8               	decfsz	wreg,f,c
  4140   001D60  D7FE               	bra	u3647
  4141   001D62  0000               	nop	
  4142                           
  4143                           ;lcd.c: 98: LATAbits.LA4 = 0;
  4144   001D64  9889               	bcf	137,4,c	;volatile
  4145                           
  4146                           ;lcd.c: 99: Lcd_Port(temp);
  4147   001D66  5015               	movf	Lcd_Write_Char@temp^0,w,c
  4148   001D68  EC43  F00F         	call	_Lcd_Port
  4149                           
  4150                           ;lcd.c: 100: LATAbits.LA4 = 1;
  4151   001D6C  8889               	bsf	137,4,c	;volatile
  4152                           
  4153                           ;lcd.c: 101: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4154   001D6E  0E03               	movlw	3
  4155   001D70                     u3657:
  4156   001D70  2EE8               	decfsz	wreg,f,c
  4157   001D72  D7FE               	bra	u3657
  4158   001D74  0000               	nop	
  4159                           
  4160                           ;lcd.c: 102: LATAbits.LA4 = 0;
  4161   001D76  9889               	bcf	137,4,c	;volatile
  4162   001D78  0012               	return		;funcret
  4163   001D7A                     __end_of_Lcd_Write_Char:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function _Lcd_Set_Cursor *****************
  4167 ;; Defined at:
  4168 ;;		line 27 in file "lcd.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  a               1    wreg     unsigned char 
  4171 ;;  b               1   21[COMRAM] unsigned char 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  a               1   22[COMRAM] unsigned char 
  4174 ;;  temp            1   25[COMRAM] unsigned char 
  4175 ;;  y               1   24[COMRAM] unsigned char 
  4176 ;;  z               1   23[COMRAM] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4186 ;;      Params:         1       0       0       0       0       0       0       0       0
  4187 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4189 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4190 ;;Total ram usage:        5 bytes
  4191 ;; Hardware stack levels used: 1
  4192 ;; Hardware stack levels required when called: 9
  4193 ;; This function calls:
  4194 ;;		_Lcd_Cmd
  4195 ;; This function is called by:
  4196 ;;		_main
  4197 ;;		_escenario1
  4198 ;;		_escenario2
  4199 ;;		_escenario3
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text24
  4204   001408                     __ptext24:
  4205                           	callstack 0
  4206   001408                     _Lcd_Set_Cursor:
  4207                           	callstack 20
  4208                           
  4209                           ;incstack = 0
  4210                           ;Lcd_Set_Cursor@a stored from wreg
  4211   001408  6E17               	movwf	Lcd_Set_Cursor@a^0,c
  4212                           
  4213                           ;lcd.c: 29: char temp,z,y;;lcd.c: 30: if(a == 1)
  4214   00140A  0417               	decf	Lcd_Set_Cursor@a^0,w,c
  4215   00140C  A4D8               	btfss	status,2,c
  4216   00140E  D010               	goto	l3809
  4217                           
  4218                           ;lcd.c: 31: {;lcd.c: 32: temp = 0x80 + b - 1;
  4219   001410  5016               	movf	Lcd_Set_Cursor@b^0,w,c
  4220   001412  0F7F               	addlw	127
  4221   001414  6E1A               	movwf	Lcd_Set_Cursor@temp^0,c
  4222                           
  4223                           ;lcd.c: 33: z = temp>>4;
  4224   001416  381A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  4225   001418  0B0F               	andlw	15
  4226   00141A  6E18               	movwf	Lcd_Set_Cursor@z^0,c
  4227                           
  4228                           ;lcd.c: 34: y = temp & 0x0F;
  4229   00141C  501A               	movf	Lcd_Set_Cursor@temp^0,w,c
  4230   00141E  0B0F               	andlw	15
  4231   001420  6E19               	movwf	Lcd_Set_Cursor@y^0,c
  4232                           
  4233                           ;lcd.c: 35: Lcd_Cmd(z);
  4234   001422  5018               	movf	Lcd_Set_Cursor@z^0,w,c
  4235   001424  ECE3  F00F         	call	_Lcd_Cmd
  4236                           
  4237                           ;lcd.c: 36: Lcd_Cmd(y);
  4238   001428  5019               	movf	Lcd_Set_Cursor@y^0,w,c
  4239   00142A  ECE3  F00F         	call	_Lcd_Cmd
  4240                           
  4241                           ;lcd.c: 37: }
  4242   00142E  0012               	return	
  4243   001430                     l3809:
  4244                           
  4245                           ;lcd.c: 38: else if(a == 2)
  4246   001430  0E02               	movlw	2
  4247   001432  1817               	xorwf	Lcd_Set_Cursor@a^0,w,c
  4248   001434  A4D8               	btfss	status,2,c
  4249   001436  D010               	goto	l3817
  4250                           
  4251                           ;lcd.c: 39: {;lcd.c: 40: temp = 0xC0 + b - 1;
  4252   001438  5016               	movf	Lcd_Set_Cursor@b^0,w,c
  4253   00143A  0FBF               	addlw	191
  4254   00143C  6E1A               	movwf	Lcd_Set_Cursor@temp^0,c
  4255                           
  4256                           ;lcd.c: 41: z = temp>>4;
  4257   00143E  381A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  4258   001440  0B0F               	andlw	15
  4259   001442  6E18               	movwf	Lcd_Set_Cursor@z^0,c
  4260                           
  4261                           ;lcd.c: 42: y = temp & 0x0F;
  4262   001444  501A               	movf	Lcd_Set_Cursor@temp^0,w,c
  4263   001446  0B0F               	andlw	15
  4264   001448  6E19               	movwf	Lcd_Set_Cursor@y^0,c
  4265                           
  4266                           ;lcd.c: 43: Lcd_Cmd(z);
  4267   00144A  5018               	movf	Lcd_Set_Cursor@z^0,w,c
  4268   00144C  ECE3  F00F         	call	_Lcd_Cmd
  4269                           
  4270                           ;lcd.c: 44: Lcd_Cmd(y);
  4271   001450  5019               	movf	Lcd_Set_Cursor@y^0,w,c
  4272   001452  ECE3  F00F         	call	_Lcd_Cmd
  4273                           
  4274                           ;lcd.c: 45: }
  4275   001456  0012               	return	
  4276   001458                     l3817:
  4277                           
  4278                           ;lcd.c: 46: else if(a == 3)
  4279   001458  0E03               	movlw	3
  4280   00145A  1817               	xorwf	Lcd_Set_Cursor@a^0,w,c
  4281   00145C  A4D8               	btfss	status,2,c
  4282   00145E  D010               	goto	l3825
  4283                           
  4284                           ;lcd.c: 47: {;lcd.c: 48: temp = 0x94 + b - 1;
  4285   001460  5016               	movf	Lcd_Set_Cursor@b^0,w,c
  4286   001462  0F93               	addlw	147
  4287   001464  6E1A               	movwf	Lcd_Set_Cursor@temp^0,c
  4288                           
  4289                           ;lcd.c: 49: z = temp>>4;
  4290   001466  381A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  4291   001468  0B0F               	andlw	15
  4292   00146A  6E18               	movwf	Lcd_Set_Cursor@z^0,c
  4293                           
  4294                           ;lcd.c: 50: y = temp & 0x0F;
  4295   00146C  501A               	movf	Lcd_Set_Cursor@temp^0,w,c
  4296   00146E  0B0F               	andlw	15
  4297   001470  6E19               	movwf	Lcd_Set_Cursor@y^0,c
  4298                           
  4299                           ;lcd.c: 51: Lcd_Cmd(z);
  4300   001472  5018               	movf	Lcd_Set_Cursor@z^0,w,c
  4301   001474  ECE3  F00F         	call	_Lcd_Cmd
  4302                           
  4303                           ;lcd.c: 52: Lcd_Cmd(y);
  4304   001478  5019               	movf	Lcd_Set_Cursor@y^0,w,c
  4305   00147A  ECE3  F00F         	call	_Lcd_Cmd
  4306                           
  4307                           ;lcd.c: 53: }
  4308   00147E  0012               	return	
  4309   001480                     l3825:
  4310                           
  4311                           ;lcd.c: 54: else if(a == 4)
  4312   001480  0E04               	movlw	4
  4313   001482  1817               	xorwf	Lcd_Set_Cursor@a^0,w,c
  4314   001484  A4D8               	btfss	status,2,c
  4315   001486  0012               	return	
  4316                           
  4317                           ;lcd.c: 55: {;lcd.c: 56: temp = 0xD4 + b - 1;
  4318   001488  5016               	movf	Lcd_Set_Cursor@b^0,w,c
  4319   00148A  0FD3               	addlw	211
  4320   00148C  6E1A               	movwf	Lcd_Set_Cursor@temp^0,c
  4321                           
  4322                           ;lcd.c: 57: z = temp>>4;
  4323   00148E  381A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  4324   001490  0B0F               	andlw	15
  4325   001492  6E18               	movwf	Lcd_Set_Cursor@z^0,c
  4326                           
  4327                           ;lcd.c: 58: y = temp & 0x0F;
  4328   001494  501A               	movf	Lcd_Set_Cursor@temp^0,w,c
  4329   001496  0B0F               	andlw	15
  4330   001498  6E19               	movwf	Lcd_Set_Cursor@y^0,c
  4331                           
  4332                           ;lcd.c: 59: Lcd_Cmd(z);
  4333   00149A  5018               	movf	Lcd_Set_Cursor@z^0,w,c
  4334   00149C  ECE3  F00F         	call	_Lcd_Cmd
  4335                           
  4336                           ;lcd.c: 60: Lcd_Cmd(y);
  4337   0014A0  5019               	movf	Lcd_Set_Cursor@y^0,w,c
  4338   0014A2  ECE3  F00F         	call	_Lcd_Cmd
  4339   0014A6  0012               	return	
  4340   0014A8                     __end_of_Lcd_Set_Cursor:
  4341                           	callstack 0
  4342                           
  4343 ;; *************** function _Lcd_NoBlink *****************
  4344 ;; Defined at:
  4345 ;;		line 130 in file "lcd.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;		None
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      void 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4359 ;;      Params:         0       0       0       0       0       0       0       0       0
  4360 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4362 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4363 ;;Total ram usage:        0 bytes
  4364 ;; Hardware stack levels used: 1
  4365 ;; Hardware stack levels required when called: 9
  4366 ;; This function calls:
  4367 ;;		_Lcd_Cmd
  4368 ;; This function is called by:
  4369 ;;		_main
  4370 ;;		_escenario2
  4371 ;;		_escenario3
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text25
  4376   002020                     __ptext25:
  4377                           	callstack 0
  4378   002020                     _Lcd_NoBlink:
  4379                           	callstack 21
  4380                           
  4381                           ;lcd.c: 132: Lcd_Cmd(0x00);
  4382                           
  4383                           ;incstack = 0
  4384   002020  0E00               	movlw	0
  4385   002022  ECE3  F00F         	call	_Lcd_Cmd
  4386                           
  4387                           ;lcd.c: 133: Lcd_Cmd(0x0C);
  4388   002026  0E0C               	movlw	12
  4389   002028  ECE3  F00F         	call	_Lcd_Cmd
  4390   00202C  0012               	return		;funcret
  4391   00202E                     __end_of_Lcd_NoBlink:
  4392                           	callstack 0
  4393                           
  4394 ;; *************** function _Lcd_Clear *****************
  4395 ;; Defined at:
  4396 ;;		line 21 in file "lcd.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, cstack
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4410 ;;      Params:         0       0       0       0       0       0       0       0       0
  4411 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4413 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4414 ;;Total ram usage:        0 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; Hardware stack levels required when called: 9
  4417 ;; This function calls:
  4418 ;;		_Lcd_Cmd
  4419 ;; This function is called by:
  4420 ;;		_Lcd_Init
  4421 ;;		_main
  4422 ;;		_escenario1
  4423 ;;		_escenario2
  4424 ;;		_escenario3
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text26
  4429   00202E                     __ptext26:
  4430                           	callstack 0
  4431   00202E                     _Lcd_Clear:
  4432                           	callstack 20
  4433                           
  4434                           ;lcd.c: 23: Lcd_Cmd(0);
  4435                           
  4436                           ;incstack = 0
  4437   00202E  0E00               	movlw	0
  4438   002030  ECE3  F00F         	call	_Lcd_Cmd
  4439                           
  4440                           ;lcd.c: 24: Lcd_Cmd(1);
  4441   002034  0E01               	movlw	1
  4442   002036  ECE3  F00F         	call	_Lcd_Cmd
  4443   00203A  0012               	return		;funcret
  4444   00203C                     __end_of_Lcd_Clear:
  4445                           	callstack 0
  4446                           
  4447 ;; *************** function _Lcd_Cmd *****************
  4448 ;; Defined at:
  4449 ;;		line 12 in file "lcd.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  a               1    wreg     unsigned char 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  a               1   20[COMRAM] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0
  4464 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4466 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4467 ;;Total ram usage:        1 bytes
  4468 ;; Hardware stack levels used: 1
  4469 ;; Hardware stack levels required when called: 8
  4470 ;; This function calls:
  4471 ;;		_Lcd_Port
  4472 ;; This function is called by:
  4473 ;;		_Lcd_Clear
  4474 ;;		_Lcd_Set_Cursor
  4475 ;;		_Lcd_Init
  4476 ;;		_Lcd_Blink
  4477 ;;		_Lcd_NoBlink
  4478 ;;		_Lcd_CGRAM_Init
  4479 ;;		_Lcd_CGRAM_Close
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text27
  4484   001FC6                     __ptext27:
  4485                           	callstack 0
  4486   001FC6                     _Lcd_Cmd:
  4487                           	callstack 20
  4488                           
  4489                           ;incstack = 0
  4490                           ;Lcd_Cmd@a stored from wreg
  4491   001FC6  6E15               	movwf	Lcd_Cmd@a^0,c
  4492                           
  4493                           ;lcd.c: 14: LATAbits.LA3 = 0;
  4494   001FC8  9689               	bcf	137,3,c	;volatile
  4495                           
  4496                           ;lcd.c: 15: Lcd_Port(a);
  4497   001FCA  5015               	movf	Lcd_Cmd@a^0,w,c
  4498   001FCC  EC43  F00F         	call	_Lcd_Port
  4499                           
  4500                           ;lcd.c: 16: LATAbits.LA4 = 1;
  4501   001FD0  8889               	bsf	137,4,c	;volatile
  4502                           
  4503                           ;lcd.c: 17: _delay((unsigned long)((4)*(1000000/4000.0)));
  4504   001FD2  0EC8               	movlw	200
  4505   001FD4                     u3667:
  4506   001FD4  D000               	nop2	
  4507   001FD6  2EE8               	decfsz	wreg,f,c
  4508   001FD8  D7FD               	bra	u3667
  4509                           
  4510                           ;lcd.c: 18: LATAbits.LA4 = 0;
  4511   001FDA  9889               	bcf	137,4,c	;volatile
  4512   001FDC  0012               	return		;funcret
  4513   001FDE                     __end_of_Lcd_Cmd:
  4514                           	callstack 0
  4515                           
  4516 ;; *************** function _Lcd_Port *****************
  4517 ;; Defined at:
  4518 ;;		line 4 in file "lcd.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  a               1    wreg     unsigned char 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  a               1   19[COMRAM] unsigned char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  1    wreg      void 
  4525 ;; Registers used:
  4526 ;;		wreg
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4532 ;;      Params:         0       0       0       0       0       0       0       0       0
  4533 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4534 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4535 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4536 ;;Total ram usage:        1 bytes
  4537 ;; Hardware stack levels used: 1
  4538 ;; Hardware stack levels required when called: 7
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_Lcd_Cmd
  4543 ;;		_Lcd_Init
  4544 ;;		_Lcd_Write_Char
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text28
  4549   001E86                     __ptext28:
  4550                           	callstack 0
  4551   001E86                     _Lcd_Port:
  4552                           	callstack 20
  4553                           
  4554                           ;incstack = 0
  4555                           ;Lcd_Port@a stored from wreg
  4556   001E86  6E14               	movwf	Lcd_Port@a^0,c
  4557                           
  4558                           ;lcd.c: 6: (a & 1) ? (LATDbits.LD4 = 1) : (LATDbits.LD4 = 0);
  4559   001E88  A014               	btfss	Lcd_Port@a^0,0,c
  4560   001E8A  D002               	goto	l14
  4561   001E8C  888C               	bsf	140,4,c	;volatile
  4562   001E8E  D001               	goto	l3757
  4563   001E90                     l14:
  4564   001E90  988C               	bcf	140,4,c	;volatile
  4565   001E92                     l3757:
  4566                           
  4567                           ;lcd.c: 7: (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  4568   001E92  A214               	btfss	Lcd_Port@a^0,1,c
  4569   001E94  D002               	goto	l18
  4570   001E96  8A8C               	bsf	140,5,c	;volatile
  4571   001E98  D001               	goto	l3761
  4572   001E9A                     l18:
  4573   001E9A  9A8C               	bcf	140,5,c	;volatile
  4574   001E9C                     l3761:
  4575                           
  4576                           ;lcd.c: 8: (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  4577   001E9C  A414               	btfss	Lcd_Port@a^0,2,c
  4578   001E9E  D002               	goto	l22
  4579   001EA0  8C8C               	bsf	140,6,c	;volatile
  4580   001EA2  D001               	goto	l3765
  4581   001EA4                     l22:
  4582   001EA4  9C8C               	bcf	140,6,c	;volatile
  4583   001EA6                     l3765:
  4584                           
  4585                           ;lcd.c: 9: (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  4586   001EA6  A614               	btfss	Lcd_Port@a^0,3,c
  4587   001EA8  D002               	goto	l26
  4588   001EAA  8E8C               	bsf	140,7,c	;volatile
  4589   001EAC  0012               	return	
  4590   001EAE                     l26:
  4591   001EAE  9E8C               	bcf	140,7,c	;volatile
  4592   001EB0  0012               	return		;funcret
  4593   001EB2                     __end_of_Lcd_Port:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function ___wmul *****************
  4597 ;; Defined at:
  4598 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/Umul16.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  multiplier      2   19[COMRAM] unsigned int 
  4601 ;;  multiplicand    2   21[COMRAM] unsigned int 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  product         2   23[COMRAM] unsigned int 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  2   19[COMRAM] unsigned int 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0, prodl, prodh
  4608 ;; Tracked objects:
  4609 ;;		On entry : 3F/0
  4610 ;;		On exit  : 3F/0
  4611 ;;		Unchanged: 3F/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4613 ;;      Params:         4       0       0       0       0       0       0       0       0
  4614 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4616 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4617 ;;Total ram usage:        6 bytes
  4618 ;; Hardware stack levels used: 1
  4619 ;; Hardware stack levels required when called: 7
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_ContarReal
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text29
  4628   001F56                     __ptext29:
  4629                           	callstack 0
  4630   001F56                     ___wmul:
  4631                           	callstack 22
  4632                           
  4633                           ; BSR set to: 0
  4634                           
  4635                           ;incstack = 0
  4636   001F56  5014               	movf	___wmul@multiplier^0,w,c
  4637   001F58  0216               	mulwf	___wmul@multiplicand^0,c
  4638   001F5A  CFF3 F018          	movff	prodl,___wmul@product
  4639   001F5E  CFF4 F019          	movff	prodh,___wmul@product+1
  4640   001F62  5014               	movf	___wmul@multiplier^0,w,c
  4641   001F64  0217               	mulwf	(___wmul@multiplicand+1)^0,c
  4642   001F66  50F3               	movf	243,w,c
  4643   001F68  2619               	addwf	(___wmul@product+1)^0,f,c
  4644   001F6A  5015               	movf	(___wmul@multiplier+1)^0,w,c
  4645   001F6C  0216               	mulwf	___wmul@multiplicand^0,c
  4646   001F6E  50F3               	movf	243,w,c
  4647   001F70  2619               	addwf	(___wmul@product+1)^0,f,c
  4648                           
  4649                           ; BSR set to: 0
  4650   001F72  C018  F014         	movff	___wmul@product,?___wmul
  4651   001F76  C019  F015         	movff	___wmul@product+1,?___wmul+1
  4652                           
  4653                           ; BSR set to: 0
  4654   001F7A  0012               	return		;funcret
  4655   001F7C                     __end_of___wmul:
  4656                           	callstack 0
  4657                           
  4658 ;; *************** function ___awmod *****************
  4659 ;; Defined at:
  4660 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awmod.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  dividend        2   19[COMRAM] int 
  4663 ;;  divisor         2   21[COMRAM] int 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  sign            1   24[COMRAM] unsigned char 
  4666 ;;  counter         1   23[COMRAM] unsigned char 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  2   19[COMRAM] int 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4676 ;;      Params:         4       0       0       0       0       0       0       0       0
  4677 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4679 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4680 ;;Total ram usage:        6 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; Hardware stack levels required when called: 7
  4683 ;; This function calls:
  4684 ;;		Nothing
  4685 ;; This function is called by:
  4686 ;;		_ContarReal
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text30
  4691   0018F2                     __ptext30:
  4692                           	callstack 0
  4693   0018F2                     ___awmod:
  4694                           	callstack 22
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;incstack = 0
  4698   0018F2  0E00               	movlw	0
  4699   0018F4  6E19               	movwf	___awmod@sign^0,c
  4700   0018F6  AE15               	btfss	(___awmod@dividend+1)^0,7,c
  4701   0018F8  D006               	goto	l4089
  4702   0018FA  6C14               	negf	___awmod@dividend^0,c
  4703   0018FC  1E15               	comf	(___awmod@dividend+1)^0,f,c
  4704   0018FE  B0D8               	btfsc	status,0,c
  4705   001900  2A15               	incf	(___awmod@dividend+1)^0,f,c
  4706   001902  0E01               	movlw	1
  4707   001904  6E19               	movwf	___awmod@sign^0,c
  4708   001906                     l4089:
  4709   001906  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  4710   001908  D004               	goto	l4093
  4711   00190A  6C16               	negf	___awmod@divisor^0,c
  4712   00190C  1E17               	comf	(___awmod@divisor+1)^0,f,c
  4713   00190E  B0D8               	btfsc	status,0,c
  4714   001910  2A17               	incf	(___awmod@divisor+1)^0,f,c
  4715   001912                     l4093:
  4716   001912  5016               	movf	___awmod@divisor^0,w,c
  4717   001914  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  4718   001916  B4D8               	btfsc	status,2,c
  4719   001918  D018               	goto	l4109
  4720   00191A  0E01               	movlw	1
  4721   00191C  6E18               	movwf	___awmod@counter^0,c
  4722   00191E  D004               	goto	l4099
  4723   001920                     l4097:
  4724   001920  90D8               	bcf	status,0,c
  4725   001922  3616               	rlcf	___awmod@divisor^0,f,c
  4726   001924  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  4727   001926  2A18               	incf	___awmod@counter^0,f,c
  4728   001928                     l4099:
  4729   001928  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  4730   00192A  D7FA               	goto	l4097
  4731   00192C                     u3160:
  4732   00192C  5016               	movf	___awmod@divisor^0,w,c
  4733   00192E  5C14               	subwf	___awmod@dividend^0,w,c
  4734   001930  5017               	movf	(___awmod@divisor+1)^0,w,c
  4735   001932  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  4736   001934  A0D8               	btfss	status,0,c
  4737   001936  D004               	goto	l4105
  4738   001938  5016               	movf	___awmod@divisor^0,w,c
  4739   00193A  5E14               	subwf	___awmod@dividend^0,f,c
  4740   00193C  5017               	movf	(___awmod@divisor+1)^0,w,c
  4741   00193E  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  4742   001940                     l4105:
  4743   001940  90D8               	bcf	status,0,c
  4744   001942  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  4745   001944  3216               	rrcf	___awmod@divisor^0,f,c
  4746   001946  2E18               	decfsz	___awmod@counter^0,f,c
  4747   001948  D7F1               	goto	u3160
  4748   00194A                     l4109:
  4749   00194A  5019               	movf	___awmod@sign^0,w,c
  4750   00194C  B4D8               	btfsc	status,2,c
  4751   00194E  D004               	goto	l4113
  4752   001950  6C14               	negf	___awmod@dividend^0,c
  4753   001952  1E15               	comf	(___awmod@dividend+1)^0,f,c
  4754   001954  B0D8               	btfsc	status,0,c
  4755   001956  2A15               	incf	(___awmod@dividend+1)^0,f,c
  4756   001958                     l4113:
  4757   001958  C014  F014         	movff	___awmod@dividend,?___awmod
  4758   00195C  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  4759   001960  0012               	return		;funcret
  4760   001962                     __end_of___awmod:
  4761                           	callstack 0
  4762                           
  4763 ;; *************** function ___awdiv *****************
  4764 ;; Defined at:
  4765 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awdiv.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  dividend        2   19[COMRAM] int 
  4768 ;;  divisor         2   21[COMRAM] int 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  quotient        2   25[COMRAM] int 
  4771 ;;  sign            1   24[COMRAM] unsigned char 
  4772 ;;  counter         1   23[COMRAM] unsigned char 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  2   19[COMRAM] int 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, status,0
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4782 ;;      Params:         4       0       0       0       0       0       0       0       0
  4783 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4785 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4786 ;;Total ram usage:        8 bytes
  4787 ;; Hardware stack levels used: 1
  4788 ;; Hardware stack levels required when called: 7
  4789 ;; This function calls:
  4790 ;;		Nothing
  4791 ;; This function is called by:
  4792 ;;		_ContarReal
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text31
  4797   0016FA                     __ptext31:
  4798                           	callstack 0
  4799   0016FA                     ___awdiv:
  4800                           	callstack 22
  4801                           
  4802                           ;incstack = 0
  4803   0016FA  0E00               	movlw	0
  4804   0016FC  6E19               	movwf	___awdiv@sign^0,c
  4805   0016FE  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  4806   001700  D006               	goto	l4045
  4807   001702  6C16               	negf	___awdiv@divisor^0,c
  4808   001704  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  4809   001706  B0D8               	btfsc	status,0,c
  4810   001708  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  4811   00170A  0E01               	movlw	1
  4812   00170C  6E19               	movwf	___awdiv@sign^0,c
  4813   00170E                     l4045:
  4814   00170E  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  4815   001710  D006               	goto	l4051
  4816   001712  6C14               	negf	___awdiv@dividend^0,c
  4817   001714  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  4818   001716  B0D8               	btfsc	status,0,c
  4819   001718  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  4820   00171A  0E01               	movlw	1
  4821   00171C  1A19               	xorwf	___awdiv@sign^0,f,c
  4822   00171E                     l4051:
  4823   00171E  0E00               	movlw	0
  4824   001720  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  4825   001722  0E00               	movlw	0
  4826   001724  6E1A               	movwf	___awdiv@quotient^0,c
  4827   001726  5016               	movf	___awdiv@divisor^0,w,c
  4828   001728  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  4829   00172A  B4D8               	btfsc	status,2,c
  4830   00172C  D01C               	goto	l4073
  4831   00172E  0E01               	movlw	1
  4832   001730  6E18               	movwf	___awdiv@counter^0,c
  4833   001732  D004               	goto	l4059
  4834   001734                     l4057:
  4835   001734  90D8               	bcf	status,0,c
  4836   001736  3616               	rlcf	___awdiv@divisor^0,f,c
  4837   001738  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  4838   00173A  2A18               	incf	___awdiv@counter^0,f,c
  4839   00173C                     l4059:
  4840   00173C  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  4841   00173E  D7FA               	goto	l4057
  4842   001740                     u3100:
  4843   001740  90D8               	bcf	status,0,c
  4844   001742  361A               	rlcf	___awdiv@quotient^0,f,c
  4845   001744  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  4846   001746  5016               	movf	___awdiv@divisor^0,w,c
  4847   001748  5C14               	subwf	___awdiv@dividend^0,w,c
  4848   00174A  5017               	movf	(___awdiv@divisor+1)^0,w,c
  4849   00174C  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  4850   00174E  A0D8               	btfss	status,0,c
  4851   001750  D005               	goto	l4069
  4852   001752  5016               	movf	___awdiv@divisor^0,w,c
  4853   001754  5E14               	subwf	___awdiv@dividend^0,f,c
  4854   001756  5017               	movf	(___awdiv@divisor+1)^0,w,c
  4855   001758  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  4856   00175A  801A               	bsf	___awdiv@quotient^0,0,c
  4857   00175C                     l4069:
  4858   00175C  90D8               	bcf	status,0,c
  4859   00175E  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  4860   001760  3216               	rrcf	___awdiv@divisor^0,f,c
  4861   001762  2E18               	decfsz	___awdiv@counter^0,f,c
  4862   001764  D7ED               	goto	u3100
  4863   001766                     l4073:
  4864   001766  5019               	movf	___awdiv@sign^0,w,c
  4865   001768  B4D8               	btfsc	status,2,c
  4866   00176A  D004               	goto	l4077
  4867   00176C  6C1A               	negf	___awdiv@quotient^0,c
  4868   00176E  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  4869   001770  B0D8               	btfsc	status,0,c
  4870   001772  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  4871   001774                     l4077:
  4872   001774  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  4873   001778  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  4874   00177C  0012               	return		;funcret
  4875   00177E                     __end_of___awdiv:
  4876                           	callstack 0
  4877                           
  4878 ;; *************** function _ISR *****************
  4879 ;; Defined at:
  4880 ;;		line 330 in file "Lab4.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      void 
  4887 ;; Registers used:
  4888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4894 ;;      Params:         0       0       0       0       0       0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4896 ;;      Temps:          9       0       0       0       0       0       0       0       0
  4897 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4898 ;;Total ram usage:        9 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; Hardware stack levels required when called: 6
  4901 ;; This function calls:
  4902 ;;		_PiezaAContar
  4903 ;;		_Reiniciar
  4904 ;;		_Terminar
  4905 ;;		_Trasmitir
  4906 ;;		_blacklighttoggle
  4907 ;;		_borrarDigito
  4908 ;;		_escenario4
  4909 ;;		_okmenu
  4910 ;; This function is called by:
  4911 ;;		Interrupt level 2
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	intcode
  4916   000008                     __pintcode:
  4917                           	callstack 0
  4918   000008                     _ISR:
  4919                           	callstack 19
  4920                           
  4921                           ;incstack = 0
  4922   000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4923   00000A  ED5C  F005         	call	int_func,f	;refresh shadow registers
  4924                           
  4925                           	psect	intcode_body
  4926   000AB8                     __pintcode_body:
  4927                           	callstack 19
  4928   000AB8                     int_func:
  4929                           	callstack 19
  4930   000AB8  0006               	pop		; remove dummy address from shadow register refresh
  4931   000ABA  CFD9 F00C          	movff	fsr2l,??_ISR+1
  4932   000ABE  CFDA F00D          	movff	fsr2h,??_ISR+2
  4933   000AC2  CFF3 F00E          	movff	prodl,??_ISR+3
  4934   000AC6  CFF4 F00F          	movff	prodh,??_ISR+4
  4935   000ACA  CFF6 F010          	movff	tblptrl,??_ISR+5
  4936   000ACE  CFF7 F011          	movff	tblptrh,??_ISR+6
  4937   000AD2  CFF8 F012          	movff	tblptru,??_ISR+7
  4938   000AD6  CFF5 F013          	movff	tablat,??_ISR+8
  4939                           
  4940                           ;Lab4.c: 331: if (RBIF == 1 && flagParar) {
  4941   000ADA  A0F2               	btfss	4082,0,c	;volatile
  4942   000ADC  D089               	goto	i2l3739
  4943   000ADE  0100               	movlb	0	; () banked
  4944   000AE0  5173               	movf	_flagParar& (0+255),w,b
  4945   000AE2  1174               	iorwf	(_flagParar+1)& (0+255),w,b
  4946   000AE4  B4D8               	btfsc	status,2,c
  4947   000AE6  D084               	goto	i2l3739
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;Lab4.c: 333: if (PORTB != 0b11110000) {
  4951   000AE8  0EF0               	movlw	240
  4952   000AEA  1881               	xorwf	129,w,c	;volatile
  4953   000AEC  B4D8               	btfsc	status,2,c
  4954   000AEE  D077               	goto	i2l3735
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;Lab4.c: 334: Tecla = 0;
  4958   000AF0  0E00               	movlw	0
  4959   000AF2  6E47               	movwf	_Tecla^0,c
  4960                           
  4961                           ;Lab4.c: 335: LATB = 0b11111110;
  4962   000AF4  0EFE               	movlw	254
  4963   000AF6  6E8A               	movwf	138,c	;volatile
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;Lab4.c: 337: if (RB4 == 0) PiezaAContar('1');
  4967   000AF8  B881               	btfsc	3969,4,c	;volatile
  4968   000AFA  D004               	goto	i2l358
  4969                           
  4970                           ; BSR set to: 0
  4971   000AFC  0E31               	movlw	49
  4972   000AFE  EC19  F00D         	call	_PiezaAContar
  4973   000B02  D06B               	goto	i2l383
  4974   000B04                     i2l358:
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;Lab4.c: 338: else if (RB5 == 0) PiezaAContar('2');
  4978   000B04  BA81               	btfsc	3969,5,c	;volatile
  4979   000B06  D004               	goto	i2l360
  4980                           
  4981                           ; BSR set to: 0
  4982   000B08  0E32               	movlw	50
  4983   000B0A  EC19  F00D         	call	_PiezaAContar
  4984   000B0E  D065               	goto	i2l383
  4985   000B10                     i2l360:
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;Lab4.c: 339: else if (RB6 == 0) PiezaAContar('3');
  4989   000B10  BC81               	btfsc	3969,6,c	;volatile
  4990   000B12  D004               	goto	i2l362
  4991                           
  4992                           ; BSR set to: 0
  4993   000B14  0E33               	movlw	51
  4994   000B16  EC19  F00D         	call	_PiezaAContar
  4995   000B1A  D05F               	goto	i2l383
  4996   000B1C                     i2l362:
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;Lab4.c: 340: else if (RB7 == 0 && menu!=2) okmenu();
  5000   000B1C  BE81               	btfsc	3969,7,c	;volatile
  5001   000B1E  D008               	goto	i2l3691
  5002                           
  5003                           ; BSR set to: 0
  5004   000B20  0E02               	movlw	2
  5005   000B22  184A               	xorwf	_menu^0,w,c
  5006   000B24  104B               	iorwf	(_menu+1)^0,w,c
  5007   000B26  B4D8               	btfsc	status,2,c
  5008   000B28  D003               	goto	i2l3691
  5009                           
  5010                           ; BSR set to: 0
  5011   000B2A  EC84  F00F         	call	_okmenu	;wreg free
  5012   000B2E  D055               	goto	i2l383
  5013   000B30                     i2l3691:
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;Lab4.c: 341: else {;Lab4.c: 342: LATB = 0b11111101;
  5017   000B30  0EFD               	movlw	253
  5018   000B32  6E8A               	movwf	138,c	;volatile
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;Lab4.c: 343: if (RB4 == 0) PiezaAContar('4');
  5022   000B34  B881               	btfsc	3969,4,c	;volatile
  5023   000B36  D004               	goto	i2l366
  5024                           
  5025                           ; BSR set to: 0
  5026   000B38  0E34               	movlw	52
  5027   000B3A  EC19  F00D         	call	_PiezaAContar
  5028   000B3E  D04D               	goto	i2l383
  5029   000B40                     i2l366:
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;Lab4.c: 344: else if (RB5 == 0) PiezaAContar('5');
  5033   000B40  BA81               	btfsc	3969,5,c	;volatile
  5034   000B42  D004               	goto	i2l368
  5035                           
  5036                           ; BSR set to: 0
  5037   000B44  0E35               	movlw	53
  5038   000B46  EC19  F00D         	call	_PiezaAContar
  5039   000B4A  D047               	goto	i2l383
  5040   000B4C                     i2l368:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;Lab4.c: 345: else if (RB6 == 0) PiezaAContar('6');
  5044   000B4C  BC81               	btfsc	3969,6,c	;volatile
  5045   000B4E  D004               	goto	i2l370
  5046                           
  5047                           ; BSR set to: 0
  5048   000B50  0E36               	movlw	54
  5049   000B52  EC19  F00D         	call	_PiezaAContar
  5050   000B56  D041               	goto	i2l383
  5051   000B58                     i2l370:
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;Lab4.c: 346: else if (RB7 == 0 && menu==1) borrarDigito();
  5055   000B58  BE81               	btfsc	3969,7,c	;volatile
  5056   000B5A  D007               	goto	i2l3705
  5057                           
  5058                           ; BSR set to: 0
  5059   000B5C  044A               	decf	_menu^0,w,c
  5060   000B5E  104B               	iorwf	(_menu+1)^0,w,c
  5061   000B60  A4D8               	btfss	status,2,c
  5062   000B62  D003               	goto	i2l3705
  5063                           
  5064                           ; BSR set to: 0
  5065   000B64  EC72  F00D         	call	_borrarDigito	;wreg free
  5066   000B68  D038               	goto	i2l383
  5067   000B6A                     i2l3705:
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;Lab4.c: 347: else {;Lab4.c: 348: LATB = 0b11111011;
  5071   000B6A  0EFB               	movlw	251
  5072   000B6C  6E8A               	movwf	138,c	;volatile
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;Lab4.c: 349: if (RB4 == 0) PiezaAContar('7');
  5076   000B6E  B881               	btfsc	3969,4,c	;volatile
  5077   000B70  D004               	goto	i2l374
  5078                           
  5079                           ; BSR set to: 0
  5080   000B72  0E37               	movlw	55
  5081   000B74  EC19  F00D         	call	_PiezaAContar
  5082   000B78  D030               	goto	i2l383
  5083   000B7A                     i2l374:
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;Lab4.c: 350: else if (RB5 == 0) PiezaAContar('8');
  5087   000B7A  BA81               	btfsc	3969,5,c	;volatile
  5088   000B7C  D004               	goto	i2l376
  5089                           
  5090                           ; BSR set to: 0
  5091   000B7E  0E38               	movlw	56
  5092   000B80  EC19  F00D         	call	_PiezaAContar
  5093   000B84  D02A               	goto	i2l383
  5094   000B86                     i2l376:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;Lab4.c: 351: else if (RB6 == 0) PiezaAContar('9');
  5098   000B86  BC81               	btfsc	3969,6,c	;volatile
  5099   000B88  D004               	goto	i2l378
  5100                           
  5101                           ; BSR set to: 0
  5102   000B8A  0E39               	movlw	57
  5103   000B8C  EC19  F00D         	call	_PiezaAContar
  5104   000B90  D024               	goto	i2l383
  5105   000B92                     i2l378:
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;Lab4.c: 352: else if (RB7 == 0 && menu==2) Reiniciar();
  5109   000B92  BE81               	btfsc	3969,7,c	;volatile
  5110   000B94  D008               	goto	i2l3719
  5111                           
  5112                           ; BSR set to: 0
  5113   000B96  0E02               	movlw	2
  5114   000B98  184A               	xorwf	_menu^0,w,c
  5115   000B9A  104B               	iorwf	(_menu+1)^0,w,c
  5116   000B9C  A4D8               	btfss	status,2,c
  5117   000B9E  D003               	goto	i2l3719
  5118                           
  5119                           ; BSR set to: 0
  5120   000BA0  EC0F  F00F         	call	_Reiniciar	;wreg free
  5121   000BA4  D01A               	goto	i2l383
  5122   000BA6                     i2l3719:
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;Lab4.c: 353: else {;Lab4.c: 354: LATB = 0b11110111;
  5126   000BA6  0EF7               	movlw	247
  5127   000BA8  6E8A               	movwf	138,c	;volatile
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;Lab4.c: 355: if (RB4 == 0) blacklighttoggle();
  5131   000BAA  B881               	btfsc	3969,4,c	;volatile
  5132   000BAC  D003               	goto	i2l382
  5133                           
  5134                           ; BSR set to: 0
  5135   000BAE  EC33  F010         	call	_blacklighttoggle	;wreg free
  5136   000BB2  D013               	goto	i2l383
  5137   000BB4                     i2l382:
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;Lab4.c: 356: else if (RB5 == 0) PiezaAContar('0');
  5141   000BB4  BA81               	btfsc	3969,5,c	;volatile
  5142   000BB6  D004               	goto	i2l384
  5143                           
  5144                           ; BSR set to: 0
  5145   000BB8  0E30               	movlw	48
  5146   000BBA  EC19  F00D         	call	_PiezaAContar
  5147   000BBE  D00D               	goto	i2l383
  5148   000BC0                     i2l384:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;Lab4.c: 357: else if (RB6 == 0 && menu==2) Terminar();
  5152   000BC0  BC81               	btfsc	3969,6,c	;volatile
  5153   000BC2  D008               	goto	i2l386
  5154                           
  5155                           ; BSR set to: 0
  5156   000BC4  0E02               	movlw	2
  5157   000BC6  184A               	xorwf	_menu^0,w,c
  5158   000BC8  104B               	iorwf	(_menu+1)^0,w,c
  5159   000BCA  A4D8               	btfss	status,2,c
  5160   000BCC  D003               	goto	i2l386
  5161                           
  5162                           ; BSR set to: 0
  5163   000BCE  EC39  F010         	call	_Terminar	;wreg free
  5164   000BD2  D003               	goto	i2l383
  5165   000BD4                     i2l386:
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;Lab4.c: 358: else if (RB7 == 0) escenario4();
  5169   000BD4  AE81               	btfss	3969,7,c	;volatile
  5170                           
  5171                           ; BSR set to: 0
  5172   000BD6  EC21  F00E         	call	_escenario4	;wreg free
  5173   000BDA                     i2l383:
  5174                           
  5175                           ;Lab4.c: 359: };Lab4.c: 360: };Lab4.c: 361: };Lab4.c: 362: LATB = 0b11110000;
  5176                           
  5177                           ; BSR set to: 0
  5178   000BDA  0EF0               	movlw	240
  5179   000BDC  6E8A               	movwf	138,c	;volatile
  5180   000BDE                     i2l3735:
  5181                           
  5182                           ;Lab4.c: 363: };Lab4.c: 364: _delay((unsigned long)((200)*(1000000/4000.0)));
  5183   000BDE  0E41               	movlw	65
  5184   000BE0  6E0B               	movwf	??_ISR^0,c
  5185   000BE2  0EEE               	movlw	238
  5186   000BE4                     i2u367_47:
  5187   000BE4  2EE8               	decfsz	wreg,f,c
  5188   000BE6  D7FE               	bra	i2u367_47
  5189   000BE8  2E0B               	decfsz	??_ISR^0,f,c
  5190   000BEA  D7FC               	bra	i2u367_47
  5191   000BEC  D000               	nop2	
  5192                           
  5193                           ;Lab4.c: 366: RBIF = 0;
  5194   000BEE  90F2               	bcf	4082,0,c	;volatile
  5195   000BF0                     i2l3739:
  5196                           
  5197                           ;Lab4.c: 368: };Lab4.c: 369: if (TMR0IF == 1) {
  5198   000BF0  A4F2               	btfss	4082,2,c	;volatile
  5199   000BF2  D00C               	goto	i2l390
  5200                           
  5201                           ;Lab4.c: 370: TMR0IF = 0;
  5202   000BF4  94F2               	bcf	4082,2,c	;volatile
  5203                           
  5204                           ;Lab4.c: 371: TMR0 = 3036;
  5205   000BF6  0E0B               	movlw	11
  5206   000BF8  6ED7               	movwf	215,c	;volatile
  5207   000BFA  0EDC               	movlw	220
  5208   000BFC  6ED6               	movwf	214,c	;volatile
  5209                           
  5210                           ;Lab4.c: 372: LATA1 = !LATA1;
  5211   000BFE  B289               	btfsc	3977,1,c	;volatile
  5212   000C00  D002               	goto	i2u277_40
  5213   000C02  8289               	bsf	3977,1,c	;volatile
  5214   000C04  D001               	goto	i2u278_45
  5215   000C06                     i2u277_40:
  5216   000C06  9289               	bcf	3977,1,c	;volatile
  5217   000C08                     i2u278_45:
  5218                           
  5219                           ;Lab4.c: 373: Trasmitir();
  5220   000C08  EC2A  F00F         	call	_Trasmitir	;wreg free
  5221   000C0C                     i2l390:
  5222   000C0C  C013  FFF5         	movff	??_ISR+8,tablat
  5223   000C10  C012  FFF8         	movff	??_ISR+7,tblptru
  5224   000C14  C011  FFF7         	movff	??_ISR+6,tblptrh
  5225   000C18  C010  FFF6         	movff	??_ISR+5,tblptrl
  5226   000C1C  C00F  FFF4         	movff	??_ISR+4,prodh
  5227   000C20  C00E  FFF3         	movff	??_ISR+3,prodl
  5228   000C24  C00D  FFDA         	movff	??_ISR+2,fsr2h
  5229   000C28  C00C  FFD9         	movff	??_ISR+1,fsr2l
  5230   000C2C  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5231   000C2E  0011               	retfie		f
  5232   000C30                     __end_of_ISR:
  5233                           	callstack 0
  5234                           
  5235 ;; *************** function _okmenu *****************
  5236 ;; Defined at:
  5237 ;;		line 324 in file "Lab4.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;		None
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;		None
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 3F/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5251 ;;      Params:         0       0       0       0       0       0       0       0       0
  5252 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5254 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5255 ;;Total ram usage:        0 bytes
  5256 ;; Hardware stack levels used: 1
  5257 ;; Hardware stack levels required when called: 5
  5258 ;; This function calls:
  5259 ;;		i2_ContarReal
  5260 ;;		i2_escenario1
  5261 ;; This function is called by:
  5262 ;;		_ISR
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text33
  5267   001F08                     __ptext33:
  5268                           	callstack 0
  5269   001F08                     _okmenu:
  5270                           	callstack 19
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;Lab4.c: 325: if(menu==1) ContarReal();
  5274                           
  5275                           ;incstack = 0
  5276   001F08  044A               	decf	_menu^0,w,c
  5277   001F0A  104B               	iorwf	(_menu+1)^0,w,c
  5278   001F0C  A4D8               	btfss	status,2,c
  5279   001F0E  D003               	goto	i2l3539
  5280                           
  5281                           ; BSR set to: 0
  5282   001F10  ECD8  F007         	call	i2_ContarReal	;wreg free
  5283   001F14  0012               	return	
  5284   001F16                     i2l3539:
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;Lab4.c: 326: else if(menu==2);
  5288   001F16  0E02               	movlw	2
  5289   001F18  184A               	xorwf	_menu^0,w,c
  5290   001F1A  104B               	iorwf	(_menu+1)^0,w,c
  5291   001F1C  B4D8               	btfsc	status,2,c
  5292   001F1E  0012               	return	
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;Lab4.c: 327: else if(menu==3) escenario1();
  5296   001F20  0E03               	movlw	3
  5297   001F22  184A               	xorwf	_menu^0,w,c
  5298   001F24  104B               	iorwf	(_menu+1)^0,w,c
  5299   001F26  A4D8               	btfss	status,2,c
  5300   001F28  0012               	return	
  5301                           
  5302                           ; BSR set to: 0
  5303   001F2A  ECBC  F00D         	call	i2_escenario1	;wreg free
  5304   001F2E  0012               	return		;funcret
  5305   001F30                     __end_of_okmenu:
  5306                           	callstack 0
  5307                           
  5308 ;; *************** function i2_ContarReal *****************
  5309 ;; Defined at:
  5310 ;;		line 260 in file "Lab4.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;		None
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  1    wreg      void 
  5317 ;; Registers used:
  5318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5319 ;; Tracked objects:
  5320 ;;		On entry : 3F/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5324 ;;      Params:         0       0       0       0       0       0       0       0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5326 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5327 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5328 ;;Total ram usage:        2 bytes
  5329 ;; Hardware stack levels used: 1
  5330 ;; Hardware stack levels required when called: 4
  5331 ;; This function calls:
  5332 ;;		i2___awdiv
  5333 ;;		i2___awmod
  5334 ;;		i2___wmul
  5335 ;;		i2_escenario2
  5336 ;;		i2_escenario3
  5337 ;;		i2_vaciar
  5338 ;; This function is called by:
  5339 ;;		_okmenu
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text34
  5344   000FB0                     __ptext34:
  5345                           	callstack 0
  5346   000FB0                     i2_ContarReal:
  5347                           	callstack 19
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;Lab4.c: 261: cantidad = (decena * 10) + unidad;
  5351                           
  5352                           ;incstack = 0
  5353   000FB0  C045  F001         	movff	_decena,i2___wmul@multiplier
  5354   000FB4  C046  F002         	movff	_decena+1,i2___wmul@multiplier+1
  5355   000FB8  0E00               	movlw	0
  5356   000FBA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5357   000FBC  0E0A               	movlw	10
  5358   000FBE  6E03               	movwf	i2___wmul@multiplicand^0,c
  5359   000FC0  ECBE  F00F         	call	i2___wmul	;wreg free
  5360   000FC4  5043               	movf	_unidad^0,w,c
  5361   000FC6  2401               	addwf	?i2___wmul^0,w,c
  5362   000FC8  6E41               	movwf	_cantidad^0,c
  5363   000FCA  5044               	movf	(_unidad+1)^0,w,c
  5364   000FCC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5365   000FCE  6E42               	movwf	(_cantidad+1)^0,c
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;Lab4.c: 262: contador++;
  5369   000FD0  4A3F               	infsnz	_contador^0,f,c
  5370   000FD2  2A40               	incf	(_contador+1)^0,f,c
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;Lab4.c: 263: cantidadResta = cantidad - contador +1;
  5374   000FD4  503F               	movf	_contador^0,w,c
  5375   000FD6  5C41               	subwf	_cantidad^0,w,c
  5376   000FD8  6E09               	movwf	??i2_ContarReal^0,c
  5377   000FDA  5040               	movf	(_contador+1)^0,w,c
  5378   000FDC  5842               	subwfb	(_cantidad+1)^0,w,c
  5379   000FDE  6E0A               	movwf	(??i2_ContarReal+1)^0,c
  5380   000FE0  0E01               	movlw	1
  5381   000FE2  2409               	addwf	??i2_ContarReal^0,w,c
  5382   000FE4  6E3D               	movwf	_cantidadResta^0,c
  5383   000FE6  0E00               	movlw	0
  5384   000FE8  200A               	addwfc	(??i2_ContarReal+1)^0,w,c
  5385   000FEA  6E3E               	movwf	(_cantidadResta+1)^0,c
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;Lab4.c: 264: cantidadRestaUnidad =0b00110000 + cantidadResta%10;
  5389   000FEC  C03D  F001         	movff	_cantidadResta,i2___awmod@dividend
  5390   000FF0  C03E  F002         	movff	_cantidadResta+1,i2___awmod@dividend+1
  5391   000FF4  0E00               	movlw	0
  5392   000FF6  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5393   000FF8  0E0A               	movlw	10
  5394   000FFA  6E03               	movwf	i2___awmod@divisor^0,c
  5395   000FFC  ECB1  F00C         	call	i2___awmod	;wreg free
  5396   001000  0E30               	movlw	48
  5397   001002  2401               	addwf	?i2___awmod^0,w,c
  5398   001004  6E3B               	movwf	_cantidadRestaUnidad^0,c
  5399   001006  0E00               	movlw	0
  5400   001008  2002               	addwfc	(?i2___awmod+1)^0,w,c
  5401   00100A  6E3C               	movwf	(_cantidadRestaUnidad+1)^0,c
  5402                           
  5403                           ;Lab4.c: 265: cantidadRestaDecena =0b00110000 + cantidadResta/10;
  5404   00100C  C03D  F001         	movff	_cantidadResta,i2___awdiv@dividend
  5405   001010  C03E  F002         	movff	_cantidadResta+1,i2___awdiv@dividend+1
  5406   001014  0E00               	movlw	0
  5407   001016  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  5408   001018  0E0A               	movlw	10
  5409   00101A  6E03               	movwf	i2___awdiv@divisor^0,c
  5410   00101C  ECBF  F00B         	call	i2___awdiv	;wreg free
  5411   001020  0E30               	movlw	48
  5412   001022  2401               	addwf	?i2___awdiv^0,w,c
  5413   001024  6E39               	movwf	_cantidadRestaDecena^0,c
  5414   001026  0E00               	movlw	0
  5415   001028  2002               	addwfc	(?i2___awdiv+1)^0,w,c
  5416   00102A  6E3A               	movwf	(_cantidadRestaDecena+1)^0,c
  5417                           
  5418                           ;Lab4.c: 266: contadorUnidad = (contador-1)%10;
  5419   00102C  0EFF               	movlw	255
  5420   00102E  243F               	addwf	_contador^0,w,c
  5421   001030  6E01               	movwf	i2___awmod@dividend^0,c
  5422   001032  0EFF               	movlw	255
  5423   001034  2040               	addwfc	(_contador+1)^0,w,c
  5424   001036  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  5425   001038  0E00               	movlw	0
  5426   00103A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5427   00103C  0E0A               	movlw	10
  5428   00103E  6E03               	movwf	i2___awmod@divisor^0,c
  5429   001040  ECB1  F00C         	call	i2___awmod	;wreg free
  5430   001044  C001  F037         	movff	?i2___awmod,_contadorUnidad
  5431   001048  C002  F038         	movff	?i2___awmod+1,_contadorUnidad+1
  5432                           
  5433                           ;Lab4.c: 267: contadorDecena = (contador-1)/10;
  5434   00104C  0EFF               	movlw	255
  5435   00104E  243F               	addwf	_contador^0,w,c
  5436   001050  6E01               	movwf	i2___awdiv@dividend^0,c
  5437   001052  0EFF               	movlw	255
  5438   001054  2040               	addwfc	(_contador+1)^0,w,c
  5439   001056  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
  5440   001058  0E00               	movlw	0
  5441   00105A  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  5442   00105C  0E0A               	movlw	10
  5443   00105E  6E03               	movwf	i2___awdiv@divisor^0,c
  5444   001060  ECBF  F00B         	call	i2___awdiv	;wreg free
  5445   001064  C001  F035         	movff	?i2___awdiv,_contadorDecena
  5446   001068  C002  F036         	movff	?i2___awdiv+1,_contadorDecena+1
  5447                           
  5448                           ;Lab4.c: 269: LATD = contadorUnidad;
  5449   00106C  C037  FF8C         	movff	_contadorUnidad,3980	;volatile
  5450                           
  5451                           ;Lab4.c: 270: LATE = color[contadorDecena];
  5452   001070  5035               	movf	_contadorDecena^0,w,c
  5453   001072  0D02               	mullw	2
  5454   001074  50F3               	movf	243,w,c
  5455   001076  0F60               	addlw	low _color
  5456   001078  6ED9               	movwf	fsr2l,c
  5457   00107A  6ADA               	clrf	fsr2h,c
  5458   00107C  50DF               	movf	indf2,w,c
  5459   00107E  6E8D               	movwf	141,c	;volatile
  5460                           
  5461                           ;Lab4.c: 271: escenario2();
  5462   001080  EC37  F00B         	call	i2_escenario2	;wreg free
  5463                           
  5464                           ;Lab4.c: 272: _delay((unsigned long)((1000)*(1000000/4000.0)));
  5465   001084  0E02               	movlw	2
  5466   001086  6E0A               	movwf	(??i2_ContarReal+1)^0,c
  5467   001088  0E45               	movlw	69
  5468   00108A  6E09               	movwf	??i2_ContarReal^0,c
  5469   00108C  0EAA               	movlw	170
  5470   00108E                     i2u368_47:
  5471   00108E  2EE8               	decfsz	wreg,f,c
  5472   001090  D7FE               	bra	i2u368_47
  5473   001092  2E09               	decfsz	??i2_ContarReal^0,f,c
  5474   001094  D7FC               	bra	i2u368_47
  5475   001096  2E0A               	decfsz	(??i2_ContarReal+1)^0,f,c
  5476   001098  D7FA               	bra	i2u368_47
  5477                           
  5478                           ;Lab4.c: 273: if(!cantidadResta) {
  5479   00109A  503D               	movf	_cantidadResta^0,w,c
  5480   00109C  103E               	iorwf	(_cantidadResta+1)^0,w,c
  5481   00109E  A4D8               	btfss	status,2,c
  5482   0010A0  0012               	return	
  5483                           
  5484                           ;Lab4.c: 274: vaciar();
  5485   0010A2  EC42  F00E         	call	i2_vaciar	;wreg free
  5486                           
  5487                           ;Lab4.c: 275: escenario3();
  5488   0010A6  ECF4  F00E         	call	i2_escenario3	;wreg free
  5489   0010AA  0012               	return		;funcret
  5490   0010AC                     __end_ofi2_ContarReal:
  5491                           	callstack 0
  5492                           
  5493 ;; *************** function i2_escenario3 *****************
  5494 ;; Defined at:
  5495 ;;		line 200 in file "Lab4.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;		None
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;		None
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5509 ;;      Params:         0       0       0       0       0       0       0       0       0
  5510 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5512 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5513 ;;Total ram usage:        0 bytes
  5514 ;; Hardware stack levels used: 1
  5515 ;; Hardware stack levels required when called: 3
  5516 ;; This function calls:
  5517 ;;		i2_Lcd_Clear
  5518 ;;		i2_Lcd_NoBlink
  5519 ;;		i2_Lcd_Set_Cursor
  5520 ;;		i2_Lcd_Write_String
  5521 ;; This function is called by:
  5522 ;;		i2_ContarReal
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text35
  5527   001DE8                     __ptext35:
  5528                           	callstack 0
  5529   001DE8                     i2_escenario3:
  5530                           	callstack 19
  5531                           
  5532                           ;Lab4.c: 201: menu=3;
  5533                           
  5534                           ;incstack = 0
  5535   001DE8  0E00               	movlw	0
  5536   001DEA  6E4B               	movwf	(_menu+1)^0,c
  5537   001DEC  0E03               	movlw	3
  5538   001DEE  6E4A               	movwf	_menu^0,c
  5539                           
  5540                           ;Lab4.c: 202: Lcd_Clear();
  5541   001DF0  EC2C  F010         	call	i2_Lcd_Clear	;wreg free
  5542                           
  5543                           ;Lab4.c: 203: Lcd_NoBlink();
  5544   001DF4  EC25  F010         	call	i2_Lcd_NoBlink	;wreg free
  5545                           
  5546                           ;Lab4.c: 204: Lcd_Set_Cursor(1, 1);
  5547   001DF8  0E01               	movlw	1
  5548   001DFA  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  5549   001DFC  0E01               	movlw	1
  5550   001DFE  EC54  F00A         	call	i2_Lcd_Set_Cursor
  5551                           
  5552                           ;Lab4.c: 205: Lcd_Write_String("Cuenta finalizada");
  5553   001E02  0E33               	movlw	low STR_11
  5554   001E04  6E05               	movwf	i2Lcd_Write_String@a^0,c
  5555   001E06  EC82  F00E         	call	i2_Lcd_Write_String	;wreg free
  5556                           
  5557                           ;Lab4.c: 206: Lcd_Set_Cursor(2, 13);
  5558   001E0A  0E0D               	movlw	13
  5559   001E0C  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  5560   001E0E  0E02               	movlw	2
  5561   001E10  EC54  F00A         	call	i2_Lcd_Set_Cursor
  5562                           
  5563                           ;Lab4.c: 207: Lcd_Write_String("A:OK");
  5564   001E14  0EC0               	movlw	low STR_12
  5565   001E16  6E05               	movwf	i2Lcd_Write_String@a^0,c
  5566   001E18  EC82  F00E         	call	i2_Lcd_Write_String	;wreg free
  5567   001E1C  0012               	return		;funcret
  5568   001E1E                     __end_ofi2_escenario3:
  5569                           	callstack 0
  5570                           
  5571 ;; *************** function i2___wmul *****************
  5572 ;; Defined at:
  5573 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/Umul16.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  multiplier      2    0[COMRAM] unsigned int 
  5576 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  product         2    4[COMRAM] unsigned int 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  2    0[COMRAM] unsigned int 
  5581 ;; Registers used:
  5582 ;;		wreg, status,2, status,0, prodl, prodh
  5583 ;; Tracked objects:
  5584 ;;		On entry : 3F/0
  5585 ;;		On exit  : 3F/0
  5586 ;;		Unchanged: 3F/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5588 ;;      Params:         4       0       0       0       0       0       0       0       0
  5589 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5591 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5592 ;;Total ram usage:        6 bytes
  5593 ;; Hardware stack levels used: 1
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		i2_ContarReal
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text36
  5602   001F7C                     __ptext36:
  5603                           	callstack 0
  5604   001F7C                     i2___wmul:
  5605                           	callstack 22
  5606                           
  5607                           ; BSR set to: 0
  5608                           
  5609                           ;incstack = 0
  5610   001F7C  5001               	movf	i2___wmul@multiplier^0,w,c
  5611   001F7E  0203               	mulwf	i2___wmul@multiplicand^0,c
  5612   001F80  CFF3 F005          	movff	prodl,i2___wmul@product
  5613   001F84  CFF4 F006          	movff	prodh,i2___wmul@product+1
  5614   001F88  5001               	movf	i2___wmul@multiplier^0,w,c
  5615   001F8A  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  5616   001F8C  50F3               	movf	243,w,c
  5617   001F8E  2606               	addwf	(i2___wmul@product+1)^0,f,c
  5618   001F90  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  5619   001F92  0203               	mulwf	i2___wmul@multiplicand^0,c
  5620   001F94  50F3               	movf	243,w,c
  5621   001F96  2606               	addwf	(i2___wmul@product+1)^0,f,c
  5622                           
  5623                           ; BSR set to: 0
  5624   001F98  C005  F001         	movff	i2___wmul@product,?i2___wmul
  5625   001F9C  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  5626                           
  5627                           ; BSR set to: 0
  5628   001FA0  0012               	return		;funcret
  5629   001FA2                     __end_ofi2___wmul:
  5630                           	callstack 0
  5631                           
  5632 ;; *************** function i2___awmod *****************
  5633 ;; Defined at:
  5634 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awmod.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  dividend        2    0[COMRAM] int 
  5637 ;;  divisor         2    2[COMRAM] int 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  sign            1    5[COMRAM] unsigned char 
  5640 ;;  counter         1    4[COMRAM] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  2    0[COMRAM] int 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5650 ;;      Params:         4       0       0       0       0       0       0       0       0
  5651 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5653 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5654 ;;Total ram usage:        6 bytes
  5655 ;; Hardware stack levels used: 1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		i2_ContarReal
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text37
  5664   001962                     __ptext37:
  5665                           	callstack 0
  5666   001962                     i2___awmod:
  5667                           	callstack 22
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;incstack = 0
  5671   001962  0E00               	movlw	0
  5672   001964  6E06               	movwf	i2___awmod@sign^0,c
  5673   001966  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  5674   001968  D006               	goto	i2l2799
  5675   00196A  6C01               	negf	i2___awmod@dividend^0,c
  5676   00196C  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5677   00196E  B0D8               	btfsc	status,0,c
  5678   001970  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5679   001972  0E01               	movlw	1
  5680   001974  6E06               	movwf	i2___awmod@sign^0,c
  5681   001976                     i2l2799:
  5682   001976  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  5683   001978  D004               	goto	i2l2803
  5684   00197A  6C03               	negf	i2___awmod@divisor^0,c
  5685   00197C  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  5686   00197E  B0D8               	btfsc	status,0,c
  5687   001980  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  5688   001982                     i2l2803:
  5689   001982  5003               	movf	i2___awmod@divisor^0,w,c
  5690   001984  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  5691   001986  B4D8               	btfsc	status,2,c
  5692   001988  D018               	goto	i2l2819
  5693   00198A  0E01               	movlw	1
  5694   00198C  6E05               	movwf	i2___awmod@counter^0,c
  5695   00198E  D004               	goto	i2l2809
  5696   001990                     i2l2807:
  5697   001990  90D8               	bcf	status,0,c
  5698   001992  3603               	rlcf	i2___awmod@divisor^0,f,c
  5699   001994  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  5700   001996  2A05               	incf	i2___awmod@counter^0,f,c
  5701   001998                     i2l2809:
  5702   001998  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  5703   00199A  D7FA               	goto	i2l2807
  5704   00199C                     i2u175_40:
  5705   00199C  5003               	movf	i2___awmod@divisor^0,w,c
  5706   00199E  5C01               	subwf	i2___awmod@dividend^0,w,c
  5707   0019A0  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5708   0019A2  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  5709   0019A4  A0D8               	btfss	status,0,c
  5710   0019A6  D004               	goto	i2l2815
  5711   0019A8  5003               	movf	i2___awmod@divisor^0,w,c
  5712   0019AA  5E01               	subwf	i2___awmod@dividend^0,f,c
  5713   0019AC  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5714   0019AE  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  5715   0019B0                     i2l2815:
  5716   0019B0  90D8               	bcf	status,0,c
  5717   0019B2  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  5718   0019B4  3203               	rrcf	i2___awmod@divisor^0,f,c
  5719   0019B6  2E05               	decfsz	i2___awmod@counter^0,f,c
  5720   0019B8  D7F1               	goto	i2u175_40
  5721   0019BA                     i2l2819:
  5722   0019BA  5006               	movf	i2___awmod@sign^0,w,c
  5723   0019BC  B4D8               	btfsc	status,2,c
  5724   0019BE  D004               	goto	i2l2823
  5725   0019C0  6C01               	negf	i2___awmod@dividend^0,c
  5726   0019C2  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5727   0019C4  B0D8               	btfsc	status,0,c
  5728   0019C6  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5729   0019C8                     i2l2823:
  5730   0019C8  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  5731   0019CC  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  5732   0019D0  0012               	return		;funcret
  5733   0019D2                     __end_ofi2___awmod:
  5734                           	callstack 0
  5735                           
  5736 ;; *************** function i2___awdiv *****************
  5737 ;; Defined at:
  5738 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c90/common/awdiv.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  dividend        2    0[COMRAM] int 
  5741 ;;  divisor         2    2[COMRAM] int 
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;  quotient        2    6[COMRAM] int 
  5744 ;;  sign            1    5[COMRAM] unsigned char 
  5745 ;;  counter         1    4[COMRAM] unsigned char 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  2    0[COMRAM] int 
  5748 ;; Registers used:
  5749 ;;		wreg, status,2, status,0
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5755 ;;      Params:         4       0       0       0       0       0       0       0       0
  5756 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5758 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5759 ;;Total ram usage:        8 bytes
  5760 ;; Hardware stack levels used: 1
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		i2_ContarReal
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text38
  5769   00177E                     __ptext38:
  5770                           	callstack 0
  5771   00177E                     i2___awdiv:
  5772                           	callstack 22
  5773                           
  5774                           ;incstack = 0
  5775   00177E  0E00               	movlw	0
  5776   001780  6E06               	movwf	i2___awdiv@sign^0,c
  5777   001782  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  5778   001784  D006               	goto	i2l2755
  5779   001786  6C03               	negf	i2___awdiv@divisor^0,c
  5780   001788  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  5781   00178A  B0D8               	btfsc	status,0,c
  5782   00178C  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  5783   00178E  0E01               	movlw	1
  5784   001790  6E06               	movwf	i2___awdiv@sign^0,c
  5785   001792                     i2l2755:
  5786   001792  AE02               	btfss	(i2___awdiv@dividend+1)^0,7,c
  5787   001794  D006               	goto	i2l2761
  5788   001796  6C01               	negf	i2___awdiv@dividend^0,c
  5789   001798  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  5790   00179A  B0D8               	btfsc	status,0,c
  5791   00179C  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  5792   00179E  0E01               	movlw	1
  5793   0017A0  1A06               	xorwf	i2___awdiv@sign^0,f,c
  5794   0017A2                     i2l2761:
  5795   0017A2  0E00               	movlw	0
  5796   0017A4  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  5797   0017A6  0E00               	movlw	0
  5798   0017A8  6E07               	movwf	i2___awdiv@quotient^0,c
  5799   0017AA  5003               	movf	i2___awdiv@divisor^0,w,c
  5800   0017AC  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  5801   0017AE  B4D8               	btfsc	status,2,c
  5802   0017B0  D01C               	goto	i2l2783
  5803   0017B2  0E01               	movlw	1
  5804   0017B4  6E05               	movwf	i2___awdiv@counter^0,c
  5805   0017B6  D004               	goto	i2l2769
  5806   0017B8                     i2l2767:
  5807   0017B8  90D8               	bcf	status,0,c
  5808   0017BA  3603               	rlcf	i2___awdiv@divisor^0,f,c
  5809   0017BC  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  5810   0017BE  2A05               	incf	i2___awdiv@counter^0,f,c
  5811   0017C0                     i2l2769:
  5812   0017C0  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  5813   0017C2  D7FA               	goto	i2l2767
  5814   0017C4                     i2u169_40:
  5815   0017C4  90D8               	bcf	status,0,c
  5816   0017C6  3607               	rlcf	i2___awdiv@quotient^0,f,c
  5817   0017C8  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  5818   0017CA  5003               	movf	i2___awdiv@divisor^0,w,c
  5819   0017CC  5C01               	subwf	i2___awdiv@dividend^0,w,c
  5820   0017CE  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  5821   0017D0  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  5822   0017D2  A0D8               	btfss	status,0,c
  5823   0017D4  D005               	goto	i2l2779
  5824   0017D6  5003               	movf	i2___awdiv@divisor^0,w,c
  5825   0017D8  5E01               	subwf	i2___awdiv@dividend^0,f,c
  5826   0017DA  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  5827   0017DC  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  5828   0017DE  8007               	bsf	i2___awdiv@quotient^0,0,c
  5829   0017E0                     i2l2779:
  5830   0017E0  90D8               	bcf	status,0,c
  5831   0017E2  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  5832   0017E4  3203               	rrcf	i2___awdiv@divisor^0,f,c
  5833   0017E6  2E05               	decfsz	i2___awdiv@counter^0,f,c
  5834   0017E8  D7ED               	goto	i2u169_40
  5835   0017EA                     i2l2783:
  5836   0017EA  5006               	movf	i2___awdiv@sign^0,w,c
  5837   0017EC  B4D8               	btfsc	status,2,c
  5838   0017EE  D004               	goto	i2l2787
  5839   0017F0  6C07               	negf	i2___awdiv@quotient^0,c
  5840   0017F2  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  5841   0017F4  B0D8               	btfsc	status,0,c
  5842   0017F6  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  5843   0017F8                     i2l2787:
  5844   0017F8  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  5845   0017FC  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  5846   001800  0012               	return		;funcret
  5847   001802                     __end_ofi2___awdiv:
  5848                           	callstack 0
  5849                           
  5850 ;; *************** function _escenario4 *****************
  5851 ;; Defined at:
  5852 ;;		line 211 in file "Lab4.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;		None
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;		None
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  1    wreg      void 
  5859 ;; Registers used:
  5860 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5861 ;; Tracked objects:
  5862 ;;		On entry : 3F/0
  5863 ;;		On exit  : 3F/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5866 ;;      Params:         0       0       0       0       0       0       0       0       0
  5867 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5869 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5870 ;;Total ram usage:        0 bytes
  5871 ;; Hardware stack levels used: 1
  5872 ;; Hardware stack levels required when called: 3
  5873 ;; This function calls:
  5874 ;;		i2_Lcd_Clear
  5875 ;;		i2_Lcd_NoBlink
  5876 ;;		i2_Lcd_Set_Cursor
  5877 ;;		i2_Lcd_Write_Char
  5878 ;;		i2_Lcd_Write_String
  5879 ;; This function is called by:
  5880 ;;		_ISR
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text39
  5885   001C42                     __ptext39:
  5886                           	callstack 0
  5887   001C42                     _escenario4:
  5888                           	callstack 21
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;Lab4.c: 212: Lcd_Clear();
  5892                           
  5893                           ;incstack = 0
  5894   001C42  EC2C  F010         	call	i2_Lcd_Clear	;wreg free
  5895                           
  5896                           ;Lab4.c: 213: Lcd_NoBlink();
  5897   001C46  EC25  F010         	call	i2_Lcd_NoBlink	;wreg free
  5898                           
  5899                           ;Lab4.c: 214: Lcd_Set_Cursor(1, 1);
  5900   001C4A  0E01               	movlw	1
  5901   001C4C  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  5902   001C4E  0E01               	movlw	1
  5903   001C50  EC54  F00A         	call	i2_Lcd_Set_Cursor
  5904                           
  5905                           ;Lab4.c: 215: Lcd_Write_String("Parada de");
  5906   001C54  0EAE               	movlw	low STR_13
  5907   001C56  6E05               	movwf	i2Lcd_Write_String@a^0,c
  5908   001C58  EC82  F00E         	call	i2_Lcd_Write_String	;wreg free
  5909                           
  5910                           ;Lab4.c: 216: Lcd_Set_Cursor(2, 1);
  5911   001C5C  0E01               	movlw	1
  5912   001C5E  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  5913   001C60  0E02               	movlw	2
  5914   001C62  EC54  F00A         	call	i2_Lcd_Set_Cursor
  5915                           
  5916                           ;Lab4.c: 217: Lcd_Write_String("Emergencia ");
  5917   001C66  0E77               	movlw	low STR_14
  5918   001C68  6E05               	movwf	i2Lcd_Write_String@a^0,c
  5919   001C6A  EC82  F00E         	call	i2_Lcd_Write_String	;wreg free
  5920                           
  5921                           ;Lab4.c: 218: Lcd_Write_Char(3);
  5922   001C6E  0E03               	movlw	3
  5923   001C70  ECBD  F00E         	call	i2_Lcd_Write_Char
  5924                           
  5925                           ;Lab4.c: 219: flagParar = 0;
  5926   001C74  0E00               	movlw	0
  5927   001C76  0100               	movlb	0	; () banked
  5928   001C78  6F74               	movwf	(_flagParar+1)& (0+255),b
  5929   001C7A  0E00               	movlw	0
  5930   001C7C  6F73               	movwf	_flagParar& (0+255),b
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;Lab4.c: 220: LATE=rojo;
  5934   001C7E  C06F  FF8D         	movff	_rojo,3981	;volatile
  5935                           
  5936                           ; BSR set to: 0
  5937   001C82  0012               	return		;funcret
  5938   001C84                     __end_of_escenario4:
  5939                           	callstack 0
  5940                           
  5941 ;; *************** function _borrarDigito *****************
  5942 ;; Defined at:
  5943 ;;		line 249 in file "Lab4.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;		None
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      void 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 3F/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5957 ;;      Params:         0       0       0       0       0       0       0       0       0
  5958 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5960 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5961 ;;Total ram usage:        0 bytes
  5962 ;; Hardware stack levels used: 1
  5963 ;; Hardware stack levels required when called: 3
  5964 ;; This function calls:
  5965 ;;		i2_Lcd_Set_Cursor
  5966 ;;		i2_Lcd_Write_Char
  5967 ;; This function is called by:
  5968 ;;		_ISR
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text40
  5973   001AE4                     __ptext40:
  5974                           	callstack 0
  5975   001AE4                     _borrarDigito:
  5976                           	callstack 21
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;Lab4.c: 250: if (digito != 1) {
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;incstack = 0
  5983   001AE4  0448               	decf	_digito^0,w,c
  5984   001AE6  1049               	iorwf	(_digito+1)^0,w,c
  5985   001AE8  B4D8               	btfsc	status,2,c
  5986   001AEA  0012               	return	
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;Lab4.c: 251: Lcd_Set_Cursor(2, digito - 1);
  5990   001AEC  0448               	decf	_digito^0,w,c
  5991   001AEE  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  5992   001AF0  0E02               	movlw	2
  5993   001AF2  EC54  F00A         	call	i2_Lcd_Set_Cursor
  5994                           
  5995                           ;Lab4.c: 252: Lcd_Write_Char(' ');
  5996   001AF6  0E20               	movlw	32
  5997   001AF8  ECBD  F00E         	call	i2_Lcd_Write_Char
  5998                           
  5999                           ;Lab4.c: 253: Lcd_Set_Cursor(2, digito - 1);
  6000   001AFC  0448               	decf	_digito^0,w,c
  6001   001AFE  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  6002   001B00  0E02               	movlw	2
  6003   001B02  EC54  F00A         	call	i2_Lcd_Set_Cursor
  6004                           
  6005                           ;Lab4.c: 254: digito--;
  6006   001B06  0648               	decf	_digito^0,f,c
  6007   001B08  A0D8               	btfss	status,0,c
  6008   001B0A  0649               	decf	(_digito+1)^0,f,c
  6009                           
  6010                           ;Lab4.c: 255: if(digito == 1) decena = 0;
  6011   001B0C  0448               	decf	_digito^0,w,c
  6012   001B0E  1049               	iorwf	(_digito+1)^0,w,c
  6013   001B10  A4D8               	btfss	status,2,c
  6014   001B12  D005               	goto	i2l3505
  6015   001B14  0E00               	movlw	0
  6016   001B16  6E46               	movwf	(_decena+1)^0,c
  6017   001B18  0E00               	movlw	0
  6018   001B1A  6E45               	movwf	_decena^0,c
  6019   001B1C  0012               	return	
  6020   001B1E                     i2l3505:
  6021                           
  6022                           ;Lab4.c: 256: else if(digito == 2) unidad = 0;
  6023   001B1E  0E02               	movlw	2
  6024   001B20  1848               	xorwf	_digito^0,w,c
  6025   001B22  1049               	iorwf	(_digito+1)^0,w,c
  6026   001B24  A4D8               	btfss	status,2,c
  6027   001B26  0012               	return	
  6028   001B28  0E00               	movlw	0
  6029   001B2A  6E44               	movwf	(_unidad+1)^0,c
  6030   001B2C  0E00               	movlw	0
  6031   001B2E  6E43               	movwf	_unidad^0,c
  6032   001B30  0012               	return		;funcret
  6033   001B32                     __end_of_borrarDigito:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _blacklighttoggle *****************
  6037 ;; Defined at:
  6038 ;;		line 162 in file "Lab4.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		None
  6047 ;; Tracked objects:
  6048 ;;		On entry : 3F/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6052 ;;      Params:         0       0       0       0       0       0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6055 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6056 ;;Total ram usage:        0 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; This function calls:
  6059 ;;		Nothing
  6060 ;; This function is called by:
  6061 ;;		_ISR
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text41
  6066   002066                     __ptext41:
  6067                           	callstack 0
  6068   002066                     _blacklighttoggle:
  6069                           	callstack 24
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;Lab4.c: 163: LATA5=!LATA5;
  6073                           
  6074                           ;incstack = 0
  6075   002066  BA89               	btfsc	3977,5,c	;volatile
  6076   002068  D002               	goto	i2u236_40
  6077   00206A  8A89               	bsf	3977,5,c	;volatile
  6078   00206C  0012               	return	
  6079   00206E                     i2u236_40:
  6080   00206E  9A89               	bcf	3977,5,c	;volatile
  6081   002070  0012               	return		;funcret
  6082   002072                     __end_of_blacklighttoggle:
  6083                           	callstack 0
  6084                           
  6085 ;; *************** function _Trasmitir *****************
  6086 ;; Defined at:
  6087 ;;		line 307 in file "Lab4.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;		None
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  i               2    0[COMRAM] int 
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      void 
  6094 ;; Registers used:
  6095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6101 ;;      Params:         0       0       0       0       0       0       0       0       0
  6102 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6104 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6105 ;;Total ram usage:        2 bytes
  6106 ;; Hardware stack levels used: 1
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_ISR
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text42
  6115   001E54                     __ptext42:
  6116                           	callstack 0
  6117   001E54                     _Trasmitir:
  6118                           	callstack 24
  6119                           
  6120                           ;Lab4.c: 308: int i;;Lab4.c: 309: for(i=0;buffer[i]!='\0';i++)
  6121                           
  6122                           ;incstack = 0
  6123   001E54  0E00               	movlw	0
  6124   001E56  6E02               	movwf	(Trasmitir@i+1)^0,c
  6125   001E58  0E00               	movlw	0
  6126   001E5A  6E01               	movwf	Trasmitir@i^0,c
  6127   001E5C  D00A               	goto	i2l3531
  6128   001E5E                     i2l333:
  6129   001E5E  A2AC               	btfss	4012,1,c	;volatile
  6130   001E60  D7FE               	goto	i2l333
  6131                           
  6132                           ;Lab4.c: 312: TXREG = buffer[i];
  6133   001E62  5001               	movf	Trasmitir@i^0,w,c
  6134   001E64  0F75               	addlw	low _buffer
  6135   001E66  6ED9               	movwf	fsr2l,c
  6136   001E68  6ADA               	clrf	fsr2h,c
  6137   001E6A  50DF               	movf	indf2,w,c
  6138   001E6C  6EAD               	movwf	173,c	;volatile
  6139   001E6E  4A01               	infsnz	Trasmitir@i^0,f,c
  6140   001E70  2A02               	incf	(Trasmitir@i+1)^0,f,c
  6141   001E72                     i2l3531:
  6142   001E72  5001               	movf	Trasmitir@i^0,w,c
  6143   001E74  0F75               	addlw	low _buffer
  6144   001E76  6ED9               	movwf	fsr2l,c
  6145   001E78  6ADA               	clrf	fsr2h,c
  6146   001E7A  50DF               	movf	indf2,w,c
  6147   001E7C  A4D8               	btfss	status,2,c
  6148   001E7E  D7EF               	goto	i2l333
  6149                           
  6150                           ;Lab4.c: 313: };Lab4.c: 314: TXREG = '\n';
  6151   001E80  0E0A               	movlw	10
  6152   001E82  6EAD               	movwf	173,c	;volatile
  6153   001E84  0012               	return		;funcret
  6154   001E86                     __end_of_Trasmitir:
  6155                           	callstack 0
  6156                           
  6157 ;; *************** function _Terminar *****************
  6158 ;; Defined at:
  6159 ;;		line 302 in file "Lab4.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;		None
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;		None
  6164 ;; Return value:  Size  Location     Type
  6165 ;;                  1    wreg      void 
  6166 ;; Registers used:
  6167 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6168 ;; Tracked objects:
  6169 ;;		On entry : 3F/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6173 ;;      Params:         0       0       0       0       0       0       0       0       0
  6174 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6176 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6177 ;;Total ram usage:        0 bytes
  6178 ;; Hardware stack levels used: 1
  6179 ;; Hardware stack levels required when called: 4
  6180 ;; This function calls:
  6181 ;;		i2_escenario1
  6182 ;;		i2_vaciar
  6183 ;; This function is called by:
  6184 ;;		_ISR
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           	psect	text43
  6189   002072                     __ptext43:
  6190                           	callstack 0
  6191   002072                     _Terminar:
  6192                           	callstack 20
  6193                           
  6194                           ; BSR set to: 0
  6195                           ;Lab4.c: 303: vaciar();
  6196                           
  6197                           ;incstack = 0
  6198   002072  EC42  F00E         	call	i2_vaciar	;wreg free
  6199                           
  6200                           ;Lab4.c: 304: escenario1();
  6201   002076  ECBC  F00D         	call	i2_escenario1	;wreg free
  6202   00207A  0012               	return		;funcret
  6203   00207C                     __end_of_Terminar:
  6204                           	callstack 0
  6205                           
  6206 ;; *************** function i2_vaciar *****************
  6207 ;; Defined at:
  6208 ;;		line 280 in file "Lab4.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;		None
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;		None
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  1    wreg      void 
  6215 ;; Registers used:
  6216 ;;		wreg, status,2, status,0
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6222 ;;      Params:         0       0       0       0       0       0       0       0       0
  6223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6225 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6226 ;;Total ram usage:        0 bytes
  6227 ;; Hardware stack levels used: 1
  6228 ;; This function calls:
  6229 ;;		Nothing
  6230 ;; This function is called by:
  6231 ;;		_Terminar
  6232 ;;		i2_ContarReal
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           	psect	text44
  6237   001C84                     __ptext44:
  6238                           	callstack 0
  6239   001C84                     i2_vaciar:
  6240                           	callstack 22
  6241                           
  6242                           ;Lab4.c: 281: unidad = 0 ;
  6243                           
  6244                           ;incstack = 0
  6245   001C84  0E00               	movlw	0
  6246   001C86  6E44               	movwf	(_unidad+1)^0,c
  6247   001C88  0E00               	movlw	0
  6248   001C8A  6E43               	movwf	_unidad^0,c
  6249                           
  6250                           ;Lab4.c: 282: unidad = 0;
  6251   001C8C  0E00               	movlw	0
  6252   001C8E  6E44               	movwf	(_unidad+1)^0,c
  6253   001C90  0E00               	movlw	0
  6254   001C92  6E43               	movwf	_unidad^0,c
  6255                           
  6256                           ;Lab4.c: 283: cantidadRestaUnidad =0b00110000 + unidad;
  6257   001C94  0E30               	movlw	48
  6258   001C96  2443               	addwf	_unidad^0,w,c
  6259   001C98  6E3B               	movwf	_cantidadRestaUnidad^0,c
  6260   001C9A  0E00               	movlw	0
  6261   001C9C  2044               	addwfc	(_unidad+1)^0,w,c
  6262   001C9E  6E3C               	movwf	(_cantidadRestaUnidad+1)^0,c
  6263                           
  6264                           ;Lab4.c: 284: cantidadRestaDecena =0b00110000 + unidad;
  6265   001CA0  0E30               	movlw	48
  6266   001CA2  2443               	addwf	_unidad^0,w,c
  6267   001CA4  6E39               	movwf	_cantidadRestaDecena^0,c
  6268   001CA6  0E00               	movlw	0
  6269   001CA8  2044               	addwfc	(_unidad+1)^0,w,c
  6270   001CAA  6E3A               	movwf	(_cantidadRestaDecena+1)^0,c
  6271                           
  6272                           ;Lab4.c: 285: LATD = 0;
  6273   001CAC  0E00               	movlw	0
  6274   001CAE  6E8C               	movwf	140,c	;volatile
  6275                           
  6276                           ;Lab4.c: 286: LATE = color[0];
  6277   001CB0  C060  FF8D         	movff	_color,3981	;volatile
  6278                           
  6279                           ;Lab4.c: 287: contador =0;
  6280   001CB4  0E00               	movlw	0
  6281   001CB6  6E40               	movwf	(_contador+1)^0,c
  6282   001CB8  0E00               	movlw	0
  6283   001CBA  6E3F               	movwf	_contador^0,c
  6284                           
  6285                           ;Lab4.c: 288: digito = 1;
  6286   001CBC  0E00               	movlw	0
  6287   001CBE  6E49               	movwf	(_digito+1)^0,c
  6288   001CC0  0E01               	movlw	1
  6289   001CC2  6E48               	movwf	_digito^0,c
  6290   001CC4  0012               	return		;funcret
  6291   001CC6                     __end_ofi2_vaciar:
  6292                           	callstack 0
  6293                           
  6294 ;; *************** function i2_escenario1 *****************
  6295 ;; Defined at:
  6296 ;;		line 166 in file "Lab4.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;		None
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;		None
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  1    wreg      void 
  6303 ;; Registers used:
  6304 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6310 ;;      Params:         0       0       0       0       0       0       0       0       0
  6311 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6313 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6314 ;;Total ram usage:        0 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; Hardware stack levels required when called: 3
  6317 ;; This function calls:
  6318 ;;		i2_Lcd_Blink
  6319 ;;		i2_Lcd_Clear
  6320 ;;		i2_Lcd_Set_Cursor
  6321 ;;		i2_Lcd_Write_Char
  6322 ;;		i2_Lcd_Write_String
  6323 ;; This function is called by:
  6324 ;;		_Terminar
  6325 ;;		_okmenu
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text45
  6330   001B78                     __ptext45:
  6331                           	callstack 0
  6332   001B78                     i2_escenario1:
  6333                           	callstack 20
  6334                           
  6335                           ;Lab4.c: 167: menu=1;
  6336                           
  6337                           ;incstack = 0
  6338   001B78  0E00               	movlw	0
  6339   001B7A  6E4B               	movwf	(_menu+1)^0,c
  6340   001B7C  0E01               	movlw	1
  6341   001B7E  6E4A               	movwf	_menu^0,c
  6342                           
  6343                           ;Lab4.c: 168: Lcd_Clear();
  6344   001B80  EC2C  F010         	call	i2_Lcd_Clear	;wreg free
  6345                           
  6346                           ;Lab4.c: 169: Lcd_Set_Cursor(1, 1);
  6347   001B84  0E01               	movlw	1
  6348   001B86  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  6349   001B88  0E01               	movlw	1
  6350   001B8A  EC54  F00A         	call	i2_Lcd_Set_Cursor
  6351                           
  6352                           ;Lab4.c: 170: Lcd_Write_String("Piezas a contar:");
  6353   001B8E  0E57               	movlw	low STR_5
  6354   001B90  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6355   001B92  EC82  F00E         	call	i2_Lcd_Write_String	;wreg free
  6356                           
  6357                           ;Lab4.c: 171: Lcd_Set_Cursor(2, 9);
  6358   001B96  0E09               	movlw	9
  6359   001B98  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  6360   001B9A  0E02               	movlw	2
  6361   001B9C  EC54  F00A         	call	i2_Lcd_Set_Cursor
  6362                           
  6363                           ;Lab4.c: 172: Lcd_Write_String("A:ok B:");
  6364   001BA0  0EB8               	movlw	low STR_6
  6365   001BA2  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6366   001BA4  EC82  F00E         	call	i2_Lcd_Write_String	;wreg free
  6367                           
  6368                           ;Lab4.c: 173: Lcd_Write_Char(0b01111111);
  6369   001BA8  0E7F               	movlw	127
  6370   001BAA  ECBD  F00E         	call	i2_Lcd_Write_Char
  6371                           
  6372                           ;Lab4.c: 174: Lcd_Set_Cursor(2, 1);
  6373   001BAE  0E01               	movlw	1
  6374   001BB0  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  6375   001BB2  0E02               	movlw	2
  6376   001BB4  EC54  F00A         	call	i2_Lcd_Set_Cursor
  6377                           
  6378                           ;Lab4.c: 175: Lcd_Blink();
  6379   001BB8  EC1E  F010         	call	i2_Lcd_Blink	;wreg free
  6380   001BBC  0012               	return		;funcret
  6381   001BBE                     __end_ofi2_escenario1:
  6382                           	callstack 0
  6383                           
  6384 ;; *************** function i2_Lcd_Blink *****************
  6385 ;; Defined at:
  6386 ;;		line 124 in file "lcd.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;		None
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;		None
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  1    wreg      void 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, cstack
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6400 ;;      Params:         0       0       0       0       0       0       0       0       0
  6401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6403 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6404 ;;Total ram usage:        0 bytes
  6405 ;; Hardware stack levels used: 1
  6406 ;; Hardware stack levels required when called: 2
  6407 ;; This function calls:
  6408 ;;		i2_Lcd_Cmd
  6409 ;; This function is called by:
  6410 ;;		i2_escenario1
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text46
  6415   00203C                     __ptext46:
  6416                           	callstack 0
  6417   00203C                     i2_Lcd_Blink:
  6418                           	callstack 20
  6419                           
  6420                           ;lcd.c: 126: Lcd_Cmd(0x00);
  6421                           
  6422                           ;incstack = 0
  6423   00203C  0E00               	movlw	0
  6424   00203E  ECEF  F00F         	call	i2_Lcd_Cmd
  6425                           
  6426                           ;lcd.c: 127: Lcd_Cmd(0x0F);
  6427   002042  0E0F               	movlw	15
  6428   002044  ECEF  F00F         	call	i2_Lcd_Cmd
  6429   002048  0012               	return		;funcret
  6430   00204A                     __end_ofi2_Lcd_Blink:
  6431                           	callstack 0
  6432                           
  6433 ;; *************** function _Reiniciar *****************
  6434 ;; Defined at:
  6435 ;;		line 291 in file "Lab4.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      void 
  6442 ;; Registers used:
  6443 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6444 ;; Tracked objects:
  6445 ;;		On entry : 3F/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0
  6450 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6452 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6453 ;;Total ram usage:        0 bytes
  6454 ;; Hardware stack levels used: 1
  6455 ;; Hardware stack levels required when called: 4
  6456 ;; This function calls:
  6457 ;;		i2_escenario2
  6458 ;; This function is called by:
  6459 ;;		_ISR
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text47
  6464   001E1E                     __ptext47:
  6465                           	callstack 0
  6466   001E1E                     _Reiniciar:
  6467                           	callstack 20
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;Lab4.c: 293: cantidadRestaUnidad =0b00110000 + unidad;
  6471                           
  6472                           ;incstack = 0
  6473   001E1E  0E30               	movlw	48
  6474   001E20  2443               	addwf	_unidad^0,w,c
  6475   001E22  6E3B               	movwf	_cantidadRestaUnidad^0,c
  6476   001E24  0E00               	movlw	0
  6477   001E26  2044               	addwfc	(_unidad+1)^0,w,c
  6478   001E28  6E3C               	movwf	(_cantidadRestaUnidad+1)^0,c
  6479                           
  6480                           ;Lab4.c: 294: cantidadRestaDecena =0b00110000 + decena;
  6481   001E2A  0E30               	movlw	48
  6482   001E2C  2445               	addwf	_decena^0,w,c
  6483   001E2E  6E39               	movwf	_cantidadRestaDecena^0,c
  6484   001E30  0E00               	movlw	0
  6485   001E32  2046               	addwfc	(_decena+1)^0,w,c
  6486   001E34  6E3A               	movwf	(_cantidadRestaDecena+1)^0,c
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;Lab4.c: 295: LATD = 0;
  6490   001E36  0E00               	movlw	0
  6491   001E38  6E8C               	movwf	140,c	;volatile
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;Lab4.c: 296: LATE = color[0];
  6495   001E3A  C060  FF8D         	movff	_color,3981	;volatile
  6496                           
  6497                           ; BSR set to: 0
  6498                           ;Lab4.c: 297: contador =0;
  6499   001E3E  0E00               	movlw	0
  6500   001E40  6E40               	movwf	(_contador+1)^0,c
  6501   001E42  0E00               	movlw	0
  6502   001E44  6E3F               	movwf	_contador^0,c
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;Lab4.c: 298: digito = 1;
  6506   001E46  0E00               	movlw	0
  6507   001E48  6E49               	movwf	(_digito+1)^0,c
  6508   001E4A  0E01               	movlw	1
  6509   001E4C  6E48               	movwf	_digito^0,c
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;Lab4.c: 299: escenario2();
  6513   001E4E  EC37  F00B         	call	i2_escenario2	;wreg free
  6514   001E52  0012               	return		;funcret
  6515   001E54                     __end_of_Reiniciar:
  6516                           	callstack 0
  6517                           
  6518 ;; *************** function i2_escenario2 *****************
  6519 ;; Defined at:
  6520 ;;		line 178 in file "Lab4.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;		None
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1    wreg      void 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6534 ;;      Params:         0       0       0       0       0       0       0       0       0
  6535 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6537 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6538 ;;Total ram usage:        0 bytes
  6539 ;; Hardware stack levels used: 1
  6540 ;; Hardware stack levels required when called: 3
  6541 ;; This function calls:
  6542 ;;		i2_Lcd_Clear
  6543 ;;		i2_Lcd_NoBlink
  6544 ;;		i2_Lcd_Set_Cursor
  6545 ;;		i2_Lcd_Write_Char
  6546 ;;		i2_Lcd_Write_String
  6547 ;; This function is called by:
  6548 ;;		_Reiniciar
  6549 ;;		i2_ContarReal
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text48
  6554   00166E                     __ptext48:
  6555                           	callstack 0
  6556   00166E                     i2_escenario2:
  6557                           	callstack 19
  6558                           
  6559                           ;Lab4.c: 179: menu=2;
  6560                           
  6561                           ;incstack = 0
  6562   00166E  0E00               	movlw	0
  6563   001670  6E4B               	movwf	(_menu+1)^0,c
  6564   001672  0E02               	movlw	2
  6565   001674  6E4A               	movwf	_menu^0,c
  6566                           
  6567                           ;Lab4.c: 180: mostrar = 1;
  6568   001676  0E00               	movlw	0
  6569   001678  0100               	movlb	0	; () banked
  6570   00167A  6F9C               	movwf	(_mostrar+1)& (0+255),b
  6571   00167C  0E01               	movlw	1
  6572   00167E  6F9B               	movwf	_mostrar& (0+255),b
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;Lab4.c: 181: Lcd_Clear();
  6576   001680  EC2C  F010         	call	i2_Lcd_Clear	;wreg free
  6577                           
  6578                           ;Lab4.c: 182: Lcd_NoBlink();
  6579   001684  EC25  F010         	call	i2_Lcd_NoBlink	;wreg free
  6580                           
  6581                           ;Lab4.c: 183: Lcd_Set_Cursor(1, 1);
  6582   001688  0E01               	movlw	1
  6583   00168A  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  6584   00168C  0E01               	movlw	1
  6585   00168E  EC54  F00A         	call	i2_Lcd_Set_Cursor
  6586                           
  6587                           ;Lab4.c: 184: Lcd_Write_String("Faltante:");
  6588   001692  0E9A               	movlw	low STR_7
  6589   001694  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6590   001696  EC82  F00E         	call	i2_Lcd_Write_String	;wreg free
  6591                           
  6592                           ;Lab4.c: 185: Lcd_Write_Char(cantidadRestaDecena);
  6593   00169A  5039               	movf	_cantidadRestaDecena^0,w,c
  6594   00169C  ECBD  F00E         	call	i2_Lcd_Write_Char
  6595                           
  6596                           ;Lab4.c: 186: Lcd_Write_Char(cantidadRestaUnidad);
  6597   0016A0  503B               	movf	_cantidadRestaUnidad^0,w,c
  6598   0016A2  ECBD  F00E         	call	i2_Lcd_Write_Char
  6599                           
  6600                           ;Lab4.c: 187: Lcd_Set_Cursor(1, 14);
  6601   0016A6  0E0E               	movlw	14
  6602   0016A8  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  6603   0016AA  0E01               	movlw	1
  6604   0016AC  EC54  F00A         	call	i2_Lcd_Set_Cursor
  6605                           
  6606                           ;Lab4.c: 188: Lcd_Write_String("C=");
  6607   0016B0  0EC9               	movlw	low STR_8
  6608   0016B2  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6609   0016B4  EC82  F00E         	call	i2_Lcd_Write_String	;wreg free
  6610                           
  6611                           ;Lab4.c: 189: Lcd_Write_Char(4);
  6612   0016B8  0E04               	movlw	4
  6613   0016BA  ECBD  F00E         	call	i2_Lcd_Write_Char
  6614                           
  6615                           ;Lab4.c: 190: Lcd_Set_Cursor(2, 1);
  6616   0016BE  0E01               	movlw	1
  6617   0016C0  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  6618   0016C2  0E02               	movlw	2
  6619   0016C4  EC54  F00A         	call	i2_Lcd_Set_Cursor
  6620                           
  6621                           ;Lab4.c: 191: Lcd_Write_String("Objetivo:");
  6622   0016C8  0EA4               	movlw	low STR_9
  6623   0016CA  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6624   0016CC  EC82  F00E         	call	i2_Lcd_Write_String	;wreg free
  6625                           
  6626                           ;Lab4.c: 192: Lcd_Write_Char(0b00110000 + decena);
  6627   0016D0  5045               	movf	_decena^0,w,c
  6628   0016D2  0F30               	addlw	48
  6629   0016D4  ECBD  F00E         	call	i2_Lcd_Write_Char
  6630                           
  6631                           ;Lab4.c: 193: Lcd_Write_Char(0b00110000 + unidad);
  6632   0016D8  5043               	movf	_unidad^0,w,c
  6633   0016DA  0F30               	addlw	48
  6634   0016DC  ECBD  F00E         	call	i2_Lcd_Write_Char
  6635                           
  6636                           ;Lab4.c: 194: Lcd_Set_Cursor(2, 14);
  6637   0016E0  0E0E               	movlw	14
  6638   0016E2  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  6639   0016E4  0E02               	movlw	2
  6640   0016E6  EC54  F00A         	call	i2_Lcd_Set_Cursor
  6641                           
  6642                           ;Lab4.c: 195: Lcd_Write_String("#=X");
  6643   0016EA  0EC5               	movlw	low STR_10
  6644   0016EC  6E05               	movwf	i2Lcd_Write_String@a^0,c
  6645   0016EE  EC82  F00E         	call	i2_Lcd_Write_String	;wreg free
  6646                           
  6647                           ;Lab4.c: 196: Lcd_Write_Char(3);
  6648   0016F2  0E03               	movlw	3
  6649   0016F4  ECBD  F00E         	call	i2_Lcd_Write_Char
  6650   0016F8  0012               	return		;funcret
  6651   0016FA                     __end_ofi2_escenario2:
  6652                           	callstack 0
  6653                           
  6654 ;; *************** function i2_Lcd_Write_String *****************
  6655 ;; Defined at:
  6656 ;;		line 105 in file "lcd.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  a               1    4[COMRAM] PTR const unsigned char 
  6659 ;;		 -> STR_14(12), STR_13(10), STR_12(5), STR_11(18), 
  6660 ;;		 -> STR_10(4), STR_9(10), STR_8(3), STR_7(10), 
  6661 ;;		 -> STR_6(8), STR_5(17), STR_3(12), STR_2(11), 
  6662 ;;		 -> STR_1(15), 
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;  i               2    6[COMRAM] int 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6674 ;;      Params:         1       0       0       0       0       0       0       0       0
  6675 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6676 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6677 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6678 ;;Total ram usage:        4 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; Hardware stack levels required when called: 2
  6681 ;; This function calls:
  6682 ;;		i2_Lcd_Write_Char
  6683 ;; This function is called by:
  6684 ;;		_escenario4
  6685 ;;		i2_escenario1
  6686 ;;		i2_escenario2
  6687 ;;		i2_escenario3
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text49
  6692   001D04                     __ptext49:
  6693                           	callstack 0
  6694   001D04                     i2_Lcd_Write_String:
  6695                           	callstack 20
  6696                           
  6697                           ;lcd.c: 107: int i;;lcd.c: 108: for(i=0;a[i]!='\0';i++)
  6698                           
  6699                           ;incstack = 0
  6700   001D04  0E00               	movlw	0
  6701   001D06  6E08               	movwf	(i2Lcd_Write_String@i+1)^0,c
  6702   001D08  0E00               	movlw	0
  6703   001D0A  6E07               	movwf	i2Lcd_Write_String@i^0,c
  6704   001D0C  D00D               	goto	i2l2599
  6705   001D0E                     i2l2595:
  6706                           
  6707                           ;lcd.c: 109: Lcd_Write_Char(a[i]);
  6708   001D0E  5005               	movf	i2Lcd_Write_String@a^0,w,c
  6709   001D10  2407               	addwf	i2Lcd_Write_String@i^0,w,c
  6710   001D12  6E06               	movwf	??i2_Lcd_Write_String^0,c
  6711   001D14  C006  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  6712   001D18                     	if	1	;There is more than 1 active tblptr byte
  6713   001D18  0E08               	movlw	high __smallconst
  6714   001D1A  6EF7               	movwf	tblptrh,c
  6715   001D1C                     	endif
  6716   001D1C                     	if	0	;tblptru may be non-zero
  6717   001D1C                     	endif
  6718   001D1C                     	if	0	;tblptru may be non-zero
  6719   001D1C                     	endif
  6720   001D1C  0008               	tblrd		*
  6721   001D1E  50F5               	movf	tablat,w,c
  6722   001D20  ECBD  F00E         	call	i2_Lcd_Write_Char
  6723   001D24  4A07               	infsnz	i2Lcd_Write_String@i^0,f,c
  6724   001D26  2A08               	incf	(i2Lcd_Write_String@i+1)^0,f,c
  6725   001D28                     i2l2599:
  6726   001D28  5005               	movf	i2Lcd_Write_String@a^0,w,c
  6727   001D2A  2407               	addwf	i2Lcd_Write_String@i^0,w,c
  6728   001D2C  6E06               	movwf	??i2_Lcd_Write_String^0,c
  6729   001D2E  C006  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  6730   001D32                     	if	1	;There is more than 1 active tblptr byte
  6731   001D32  0E08               	movlw	high __smallconst
  6732   001D34  6EF7               	movwf	tblptrh,c
  6733   001D36                     	endif
  6734   001D36                     	if	0	;tblptru may be non-zero
  6735   001D36                     	endif
  6736   001D36                     	if	0	;tblptru may be non-zero
  6737   001D36                     	endif
  6738   001D36  0008               	tblrd		*
  6739   001D38  50F5               	movf	tablat,w,c
  6740   001D3A  0900               	iorlw	0
  6741   001D3C  B4D8               	btfsc	status,2,c
  6742   001D3E  0012               	return	
  6743   001D40  D7E6               	goto	i2l2595
  6744   001D42                     __end_ofi2_Lcd_Write_String:
  6745                           	callstack 0
  6746                           
  6747 ;; *************** function i2_Lcd_Set_Cursor *****************
  6748 ;; Defined at:
  6749 ;;		line 27 in file "lcd.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  a               1    wreg     unsigned char 
  6752 ;;  b               1    2[COMRAM] unsigned char 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  a               1    3[COMRAM] unsigned char 
  6755 ;;  temp            1    6[COMRAM] unsigned char 
  6756 ;;  y               1    5[COMRAM] unsigned char 
  6757 ;;  z               1    4[COMRAM] unsigned char 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  1    wreg      void 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6767 ;;      Params:         1       0       0       0       0       0       0       0       0
  6768 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6770 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6771 ;;Total ram usage:        5 bytes
  6772 ;; Hardware stack levels used: 1
  6773 ;; Hardware stack levels required when called: 2
  6774 ;; This function calls:
  6775 ;;		i2_Lcd_Cmd
  6776 ;; This function is called by:
  6777 ;;		_escenario4
  6778 ;;		_borrarDigito
  6779 ;;		i2_escenario1
  6780 ;;		i2_escenario2
  6781 ;;		i2_escenario3
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           	psect	text50
  6786   0014A8                     __ptext50:
  6787                           	callstack 0
  6788   0014A8                     i2_Lcd_Set_Cursor:
  6789                           	callstack 20
  6790                           
  6791                           ;incstack = 0
  6792                           ;i2Lcd_Set_Cursor@a stored from wreg
  6793   0014A8  6E04               	movwf	i2Lcd_Set_Cursor@a^0,c
  6794                           
  6795                           ;lcd.c: 29: char temp,z,y;;lcd.c: 30: if(a == 1)
  6796   0014AA  0404               	decf	i2Lcd_Set_Cursor@a^0,w,c
  6797   0014AC  A4D8               	btfss	status,2,c
  6798   0014AE  D010               	goto	i2l2569
  6799                           
  6800                           ;lcd.c: 31: {;lcd.c: 32: temp = 0x80 + b - 1;
  6801   0014B0  5003               	movf	i2Lcd_Set_Cursor@b^0,w,c
  6802   0014B2  0F7F               	addlw	127
  6803   0014B4  6E07               	movwf	i2Lcd_Set_Cursor@temp^0,c
  6804                           
  6805                           ;lcd.c: 33: z = temp>>4;
  6806   0014B6  3807               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  6807   0014B8  0B0F               	andlw	15
  6808   0014BA  6E05               	movwf	i2Lcd_Set_Cursor@z^0,c
  6809                           
  6810                           ;lcd.c: 34: y = temp & 0x0F;
  6811   0014BC  5007               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  6812   0014BE  0B0F               	andlw	15
  6813   0014C0  6E06               	movwf	i2Lcd_Set_Cursor@y^0,c
  6814                           
  6815                           ;lcd.c: 35: Lcd_Cmd(z);
  6816   0014C2  5005               	movf	i2Lcd_Set_Cursor@z^0,w,c
  6817   0014C4  ECEF  F00F         	call	i2_Lcd_Cmd
  6818                           
  6819                           ;lcd.c: 36: Lcd_Cmd(y);
  6820   0014C8  5006               	movf	i2Lcd_Set_Cursor@y^0,w,c
  6821   0014CA  ECEF  F00F         	call	i2_Lcd_Cmd
  6822                           
  6823                           ;lcd.c: 37: }
  6824   0014CE  0012               	return	
  6825   0014D0                     i2l2569:
  6826                           
  6827                           ;lcd.c: 38: else if(a == 2)
  6828   0014D0  0E02               	movlw	2
  6829   0014D2  1804               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  6830   0014D4  A4D8               	btfss	status,2,c
  6831   0014D6  D010               	goto	i2l2577
  6832                           
  6833                           ;lcd.c: 39: {;lcd.c: 40: temp = 0xC0 + b - 1;
  6834   0014D8  5003               	movf	i2Lcd_Set_Cursor@b^0,w,c
  6835   0014DA  0FBF               	addlw	191
  6836   0014DC  6E07               	movwf	i2Lcd_Set_Cursor@temp^0,c
  6837                           
  6838                           ;lcd.c: 41: z = temp>>4;
  6839   0014DE  3807               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  6840   0014E0  0B0F               	andlw	15
  6841   0014E2  6E05               	movwf	i2Lcd_Set_Cursor@z^0,c
  6842                           
  6843                           ;lcd.c: 42: y = temp & 0x0F;
  6844   0014E4  5007               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  6845   0014E6  0B0F               	andlw	15
  6846   0014E8  6E06               	movwf	i2Lcd_Set_Cursor@y^0,c
  6847                           
  6848                           ;lcd.c: 43: Lcd_Cmd(z);
  6849   0014EA  5005               	movf	i2Lcd_Set_Cursor@z^0,w,c
  6850   0014EC  ECEF  F00F         	call	i2_Lcd_Cmd
  6851                           
  6852                           ;lcd.c: 44: Lcd_Cmd(y);
  6853   0014F0  5006               	movf	i2Lcd_Set_Cursor@y^0,w,c
  6854   0014F2  ECEF  F00F         	call	i2_Lcd_Cmd
  6855                           
  6856                           ;lcd.c: 45: }
  6857   0014F6  0012               	return	
  6858   0014F8                     i2l2577:
  6859                           
  6860                           ;lcd.c: 46: else if(a == 3)
  6861   0014F8  0E03               	movlw	3
  6862   0014FA  1804               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  6863   0014FC  A4D8               	btfss	status,2,c
  6864   0014FE  D010               	goto	i2l2585
  6865                           
  6866                           ;lcd.c: 47: {;lcd.c: 48: temp = 0x94 + b - 1;
  6867   001500  5003               	movf	i2Lcd_Set_Cursor@b^0,w,c
  6868   001502  0F93               	addlw	147
  6869   001504  6E07               	movwf	i2Lcd_Set_Cursor@temp^0,c
  6870                           
  6871                           ;lcd.c: 49: z = temp>>4;
  6872   001506  3807               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  6873   001508  0B0F               	andlw	15
  6874   00150A  6E05               	movwf	i2Lcd_Set_Cursor@z^0,c
  6875                           
  6876                           ;lcd.c: 50: y = temp & 0x0F;
  6877   00150C  5007               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  6878   00150E  0B0F               	andlw	15
  6879   001510  6E06               	movwf	i2Lcd_Set_Cursor@y^0,c
  6880                           
  6881                           ;lcd.c: 51: Lcd_Cmd(z);
  6882   001512  5005               	movf	i2Lcd_Set_Cursor@z^0,w,c
  6883   001514  ECEF  F00F         	call	i2_Lcd_Cmd
  6884                           
  6885                           ;lcd.c: 52: Lcd_Cmd(y);
  6886   001518  5006               	movf	i2Lcd_Set_Cursor@y^0,w,c
  6887   00151A  ECEF  F00F         	call	i2_Lcd_Cmd
  6888                           
  6889                           ;lcd.c: 53: }
  6890   00151E  0012               	return	
  6891   001520                     i2l2585:
  6892                           
  6893                           ;lcd.c: 54: else if(a == 4)
  6894   001520  0E04               	movlw	4
  6895   001522  1804               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  6896   001524  A4D8               	btfss	status,2,c
  6897   001526  0012               	return	
  6898                           
  6899                           ;lcd.c: 55: {;lcd.c: 56: temp = 0xD4 + b - 1;
  6900   001528  5003               	movf	i2Lcd_Set_Cursor@b^0,w,c
  6901   00152A  0FD3               	addlw	211
  6902   00152C  6E07               	movwf	i2Lcd_Set_Cursor@temp^0,c
  6903                           
  6904                           ;lcd.c: 57: z = temp>>4;
  6905   00152E  3807               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  6906   001530  0B0F               	andlw	15
  6907   001532  6E05               	movwf	i2Lcd_Set_Cursor@z^0,c
  6908                           
  6909                           ;lcd.c: 58: y = temp & 0x0F;
  6910   001534  5007               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  6911   001536  0B0F               	andlw	15
  6912   001538  6E06               	movwf	i2Lcd_Set_Cursor@y^0,c
  6913                           
  6914                           ;lcd.c: 59: Lcd_Cmd(z);
  6915   00153A  5005               	movf	i2Lcd_Set_Cursor@z^0,w,c
  6916   00153C  ECEF  F00F         	call	i2_Lcd_Cmd
  6917                           
  6918                           ;lcd.c: 60: Lcd_Cmd(y);
  6919   001540  5006               	movf	i2Lcd_Set_Cursor@y^0,w,c
  6920   001542  ECEF  F00F         	call	i2_Lcd_Cmd
  6921   001546  0012               	return	
  6922   001548                     __end_ofi2_Lcd_Set_Cursor:
  6923                           	callstack 0
  6924                           
  6925 ;; *************** function i2_Lcd_NoBlink *****************
  6926 ;; Defined at:
  6927 ;;		line 130 in file "lcd.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;		None
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  1    wreg      void 
  6934 ;; Registers used:
  6935 ;;		wreg, status,2, cstack
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6941 ;;      Params:         0       0       0       0       0       0       0       0       0
  6942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6944 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6945 ;;Total ram usage:        0 bytes
  6946 ;; Hardware stack levels used: 1
  6947 ;; Hardware stack levels required when called: 2
  6948 ;; This function calls:
  6949 ;;		i2_Lcd_Cmd
  6950 ;; This function is called by:
  6951 ;;		_escenario4
  6952 ;;		i2_escenario2
  6953 ;;		i2_escenario3
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           	psect	text51
  6958   00204A                     __ptext51:
  6959                           	callstack 0
  6960   00204A                     i2_Lcd_NoBlink:
  6961                           	callstack 19
  6962                           
  6963                           ;lcd.c: 132: Lcd_Cmd(0x00);
  6964                           
  6965                           ;incstack = 0
  6966   00204A  0E00               	movlw	0
  6967   00204C  ECEF  F00F         	call	i2_Lcd_Cmd
  6968                           
  6969                           ;lcd.c: 133: Lcd_Cmd(0x0C);
  6970   002050  0E0C               	movlw	12
  6971   002052  ECEF  F00F         	call	i2_Lcd_Cmd
  6972   002056  0012               	return		;funcret
  6973   002058                     __end_ofi2_Lcd_NoBlink:
  6974                           	callstack 0
  6975                           
  6976 ;; *************** function i2_Lcd_Clear *****************
  6977 ;; Defined at:
  6978 ;;		line 21 in file "lcd.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;		None
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;		None
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  1    wreg      void 
  6985 ;; Registers used:
  6986 ;;		wreg, status,2, cstack
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6992 ;;      Params:         0       0       0       0       0       0       0       0       0
  6993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6995 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6996 ;;Total ram usage:        0 bytes
  6997 ;; Hardware stack levels used: 1
  6998 ;; Hardware stack levels required when called: 2
  6999 ;; This function calls:
  7000 ;;		i2_Lcd_Cmd
  7001 ;; This function is called by:
  7002 ;;		_escenario4
  7003 ;;		i2_escenario1
  7004 ;;		i2_escenario2
  7005 ;;		i2_escenario3
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text52
  7010   002058                     __ptext52:
  7011                           	callstack 0
  7012   002058                     i2_Lcd_Clear:
  7013                           	callstack 20
  7014                           
  7015                           ;lcd.c: 23: Lcd_Cmd(0);
  7016                           
  7017                           ;incstack = 0
  7018   002058  0E00               	movlw	0
  7019   00205A  ECEF  F00F         	call	i2_Lcd_Cmd
  7020                           
  7021                           ;lcd.c: 24: Lcd_Cmd(1);
  7022   00205E  0E01               	movlw	1
  7023   002060  ECEF  F00F         	call	i2_Lcd_Cmd
  7024   002064  0012               	return		;funcret
  7025   002066                     __end_ofi2_Lcd_Clear:
  7026                           	callstack 0
  7027                           
  7028 ;; *************** function i2_Lcd_Cmd *****************
  7029 ;; Defined at:
  7030 ;;		line 12 in file "lcd.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  a               1    wreg     unsigned char 
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;  a               1    1[COMRAM] unsigned char 
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  1    wreg      void 
  7037 ;; Registers used:
  7038 ;;		wreg, status,2, cstack
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7044 ;;      Params:         0       0       0       0       0       0       0       0       0
  7045 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7047 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7048 ;;Total ram usage:        1 bytes
  7049 ;; Hardware stack levels used: 1
  7050 ;; Hardware stack levels required when called: 1
  7051 ;; This function calls:
  7052 ;;		i2_Lcd_Port
  7053 ;; This function is called by:
  7054 ;;		i2_Lcd_Clear
  7055 ;;		i2_Lcd_Set_Cursor
  7056 ;;		i2_Lcd_Blink
  7057 ;;		i2_Lcd_NoBlink
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text53
  7062   001FDE                     __ptext53:
  7063                           	callstack 0
  7064   001FDE                     i2_Lcd_Cmd:
  7065                           	callstack 20
  7066                           
  7067                           ;incstack = 0
  7068                           ;i2Lcd_Cmd@a stored from wreg
  7069   001FDE  6E02               	movwf	i2Lcd_Cmd@a^0,c
  7070                           
  7071                           ;lcd.c: 14: LATAbits.LA3 = 0;
  7072   001FE0  9689               	bcf	137,3,c	;volatile
  7073                           
  7074                           ;lcd.c: 15: Lcd_Port(a);
  7075   001FE2  5002               	movf	i2Lcd_Cmd@a^0,w,c
  7076   001FE4  EC59  F00F         	call	i2_Lcd_Port
  7077                           
  7078                           ;lcd.c: 16: LATAbits.LA4 = 1;
  7079   001FE8  8889               	bsf	137,4,c	;volatile
  7080                           
  7081                           ;lcd.c: 17: _delay((unsigned long)((4)*(1000000/4000.0)));
  7082   001FEA  0EC8               	movlw	200
  7083   001FEC                     i2u369_47:
  7084   001FEC  D000               	nop2	
  7085   001FEE  2EE8               	decfsz	wreg,f,c
  7086   001FF0  D7FD               	bra	i2u369_47
  7087                           
  7088                           ;lcd.c: 18: LATAbits.LA4 = 0;
  7089   001FF2  9889               	bcf	137,4,c	;volatile
  7090   001FF4  0012               	return		;funcret
  7091   001FF6                     __end_ofi2_Lcd_Cmd:
  7092                           	callstack 0
  7093                           
  7094 ;; *************** function _PiezaAContar *****************
  7095 ;; Defined at:
  7096 ;;		line 232 in file "Lab4.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;  a               1    wreg     unsigned char 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  a               1    5[COMRAM] unsigned char 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 3F/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7110 ;;      Params:         0       0       0       0       0       0       0       0       0
  7111 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7112 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7113 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7114 ;;Total ram usage:        2 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; Hardware stack levels required when called: 2
  7117 ;; This function calls:
  7118 ;;		i2_Lcd_Write_Char
  7119 ;; This function is called by:
  7120 ;;		_ISR
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           	psect	text54
  7125   001A32                     __ptext54:
  7126                           	callstack 0
  7127   001A32                     _PiezaAContar:
  7128                           	callstack 22
  7129                           
  7130                           ;incstack = 0
  7131                           ;PiezaAContar@a stored from wreg
  7132   001A32  6E06               	movwf	PiezaAContar@a^0,c
  7133                           
  7134                           ;Lab4.c: 234: if (digito == 1) {
  7135   001A34  0448               	decf	_digito^0,w,c
  7136   001A36  1049               	iorwf	(_digito+1)^0,w,c
  7137   001A38  A4D8               	btfss	status,2,c
  7138   001A3A  D01A               	goto	i2l3487
  7139                           
  7140                           ;Lab4.c: 235: decena = a & 0x0f;
  7141   001A3C  C006  F005         	movff	PiezaAContar@a,??_PiezaAContar
  7142   001A40  0E0F               	movlw	15
  7143   001A42  1605               	andwf	??_PiezaAContar^0,f,c
  7144   001A44  5005               	movf	??_PiezaAContar^0,w,c
  7145   001A46  6E45               	movwf	_decena^0,c
  7146   001A48  6A46               	clrf	(_decena+1)^0,c
  7147                           
  7148                           ;Lab4.c: 236: if (decena >= 6) decena = 5;
  7149   001A4A  BE46               	btfsc	(_decena+1)^0,7,c
  7150   001A4C  D00A               	goto	i2l3483
  7151   001A4E  5046               	movf	(_decena+1)^0,w,c
  7152   001A50  E104               	bnz	i2u239_40
  7153   001A52  0E06               	movlw	6
  7154   001A54  5C45               	subwf	_decena^0,w,c
  7155   001A56  A0D8               	btfss	status,0,c
  7156   001A58  D004               	goto	i2l3483
  7157   001A5A                     i2u239_40:
  7158   001A5A  0E00               	movlw	0
  7159   001A5C  6E46               	movwf	(_decena+1)^0,c
  7160   001A5E  0E05               	movlw	5
  7161   001A60  6E45               	movwf	_decena^0,c
  7162   001A62                     i2l3483:
  7163                           
  7164                           ;Lab4.c: 237: Lcd_Write_Char(0b00110000 + decena);
  7165   001A62  5045               	movf	_decena^0,w,c
  7166   001A64  0F30               	addlw	48
  7167   001A66  ECBD  F00E         	call	i2_Lcd_Write_Char
  7168   001A6A                     i2l3485:
  7169                           
  7170                           ;Lab4.c: 238: digito++;
  7171   001A6A  4A48               	infsnz	_digito^0,f,c
  7172   001A6C  2A49               	incf	(_digito+1)^0,f,c
  7173                           
  7174                           ;Lab4.c: 239: }
  7175   001A6E  0012               	return	
  7176   001A70                     i2l3487:
  7177                           
  7178                           ;Lab4.c: 240: else if (digito == 2) {
  7179   001A70  0E02               	movlw	2
  7180   001A72  1848               	xorwf	_digito^0,w,c
  7181   001A74  1049               	iorwf	(_digito+1)^0,w,c
  7182   001A76  A4D8               	btfss	status,2,c
  7183   001A78  0012               	return	
  7184                           
  7185                           ;Lab4.c: 241: unidad = a & 0x0f;
  7186   001A7A  C006  F005         	movff	PiezaAContar@a,??_PiezaAContar
  7187   001A7E  0E0F               	movlw	15
  7188   001A80  1605               	andwf	??_PiezaAContar^0,f,c
  7189   001A82  5005               	movf	??_PiezaAContar^0,w,c
  7190   001A84  6E43               	movwf	_unidad^0,c
  7191   001A86  6A44               	clrf	(_unidad+1)^0,c
  7192                           
  7193                           ;Lab4.c: 242: Lcd_Write_Char(0b00110000 + unidad);
  7194   001A88  5043               	movf	_unidad^0,w,c
  7195   001A8A  0F30               	addlw	48
  7196   001A8C  ECBD  F00E         	call	i2_Lcd_Write_Char
  7197   001A90  D7EC               	goto	i2l3485
  7198   001A92                     __end_of_PiezaAContar:
  7199                           	callstack 0
  7200                           
  7201 ;; *************** function i2_Lcd_Write_Char *****************
  7202 ;; Defined at:
  7203 ;;		line 89 in file "lcd.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  a               1    wreg     unsigned char 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  a               1    3[COMRAM] unsigned char 
  7208 ;;  y               1    2[COMRAM] unsigned char 
  7209 ;;  temp            1    1[COMRAM] unsigned char 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, status,2, status,0, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0
  7220 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7222 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7223 ;;Total ram usage:        3 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; Hardware stack levels required when called: 1
  7226 ;; This function calls:
  7227 ;;		i2_Lcd_Port
  7228 ;; This function is called by:
  7229 ;;		_escenario4
  7230 ;;		_PiezaAContar
  7231 ;;		_borrarDigito
  7232 ;;		i2_Lcd_Write_String
  7233 ;;		i2_escenario1
  7234 ;;		i2_escenario2
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text55
  7239   001D7A                     __ptext55:
  7240                           	callstack 0
  7241   001D7A                     i2_Lcd_Write_Char:
  7242                           	callstack 20
  7243                           
  7244                           ;incstack = 0
  7245                           ;i2Lcd_Write_Char@a stored from wreg
  7246   001D7A  6E04               	movwf	i2Lcd_Write_Char@a^0,c
  7247                           
  7248                           ;lcd.c: 91: char temp,y;;lcd.c: 92: temp = a&0x0F;
  7249   001D7C  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  7250   001D7E  0B0F               	andlw	15
  7251   001D80  6E02               	movwf	i2Lcd_Write_Char@temp^0,c
  7252                           
  7253                           ;lcd.c: 93: y = a&0xF0;
  7254   001D82  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  7255   001D84  0BF0               	andlw	240
  7256   001D86  6E03               	movwf	i2Lcd_Write_Char@y^0,c
  7257                           
  7258                           ;lcd.c: 94: LATAbits.LA3 = 1;
  7259   001D88  8689               	bsf	137,3,c	;volatile
  7260                           
  7261                           ;lcd.c: 95: Lcd_Port(y>>4);
  7262   001D8A  3803               	swapf	i2Lcd_Write_Char@y^0,w,c
  7263   001D8C  0B0F               	andlw	15
  7264   001D8E  EC59  F00F         	call	i2_Lcd_Port
  7265                           
  7266                           ;lcd.c: 96: LATAbits.LA4 = 1;
  7267   001D92  8889               	bsf	137,4,c	;volatile
  7268                           
  7269                           ;lcd.c: 97: _delay((unsigned long)((40)*(1000000/4000000.0)));
  7270   001D94  0E03               	movlw	3
  7271   001D96                     i2u370_47:
  7272   001D96  2EE8               	decfsz	wreg,f,c
  7273   001D98  D7FE               	bra	i2u370_47
  7274   001D9A  0000               	nop	
  7275                           
  7276                           ;lcd.c: 98: LATAbits.LA4 = 0;
  7277   001D9C  9889               	bcf	137,4,c	;volatile
  7278                           
  7279                           ;lcd.c: 99: Lcd_Port(temp);
  7280   001D9E  5002               	movf	i2Lcd_Write_Char@temp^0,w,c
  7281   001DA0  EC59  F00F         	call	i2_Lcd_Port
  7282                           
  7283                           ;lcd.c: 100: LATAbits.LA4 = 1;
  7284   001DA4  8889               	bsf	137,4,c	;volatile
  7285                           
  7286                           ;lcd.c: 101: _delay((unsigned long)((40)*(1000000/4000000.0)));
  7287   001DA6  0E03               	movlw	3
  7288   001DA8                     i2u371_47:
  7289   001DA8  2EE8               	decfsz	wreg,f,c
  7290   001DAA  D7FE               	bra	i2u371_47
  7291   001DAC  0000               	nop	
  7292                           
  7293                           ;lcd.c: 102: LATAbits.LA4 = 0;
  7294   001DAE  9889               	bcf	137,4,c	;volatile
  7295   001DB0  0012               	return		;funcret
  7296   001DB2                     __end_ofi2_Lcd_Write_Char:
  7297                           	callstack 0
  7298                           
  7299 ;; *************** function i2_Lcd_Port *****************
  7300 ;; Defined at:
  7301 ;;		line 4 in file "lcd.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  a               1    wreg     unsigned char 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;  a               1    0[COMRAM] unsigned char 
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		wreg
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7315 ;;      Params:         0       0       0       0       0       0       0       0       0
  7316 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7318 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7319 ;;Total ram usage:        1 bytes
  7320 ;; Hardware stack levels used: 1
  7321 ;; This function calls:
  7322 ;;		Nothing
  7323 ;; This function is called by:
  7324 ;;		i2_Lcd_Cmd
  7325 ;;		i2_Lcd_Write_Char
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text56
  7330   001EB2                     __ptext56:
  7331                           	callstack 0
  7332   001EB2                     i2_Lcd_Port:
  7333                           	callstack 20
  7334                           
  7335                           ;incstack = 0
  7336                           ;i2Lcd_Port@a stored from wreg
  7337   001EB2  6E01               	movwf	i2Lcd_Port@a^0,c
  7338                           
  7339                           ;lcd.c: 6: (a & 1) ? (LATDbits.LD4 = 1) : (LATDbits.LD4 = 0);
  7340   001EB4  A001               	btfss	i2Lcd_Port@a^0,0,c
  7341   001EB6  D002               	goto	i2l14
  7342   001EB8  888C               	bsf	140,4,c	;volatile
  7343   001EBA  D001               	goto	i2l2471
  7344   001EBC                     i2l14:
  7345   001EBC  988C               	bcf	140,4,c	;volatile
  7346   001EBE                     i2l2471:
  7347                           
  7348                           ;lcd.c: 7: (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  7349   001EBE  A201               	btfss	i2Lcd_Port@a^0,1,c
  7350   001EC0  D002               	goto	i2l18
  7351   001EC2  8A8C               	bsf	140,5,c	;volatile
  7352   001EC4  D001               	goto	i2l2475
  7353   001EC6                     i2l18:
  7354   001EC6  9A8C               	bcf	140,5,c	;volatile
  7355   001EC8                     i2l2475:
  7356                           
  7357                           ;lcd.c: 8: (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  7358   001EC8  A401               	btfss	i2Lcd_Port@a^0,2,c
  7359   001ECA  D002               	goto	i2l22
  7360   001ECC  8C8C               	bsf	140,6,c	;volatile
  7361   001ECE  D001               	goto	i2l2479
  7362   001ED0                     i2l22:
  7363   001ED0  9C8C               	bcf	140,6,c	;volatile
  7364   001ED2                     i2l2479:
  7365                           
  7366                           ;lcd.c: 9: (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  7367   001ED2  A601               	btfss	i2Lcd_Port@a^0,3,c
  7368   001ED4  D002               	goto	i2l26
  7369   001ED6  8E8C               	bsf	140,7,c	;volatile
  7370   001ED8  0012               	return	
  7371   001EDA                     i2l26:
  7372   001EDA  9E8C               	bcf	140,7,c	;volatile
  7373   001EDC  0012               	return		;funcret
  7374   001EDE                     __end_ofi2_Lcd_Port:
  7375                           	callstack 0
  7376                           
  7377                           	psect	rparam
  7378   000000                     
  7379                           	psect	temp
  7380   00004C                     btemp:
  7381                           	callstack 0
  7382   00004C                     	ds	1
  7383   000000                     int$flags	set	btemp
  7384   000000                     wtemp8	set	btemp+1
  7385   000000                     ttemp5	set	btemp+1
  7386   000000                     ttemp6	set	btemp+4
  7387   000000                     ttemp7	set	btemp+8
  7388                           
  7389                           	psect	idloc
  7390                           
  7391                           ;Config register IDLOC0 @ 0x200000
  7392                           ;	unspecified, using default values
  7393   200000                     	org	2097152
  7394   200000  FF                 	db	255
  7395                           
  7396                           ;Config register IDLOC1 @ 0x200001
  7397                           ;	unspecified, using default values
  7398   200001                     	org	2097153
  7399   200001  FF                 	db	255
  7400                           
  7401                           ;Config register IDLOC2 @ 0x200002
  7402                           ;	unspecified, using default values
  7403   200002                     	org	2097154
  7404   200002  FF                 	db	255
  7405                           
  7406                           ;Config register IDLOC3 @ 0x200003
  7407                           ;	unspecified, using default values
  7408   200003                     	org	2097155
  7409   200003  FF                 	db	255
  7410                           
  7411                           ;Config register IDLOC4 @ 0x200004
  7412                           ;	unspecified, using default values
  7413   200004                     	org	2097156
  7414   200004  FF                 	db	255
  7415                           
  7416                           ;Config register IDLOC5 @ 0x200005
  7417                           ;	unspecified, using default values
  7418   200005                     	org	2097157
  7419   200005  FF                 	db	255
  7420                           
  7421                           ;Config register IDLOC6 @ 0x200006
  7422                           ;	unspecified, using default values
  7423   200006                     	org	2097158
  7424   200006  FF                 	db	255
  7425                           
  7426                           ;Config register IDLOC7 @ 0x200007
  7427                           ;	unspecified, using default values
  7428   200007                     	org	2097159
  7429   200007  FF                 	db	255
  7430                           
  7431                           	psect	config
  7432                           
  7433                           ;Config register CONFIG1L @ 0x300000
  7434                           ;	unspecified, using default values
  7435                           ;	PLL Prescaler Selection bits
  7436                           ;	PLLDIV = 0x0, unprogrammed default
  7437                           ;	System Clock Postscaler Selection bits
  7438                           ;	CPUDIV = 0x0, unprogrammed default
  7439                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7440                           ;	USBDIV = 0x0, unprogrammed default
  7441   300000                     	org	3145728
  7442   300000  00                 	db	0
  7443                           
  7444                           ;Config register CONFIG1H @ 0x300001
  7445                           ;	Oscillator Selection bits
  7446                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  7447                           ;	Fail-Safe Clock Monitor Enable bit
  7448                           ;	FCMEN = 0x0, unprogrammed default
  7449                           ;	Internal/External Oscillator Switchover bit
  7450                           ;	IESO = 0x0, unprogrammed default
  7451   300001                     	org	3145729
  7452   300001  09                 	db	9
  7453                           
  7454                           ;Config register CONFIG2L @ 0x300002
  7455                           ;	unspecified, using default values
  7456                           ;	Power-up Timer Enable bit
  7457                           ;	PWRT = 0x1, unprogrammed default
  7458                           ;	Brown-out Reset Enable bits
  7459                           ;	BOR = 0x3, unprogrammed default
  7460                           ;	Brown-out Reset Voltage bits
  7461                           ;	BORV = 0x3, unprogrammed default
  7462                           ;	USB Voltage Regulator Enable bit
  7463                           ;	VREGEN = 0x0, unprogrammed default
  7464   300002                     	org	3145730
  7465   300002  1F                 	db	31
  7466                           
  7467                           ;Config register CONFIG2H @ 0x300003
  7468                           ;	Watchdog Timer Enable bit
  7469                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7470                           ;	Watchdog Timer Postscale Select bits
  7471                           ;	WDTPS = 0xF, unprogrammed default
  7472   300003                     	org	3145731
  7473   300003  1E                 	db	30
  7474                           
  7475                           ; Padding undefined space
  7476   300004                     	org	3145732
  7477   300004  FF                 	db	255
  7478                           
  7479                           ;Config register CONFIG3H @ 0x300005
  7480                           ;	CCP2 MUX bit
  7481                           ;	CCP2MX = 0x1, unprogrammed default
  7482                           ;	PORTB A/D Enable bit
  7483                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7484                           ;	Low-Power Timer 1 Oscillator Enable bit
  7485                           ;	LPT1OSC = 0x0, unprogrammed default
  7486                           ;	MCLR Pin Enable bit
  7487                           ;	MCLRE = 0x1, unprogrammed default
  7488   300005                     	org	3145733
  7489   300005  81                 	db	129
  7490                           
  7491                           ;Config register CONFIG4L @ 0x300006
  7492                           ;	Stack Full/Underflow Reset Enable bit
  7493                           ;	STVREN = 0x1, unprogrammed default
  7494                           ;	Single-Supply ICSP Enable bit
  7495                           ;	LVP = OFF, Single-Supply ICSP disabled
  7496                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7497                           ;	ICPRT = 0x0, unprogrammed default
  7498                           ;	Extended Instruction Set Enable bit
  7499                           ;	XINST = 0x0, unprogrammed default
  7500                           ;	Background Debugger Enable bit
  7501                           ;	DEBUG = 0x1, unprogrammed default
  7502   300006                     	org	3145734
  7503   300006  81                 	db	129
  7504                           
  7505                           ; Padding undefined space
  7506   300007                     	org	3145735
  7507   300007  FF                 	db	255
  7508                           
  7509                           ;Config register CONFIG5L @ 0x300008
  7510                           ;	unspecified, using default values
  7511                           ;	Code Protection bit
  7512                           ;	CP0 = 0x1, unprogrammed default
  7513                           ;	Code Protection bit
  7514                           ;	CP1 = 0x1, unprogrammed default
  7515                           ;	Code Protection bit
  7516                           ;	CP2 = 0x1, unprogrammed default
  7517                           ;	Code Protection bit
  7518                           ;	CP3 = 0x1, unprogrammed default
  7519   300008                     	org	3145736
  7520   300008  0F                 	db	15
  7521                           
  7522                           ;Config register CONFIG5H @ 0x300009
  7523                           ;	unspecified, using default values
  7524                           ;	Boot Block Code Protection bit
  7525                           ;	CPB = 0x1, unprogrammed default
  7526                           ;	Data EEPROM Code Protection bit
  7527                           ;	CPD = 0x1, unprogrammed default
  7528   300009                     	org	3145737
  7529   300009  C0                 	db	192
  7530                           
  7531                           ;Config register CONFIG6L @ 0x30000A
  7532                           ;	unspecified, using default values
  7533                           ;	Write Protection bit
  7534                           ;	WRT0 = 0x1, unprogrammed default
  7535                           ;	Write Protection bit
  7536                           ;	WRT1 = 0x1, unprogrammed default
  7537                           ;	Write Protection bit
  7538                           ;	WRT2 = 0x1, unprogrammed default
  7539                           ;	Write Protection bit
  7540                           ;	WRT3 = 0x1, unprogrammed default
  7541   30000A                     	org	3145738
  7542   30000A  0F                 	db	15
  7543                           
  7544                           ;Config register CONFIG6H @ 0x30000B
  7545                           ;	unspecified, using default values
  7546                           ;	Configuration Register Write Protection bit
  7547                           ;	WRTC = 0x1, unprogrammed default
  7548                           ;	Boot Block Write Protection bit
  7549                           ;	WRTB = 0x1, unprogrammed default
  7550                           ;	Data EEPROM Write Protection bit
  7551                           ;	WRTD = 0x1, unprogrammed default
  7552   30000B                     	org	3145739
  7553   30000B  E0                 	db	224
  7554                           
  7555                           ;Config register CONFIG7L @ 0x30000C
  7556                           ;	unspecified, using default values
  7557                           ;	Table Read Protection bit
  7558                           ;	EBTR0 = 0x1, unprogrammed default
  7559                           ;	Table Read Protection bit
  7560                           ;	EBTR1 = 0x1, unprogrammed default
  7561                           ;	Table Read Protection bit
  7562                           ;	EBTR2 = 0x1, unprogrammed default
  7563                           ;	Table Read Protection bit
  7564                           ;	EBTR3 = 0x1, unprogrammed default
  7565   30000C                     	org	3145740
  7566   30000C  0F                 	db	15
  7567                           
  7568                           ;Config register CONFIG7H @ 0x30000D
  7569                           ;	unspecified, using default values
  7570                           ;	Boot Block Table Read Protection bit
  7571                           ;	EBTRB = 0x1, unprogrammed default
  7572   30000D                     	org	3145741
  7573   30000D  40                 	db	64
  7574                           tosu	equ	0xFFF
  7575                           tosh	equ	0xFFE
  7576                           tosl	equ	0xFFD
  7577                           stkptr	equ	0xFFC
  7578                           pclatu	equ	0xFFB
  7579                           pclath	equ	0xFFA
  7580                           pcl	equ	0xFF9
  7581                           tblptru	equ	0xFF8
  7582                           tblptrh	equ	0xFF7
  7583                           tblptrl	equ	0xFF6
  7584                           tablat	equ	0xFF5
  7585                           prodh	equ	0xFF4
  7586                           prodl	equ	0xFF3
  7587                           indf0	equ	0xFEF
  7588                           postinc0	equ	0xFEE
  7589                           postdec0	equ	0xFED
  7590                           preinc0	equ	0xFEC
  7591                           plusw0	equ	0xFEB
  7592                           fsr0h	equ	0xFEA
  7593                           fsr0l	equ	0xFE9
  7594                           wreg	equ	0xFE8
  7595                           indf1	equ	0xFE7
  7596                           postinc1	equ	0xFE6
  7597                           postdec1	equ	0xFE5
  7598                           preinc1	equ	0xFE4
  7599                           plusw1	equ	0xFE3
  7600                           fsr1h	equ	0xFE2
  7601                           fsr1l	equ	0xFE1
  7602                           bsr	equ	0xFE0
  7603                           indf2	equ	0xFDF
  7604                           postinc2	equ	0xFDE
  7605                           postdec2	equ	0xFDD
  7606                           preinc2	equ	0xFDC
  7607                           plusw2	equ	0xFDB
  7608                           fsr2h	equ	0xFDA
  7609                           fsr2l	equ	0xFD9
  7610                           status	equ	0xFD8

Data Sizes:
    Strings     153
    Constant    50
    Data        45
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      75
    BANK0           160     18      61
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Lcd_CGRAM_CreateChar@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> figura_1(CODE[8]), figura_2(CODE[8]), figura_3(CODE[8]), figura_4(CODE[8]), 
		 -> figura_5(CODE[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[15]), STR_10(CODE[4]), STR_11(CODE[18]), STR_12(CODE[5]), 
		 -> STR_13(CODE[10]), STR_14(CODE[12]), STR_2(CODE[11]), STR_3(CODE[12]), 
		 -> STR_5(CODE[17]), STR_6(CODE[8]), STR_7(CODE[10]), STR_8(CODE[3]), 
		 -> STR_9(CODE[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_4(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 


Critical Paths under _main in COMRAM

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _escenario1->_Lcd_Write_String
    _Lcd_Blink->_Lcd_Cmd
    ___lwtoft->___ftpack
    _Lcd_Init->_Lcd_Cmd
    _Lcd_CGRAM_Init->_Lcd_Cmd
    _Lcd_CGRAM_CreateChar->_Lcd_Write_Char
    _Lcd_CGRAM_Close->_Lcd_Cmd
    _Duty_motor->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___ftpack
    _ContarReal->___awdiv
    _escenario3->_Lcd_Write_String
    _escenario2->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMRAM

    _okmenu->i2_ContarReal
    i2_ContarReal->i2___awdiv
    i2_escenario3->i2_Lcd_Write_String
    _escenario4->i2_Lcd_Write_String
    _borrarDigito->i2_Lcd_Set_Cursor
    i2_escenario1->i2_Lcd_Write_String
    i2_Lcd_Blink->i2_Lcd_Cmd
    i2_escenario2->i2_Lcd_Write_String
    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_NoBlink->i2_Lcd_Cmd
    i2_Lcd_Clear->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port
    _PiezaAContar->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Duty_motor
    _Duty_motor->___ftmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   37527
                                             48 COMRAM     2     2      0
                                             15 BANK0      3     3      0
                         _ContarReal
                         _Conversion
                         _Duty_motor
                          _Lcd_Blink
                    _Lcd_CGRAM_Close
               _Lcd_CGRAM_CreateChar
                     _Lcd_CGRAM_Init
                          _Lcd_Clear
                           _Lcd_Init
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           ___lwtoft
                         _escenario1
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    16      4    1579
                                             31 COMRAM    11     7      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             26 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                             19 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _escenario1                                           0     0      0    4713
                          _Lcd_Blink
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Blink                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3374
                                             27 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     434
                                             21 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Init                                       0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_CreateChar                                11    10      1    1775
                                             23 COMRAM    11    10      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Close                                      0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Duty_motor                                           6     3      3    9128
                                              9 BANK0      6     3      3
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     461
                                             19 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4067
                                             42 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     378
                                             19 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3999
                                             27 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    3253
                                             19 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           4     2      2      31
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ContarReal                                           2     2      0   11182
                                             27 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                             ___wmul
                         _escenario2
                         _escenario3
                             _vaciar
 ---------------------------------------------------------------------------------
 (2) _vaciar                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _escenario3                                           0     0      0    4459
                          _Lcd_Clear
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _escenario2                                           0     0      0    4713
                          _Lcd_Clear
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     3      1    1484
                                             23 COMRAM     4     3      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     254
                                             20 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    2665
                                             21 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_NoBlink                                          0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              1     1      0     155
                                             20 COMRAM     1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  9     9      0   13755
                                             10 COMRAM     9     9      0
                       _PiezaAContar
                          _Reiniciar
                           _Terminar
                          _Trasmitir
                   _blacklighttoggle
                       _borrarDigito
                         _escenario4
                             _okmenu
 ---------------------------------------------------------------------------------
 (7) _okmenu                                               0     0      0    6579
                       i2_ContarReal
                       i2_escenario1
 ---------------------------------------------------------------------------------
 (8) i2_ContarReal                                         2     2      0    4665
                                              8 COMRAM     2     2      0
                          i2___awdiv
                          i2___awmod
                           i2___wmul
                       i2_escenario2
                       i2_escenario3
                           i2_vaciar
 ---------------------------------------------------------------------------------
 (9) i2_escenario3                                         0     0      0    1736
                        i2_Lcd_Clear
                      i2_Lcd_NoBlink
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awdiv                                            8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _escenario4                                           0     0      0    1914
                        i2_Lcd_Clear
                      i2_Lcd_NoBlink
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (7) _borrarDigito                                         0     0      0    1166
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) _blacklighttoggle                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Trasmitir                                            2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Terminar                                             0     0      0    1914
                       i2_escenario1
                           i2_vaciar
 ---------------------------------------------------------------------------------
 (9) i2_vaciar                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_escenario1                                         0     0      0    1914
                        i2_Lcd_Blink
                        i2_Lcd_Clear
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Blink                                          0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) _Reiniciar                                            0     0      0    1914
                       i2_escenario2
 ---------------------------------------------------------------------------------
 (9) i2_escenario2                                         0     0      0    1914
                        i2_Lcd_Clear
                      i2_Lcd_NoBlink
                   i2_Lcd_Set_Cursor
                   i2_Lcd_Write_Char
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Write_String                                   4     3      1     528
                                              4 COMRAM     4     3      1
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Set_Cursor                                     5     4      1     988
                                              2 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_NoBlink                                       0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Clear                                          0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Cmd                                           1     1      0     110
                                              1 COMRAM     1     1      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) _PiezaAContar                                         2     2      0     222
                                              4 COMRAM     2     2      0
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Write_Char                                    3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (11) i2_Lcd_Port                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ContarReal
     ___awdiv
     ___awmod
     ___wmul
     _escenario2
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_NoBlink
         _Lcd_Cmd
       _Lcd_Set_Cursor
         _Lcd_Cmd
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
     _escenario3
       _Lcd_Clear
       _Lcd_NoBlink
       _Lcd_Set_Cursor
       _Lcd_Write_String
     _vaciar
   _Conversion
   _Duty_motor
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___ftdiv (ARG)
       ___ftpack (ARG)
     ___fttol
     ___lwtoft (ARG)
       ___ftpack
   _Lcd_Blink
     _Lcd_Cmd
   _Lcd_CGRAM_Close
     _Lcd_Cmd
   _Lcd_CGRAM_CreateChar
     _Lcd_Write_Char
   _Lcd_CGRAM_Init
     _Lcd_Cmd
   _Lcd_Clear
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_NoBlink
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
   ___lwtoft
   _escenario1
     _Lcd_Blink
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_Char
     _Lcd_Write_String
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)
   _PiezaAContar
     i2_Lcd_Write_Char
       i2_Lcd_Port
   _Reiniciar
     i2_escenario2
       i2_Lcd_Clear
         i2_Lcd_Cmd
           i2_Lcd_Port
       i2_Lcd_NoBlink
         i2_Lcd_Cmd
       i2_Lcd_Set_Cursor
         i2_Lcd_Cmd
       i2_Lcd_Write_Char
       i2_Lcd_Write_String
         i2_Lcd_Write_Char
   _Terminar
     i2_escenario1
       i2_Lcd_Blink
         i2_Lcd_Cmd
       i2_Lcd_Clear
       i2_Lcd_Set_Cursor
       i2_Lcd_Write_Char
       i2_Lcd_Write_String
     i2_vaciar
   _Trasmitir
   _blacklighttoggle
   _borrarDigito
     i2_Lcd_Set_Cursor
     i2_Lcd_Write_Char
   _escenario4
     i2_Lcd_Clear
     i2_Lcd_NoBlink
     i2_Lcd_Set_Cursor
     i2_Lcd_Write_Char
     i2_Lcd_Write_String
   _okmenu
     i2_ContarReal
       i2___awdiv
       i2___awmod
       i2___wmul
       i2_escenario2
       i2_escenario3
         i2_Lcd_Clear
         i2_Lcd_NoBlink
         i2_Lcd_Set_Cursor
         i2_Lcd_Write_String
       i2_vaciar
     i2_escenario1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      34        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      3D       5       38.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      4B       1       79.8%
BITBIGSFRlll        20      0       0      32        0.0%
BITBIGSFRhhhhlh     19      0       0      21        0.0%
BITBIGSFRhhhlll     14      0       0      28        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhhhhll      8      0       0      22        0.0%
BITBIGSFRhhhllh      8      0       0      26        0.0%
BITBIGSFRllh         7      0       0      31        0.0%
BITBIGSFRhhhhll      5      0       0      23        0.0%
BITBIGSFRhhhllh      4      0       0      25        0.0%
BITBIGSFRhl          4      0       0      29        0.0%
BITBIGSFRhhhllh      1      0       0      24        0.0%
BITBIGSFRhhhllh      1      0       0      27        0.0%
BITBIGSFRlh          1      0       0      30        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      33        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Sep 10 22:58:29 2024

                           _t 006C                             _v 0071                            l22 1EA4  
                          l14 1E90                            l26 1EAE                            l18 1E9A  
                          _GO 7E11                  ___awdiv@sign 0019           ___wmul@multiplicand 0016  
                         l340 1F48                           l903 1ADA                           l913 1BF6  
                         l765 1256                           _GIE 7F97                           _RB4 7C0C  
                         _RB5 7C0D                           _RB6 7C0E                           _RB7 7C0F  
                         _PR2 0FCB                           _ISR 0008                 ?_borrarDigito 0001  
                ___awmod@sign 0019                _contadorDecena 0035                           wreg 0FE8  
         __end_of_Lcd_NoBlink 202E                          ?_ISR 0001                _contadorUnidad 0037  
                ___ftdiv@cntr 0025         Lcd_CGRAM_CreateChar@i 001B                  ___ftdiv@sign 002A  
                        l4001 10FE                          l4015 1130                          l4113 1958  
                        l4105 1940                          l4121 18A0                          l4025 1158  
                        l4051 171E                          l4131 18EE                          l4019 1140  
                        l4045 170E                          l4109 194A                          l4125 18C2  
                        l4029 1168                          l4141 12B4                          l4301 0CD0  
                        l4215 1BEC                          l4207 1BCC                          l4057 1734  
                        l4073 1766                          l4313 0CF8                          l4209 1BD4  
                        l4059 173C                          l4171 132C                          l4163 1318  
                        l4331 0D24                          l4307 0CD4                          l4403 0DCC  
                        l4077 1774                          l4069 175C                          l4093 1912  
                        l4325 0D20                          l4253 0C34                          l4405 0DF0  
                        l4159 1308                          l4343 0D4C                          l4319 0CFC  
                        l4271 0C5C                          l4351 0D70                          l4423 0E38  
                        l4415 0E06                          l4097 1920                          l4089 1906  
                        l4177 1348                          l4169 1320                          l4337 0D48  
                        l4265 0C58                          l4099 1928                          l4283 0C84  
                        l4259 0C38                          l4187 1AA8                          l4277 0C80  
                        l4189 1AB0                          l4429 0E88                          l4383 15BA  
                        l4295 0CAC                          l4199 1AD0                          l4391 0DAA  
                        l3761 1E9C                          l3825 1480                          l3817 1458  
                        l3809 1430                          l4289 0CA8                          l3835 1CD0  
                        l3851 1378                          l4387 15CC                          l4547 09DE  
                        l3765 1EA6                          l3757 1E92                          l3861 13D4  
                        l3853 1382                          l4397 0DC0                          l3839 1CEA  
                        l3863 13DE                          l3855 13A0                          l4399 0DC6  
                        l4575 0A50                          l3859 13B6                          l3955 11F2  
                        l3949 11CA                          l3975 1230                          l3995 10D6  
                        STR_1 0868                          STR_2 088F                          STR_3 0883  
                        STR_4 0845                          STR_5 0857                          STR_6 08B8  
                        STR_7 089A                          STR_8 08C9                          STR_9 08A4  
             ?_Lcd_CGRAM_Init 0001                          u3011 10BE                          u3100 1740  
                        _LATB 0F8A                          u3031 10E6                          _LATD 0F8C  
                        _LATE 0F8D                          u3221 1298                          u3230 12A2  
                        u3310 1AB4                          u3160 192C                          u3240 12D2  
                        u3340 1BD8                          u3500 0E90                          u3245 12CA  
                        u3510 0EAA                          u3280 1332                          u3540 0A98  
                        u3607 181A                          u3617 182C                          u2930 13E8  
                        u3490 0E32                          u3627 183E                          u3548 0A9A  
                        u3637 0F92                          u3647 1D5E                          _RBIE 7F93  
                        _RBIF 7F90                          u3657 1D70                          u2961 11B2  
                        u3577 0910                          u2890 136A                          u3667 1FD4  
                        u3587 09CA                          u2981 11DA                          u3597 0A32  
                        i2l22 1ED0                          i2l14 1EBC                          i2l26 1EDA  
                        i2l18 1EC6                          _RBPU 7F8F                          _TMR0 0FD6  
                        _TMR2 0FCC                          _TRMT 7D61             ?_Lcd_Write_String 0018  
                        _main 08CE                  ___ftpack@arg 0014                          _menu 004A  
                ___ftpack@exp 0017                          _rojo 006F                          fsr2h 0FDA  
                        indf2 0FDF                          fsr1l 0FE1                          fsr2l 0FD9  
                        btemp 004C                          prodh 0FF4                          prodl 0FF3  
                        start 000E            ??_Lcd_Write_String 0019               __end_of_Lcd_Cmd 1FDE  
                ___ftmul@cntr 0090                  ___param_bank 0000                  ___ftmul@sign 0091  
                       ??_ISR 000B                  ___fttol@exp1 0022                  ___fttol@lval 001E  
                       ?_main 0001               __end_of___awdiv 177E                         _ADRES 0FC3  
                       STR_10 08C5                         STR_11 0833                         STR_12 08C0  
                       STR_13 08AE                         STR_14 0877               __end_of___awmod 1962  
            ?_Lcd_CGRAM_Close 0001               __end_of___ftdiv 1288                ??_borrarDigito 0008  
             __end_of___ftmul 11A2                         _T0CON 0FD5               ___awdiv@divisor 0016  
             __end_of___fttol 135A                         _T2CON 0FCA                         _LATA1 7C49  
                       _LATA5 7C4D               __end_of___lwdiv 1AE4               __end_of___lwmod 1C00  
                       i2l333 1E5E                         i2l360 0B10                         i2l370 0B58  
                       i2l362 0B1C                         i2l390 0C0C                         i2l382 0BB4  
                       i2l374 0B7A                         i2l366 0B40                         i2l358 0B04  
                       i2l383 0BDA                         i2l384 0BC0                         i2l376 0B86  
                       i2l368 0B4C                         i2l386 0BD4                         i2l378 0B92  
             ___awdiv@counter 0018                         _RCSTA 0FAB                         _SPBRG 0FAF  
                       _PORTB 0F81                         _TRISA 0F92                         _TRISB 0F93  
                       _TRISC 0F94                         _TRISD 0F95                         _TRISE 0F96  
                       _TXREG 0FAD                         _TXSTA 0FAC                         _Tecla 0047  
                 ?i2_Lcd_Port 0001               __end_of_dpowers 080B                         _color 0060  
                  _ContarReal 0EB4                 ___ftpack@sign 0018                         main@i 009A  
                       tablat 0FF5                    _Conversion 1F30              __end_ofi2___wmul 1FA2  
                       ttemp5 004D                         ttemp6 0050                         ttemp7 0054  
                       status 0FD8                         wtemp8 004D               __end_of_sprintf 0EB4  
            __end_ofi2_vaciar 1CC6              i2_Lcd_Set_Cursor 14A8              __end_of_Lcd_Init 187E  
            __end_of_Lcd_Port 1EB2               __initialization 19D2                  __end_of_main 0AB8  
                 _Lcd_NoBlink 2020                        ??_main 0031                 ___fttol@sign1 001D  
               __activetblptr 0002                    _Duty_motor 1548              __end_of_Terminar 207C  
     Lcd_CGRAM_CreateChar@add 001A                        _ADCON0 0FC2                        _ADCON2 0FC0  
                      _CCPR1L 0FBE              ___awdiv@dividend 0014              __end_of___ftpack 1408  
                i2_escenario1 1B78                  i2_escenario2 166E                  i2_escenario3 1DE8  
                      i2l2471 1EBE                        i2l3505 1B1E                        i2l2475 1EC8  
                      i2l3531 1E72                        i2l2803 1982                        i2l2479 1ED2  
                      i2l2823 19C8                        i2l2815 19B0                        i2l2807 1990  
                      i2l2585 1520                        i2l2577 14F8                        i2l2569 14D0  
                      i2l2761 17A2                        i2l2809 1998                        i2l3705 0B6A  
                      i2l3483 1A62                        i2l2595 1D0E                        i2l2755 1792  
                      i2l2819 19BA                        i2l3539 1F16                        i2l3485 1A6A  
                      i2l3487 1A70                        i2l2599 1D28                        i2l2767 17B8  
                      i2l2783 17EA                        i2l3719 0BA6                        i2l3735 0BDE  
                      i2l2769 17C0                        i2l2787 17F8                        i2l2779 17E0  
                      i2l3691 0B30                        i2l3739 0BF0                        i2l2799 1976  
            __end_of___lwtoft 1FC6                     ??_Lcd_Cmd 0015                        _TMR0IE 7F95  
                      _TMR0IF 7F92                        _TMR0ON 7EAF                        _TMR2ON 7E52  
               ?_PiezaAContar 0001              __end_of_figura_1 0833              __end_of_figura_2 082B  
            __end_of_figura_3 0823              __end_of_figura_4 081B              __end_of_figura_5 0813  
                ?i2_Lcd_Clear 0001                        ___ftge 187E                  ?i2_Lcd_Blink 0001  
           __end_ofi2_Lcd_Cmd 1FF6  Lcd_CGRAM_CreateChar@chardata 0018                        ___wmul 1F56  
                   ??___awdiv 0018                        _decena 0045                     ??___awmod 0018  
                   ??___ftdiv 0022                     ??___ftmul 0089                     ??___fttol 0018  
                      _digito 0048                     ??___lwdiv 0018                     ??___lwmod 001F  
                      _buffer 0075           i2Lcd_Write_String@a 0005           i2Lcd_Write_String@i 0007  
                      clear_0 1A1E              ___awdiv@quotient 001A                        _vaciar 1C00  
             ___awmod@divisor 0016                        _okmenu 1F08                        isa$std 0001  
             ___awmod@counter 0018                        _unidad 0043              i2_Lcd_Write_Char 1D7A  
              i2___awdiv@sign 0006         ___ftmul@f3_as_product 008D                  __pdataCOMRAM 0048  
           __end_ofi2___awdiv 1802             __end_ofi2___awmod 19D2                  __mediumconst 0000  
                      tblptrh 0FF7                        tblptrl 0FF6                        tblptru 0FF8  
              i2___awmod@sign 0006                   ?_ContarReal 0001                     ??_sprintf 0024  
             Lcd_Set_Cursor@a 0017               Lcd_Set_Cursor@b 0016               Lcd_Set_Cursor@y 0019  
             Lcd_Set_Cursor@z 0018     Lcd_CGRAM_CreateChar@i_243 001C     Lcd_CGRAM_CreateChar@i_244 001D  
   Lcd_CGRAM_CreateChar@i_245 001E     Lcd_CGRAM_CreateChar@i_246 001F     Lcd_CGRAM_CreateChar@i_247 0020  
   Lcd_CGRAM_CreateChar@i_248 0021     Lcd_CGRAM_CreateChar@i_249 0022                   ?_Conversion 0014  
                  __accesstop 0060       __end_of__initialization 1A24                ??_PiezaAContar 0005  
                  ___ftge@ff1 0014                    ___ftge@ff2 0017             __end_of_Lcd_Clear 203C  
           __end_of_Lcd_Blink 2004                 ___rparam_used 0001          __end_of_borrarDigito 1B32  
                  ___ftdiv@f1 001C                    ___ftdiv@f2 001F                    ___ftdiv@f3 0026  
                  ___ftmul@f1 002B                    ___ftmul@f2 002E                    ___fttol@f1 0014  
              __pcstackCOMRAM 0001                    Trasmitir@i 0001                  __pidataBANK0 1EDE  
       __end_ofi2_Lcd_NoBlink 2058                    ___lwtoft@c 001C             i2Lcd_Write_Char@a 0004  
           i2Lcd_Write_Char@y 0003                     ?i2___wmul 0001                _Lcd_Set_Cursor 1408  
                 ?_Duty_motor 0092              ??_Lcd_CGRAM_Init 0016                     ?i2_vaciar 0001  
                   ?_Lcd_Init 0001                     ?_Lcd_Port 0001          i2Lcd_Write_Char@temp 0002  
           __end_of_Reiniciar 1E54                    __pbssBANK0 009B              _blacklighttoggle 2066  
                   ?_Terminar 0001                       ?___ftge 0014                       ?___wmul 0014  
           __end_of_Trasmitir 1E86                       _CCP1CON 0FBD                       _BAUDCON 0FB8  
        i2Lcd_Set_Cursor@temp 0007                       ?_vaciar 0001                       ?_okmenu 0001  
                   ?___ftpack 0014        __end_of_Lcd_Set_Cursor 14A8                     ?___lwtoft 001C  
                  ??i2___wmul 0005      __end_ofi2_Lcd_Set_Cursor 1548                    ??i2_vaciar 0001  
                  ??_Lcd_Init 0016                  ??i2_Lcd_Port 0001                    ??_Lcd_Port 0014  
                  _escenario1 1B32                    _escenario2 15E2                    _escenario3 1DB2  
                  _escenario4 1C42                _Lcd_Write_Char 1D42                       _Lcd_Cmd 1FC6  
                     __Hparam 0000                       __Lparam 0000                    ??_Terminar 0009  
                     ___awdiv 16FA                       ___awmod 18F2                       ___ftdiv 11A2  
                     ___ftmul 10AC                       ___fttol 1288                       ___lwdiv 1A92  
                     ___lwmod 1BBE                  __psmallconst 0800            __end_ofi2_Lcd_Port 1EDE  
                     __pcinit 19D2                    ??___ftpack 0019                       __ramtop 0800  
             ?_Lcd_Set_Cursor 0016                  ?_Lcd_NoBlink 0001                       __ptext0 08CE  
                     __ptext1 0DA4                       __ptext2 1BBE                       __ptext3 1A92  
                     __ptext4 1B32                       __ptext5 1FF6                       __ptext6 1FA2  
                     __ptext7 1802                       __ptext8 2004                       __ptext9 0C30  
                  ??___lwtoft 001F          __end_of_PiezaAContar 1A92                       _dpowers 0801  
            ___awmod@dividend 0014                       _mostrar 009B                 ?i2_ContarReal 0001  
                     _sprintf 0DA4        __end_of_Lcd_Write_Char 1D7A                __pintcode_body 0AB8  
        end_of_initialization 1A24               Conversion@canal 0017                 __Lmediumconst 0000  
                     int_func 0AB8           i2___wmul@multiplier 0001      __end_ofi2_Lcd_Write_Char 1DB2  
                     postdec1 0FE5                       postdec2 0FDD                       postinc0 0FEE  
                     postinc2 0FDE                     Lcd_Port@a 0014                     i2_Lcd_Cmd 1FDE  
                   _PORTAbits 0F80                  _borrarDigito 1AE4                     _TRISAbits 0F92  
                   _TRISDbits 0F95                ??i2_ContarReal 0009                  ??_ContarReal 001C  
                   i2___awdiv 177E                     i2___awmod 1962               ?_Lcd_Write_Char 0001  
                 ?_escenario1 0001                   ?_escenario2 0001                   ?_escenario3 0001  
                 ?_escenario4 0001             Lcd_Write_String@a 0018             Lcd_Write_String@i 001A  
                ??_Conversion 0016                   ___ftdiv@exp 0029            i2___awdiv@dividend 0001  
                 ___ftmul@exp 008C                     _Lcd_Clear 202E                     _Lcd_Blink 1FF6  
        Duty_motor@escalarADC 0095                __end_of___ftge 18F2                __end_of___wmul 1F7C  
          __end_of_ContarReal 0FB0              _Lcd_Write_String 1CC6                 __pidataCOMRAM 207C  
                  ?i2_Lcd_Cmd 0001  __end_of_Lcd_CGRAM_CreateChar 0DA4                __end_of_vaciar 1C42  
              __end_of_okmenu 1F30            __end_of_Conversion 1F56                 _cantidadResta 003D  
            i2___wmul@product 0005                  ??_Duty_motor 0031           start_initialization 19D2  
    __end_of_blacklighttoggle 2072            i2___awdiv@quotient 0007                   __end_of_ISR 0C30  
                  ?i2___awdiv 0001                    ?i2___awmod 0001                     _Reiniciar 1E1E  
           ??_Lcd_CGRAM_Close 0016            __end_of_Duty_motor 15E2                    ?_Lcd_Clear 0001  
                  ?_Lcd_Blink 0001                      ??___ftge 001A    __end_ofi2_Lcd_Write_String 1D42  
                    ??___wmul 0018                   __pdataBANK0 0060               Lcd_Write_Char@a 0017  
             Lcd_Write_Char@y 0016                      ??_vaciar 0014                      ??_okmenu 000B  
                   _Trasmitir 1E54                   __pbssCOMRAM 0033                 __pcstackBANK0 0089  
           ?i2_Lcd_Set_Cursor 0003            ??i2_Lcd_Set_Cursor 0004           _cantidadRestaDecena 0039  
                    ?_Lcd_Cmd 0001                   sprintf@flag 0025                   sprintf@prec 0029  
                  ?_Reiniciar 0001                  _PiezaAContar 1A32           _cantidadRestaUnidad 003B  
            ___lwdiv@dividend 0014              ??_Lcd_Set_Cursor 0017                     _flagParar 0073  
                   __pintcode 0008          __end_ofi2_ContarReal 10AC                      ?___awdiv 0014  
                    ?___awmod 0014                      ?___ftdiv 001C                      ?___ftmul 002B  
                    ?___fttol 0014                      ?___lwdiv 0014                      ?___lwmod 001B  
                 ??i2_Lcd_Cmd 0002                    ?_Trasmitir 0001                   __smallconst 0800  
            ___lwdiv@quotient 0019                   ??i2___awdiv 0005                   ??i2___awmod 0005  
                    ?_sprintf 0020                 ?i2_escenario1 0001                 ?i2_escenario2 0001  
               ?i2_escenario3 0001                ___wmul@product 0018                      _LATAbits 0F89  
                    _LATDbits 0F8C             ?i2_Lcd_Write_Char 0001          _Lcd_CGRAM_CreateChar 0C30  
                    Lcd_Cmd@a 0015                      i2u236_40 206E                      i2u239_40 1A5A  
                    i2u175_40 199C                      i2u169_40 17C4                      i2u370_47 1D96  
                    i2u371_47 1DA8                      i2u277_40 0C06                      i2u278_45 0C08  
          ??i2_Lcd_Write_Char 0002                      i2u367_47 0BE4                      i2u368_47 108E  
                    i2u369_47 1FEC                 ??i2_Lcd_Clear 0003                 ??i2_Lcd_Blink 0003  
                 ??_Lcd_Clear 0016                   ??_Lcd_Blink 0016                    _ADCON1bits 0FC1  
           ___wmul@multiplier 0014                      i2___wmul 1F7C                 i2_Lcd_NoBlink 204A  
            ??_Lcd_Write_Char 0015                     main@pina0 0098             i2___awdiv@divisor 0003  
                    i2_vaciar 1C84             i2___awdiv@counter 0005                      _Lcd_Init 1802  
                    _Lcd_Port 1E86                ??i2_escenario1 0009                ??i2_escenario2 0009  
              ??i2_escenario3 0009                     copy_data0 19E6                     copy_data1 1A06  
                ??_escenario1 001C                  ??_escenario2 001C                  ??_escenario3 001C  
                ??_escenario4 0009            i2___awmod@dividend 0001      __end_of_Lcd_Write_String 1D04  
                 ??_Reiniciar 0009         ?_Lcd_CGRAM_CreateChar 0018                      __Hrparam 0000  
                    __Lrparam 0000                      _Terminar 2072         i2___wmul@multiplicand 0003  
                    ___ftpack 135A            __end_of_escenario1 1B78            __end_of_escenario2 166E  
          __end_of_escenario3 1DE8            __end_of_escenario4 1C84                ?i2_Lcd_NoBlink 0001  
         __end_ofi2_Lcd_Clear 2066           __end_ofi2_Lcd_Blink 204A                   ??_Trasmitir 0001  
                    ___lwtoft 1FA2                    sprintf@val 0027                      _cantidad 0041  
             ___lwdiv@divisor 0016             ?_blacklighttoggle 0001               _Lcd_CGRAM_Close 2012  
               Duty_motor@ADC 0092               ___lwdiv@counter 0018                      __ptext10 2012  
                    __ptext11 1548                      __ptext20 1DB2                      __ptext12 1288  
                    __ptext21 15E2                      __ptext13 10AC                      __ptext30 18F2  
                    __ptext22 1CC6                      __ptext14 187E                      __ptext31 16FA  
                    __ptext23 1D42                      __ptext15 11A2                      __ptext40 1AE4  
                    __ptext24 1408                      __ptext16 135A                      __ptext41 2066  
                    __ptext33 1F08                      __ptext25 2020                      __ptext17 1F30  
                    __ptext50 14A8                      __ptext42 1E54                      __ptext34 0FB0  
                    __ptext26 202E                      __ptext18 0EB4                      __ptext51 204A  
                    __ptext43 2072                      __ptext35 1DE8                      __ptext27 1FC6  
                    __ptext19 1C00                      __ptext52 2058                      __ptext44 1C84  
                    __ptext36 1F7C                      __ptext28 1E86                      __ptext53 1FDE  
                    __ptext45 1B78                      __ptext37 1962                      __ptext29 1F56  
                    __ptext54 1A32                      __ptext46 203C                      __ptext38 177E  
                    __ptext55 1D7A                      __ptext47 1E1E                      __ptext39 1C42  
                    __ptext56 1EB2                      __ptext48 166E                      __ptext49 1D04  
                    _figura_1 082B                      _figura_2 0823                      _figura_3 081B  
                    _figura_4 0813                      _figura_5 080B            ??_blacklighttoggle 0001  
                    _contador 003F                 _resultado_ADC 0033                      isa$xinst 0000  
                    int$flags 004C                   i2Lcd_Port@a 0001             i2___awmod@divisor 0003  
           i2___awmod@counter 0005                 PiezaAContar@a 0006            i2_Lcd_Write_String 1D04  
                i2_ContarReal 0FB0            Lcd_Write_Char@temp 0015                      intlevel2 0000  
                   sprintf@ap 0026                     sprintf@sp 0020           ?i2_Lcd_Write_String 0005  
      ??_Lcd_CGRAM_CreateChar 0019             i2Lcd_Set_Cursor@a 0004             i2Lcd_Set_Cursor@b 0003  
           i2Lcd_Set_Cursor@y 0006             i2Lcd_Set_Cursor@z 0005                _Lcd_CGRAM_Init 2004  
            ___lwmod@dividend 001B                    i2Lcd_Cmd@a 0002                   i2_Lcd_Clear 2058  
                 i2_Lcd_Blink 203C          __end_ofi2_escenario1 1BBE          __end_ofi2_escenario2 16FA  
        __end_ofi2_escenario3 1E1E               ??i2_Lcd_NoBlink 0003          ??i2_Lcd_Write_String 0006  
          Lcd_Set_Cursor@temp 001A                 ??_Lcd_NoBlink 0016       __end_of_Lcd_CGRAM_Close 2020  
                    sprintf@c 002A                      sprintf@f 0021               ___lwmod@divisor 001D  
             ___lwmod@counter 001F                    i2_Lcd_Port 1EB2        __end_of_Lcd_CGRAM_Init 2012  
