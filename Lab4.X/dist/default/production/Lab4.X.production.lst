

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Sep  3 21:51:35 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 05/01/2024 GMT
    35                           ; 
    36                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4550 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     
    69                           	psect	idataCOMRAM
    70   000B78                     __pidataCOMRAM:
    71                           	callstack 0
    72                           
    73                           ;initializer for _BackLight_State
    74   000B78  08                 	db	8
    75   000000                     _ACKSTAT	set	32302
    76   000000                     _PEN	set	32298
    77   000000                     _SEN	set	32296
    78   000000                     _TRISB0	set	31896
    79   000000                     _SSPCON2	set	4037
    80   000000                     _SSPCON1	set	4038
    81   000000                     _TRISB1	set	31897
    82   000000                     _SSPBUF	set	4041
    83   000000                     _SSPADD	set	4040
    84   000000                     _SSPSTAT	set	4039
    85   000000                     _SSPIF	set	31987
    86                           
    87                           	psect	smallconst
    88   000800                     __psmallconst:
    89                           	callstack 0
    90   000800  00                 	db	0
    91   000801                     STR_3:
    92   000801  50                 	db	80	;'P'
    93   000802  69                 	db	105	;'i'
    94   000803  65                 	db	101	;'e'
    95   000804  7A                 	db	122	;'z'
    96   000805  61                 	db	97	;'a'
    97   000806  73                 	db	115	;'s'
    98   000807  20                 	db	32
    99   000808  61                 	db	97	;'a'
   100   000809  20                 	db	32
   101   00080A  63                 	db	99	;'c'
   102   00080B  6F                 	db	111	;'o'
   103   00080C  6E                 	db	110	;'n'
   104   00080D  74                 	db	116	;'t'
   105   00080E  61                 	db	97	;'a'
   106   00080F  72                 	db	114	;'r'
   107   000810  3A                 	db	58	;':'
   108   000811  00                 	db	0
   109   000812                     STR_2:
   110   000812  47                 	db	71	;'G'
   111   000813  72                 	db	114	;'r'
   112   000814  75                 	db	117	;'u'
   113   000815  70                 	db	112	;'p'
   114   000816  6F                 	db	111	;'o'
   115   000817  20                 	db	32
   116   000818  32                 	db	50	;'2'
   117   000819  3A                 	db	58	;':'
   118   00081A  00                 	db	0
   119   00081B                     STR_1:
   120   00081B  42                 	db	66	;'B'
   121   00081C  69                 	db	105	;'i'
   122   00081D  65                 	db	101	;'e'
   123   00081E  00                 	db	0
   124   00081F  00                 	db	0	; dummy byte at the end
   125   000000                     
   126                           ; #config settings
   127                           
   128                           	psect	cinit
   129   000A74                     __pcinit:
   130                           	callstack 0
   131   000A74                     start_initialization:
   132                           	callstack 0
   133   000A74                     __initialization:
   134                           	callstack 0
   135                           
   136                           ; Initialize objects allocated to COMRAM (1 bytes)
   137                           ; load TBLPTR registers with __pidataCOMRAM
   138   000A74  0E78               	movlw	low __pidataCOMRAM
   139   000A76  6EF6               	movwf	tblptrl,c
   140   000A78  0E0B               	movlw	high __pidataCOMRAM
   141   000A7A  6EF7               	movwf	tblptrh,c
   142   000A7C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   143   000A7E  6EF8               	movwf	tblptru,c
   144   000A80  0009               	tblrd		*+	;fetch initializer
   145   000A82  CFF5 F00E          	movff	tablat,__pdataCOMRAM
   146                           
   147                           ; Clear objects allocated to COMRAM (2 bytes)
   148   000A86  6A0D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   149   000A88  6A0C               	clrf	__pbssCOMRAM& (0+255),c
   150   000A8A                     end_of_initialization:
   151                           	callstack 0
   152   000A8A                     __end_of__initialization:
   153                           	callstack 0
   154   000A8A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155   000A8C  6EF8               	movwf	tblptru,c
   156   000A8E  0100               	movlb	0
   157   000A90  EFB7  F004         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160   00000C                     __pbssCOMRAM:
   161                           	callstack 0
   162   00000C                     _i2c_add:
   163                           	callstack 0
   164   00000C                     	ds	1
   165   00000D                     _RS:
   166                           	callstack 0
   167   00000D                     	ds	1
   168                           
   169                           	psect	dataCOMRAM
   170   00000E                     __pdataCOMRAM:
   171                           	callstack 0
   172   00000E                     _BackLight_State:
   173                           	callstack 0
   174   00000E                     	ds	1
   175                           
   176                           	psect	cstackCOMRAM
   177   000001                     __pcstackCOMRAM:
   178                           	callstack 0
   179   000001                     ??_I2C_Master_Wait:
   180   000001                     
   181                           ; 1 bytes @ 0x0
   182   000001                     	ds	1
   183   000002                     I2C_Master_Write@data:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x1
   187   000002                     	ds	1
   188   000003                     IO_Expander_Write@Data:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x2
   192   000003                     	ds	1
   193   000004                     LCD_Write_4Bit@Nibble:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x3
   197   000004                     	ds	1
   198   000005                     LCD_CMD@CMD:
   199                           	callstack 0
   200   000005                     LCD_Write_Char@Data:
   201                           	callstack 0
   202                           
   203                           ; 1 bytes @ 0x4
   204   000005                     	ds	1
   205   000006                     ??_LCD_Init:
   206   000006                     LCD_Write_String@Str:
   207                           	callstack 0
   208   000006                     LCD_Set_Cursor@COL:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x5
   212   000006                     	ds	1
   213   000007                     ??_LCD_Write_String:
   214   000007                     LCD_Init@I2C_Add:
   215                           	callstack 0
   216   000007                     LCD_Set_Cursor@ROW:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x6
   220   000007                     	ds	1
   221   000008                     LCD_Write_String@i:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x7
   225   000008                     	ds	2
   226   00000A                     ??_main:
   227                           
   228                           ; 1 bytes @ 0x9
   229   00000A                     	ds	2
   230                           
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 18 in file "Lab4.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : 0/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   250 ;;      Params:         0       0       0       0       0       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0       0       0       0       0
   252 ;;      Temps:          2       0       0       0       0       0       0       0       0
   253 ;;      Totals:         2       0       0       0       0       0       0       0       0
   254 ;;Total ram usage:        2 bytes
   255 ;; Hardware stack levels required when called: 7
   256 ;; This function calls:
   257 ;;		_Backlight
   258 ;;		_I2C_Master_Init
   259 ;;		_I2C_Master_Start
   260 ;;		_LCD_CHAR_PROPIO
   261 ;;		_LCD_Clear
   262 ;;		_LCD_Init
   263 ;;		_LCD_Set_Cursor
   264 ;;		_LCD_Write_Char
   265 ;;		_LCD_Write_String
   266 ;;		_mensaje2
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text0
   273   00096E                     __ptext0:
   274                           	callstack 0
   275   00096E                     _main:
   276                           	callstack 24
   277                           
   278                           ;Lab4.c: 22: _delay((unsigned long)((500)*(4000000/4000.0)));
   279                           
   280                           ;incstack = 0
   281   00096E  0E03               	movlw	3
   282   000970  6E0B               	movwf	(??_main+1)^0,c
   283   000972  0E8A               	movlw	138
   284   000974  6E0A               	movwf	??_main^0,c
   285   000976  0E56               	movlw	86
   286   000978                     u67:
   287   000978  2EE8               	decfsz	wreg,f,c
   288   00097A  D7FE               	bra	u67
   289   00097C  2E0A               	decfsz	??_main^0,f,c
   290   00097E  D7FC               	bra	u67
   291   000980  2E0B               	decfsz	(??_main+1)^0,f,c
   292   000982  D7FA               	bra	u67
   293                           
   294                           ;Lab4.c: 24: I2C_Master_Init();
   295   000984  EC81  F005         	call	_I2C_Master_Init	;wreg free
   296                           
   297                           ;Lab4.c: 25: I2C_Master_Start();
   298   000988  ECB8  F005         	call	_I2C_Master_Start	;wreg free
   299                           
   300                           ;Lab4.c: 27: LCD_Init(0x4E);
   301   00098C  0E4E               	movlw	78
   302   00098E  EC10  F004         	call	_LCD_Init
   303                           
   304                           ;Lab4.c: 28: LCD_Clear();
   305   000992  ECA6  F005         	call	_LCD_Clear	;wreg free
   306                           
   307                           ;Lab4.c: 29: LCD_Set_Cursor(1, 4);
   308   000996  0E04               	movlw	4
   309   000998  6E06               	movwf	LCD_Set_Cursor@COL^0,c
   310   00099A  0E01               	movlw	1
   311   00099C  ECE9  F004         	call	_LCD_Set_Cursor
   312                           
   313                           ;Lab4.c: 30: LCD_Write_String("Bie");
   314   0009A0  0E1B               	movlw	low STR_1
   315   0009A2  6E06               	movwf	LCD_Write_String@Str^0,c
   316   0009A4  EC0A  F005         	call	_LCD_Write_String	;wreg free
   317                           
   318                           ;Lab4.c: 31: LCD_Set_Cursor(2, 1);
   319   0009A8  0E01               	movlw	1
   320   0009AA  6E06               	movwf	LCD_Set_Cursor@COL^0,c
   321   0009AC  0E02               	movlw	2
   322   0009AE  ECE9  F004         	call	_LCD_Set_Cursor
   323                           
   324                           ;Lab4.c: 32: LCD_Write_String("Grupo 2:");
   325   0009B2  0E12               	movlw	low STR_2
   326   0009B4  6E06               	movwf	LCD_Write_String@Str^0,c
   327   0009B6  EC0A  F005         	call	_LCD_Write_String	;wreg free
   328                           
   329                           ;Lab4.c: 33: LCD_CHAR_PROPIO();
   330   0009BA  EC77  F004         	call	_LCD_CHAR_PROPIO	;wreg free
   331                           
   332                           ;Lab4.c: 34: LCD_Write_Char(0x00);
   333   0009BE  0E00               	movlw	0
   334   0009C0  EC5A  F005         	call	_LCD_Write_Char
   335                           
   336                           ;Lab4.c: 35: Backlight();
   337   0009C4  ECAE  F005         	call	_Backlight	;wreg free
   338                           
   339                           ;Lab4.c: 40: LCD_Clear();
   340   0009C8  ECA6  F005         	call	_LCD_Clear	;wreg free
   341                           
   342                           ;Lab4.c: 41: mensaje2();
   343   0009CC  EC29  F005         	call	_mensaje2	;wreg free
   344   0009D0                     l158:
   345   0009D0  D7FF               	goto	l158
   346   0009D2                     __end_of_main:
   347                           	callstack 0
   348                           
   349 ;; *************** function _mensaje2 *****************
   350 ;; Defined at:
   351 ;;		line 51 in file "Lab4.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   365 ;;      Params:         0       0       0       0       0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0       0       0       0       0
   368 ;;      Totals:         0       0       0       0       0       0       0       0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels used: 1
   371 ;; Hardware stack levels required when called: 6
   372 ;; This function calls:
   373 ;;		_Cursor
   374 ;;		_LCD_Set_Cursor
   375 ;;		_LCD_Write_String
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text1
   382   000A52                     __ptext1:
   383                           	callstack 0
   384   000A52                     _mensaje2:
   385                           	callstack 24
   386                           
   387                           ;Lab4.c: 52: LCD_Set_Cursor(1, 1);
   388                           
   389                           ;incstack = 0
   390   000A52  0E01               	movlw	1
   391   000A54  6E06               	movwf	LCD_Set_Cursor@COL^0,c
   392   000A56  0E01               	movlw	1
   393   000A58  ECE9  F004         	call	_LCD_Set_Cursor
   394                           
   395                           ;Lab4.c: 53: LCD_Write_String("Piezas a contar:");
   396   000A5C  0E01               	movlw	low STR_3
   397   000A5E  6E06               	movwf	LCD_Write_String@Str^0,c
   398   000A60  EC0A  F005         	call	_LCD_Write_String	;wreg free
   399                           
   400                           ;Lab4.c: 54: LCD_Set_Cursor(2, 1);
   401   000A64  0E01               	movlw	1
   402   000A66  6E06               	movwf	LCD_Set_Cursor@COL^0,c
   403   000A68  0E02               	movlw	2
   404   000A6A  ECE9  F004         	call	_LCD_Set_Cursor
   405                           
   406                           ;Lab4.c: 55: Cursor();
   407   000A6E  EC9E  F005         	call	_Cursor	;wreg free
   408   000A72  0012               	return		;funcret
   409   000A74                     __end_of_mensaje2:
   410                           	callstack 0
   411                           
   412 ;; *************** function _LCD_Write_String *****************
   413 ;; Defined at:
   414 ;;		line 133 in file "lcd.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;  Str             1    5[COMRAM] PTR unsigned char 
   417 ;;		 -> STR_3(17), STR_2(9), STR_1(4), 
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  i               2    7[COMRAM] int 
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   429 ;;      Params:         1       0       0       0       0       0       0       0       0
   430 ;;      Locals:         2       0       0       0       0       0       0       0       0
   431 ;;      Temps:          1       0       0       0       0       0       0       0       0
   432 ;;      Totals:         4       0       0       0       0       0       0       0       0
   433 ;;Total ram usage:        4 bytes
   434 ;; Hardware stack levels used: 1
   435 ;; Hardware stack levels required when called: 5
   436 ;; This function calls:
   437 ;;		_LCD_Write_Char
   438 ;; This function is called by:
   439 ;;		_main
   440 ;;		_mensaje2
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text2
   445   000A14                     __ptext2:
   446                           	callstack 0
   447   000A14                     _LCD_Write_String:
   448                           	callstack 24
   449                           
   450                           ;lcd.c: 135: for(int i=0; Str[i]!='\0'; i++)
   451                           
   452                           ;incstack = 0
   453   000A14  0E00               	movlw	0
   454   000A16  6E09               	movwf	(LCD_Write_String@i+1)^0,c
   455   000A18  0E00               	movlw	0
   456   000A1A  6E08               	movwf	LCD_Write_String@i^0,c
   457   000A1C  D00D               	goto	l1082
   458   000A1E                     l1078:
   459                           
   460                           ;lcd.c: 136: LCD_Write_Char(Str[i]);
   461   000A1E  5006               	movf	LCD_Write_String@Str^0,w,c
   462   000A20  2408               	addwf	LCD_Write_String@i^0,w,c
   463   000A22  6E07               	movwf	??_LCD_Write_String^0,c
   464   000A24  C007  FFF6         	movff	??_LCD_Write_String,tblptrl
   465   000A28                     	if	1	;There is more than 1 active tblptr byte
   466   000A28  0E08               	movlw	high __smallconst
   467   000A2A  6EF7               	movwf	tblptrh,c
   468   000A2C                     	endif
   469   000A2C                     	if	0	;tblptru may be non-zero
   470   000A2C                     	endif
   471   000A2C                     	if	0	;tblptru may be non-zero
   472   000A2C                     	endif
   473   000A2C  0008               	tblrd		*
   474   000A2E  50F5               	movf	tablat,w,c
   475   000A30  EC5A  F005         	call	_LCD_Write_Char
   476   000A34  4A08               	infsnz	LCD_Write_String@i^0,f,c
   477   000A36  2A09               	incf	(LCD_Write_String@i+1)^0,f,c
   478   000A38                     l1082:
   479   000A38  5006               	movf	LCD_Write_String@Str^0,w,c
   480   000A3A  2408               	addwf	LCD_Write_String@i^0,w,c
   481   000A3C  6E07               	movwf	??_LCD_Write_String^0,c
   482   000A3E  C007  FFF6         	movff	??_LCD_Write_String,tblptrl
   483   000A42                     	if	1	;There is more than 1 active tblptr byte
   484   000A42  0E08               	movlw	high __smallconst
   485   000A44  6EF7               	movwf	tblptrh,c
   486   000A46                     	endif
   487   000A46                     	if	0	;tblptru may be non-zero
   488   000A46                     	endif
   489   000A46                     	if	0	;tblptru may be non-zero
   490   000A46                     	endif
   491   000A46  0008               	tblrd		*
   492   000A48  50F5               	movf	tablat,w,c
   493   000A4A  0900               	iorlw	0
   494   000A4C  B4D8               	btfsc	status,2,c
   495   000A4E  0012               	return	
   496   000A50  D7E6               	goto	l1078
   497   000A52                     __end_of_LCD_Write_String:
   498                           	callstack 0
   499                           
   500 ;; *************** function _LCD_Write_Char *****************
   501 ;; Defined at:
   502 ;;		line 126 in file "lcd.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;  Data            1    wreg     unsigned char 
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  Data            1    4[COMRAM] unsigned char 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   516 ;;      Params:         0       0       0       0       0       0       0       0       0
   517 ;;      Locals:         1       0       0       0       0       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0       0       0       0       0
   519 ;;      Totals:         1       0       0       0       0       0       0       0       0
   520 ;;Total ram usage:        1 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; Hardware stack levels required when called: 4
   523 ;; This function calls:
   524 ;;		_LCD_Write_4Bit
   525 ;; This function is called by:
   526 ;;		_LCD_Write_String
   527 ;;		_main
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text3
   532   000AB4                     __ptext3:
   533                           	callstack 0
   534   000AB4                     _LCD_Write_Char:
   535                           	callstack 24
   536                           
   537                           ;incstack = 0
   538                           ;LCD_Write_Char@Data stored from wreg
   539   000AB4  6E05               	movwf	LCD_Write_Char@Data^0,c
   540                           
   541                           ;lcd.c: 128: RS = 1;
   542   000AB6  0E01               	movlw	1
   543   000AB8  6E0D               	movwf	_RS^0,c
   544                           
   545                           ;lcd.c: 129: LCD_Write_4Bit(Data & 0xF0);
   546   000ABA  5005               	movf	LCD_Write_Char@Data^0,w,c
   547   000ABC  0BF0               	andlw	240
   548   000ABE  EC4A  F005         	call	_LCD_Write_4Bit
   549                           
   550                           ;lcd.c: 130: LCD_Write_4Bit((Data << 4) & 0xF0);
   551   000AC2  3805               	swapf	LCD_Write_Char@Data^0,w,c
   552   000AC4  0BF0               	andlw	240
   553   000AC6  0BF0               	andlw	240
   554   000AC8  EC4A  F005         	call	_LCD_Write_4Bit
   555   000ACC  0012               	return		;funcret
   556   000ACE                     __end_of_LCD_Write_Char:
   557                           	callstack 0
   558                           
   559 ;; *************** function _LCD_Set_Cursor *****************
   560 ;; Defined at:
   561 ;;		line 139 in file "lcd.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;  ROW             1    wreg     unsigned char 
   564 ;;  COL             1    5[COMRAM] unsigned char 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  ROW             1    6[COMRAM] unsigned char 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   576 ;;      Params:         1       0       0       0       0       0       0       0       0
   577 ;;      Locals:         1       0       0       0       0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0       0       0       0       0
   579 ;;      Totals:         2       0       0       0       0       0       0       0       0
   580 ;;Total ram usage:        2 bytes
   581 ;; Hardware stack levels used: 1
   582 ;; Hardware stack levels required when called: 5
   583 ;; This function calls:
   584 ;;		_LCD_CMD
   585 ;; This function is called by:
   586 ;;		_main
   587 ;;		_mensaje2
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text4
   592   0009D2                     __ptext4:
   593                           	callstack 0
   594   0009D2                     _LCD_Set_Cursor:
   595                           	callstack 24
   596                           
   597                           ;incstack = 0
   598                           ;LCD_Set_Cursor@ROW stored from wreg
   599   0009D2  6E07               	movwf	LCD_Set_Cursor@ROW^0,c
   600                           
   601                           ;lcd.c: 141: switch(ROW)
   602   0009D4  D014               	goto	l1094
   603   0009D6                     l1086:
   604                           
   605                           ;lcd.c: 144: LCD_CMD(0xC0 + COL-1);
   606   0009D6  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   607   0009D8  0FBF               	addlw	191
   608   0009DA  EC67  F005         	call	_LCD_CMD
   609                           
   610                           ;lcd.c: 145: break;
   611   0009DE  0012               	return	
   612   0009E0                     l1088:
   613                           
   614                           ;lcd.c: 147: LCD_CMD(0x94 + COL-1);
   615   0009E0  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   616   0009E2  0F93               	addlw	147
   617   0009E4  EC67  F005         	call	_LCD_CMD
   618                           
   619                           ;lcd.c: 148: break;
   620   0009E8  0012               	return	
   621   0009EA                     l1090:
   622                           
   623                           ;lcd.c: 150: LCD_CMD(0xD4 + COL-1);
   624   0009EA  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   625   0009EC  0FD3               	addlw	211
   626   0009EE  EC67  F005         	call	_LCD_CMD
   627                           
   628                           ;lcd.c: 151: break;
   629   0009F2  0012               	return	
   630   0009F4                     l1092:
   631                           
   632                           ;lcd.c: 154: LCD_CMD(0x80 + COL-1);
   633   0009F4  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   634   0009F6  0F7F               	addlw	127
   635   0009F8  EC67  F005         	call	_LCD_CMD
   636                           
   637                           ;lcd.c: 155: }
   638   0009FC  0012               	return	
   639   0009FE                     l1094:
   640   0009FE  5007               	movf	LCD_Set_Cursor@ROW^0,w,c
   641                           
   642                           ; Switch size 1, requested type "simple"
   643                           ; Number of cases is 3, Range of values is 2 to 4
   644                           ; switch strategies available:
   645                           ; Name         Instructions Cycles
   646                           ; simple_byte           10     6 (average)
   647                           ;	Chosen strategy is simple_byte
   648   000A00  0A02               	xorlw	2	; case 2
   649   000A02  B4D8               	btfsc	status,2,c
   650   000A04  D7E8               	goto	l1086
   651   000A06  0A01               	xorlw	1	; case 3
   652   000A08  B4D8               	btfsc	status,2,c
   653   000A0A  D7EA               	goto	l1088
   654   000A0C  0A07               	xorlw	7	; case 4
   655   000A0E  B4D8               	btfsc	status,2,c
   656   000A10  D7EC               	goto	l1090
   657   000A12  D7F0               	goto	l1092
   658   000A14                     __end_of_LCD_Set_Cursor:
   659                           	callstack 0
   660                           
   661 ;; *************** function _Cursor *****************
   662 ;; Defined at:
   663 ;;		line 188 in file "lcd.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg, status,2, status,0, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   677 ;;      Params:         0       0       0       0       0       0       0       0       0
   678 ;;      Locals:         0       0       0       0       0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0       0       0       0       0
   680 ;;      Totals:         0       0       0       0       0       0       0       0       0
   681 ;;Total ram usage:        0 bytes
   682 ;; Hardware stack levels used: 1
   683 ;; Hardware stack levels required when called: 5
   684 ;; This function calls:
   685 ;;		_LCD_CMD
   686 ;; This function is called by:
   687 ;;		_mensaje2
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           	psect	text5
   692   000B3C                     __ptext5:
   693                           	callstack 0
   694   000B3C                     _Cursor:
   695                           	callstack 24
   696                           
   697                           ;lcd.c: 190: LCD_CMD(0xD);
   698                           
   699                           ;incstack = 0
   700   000B3C  0E0D               	movlw	13
   701   000B3E  EC67  F005         	call	_LCD_CMD
   702                           
   703                           ;lcd.c: 191: _delay((unsigned long)((40)*(4000000/4000000.0)));
   704   000B42  0E0D               	movlw	13
   705   000B44                     u77:
   706   000B44  2EE8               	decfsz	wreg,f,c
   707   000B46  D7FE               	bra	u77
   708   000B48  0000               	nop	
   709   000B4A  0012               	return		;funcret
   710   000B4C                     __end_of_Cursor:
   711                           	callstack 0
   712                           
   713 ;; *************** function _LCD_Init *****************
   714 ;; Defined at:
   715 ;;		line 79 in file "lcd.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  I2C_Add         1    wreg     unsigned char 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  I2C_Add         1    6[COMRAM] unsigned char 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   729 ;;      Params:         0       0       0       0       0       0       0       0       0
   730 ;;      Locals:         1       0       0       0       0       0       0       0       0
   731 ;;      Temps:          1       0       0       0       0       0       0       0       0
   732 ;;      Totals:         2       0       0       0       0       0       0       0       0
   733 ;;Total ram usage:        2 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 5
   736 ;; This function calls:
   737 ;;		_IO_Expander_Write
   738 ;;		_LCD_CMD
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text6
   745   000820                     __ptext6:
   746                           	callstack 0
   747   000820                     _LCD_Init:
   748                           	callstack 25
   749                           
   750                           ;incstack = 0
   751                           ;LCD_Init@I2C_Add stored from wreg
   752   000820  6E07               	movwf	LCD_Init@I2C_Add^0,c
   753                           
   754                           ;lcd.c: 81: i2c_add = I2C_Add;
   755   000822  C007  F00C         	movff	LCD_Init@I2C_Add,_i2c_add
   756                           
   757                           ;lcd.c: 82: IO_Expander_Write(0x00);
   758   000826  0E00               	movlw	0
   759   000828  EC74  F005         	call	_IO_Expander_Write
   760                           
   761                           ;lcd.c: 83: _delay((unsigned long)((30)*(4000000/4000.0)));
   762   00082C  0E27               	movlw	39
   763   00082E  6E06               	movwf	??_LCD_Init^0,c
   764   000830  0EF5               	movlw	245
   765   000832                     u87:
   766   000832  2EE8               	decfsz	wreg,f,c
   767   000834  D7FE               	bra	u87
   768   000836  2E06               	decfsz	??_LCD_Init^0,f,c
   769   000838  D7FC               	bra	u87
   770   00083A  0000               	nop	
   771                           
   772                           ;lcd.c: 84: LCD_CMD(0x03);
   773   00083C  0E03               	movlw	3
   774   00083E  EC67  F005         	call	_LCD_CMD
   775                           
   776                           ;lcd.c: 85: _delay((unsigned long)((5)*(4000000/4000.0)));
   777   000842  0E07               	movlw	7
   778   000844  6E06               	movwf	??_LCD_Init^0,c
   779   000846  0E7D               	movlw	125
   780   000848                     u97:
   781   000848  2EE8               	decfsz	wreg,f,c
   782   00084A  D7FE               	bra	u97
   783   00084C  2E06               	decfsz	??_LCD_Init^0,f,c
   784   00084E  D7FC               	bra	u97
   785   000850  0000               	nop	
   786                           
   787                           ;lcd.c: 86: LCD_CMD(0x03);
   788   000852  0E03               	movlw	3
   789   000854  EC67  F005         	call	_LCD_CMD
   790                           
   791                           ;lcd.c: 87: _delay((unsigned long)((5)*(4000000/4000.0)));
   792   000858  0E07               	movlw	7
   793   00085A  6E06               	movwf	??_LCD_Init^0,c
   794   00085C  0E7D               	movlw	125
   795   00085E                     u107:
   796   00085E  2EE8               	decfsz	wreg,f,c
   797   000860  D7FE               	bra	u107
   798   000862  2E06               	decfsz	??_LCD_Init^0,f,c
   799   000864  D7FC               	bra	u107
   800   000866  0000               	nop	
   801                           
   802                           ;lcd.c: 88: LCD_CMD(0x03);
   803   000868  0E03               	movlw	3
   804   00086A  EC67  F005         	call	_LCD_CMD
   805                           
   806                           ;lcd.c: 89: _delay((unsigned long)((5)*(4000000/4000.0)));
   807   00086E  0E07               	movlw	7
   808   000870  6E06               	movwf	??_LCD_Init^0,c
   809   000872  0E7D               	movlw	125
   810   000874                     u117:
   811   000874  2EE8               	decfsz	wreg,f,c
   812   000876  D7FE               	bra	u117
   813   000878  2E06               	decfsz	??_LCD_Init^0,f,c
   814   00087A  D7FC               	bra	u117
   815   00087C  0000               	nop	
   816                           
   817                           ;lcd.c: 90: LCD_CMD(0x02);
   818   00087E  0E02               	movlw	2
   819   000880  EC67  F005         	call	_LCD_CMD
   820                           
   821                           ;lcd.c: 91: _delay((unsigned long)((5)*(4000000/4000.0)));
   822   000884  0E07               	movlw	7
   823   000886  6E06               	movwf	??_LCD_Init^0,c
   824   000888  0E7D               	movlw	125
   825   00088A                     u127:
   826   00088A  2EE8               	decfsz	wreg,f,c
   827   00088C  D7FE               	bra	u127
   828   00088E  2E06               	decfsz	??_LCD_Init^0,f,c
   829   000890  D7FC               	bra	u127
   830   000892  0000               	nop	
   831                           
   832                           ;lcd.c: 92: LCD_CMD(0x20 | (2 << 2));
   833   000894  0E28               	movlw	40
   834   000896  EC67  F005         	call	_LCD_CMD
   835                           
   836                           ;lcd.c: 93: _delay((unsigned long)((50)*(4000000/4000.0)));
   837   00089A  0E41               	movlw	65
   838   00089C  6E06               	movwf	??_LCD_Init^0,c
   839   00089E  0EEE               	movlw	238
   840   0008A0                     u137:
   841   0008A0  2EE8               	decfsz	wreg,f,c
   842   0008A2  D7FE               	bra	u137
   843   0008A4  2E06               	decfsz	??_LCD_Init^0,f,c
   844   0008A6  D7FC               	bra	u137
   845   0008A8  D000               	nop2	
   846                           
   847                           ;lcd.c: 94: LCD_CMD(0x0C);
   848   0008AA  0E0C               	movlw	12
   849   0008AC  EC67  F005         	call	_LCD_CMD
   850                           
   851                           ;lcd.c: 95: _delay((unsigned long)((50)*(4000000/4000.0)));
   852   0008B0  0E41               	movlw	65
   853   0008B2  6E06               	movwf	??_LCD_Init^0,c
   854   0008B4  0EEE               	movlw	238
   855   0008B6                     u147:
   856   0008B6  2EE8               	decfsz	wreg,f,c
   857   0008B8  D7FE               	bra	u147
   858   0008BA  2E06               	decfsz	??_LCD_Init^0,f,c
   859   0008BC  D7FC               	bra	u147
   860   0008BE  D000               	nop2	
   861                           
   862                           ;lcd.c: 96: LCD_CMD(0x01);
   863   0008C0  0E01               	movlw	1
   864   0008C2  EC67  F005         	call	_LCD_CMD
   865                           
   866                           ;lcd.c: 97: _delay((unsigned long)((50)*(4000000/4000.0)));
   867   0008C6  0E41               	movlw	65
   868   0008C8  6E06               	movwf	??_LCD_Init^0,c
   869   0008CA  0EEE               	movlw	238
   870   0008CC                     u157:
   871   0008CC  2EE8               	decfsz	wreg,f,c
   872   0008CE  D7FE               	bra	u157
   873   0008D0  2E06               	decfsz	??_LCD_Init^0,f,c
   874   0008D2  D7FC               	bra	u157
   875   0008D4  D000               	nop2	
   876                           
   877                           ;lcd.c: 98: LCD_CMD(0x04 | 0x02);
   878   0008D6  0E06               	movlw	6
   879   0008D8  EC67  F005         	call	_LCD_CMD
   880                           
   881                           ;lcd.c: 99: _delay((unsigned long)((50)*(4000000/4000.0)));
   882   0008DC  0E41               	movlw	65
   883   0008DE  6E06               	movwf	??_LCD_Init^0,c
   884   0008E0  0EEE               	movlw	238
   885   0008E2                     u167:
   886   0008E2  2EE8               	decfsz	wreg,f,c
   887   0008E4  D7FE               	bra	u167
   888   0008E6  2E06               	decfsz	??_LCD_Init^0,f,c
   889   0008E8  D7FC               	bra	u167
   890   0008EA  D000               	nop2	
   891   0008EC  0012               	return		;funcret
   892   0008EE                     __end_of_LCD_Init:
   893                           	callstack 0
   894                           
   895 ;; *************** function _LCD_Clear *****************
   896 ;; Defined at:
   897 ;;		line 182 in file "lcd.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   911 ;;      Params:         0       0       0       0       0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0       0       0
   914 ;;      Totals:         0       0       0       0       0       0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 5
   918 ;; This function calls:
   919 ;;		_LCD_CMD
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text7
   926   000B4C                     __ptext7:
   927                           	callstack 0
   928   000B4C                     _LCD_Clear:
   929                           	callstack 25
   930                           
   931                           ;lcd.c: 184: LCD_CMD(0x01);
   932                           
   933                           ;incstack = 0
   934   000B4C  0E01               	movlw	1
   935   000B4E  EC67  F005         	call	_LCD_CMD
   936                           
   937                           ;lcd.c: 185: _delay((unsigned long)((40)*(4000000/4000000.0)));
   938   000B52  0E0D               	movlw	13
   939   000B54                     u177:
   940   000B54  2EE8               	decfsz	wreg,f,c
   941   000B56  D7FE               	bra	u177
   942   000B58  0000               	nop	
   943   000B5A  0012               	return		;funcret
   944   000B5C                     __end_of_LCD_Clear:
   945                           	callstack 0
   946                           
   947 ;; *************** function _LCD_CHAR_PROPIO *****************
   948 ;; Defined at:
   949 ;;		line 195 in file "lcd.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   963 ;;      Params:         0       0       0       0       0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 5
   970 ;; This function calls:
   971 ;;		_LCD_CMD
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text8
   978   0008EE                     __ptext8:
   979                           	callstack 0
   980   0008EE                     _LCD_CHAR_PROPIO:
   981                           	callstack 25
   982                           
   983                           ;lcd.c: 197: LCD_CMD(0x80);
   984                           
   985                           ;incstack = 0
   986   0008EE  0E80               	movlw	128
   987   0008F0  EC67  F005         	call	_LCD_CMD
   988                           
   989                           ;lcd.c: 198: _delay((unsigned long)((40)*(4000000/4000000.0)));
   990   0008F4  0E0D               	movlw	13
   991   0008F6                     u187:
   992   0008F6  2EE8               	decfsz	wreg,f,c
   993   0008F8  D7FE               	bra	u187
   994   0008FA  0000               	nop	
   995                           
   996                           ;lcd.c: 199: LCD_CMD(0x40);
   997   0008FC  0E40               	movlw	64
   998   0008FE  EC67  F005         	call	_LCD_CMD
   999                           
  1000                           ;lcd.c: 200: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1001   000902  0E0D               	movlw	13
  1002   000904                     u197:
  1003   000904  2EE8               	decfsz	wreg,f,c
  1004   000906  D7FE               	bra	u197
  1005   000908  0000               	nop	
  1006                           
  1007                           ;lcd.c: 203: LCD_CMD(0x40+0xe);
  1008   00090A  0E4E               	movlw	78
  1009   00090C  EC67  F005         	call	_LCD_CMD
  1010                           
  1011                           ;lcd.c: 204: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1012   000910  0E0D               	movlw	13
  1013   000912                     u207:
  1014   000912  2EE8               	decfsz	wreg,f,c
  1015   000914  D7FE               	bra	u207
  1016   000916  0000               	nop	
  1017                           
  1018                           ;lcd.c: 205: LCD_CMD(0x40+0x4);
  1019   000918  0E44               	movlw	68
  1020   00091A  EC67  F005         	call	_LCD_CMD
  1021                           
  1022                           ;lcd.c: 206: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1023   00091E  0E0D               	movlw	13
  1024   000920                     u217:
  1025   000920  2EE8               	decfsz	wreg,f,c
  1026   000922  D7FE               	bra	u217
  1027   000924  0000               	nop	
  1028                           
  1029                           ;lcd.c: 207: LCD_CMD(0x40+0xe);
  1030   000926  0E4E               	movlw	78
  1031   000928  EC67  F005         	call	_LCD_CMD
  1032                           
  1033                           ;lcd.c: 208: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1034   00092C  0E0D               	movlw	13
  1035   00092E                     u227:
  1036   00092E  2EE8               	decfsz	wreg,f,c
  1037   000930  D7FE               	bra	u227
  1038   000932  0000               	nop	
  1039                           
  1040                           ;lcd.c: 209: LCD_CMD(0x40+0x15);
  1041   000934  0E55               	movlw	85
  1042   000936  EC67  F005         	call	_LCD_CMD
  1043                           
  1044                           ;lcd.c: 210: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1045   00093A  0E0D               	movlw	13
  1046   00093C                     u237:
  1047   00093C  2EE8               	decfsz	wreg,f,c
  1048   00093E  D7FE               	bra	u237
  1049   000940  0000               	nop	
  1050                           
  1051                           ;lcd.c: 211: LCD_CMD(0x40+0x4);
  1052   000942  0E44               	movlw	68
  1053   000944  EC67  F005         	call	_LCD_CMD
  1054                           
  1055                           ;lcd.c: 212: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1056   000948  0E0D               	movlw	13
  1057   00094A                     u247:
  1058   00094A  2EE8               	decfsz	wreg,f,c
  1059   00094C  D7FE               	bra	u247
  1060   00094E  0000               	nop	
  1061                           
  1062                           ;lcd.c: 213: LCD_CMD(0x40+0xa);
  1063   000950  0E4A               	movlw	74
  1064   000952  EC67  F005         	call	_LCD_CMD
  1065                           
  1066                           ;lcd.c: 214: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1067   000956  0E0D               	movlw	13
  1068   000958                     u257:
  1069   000958  2EE8               	decfsz	wreg,f,c
  1070   00095A  D7FE               	bra	u257
  1071   00095C  0000               	nop	
  1072                           
  1073                           ;lcd.c: 215: LCD_CMD(0x40+0x1b);
  1074   00095E  0E5B               	movlw	91
  1075   000960  EC67  F005         	call	_LCD_CMD
  1076                           
  1077                           ;lcd.c: 216: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1078   000964  0E0D               	movlw	13
  1079   000966                     u267:
  1080   000966  2EE8               	decfsz	wreg,f,c
  1081   000968  D7FE               	bra	u267
  1082   00096A  0000               	nop	
  1083   00096C  0012               	return		;funcret
  1084   00096E                     __end_of_LCD_CHAR_PROPIO:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _LCD_CMD *****************
  1088 ;; Defined at:
  1089 ;;		line 119 in file "lcd.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  CMD             1    wreg     unsigned char 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  CMD             1    4[COMRAM] unsigned char 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1103 ;;      Params:         0       0       0       0       0       0       0       0       0
  1104 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1106 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1107 ;;Total ram usage:        1 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; Hardware stack levels required when called: 4
  1110 ;; This function calls:
  1111 ;;		_LCD_Write_4Bit
  1112 ;; This function is called by:
  1113 ;;		_LCD_Init
  1114 ;;		_LCD_Set_Cursor
  1115 ;;		_LCD_Clear
  1116 ;;		_Cursor
  1117 ;;		_LCD_CHAR_PROPIO
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text9
  1122   000ACE                     __ptext9:
  1123                           	callstack 0
  1124   000ACE                     _LCD_CMD:
  1125                           	callstack 24
  1126                           
  1127                           ;incstack = 0
  1128                           ;LCD_CMD@CMD stored from wreg
  1129   000ACE  6E05               	movwf	LCD_CMD@CMD^0,c
  1130                           
  1131                           ;lcd.c: 121: RS = 0;
  1132   000AD0  0E00               	movlw	0
  1133   000AD2  6E0D               	movwf	_RS^0,c
  1134                           
  1135                           ;lcd.c: 122: LCD_Write_4Bit(CMD & 0xF0);
  1136   000AD4  5005               	movf	LCD_CMD@CMD^0,w,c
  1137   000AD6  0BF0               	andlw	240
  1138   000AD8  EC4A  F005         	call	_LCD_Write_4Bit
  1139                           
  1140                           ;lcd.c: 123: LCD_Write_4Bit((CMD << 4) & 0xF0);
  1141   000ADC  3805               	swapf	LCD_CMD@CMD^0,w,c
  1142   000ADE  0BF0               	andlw	240
  1143   000AE0  0BF0               	andlw	240
  1144   000AE2  EC4A  F005         	call	_LCD_Write_4Bit
  1145   000AE6  0012               	return		;funcret
  1146   000AE8                     __end_of_LCD_CMD:
  1147                           	callstack 0
  1148                           
  1149 ;; *************** function _LCD_Write_4Bit *****************
  1150 ;; Defined at:
  1151 ;;		line 110 in file "lcd.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  Nibble          1    wreg     unsigned char 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  Nibble          1    3[COMRAM] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, status,0, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1165 ;;      Params:         0       0       0       0       0       0       0       0       0
  1166 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1168 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1169 ;;Total ram usage:        1 bytes
  1170 ;; Hardware stack levels used: 1
  1171 ;; Hardware stack levels required when called: 3
  1172 ;; This function calls:
  1173 ;;		_IO_Expander_Write
  1174 ;; This function is called by:
  1175 ;;		_LCD_CMD
  1176 ;;		_LCD_Write_Char
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text10
  1181   000A94                     __ptext10:
  1182                           	callstack 0
  1183   000A94                     _LCD_Write_4Bit:
  1184                           	callstack 24
  1185                           
  1186                           ;incstack = 0
  1187                           ;LCD_Write_4Bit@Nibble stored from wreg
  1188   000A94  6E04               	movwf	LCD_Write_4Bit@Nibble^0,c
  1189                           
  1190                           ;lcd.c: 113: Nibble |= RS;
  1191   000A96  500D               	movf	_RS^0,w,c
  1192   000A98  1204               	iorwf	LCD_Write_4Bit@Nibble^0,f,c
  1193                           
  1194                           ;lcd.c: 114: IO_Expander_Write(Nibble | 0x04);
  1195   000A9A  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
  1196   000A9C  0904               	iorlw	4
  1197   000A9E  EC74  F005         	call	_IO_Expander_Write
  1198                           
  1199                           ;lcd.c: 115: IO_Expander_Write(Nibble & 0xFB);
  1200   000AA2  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
  1201   000AA4  0BFB               	andlw	251
  1202   000AA6  EC74  F005         	call	_IO_Expander_Write
  1203                           
  1204                           ;lcd.c: 116: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1205   000AAA  0E10               	movlw	16
  1206   000AAC                     u277:
  1207   000AAC  2EE8               	decfsz	wreg,f,c
  1208   000AAE  D7FE               	bra	u277
  1209   000AB0  D000               	nop2	
  1210   000AB2  0012               	return		;funcret
  1211   000AB4                     __end_of_LCD_Write_4Bit:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _I2C_Master_Init *****************
  1215 ;; Defined at:
  1216 ;;		line 8 in file "lcd.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1230 ;;      Params:         0       0       0       0       0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1233 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text11
  1244   000B02                     __ptext11:
  1245                           	callstack 0
  1246   000B02                     _I2C_Master_Init:
  1247                           	callstack 30
  1248                           
  1249                           ;lcd.c: 10: SSPCON1 = 0x28;
  1250                           
  1251                           ;incstack = 0
  1252   000B02  0E28               	movlw	40
  1253   000B04  6EC6               	movwf	198,c	;volatile
  1254                           
  1255                           ;lcd.c: 11: SSPCON2 = 0x00;
  1256   000B06  0E00               	movlw	0
  1257   000B08  6EC5               	movwf	197,c	;volatile
  1258                           
  1259                           ;lcd.c: 12: SSPSTAT = 0x00;
  1260   000B0A  0E00               	movlw	0
  1261   000B0C  6EC7               	movwf	199,c	;volatile
  1262                           
  1263                           ;lcd.c: 13: SSPADD = ((4000000/4)/100000) - 1;
  1264   000B0E  0E09               	movlw	9
  1265   000B10  6EC8               	movwf	200,c	;volatile
  1266                           
  1267                           ;lcd.c: 14: TRISB1 = 1;
  1268   000B12  8293               	bsf	3987,1,c	;volatile
  1269                           
  1270                           ;lcd.c: 15: TRISB0 = 1;
  1271   000B14  8093               	bsf	3987,0,c	;volatile
  1272   000B16  0012               	return		;funcret
  1273   000B18                     __end_of_I2C_Master_Init:
  1274                           	callstack 0
  1275                           
  1276 ;; *************** function _Backlight *****************
  1277 ;; Defined at:
  1278 ;;		line 158 in file "lcd.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1295 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 3
  1299 ;; This function calls:
  1300 ;;		_IO_Expander_Write
  1301 ;; This function is called by:
  1302 ;;		_main
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text12
  1307   000B5C                     __ptext12:
  1308                           	callstack 0
  1309   000B5C                     _Backlight:
  1310                           	callstack 27
  1311                           
  1312                           ;lcd.c: 160: BackLight_State = 0x08;
  1313                           
  1314                           ;incstack = 0
  1315   000B5C  0E08               	movlw	8
  1316   000B5E  6E0E               	movwf	_BackLight_State^0,c
  1317                           
  1318                           ;lcd.c: 161: IO_Expander_Write(0);
  1319   000B60  0E00               	movlw	0
  1320   000B62  EC74  F005         	call	_IO_Expander_Write
  1321   000B66  0012               	return		;funcret
  1322   000B68                     __end_of_Backlight:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function _IO_Expander_Write *****************
  1326 ;; Defined at:
  1327 ;;		line 102 in file "lcd.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  Data            1    wreg     unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  Data            1    2[COMRAM] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1341 ;;      Params:         0       0       0       0       0       0       0       0       0
  1342 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1344 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1345 ;;Total ram usage:        1 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 2
  1348 ;; This function calls:
  1349 ;;		_I2C_Master_Start
  1350 ;;		_I2C_Master_Stop
  1351 ;;		_I2C_Master_Write
  1352 ;; This function is called by:
  1353 ;;		_LCD_Init
  1354 ;;		_LCD_Write_4Bit
  1355 ;;		_Backlight
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text13
  1360   000AE8                     __ptext13:
  1361                           	callstack 0
  1362   000AE8                     _IO_Expander_Write:
  1363                           	callstack 24
  1364                           
  1365                           ;incstack = 0
  1366                           ;IO_Expander_Write@Data stored from wreg
  1367   000AE8  6E03               	movwf	IO_Expander_Write@Data^0,c
  1368                           
  1369                           ;lcd.c: 104: I2C_Master_Start();
  1370   000AEA  ECB8  F005         	call	_I2C_Master_Start	;wreg free
  1371                           
  1372                           ;lcd.c: 105: I2C_Master_Write(i2c_add);
  1373   000AEE  500C               	movf	_i2c_add^0,w,c
  1374   000AF0  EC8C  F005         	call	_I2C_Master_Write
  1375                           
  1376                           ;lcd.c: 106: I2C_Master_Write(Data | BackLight_State);
  1377   000AF4  5003               	movf	IO_Expander_Write@Data^0,w,c
  1378   000AF6  100E               	iorwf	_BackLight_State^0,w,c
  1379   000AF8  EC8C  F005         	call	_I2C_Master_Write
  1380                           
  1381                           ;lcd.c: 107: I2C_Master_Stop();
  1382   000AFC  ECB4  F005         	call	_I2C_Master_Stop	;wreg free
  1383   000B00  0012               	return		;funcret
  1384   000B02                     __end_of_IO_Expander_Write:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _I2C_Master_Write *****************
  1388 ;; Defined at:
  1389 ;;		line 55 in file "lcd.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  data            1    wreg     unsigned char 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  data            1    1[COMRAM] unsigned char 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      unsigned char 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1403 ;;      Params:         0       0       0       0       0       0       0       0       0
  1404 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1406 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1407 ;;Total ram usage:        1 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 1
  1410 ;; This function calls:
  1411 ;;		_I2C_Master_Wait
  1412 ;; This function is called by:
  1413 ;;		_IO_Expander_Write
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text14
  1418   000B18                     __ptext14:
  1419                           	callstack 0
  1420   000B18                     _I2C_Master_Write:
  1421                           	callstack 24
  1422                           
  1423                           ;incstack = 0
  1424                           ;I2C_Master_Write@data stored from wreg
  1425   000B18  6E02               	movwf	I2C_Master_Write@data^0,c
  1426                           
  1427                           ;lcd.c: 57: I2C_Master_Wait();
  1428   000B1A  EC95  F005         	call	_I2C_Master_Wait	;wreg free
  1429                           
  1430                           ;lcd.c: 58: SSPBUF = data;
  1431   000B1E  C002  FFC9         	movff	I2C_Master_Write@data,4041	;volatile
  1432   000B22                     l69:
  1433   000B22  A69E               	btfss	3998,3,c	;volatile
  1434   000B24  D7FE               	goto	l69
  1435                           
  1436                           ;lcd.c: 60: SSPIF = 0;
  1437   000B26  969E               	bcf	3998,3,c	;volatile
  1438                           
  1439                           ;lcd.c: 61: return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  1440   000B28  0012               	return		;funcret
  1441   000B2A                     __end_of_I2C_Master_Write:
  1442                           	callstack 0
  1443                           
  1444 ;; *************** function _I2C_Master_Stop *****************
  1445 ;; Defined at:
  1446 ;;		line 35 in file "lcd.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1460 ;;      Params:         0       0       0       0       0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1462 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1463 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1464 ;;Total ram usage:        0 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; Hardware stack levels required when called: 1
  1467 ;; This function calls:
  1468 ;;		_I2C_Master_Wait
  1469 ;; This function is called by:
  1470 ;;		_IO_Expander_Write
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text15
  1475   000B68                     __ptext15:
  1476                           	callstack 0
  1477   000B68                     _I2C_Master_Stop:
  1478                           	callstack 24
  1479                           
  1480                           ;lcd.c: 37: I2C_Master_Wait();
  1481                           
  1482                           ;incstack = 0
  1483   000B68  EC95  F005         	call	_I2C_Master_Wait	;wreg free
  1484                           
  1485                           ;lcd.c: 38: PEN = 1;
  1486   000B6C  84C5               	bsf	4037,2,c	;volatile
  1487   000B6E  0012               	return		;funcret
  1488   000B70                     __end_of_I2C_Master_Stop:
  1489                           	callstack 0
  1490                           
  1491 ;; *************** function _I2C_Master_Start *****************
  1492 ;; Defined at:
  1493 ;;		line 23 in file "lcd.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1507 ;;      Params:         0       0       0       0       0       0       0       0       0
  1508 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1510 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1511 ;;Total ram usage:        0 bytes
  1512 ;; Hardware stack levels used: 1
  1513 ;; Hardware stack levels required when called: 1
  1514 ;; This function calls:
  1515 ;;		_I2C_Master_Wait
  1516 ;; This function is called by:
  1517 ;;		_IO_Expander_Write
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text16
  1523   000B70                     __ptext16:
  1524                           	callstack 0
  1525   000B70                     _I2C_Master_Start:
  1526                           	callstack 24
  1527                           
  1528                           ;lcd.c: 25: I2C_Master_Wait();
  1529                           
  1530                           ;incstack = 0
  1531   000B70  EC95  F005         	call	_I2C_Master_Wait	;wreg free
  1532                           
  1533                           ;lcd.c: 26: SEN = 1;
  1534   000B74  80C5               	bsf	4037,0,c	;volatile
  1535   000B76  0012               	return		;funcret
  1536   000B78                     __end_of_I2C_Master_Start:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _I2C_Master_Wait *****************
  1540 ;; Defined at:
  1541 ;;		line 18 in file "lcd.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1557 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1558 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1559 ;;Total ram usage:        1 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_I2C_Master_Start
  1565 ;;		_I2C_Master_Stop
  1566 ;;		_I2C_Master_Write
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text17
  1571   000B2A                     __ptext17:
  1572                           	callstack 0
  1573   000B2A                     _I2C_Master_Wait:
  1574                           	callstack 24
  1575                           
  1576                           ;lcd.c: 20: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1577                           
  1578                           ;incstack = 0
  1579   000B2A  B4C7               	btfsc	199,2,c	;volatile
  1580   000B2C  D7FE               	goto	__ptext17
  1581   000B2E  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  1582   000B32  0E1F               	movlw	31
  1583   000B34  1601               	andwf	??_I2C_Master_Wait^0,f,c
  1584   000B36  B4D8               	btfsc	status,2,c
  1585   000B38  0012               	return	
  1586   000B3A  D7F7               	goto	__ptext17
  1587   000B3C                     __end_of_I2C_Master_Wait:
  1588                           	callstack 0
  1589                           
  1590                           	psect	rparam
  1591   000000                     
  1592                           	psect	idloc
  1593                           
  1594                           ;Config register IDLOC0 @ 0x200000
  1595                           ;	unspecified, using default values
  1596   200000                     	org	2097152
  1597   200000  FF                 	db	255
  1598                           
  1599                           ;Config register IDLOC1 @ 0x200001
  1600                           ;	unspecified, using default values
  1601   200001                     	org	2097153
  1602   200001  FF                 	db	255
  1603                           
  1604                           ;Config register IDLOC2 @ 0x200002
  1605                           ;	unspecified, using default values
  1606   200002                     	org	2097154
  1607   200002  FF                 	db	255
  1608                           
  1609                           ;Config register IDLOC3 @ 0x200003
  1610                           ;	unspecified, using default values
  1611   200003                     	org	2097155
  1612   200003  FF                 	db	255
  1613                           
  1614                           ;Config register IDLOC4 @ 0x200004
  1615                           ;	unspecified, using default values
  1616   200004                     	org	2097156
  1617   200004  FF                 	db	255
  1618                           
  1619                           ;Config register IDLOC5 @ 0x200005
  1620                           ;	unspecified, using default values
  1621   200005                     	org	2097157
  1622   200005  FF                 	db	255
  1623                           
  1624                           ;Config register IDLOC6 @ 0x200006
  1625                           ;	unspecified, using default values
  1626   200006                     	org	2097158
  1627   200006  FF                 	db	255
  1628                           
  1629                           ;Config register IDLOC7 @ 0x200007
  1630                           ;	unspecified, using default values
  1631   200007                     	org	2097159
  1632   200007  FF                 	db	255
  1633                           
  1634                           	psect	config
  1635                           
  1636                           ;Config register CONFIG1L @ 0x300000
  1637                           ;	unspecified, using default values
  1638                           ;	PLL Prescaler Selection bits
  1639                           ;	PLLDIV = 0x0, unprogrammed default
  1640                           ;	System Clock Postscaler Selection bits
  1641                           ;	CPUDIV = 0x0, unprogrammed default
  1642                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1643                           ;	USBDIV = 0x0, unprogrammed default
  1644   300000                     	org	3145728
  1645   300000  00                 	db	0
  1646                           
  1647                           ;Config register CONFIG1H @ 0x300001
  1648                           ;	Oscillator Selection bits
  1649                           ;	FOSC = HS, HS oscillator (HS)
  1650                           ;	Fail-Safe Clock Monitor Enable bit
  1651                           ;	FCMEN = 0x0, unprogrammed default
  1652                           ;	Internal/External Oscillator Switchover bit
  1653                           ;	IESO = 0x0, unprogrammed default
  1654   300001                     	org	3145729
  1655   300001  0C                 	db	12
  1656                           
  1657                           ;Config register CONFIG2L @ 0x300002
  1658                           ;	unspecified, using default values
  1659                           ;	Power-up Timer Enable bit
  1660                           ;	PWRT = 0x1, unprogrammed default
  1661                           ;	Brown-out Reset Enable bits
  1662                           ;	BOR = 0x3, unprogrammed default
  1663                           ;	Brown-out Reset Voltage bits
  1664                           ;	BORV = 0x3, unprogrammed default
  1665                           ;	USB Voltage Regulator Enable bit
  1666                           ;	VREGEN = 0x0, unprogrammed default
  1667   300002                     	org	3145730
  1668   300002  1F                 	db	31
  1669                           
  1670                           ;Config register CONFIG2H @ 0x300003
  1671                           ;	Watchdog Timer Enable bit
  1672                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1673                           ;	Watchdog Timer Postscale Select bits
  1674                           ;	WDTPS = 0xF, unprogrammed default
  1675   300003                     	org	3145731
  1676   300003  1E                 	db	30
  1677                           
  1678                           ; Padding undefined space
  1679   300004                     	org	3145732
  1680   300004  FF                 	db	255
  1681                           
  1682                           ;Config register CONFIG3H @ 0x300005
  1683                           ;	CCP2 MUX bit
  1684                           ;	CCP2MX = 0x1, unprogrammed default
  1685                           ;	PORTB A/D Enable bit
  1686                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1687                           ;	Low-Power Timer 1 Oscillator Enable bit
  1688                           ;	LPT1OSC = 0x0, unprogrammed default
  1689                           ;	MCLR Pin Enable bit
  1690                           ;	MCLRE = 0x1, unprogrammed default
  1691   300005                     	org	3145733
  1692   300005  81                 	db	129
  1693                           
  1694                           ;Config register CONFIG4L @ 0x300006
  1695                           ;	Stack Full/Underflow Reset Enable bit
  1696                           ;	STVREN = 0x1, unprogrammed default
  1697                           ;	Single-Supply ICSP Enable bit
  1698                           ;	LVP = OFF, Single-Supply ICSP disabled
  1699                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1700                           ;	ICPRT = 0x0, unprogrammed default
  1701                           ;	Extended Instruction Set Enable bit
  1702                           ;	XINST = 0x0, unprogrammed default
  1703                           ;	Background Debugger Enable bit
  1704                           ;	DEBUG = 0x1, unprogrammed default
  1705   300006                     	org	3145734
  1706   300006  81                 	db	129
  1707                           
  1708                           ; Padding undefined space
  1709   300007                     	org	3145735
  1710   300007  FF                 	db	255
  1711                           
  1712                           ;Config register CONFIG5L @ 0x300008
  1713                           ;	unspecified, using default values
  1714                           ;	Code Protection bit
  1715                           ;	CP0 = 0x1, unprogrammed default
  1716                           ;	Code Protection bit
  1717                           ;	CP1 = 0x1, unprogrammed default
  1718                           ;	Code Protection bit
  1719                           ;	CP2 = 0x1, unprogrammed default
  1720                           ;	Code Protection bit
  1721                           ;	CP3 = 0x1, unprogrammed default
  1722   300008                     	org	3145736
  1723   300008  0F                 	db	15
  1724                           
  1725                           ;Config register CONFIG5H @ 0x300009
  1726                           ;	unspecified, using default values
  1727                           ;	Boot Block Code Protection bit
  1728                           ;	CPB = 0x1, unprogrammed default
  1729                           ;	Data EEPROM Code Protection bit
  1730                           ;	CPD = 0x1, unprogrammed default
  1731   300009                     	org	3145737
  1732   300009  C0                 	db	192
  1733                           
  1734                           ;Config register CONFIG6L @ 0x30000A
  1735                           ;	unspecified, using default values
  1736                           ;	Write Protection bit
  1737                           ;	WRT0 = 0x1, unprogrammed default
  1738                           ;	Write Protection bit
  1739                           ;	WRT1 = 0x1, unprogrammed default
  1740                           ;	Write Protection bit
  1741                           ;	WRT2 = 0x1, unprogrammed default
  1742                           ;	Write Protection bit
  1743                           ;	WRT3 = 0x1, unprogrammed default
  1744   30000A                     	org	3145738
  1745   30000A  0F                 	db	15
  1746                           
  1747                           ;Config register CONFIG6H @ 0x30000B
  1748                           ;	unspecified, using default values
  1749                           ;	Configuration Register Write Protection bit
  1750                           ;	WRTC = 0x1, unprogrammed default
  1751                           ;	Boot Block Write Protection bit
  1752                           ;	WRTB = 0x1, unprogrammed default
  1753                           ;	Data EEPROM Write Protection bit
  1754                           ;	WRTD = 0x1, unprogrammed default
  1755   30000B                     	org	3145739
  1756   30000B  E0                 	db	224
  1757                           
  1758                           ;Config register CONFIG7L @ 0x30000C
  1759                           ;	unspecified, using default values
  1760                           ;	Table Read Protection bit
  1761                           ;	EBTR0 = 0x1, unprogrammed default
  1762                           ;	Table Read Protection bit
  1763                           ;	EBTR1 = 0x1, unprogrammed default
  1764                           ;	Table Read Protection bit
  1765                           ;	EBTR2 = 0x1, unprogrammed default
  1766                           ;	Table Read Protection bit
  1767                           ;	EBTR3 = 0x1, unprogrammed default
  1768   30000C                     	org	3145740
  1769   30000C  0F                 	db	15
  1770                           
  1771                           ;Config register CONFIG7H @ 0x30000D
  1772                           ;	unspecified, using default values
  1773                           ;	Boot Block Table Read Protection bit
  1774                           ;	EBTRB = 0x1, unprogrammed default
  1775   30000D                     	org	3145741
  1776   30000D  40                 	db	64
  1777                           tosu	equ	0xFFF
  1778                           tosh	equ	0xFFE
  1779                           tosl	equ	0xFFD
  1780                           stkptr	equ	0xFFC
  1781                           pclatu	equ	0xFFB
  1782                           pclath	equ	0xFFA
  1783                           pcl	equ	0xFF9
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           prodh	equ	0xFF4
  1789                           prodl	equ	0xFF3
  1790                           indf0	equ	0xFEF
  1791                           postinc0	equ	0xFEE
  1792                           postdec0	equ	0xFED
  1793                           preinc0	equ	0xFEC
  1794                           plusw0	equ	0xFEB
  1795                           fsr0h	equ	0xFEA
  1796                           fsr0l	equ	0xFE9
  1797                           wreg	equ	0xFE8
  1798                           indf1	equ	0xFE7
  1799                           postinc1	equ	0xFE6
  1800                           postdec1	equ	0xFE5
  1801                           preinc1	equ	0xFE4
  1802                           plusw1	equ	0xFE3
  1803                           fsr1h	equ	0xFE2
  1804                           fsr1l	equ	0xFE1
  1805                           bsr	equ	0xFE0
  1806                           indf2	equ	0xFDF
  1807                           postinc2	equ	0xFDE
  1808                           postdec2	equ	0xFDD
  1809                           preinc2	equ	0xFDC
  1810                           plusw2	equ	0xFDB
  1811                           fsr2h	equ	0xFDA
  1812                           fsr2l	equ	0xFD9
  1813                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[4]), STR_2(CODE[9]), STR_3(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Write_String
    _mensaje2->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CHAR_PROPIO->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _Backlight->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2349
                                              9 COMRAM     2     2      0
                          _Backlight
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _LCD_CHAR_PROPIO
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
                           _mensaje2
 ---------------------------------------------------------------------------------
 (1) _mensaje2                                             0     0      0    1002
                             _Cursor
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     4     3      1     408
                                              5 COMRAM     4     3      1
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       1     1      0      90
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       2     1      1     504
                                              5 COMRAM     2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _Cursor                                               0     0      0      90
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     135
                                              5 COMRAM     2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      90
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_CHAR_PROPIO                                      0     0      0      90
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              1     1      0      90
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       1     1      0      60
                                              3 COMRAM     1     1      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Backlight                                            0     0      0      30
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      30
                                              2 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     1     1      0      15
                                              1 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Backlight
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _I2C_Master_Init
   _I2C_Master_Start
   _LCD_CHAR_PROPIO
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _LCD_Clear
     _LCD_CMD
   _LCD_Init
     _IO_Expander_Write
     _LCD_CMD
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_Char
     _LCD_Write_4Bit
   _LCD_Write_String
     _LCD_Write_Char
   _mensaje2
     _Cursor
       _LCD_CMD
     _LCD_Set_Cursor
     _LCD_Write_String

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B       E       1       14.7%
BITBIGSFRh          36      0       0      20        0.0%
BITBIGSFRll         33      0       0      23        0.0%
BITBIGSFRlhh        26      0       0      21        0.0%
BITBIGSFRlhl         A      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      24        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Sep  3 21:51:35 2024

                       l69 0B22                         _RS 000D                         u67 0978  
                       u77 0B44                         u87 0832                         u97 0848  
                      l158 09D0                        u107 085E                        u117 0874  
                      u207 0912                        u127 088A                        u217 0920  
                      u137 08A0                        u227 092E                        u147 08B6  
                      u237 093C                        u157 08CC                        u247 094A  
                      u167 08E2                        _PEN 7E2A                        u257 0958  
                      u177 0B54                        u267 0966                        u187 08F6  
                      u277 0AAC                        u197 0904                        _SEN 7E28  
                      wreg 0FE8            __end_of_LCD_CMD 0AE8        LCD_Write_String@Str 0006  
           _LCD_Set_Cursor 09D2                       l1090 09EA                       l1082 0A38  
                     l1092 09F4                       l1086 09D6                       l1094 09FE  
                     l1078 0A1E                       l1088 09E0                       STR_1 081B  
                     STR_2 0812                       STR_3 0801          ?_LCD_Write_String 0006  
                     _main 096E                       start 0000         ??_LCD_Write_String 0007  
             ___param_bank 0000       LCD_Write_4Bit@Nibble 0004          ??_LCD_CHAR_PROPIO 0006  
         __end_of_LCD_Init 08EE           ?_I2C_Master_Init 0001           ?_I2C_Master_Wait 0001  
         ?_I2C_Master_Stop 0001                      ?_main 0001                      _SSPIF 7CF3  
   __end_of_LCD_Set_Cursor 0A14                      tablat 0FF5                      status 0FD8  
           _LCD_Write_4Bit 0A94             _LCD_Write_Char 0AB4            __initialization 0A74  
             __end_of_main 09D2          _IO_Expander_Write 0AE8         ?_IO_Expander_Write 0001  
                   ??_main 000A          __end_of_LCD_Clear 0B5C              __activetblptr 0002  
                ??_LCD_CMD 0005          ?_I2C_Master_Start 0001          ?_I2C_Master_Write 0001  
      ??_IO_Expander_Write 0003            ?_LCD_Set_Cursor 0006         ??_I2C_Master_Start 0002  
       ??_I2C_Master_Write 0002                     _SSPADD 0FC8                     _TRISB0 7C98  
                   _TRISB1 7C99                     _SSPBUF 0FC9     __end_of_LCD_Write_4Bit 0AB4  
   __end_of_LCD_Write_Char 0ACE                     _Cursor 0B3C  __end_of_IO_Expander_Write 0B02  
         __end_of_mensaje2 0A74                     isa$std 0001               __pdataCOMRAM 000E  
        __end_of_Backlight 0B68               __mediumconst 0000                     tblptrh 0FF7  
                   tblptrl 0FF6                     tblptru 0FF8                 __accesstop 0060  
  __end_of__initialization 0A8A                  ?_LCD_Init 0001            ?_LCD_Write_4Bit 0001  
            ___rparam_used 0001            ?_LCD_Write_Char 0001             __pcstackCOMRAM 0001  
          _LCD_CHAR_PROPIO 08EE                 ??_LCD_Init 0006                    ?_Cursor 0001  
                  _ACKSTAT 7E2E                    _LCD_CMD 0ACE                    _SSPCON1 0FC6  
                  _SSPCON2 0FC5                    _SSPSTAT 0FC7                  ?_mensaje2 0001  
                  _i2c_add 000C                    __Hparam 0000                    __Lparam 0000  
             __psmallconst 0800                    __pcinit 0A74                    __ramtop 0800  
         ??_LCD_Set_Cursor 0007                    __ptext0 096E                    __ptext1 0A52  
                  __ptext2 0A14                    __ptext3 0AB4                    __ptext4 09D2  
                  __ptext5 0B3C                    __ptext6 0820                    __ptext7 0B4C  
                  __ptext8 08EE                    __ptext9 0ACE    __end_of_LCD_CHAR_PROPIO 096E  
                _LCD_Clear 0B4C       end_of_initialization 0A8A              __Lmediumconst 0000  
               ??_mensaje2 000A                 LCD_CMD@CMD 0005                 ?_LCD_Clear 0001  
                _Backlight 0B5C           ??_LCD_Write_4Bit 0004          LCD_Write_String@i 0008  
         ??_LCD_Write_Char 0005             __end_of_Cursor 0B4C           _LCD_Write_String 0A14  
            __pidataCOMRAM 0B78        start_initialization 0A74           ?_LCD_CHAR_PROPIO 0001  
               ?_Backlight 0001          ??_I2C_Master_Init 0001          ??_I2C_Master_Wait 0001  
        ??_I2C_Master_Stop 0002                   ??_Cursor 0006                   ?_LCD_CMD 0001  
              __pbssCOMRAM 000C                ??_LCD_Clear 0006           _I2C_Master_Start 0B70  
         _I2C_Master_Write 0B18      IO_Expander_Write@Data 0003       I2C_Master_Write@data 0002  
              __smallconst 0800                ??_Backlight 0004                   _LCD_Init 0820  
 __end_of_LCD_Write_String 0A52                   __Hrparam 0000                   __Lrparam 0000  
          _I2C_Master_Init 0B02            _I2C_Master_Wait 0B2A            _I2C_Master_Stop 0B68  
                 __ptext10 0A94                   __ptext11 0B02                   __ptext12 0B5C  
                 __ptext13 0AE8                   __ptext14 0B18                   __ptext15 0B68  
                 __ptext16 0B70                   __ptext17 0B2A            _BackLight_State 000E  
                 _mensaje2 0A52                   isa$xinst 0000   __end_of_I2C_Master_Start 0B78  
 __end_of_I2C_Master_Write 0B2A         LCD_Write_Char@Data 0005    __end_of_I2C_Master_Init 0B18  
  __end_of_I2C_Master_Wait 0B3C    __end_of_I2C_Master_Stop 0B70            LCD_Init@I2C_Add 0007  
        LCD_Set_Cursor@COL 0006          LCD_Set_Cursor@ROW 0007  
